// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/usermgmt/modules/user/core/entity"
)

type MockRoleRepo struct {
	mock.Mock
}

func (r *MockRoleRepo) Create(arg1 context.Context, arg2 database.Ext, arg3 *entity.Role) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockRoleRepo) FindBelongedRoles(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text) ([]*entity.Role, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entity.Role), args.Error(1)
}

func (r *MockRoleRepo) GetByName(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text) (*entity.Role, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entity.Role), args.Error(1)
}

func (r *MockRoleRepo) GetRolesByRoleIDs(arg1 context.Context, arg2 database.Ext, arg3 pgtype.TextArray) ([]*entity.Role, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entity.Role), args.Error(1)
}

func (r *MockRoleRepo) GetRolesByUserGroupIDs(arg1 context.Context, arg2 database.Ext, arg3 pgtype.TextArray) (map[string][]*entity.Role, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(map[string][]*entity.Role), args.Error(1)
}

func (r *MockRoleRepo) UpsertPermission(arg1 context.Context, arg2 database.Ext, arg3 []*entity.PermissionRole) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
