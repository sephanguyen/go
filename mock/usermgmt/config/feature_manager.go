// Code generated by mockgen. DO NOT EDIT.
package mock_features

import (
	"context"

	"github.com/manabie-com/backend/internal/usermgmt/modules/user/core/valueobj"
	"github.com/manabie-com/backend/internal/usermgmt/pkg/unleash"
	"github.com/stretchr/testify/mock"
)

type MockFeatureManager struct {
	mock.Mock
}

func (r *MockFeatureManager) FeatureAutoDeactivateAndReactivateStudentsV2ToStudentFeatureOption(arg1 context.Context, arg2 valueobj.HasOrganizationID, arg3 unleash.DomainStudentFeatureOption) unleash.DomainStudentFeatureOption {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(unleash.DomainStudentFeatureOption)
}

func (r *MockFeatureManager) FeatureDisableAutoDeactivateStudentsToStudentFeatureOption(arg1 context.Context, arg2 valueobj.HasOrganizationID, arg3 unleash.DomainStudentFeatureOption) unleash.DomainStudentFeatureOption {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(unleash.DomainStudentFeatureOption)
}

func (r *MockFeatureManager) FeatureExperimentalBulkInsertEnrollmentStatusHistoriesToStudentFeatureOption(arg1 context.Context, arg2 valueobj.HasOrganizationID, arg3 unleash.DomainStudentFeatureOption) unleash.DomainStudentFeatureOption {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(unleash.DomainStudentFeatureOption)
}

func (r *MockFeatureManager) FeatureUsernameToParentFeatureOption(arg1 context.Context, arg2 valueobj.HasOrganizationID, arg3 unleash.DomainParentFeatureOption) unleash.DomainParentFeatureOption {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(unleash.DomainParentFeatureOption)
}

func (r *MockFeatureManager) FeatureUsernameToStudentFeatureOption(arg1 context.Context, arg2 valueobj.HasOrganizationID, arg3 unleash.DomainStudentFeatureOption) unleash.DomainStudentFeatureOption {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(unleash.DomainStudentFeatureOption)
}

func (r *MockFeatureManager) IsEnableDecouplingUserAndAuthDB(arg1 valueobj.HasOrganizationID) bool {
	args := r.Called(arg1)
	return args.Get(0).(bool)
}

func (r *MockFeatureManager) IsEnableUsername(arg1 context.Context, arg2 valueobj.HasOrganizationID) bool {
	args := r.Called(arg1, arg2)
	return args.Get(0).(bool)
}

func (r *MockFeatureManager) IsEnableUsernameStudentParentStaff(arg1 context.Context, arg2 valueobj.HasOrganizationID) bool {
	args := r.Called(arg1, arg2)
	return args.Get(0).(bool)
}
