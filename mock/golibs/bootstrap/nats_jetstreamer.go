// Code generated by mockery. DO NOT EDIT.

// This file can be generated by running: make gen-mock-repo

package mock_bootstrap

import (
	configs "github.com/manabie-com/backend/internal/golibs/configs"
	mock "github.com/stretchr/testify/mock"

	nats "github.com/manabie-com/backend/internal/golibs/nats"

	zap "go.uber.org/zap"
)

// NATSJetstreamer is an autogenerated mock type for the NATSJetstreamer type
type NATSJetstreamer struct {
	mock.Mock
}

// NewJetStreamManagement provides a mock function with given fields: zapLogger, c
func (_m *NATSJetstreamer) NewJetStreamManagement(zapLogger *zap.Logger, c *configs.NatsJetStreamConfig) (nats.JetStreamManagement, error) {
	ret := _m.Called(zapLogger, c)

	var r0 nats.JetStreamManagement
	if rf, ok := ret.Get(0).(func(*zap.Logger, *configs.NatsJetStreamConfig) nats.JetStreamManagement); ok {
		r0 = rf(zapLogger, c)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(nats.JetStreamManagement)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*zap.Logger, *configs.NatsJetStreamConfig) error); ok {
		r1 = rf(zapLogger, c)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewNATSJetstreamer interface {
	mock.TestingT
	Cleanup(func())
}

// NewNATSJetstreamer creates a new instance of NATSJetstreamer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNATSJetstreamer(t mockConstructorTestingTNewNATSJetstreamer) *NATSJetstreamer {
	mock := &NATSJetstreamer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
