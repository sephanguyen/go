// Code generated by mockery. DO NOT EDIT.

// This file can be generated by running: make gen-mock-repo

package mock_curl

import (
	io "io"

	curl "github.com/manabie-com/backend/internal/golibs/curl"

	mock "github.com/stretchr/testify/mock"
)

// IHTTP is an autogenerated mock type for the IHTTP type
type IHTTP struct {
	mock.Mock
}

// Request provides a mock function with given fields: method, url, header, data, dest
func (_m *IHTTP) Request(method curl.Method, url string, header map[string]string, data io.Reader, dest interface{}) error {
	ret := _m.Called(method, url, header, data, dest)

	var r0 error
	if rf, ok := ret.Get(0).(func(curl.Method, string, map[string]string, io.Reader, interface{}) error); ok {
		r0 = rf(method, url, header, data, dest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIHTTP interface {
	mock.TestingT
	Cleanup(func())
}

// NewIHTTP creates a new instance of IHTTP. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIHTTP(t mockConstructorTestingTNewIHTTP) *IHTTP {
	mock := &IHTTP{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
