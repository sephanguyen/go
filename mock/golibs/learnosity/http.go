// Code generated by mockery. DO NOT EDIT.

// This file can be generated by running: make gen-mock-repo

package mock_learnosity

import (
	context "context"
	io "io"

	learnosity "github.com/manabie-com/backend/internal/golibs/learnosity"
	mock "github.com/stretchr/testify/mock"
)

// HTTP is an autogenerated mock type for the HTTP type
type HTTP struct {
	mock.Mock
}

// Request provides a mock function with given fields: ctx, method, url, header, body, holder
func (_m *HTTP) Request(ctx context.Context, method learnosity.Method, url string, header map[string]string, body io.Reader, holder interface{}) error {
	ret := _m.Called(ctx, method, url, header, body, holder)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, learnosity.Method, string, map[string]string, io.Reader, interface{}) error); ok {
		r0 = rf(ctx, method, url, header, body, holder)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewHTTP interface {
	mock.TestingT
	Cleanup(func())
}

// NewHTTP creates a new instance of HTTP. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHTTP(t mockConstructorTestingTNewHTTP) *HTTP {
	mock := &HTTP{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
