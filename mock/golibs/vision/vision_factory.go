// Code generated by mockery. DO NOT EDIT.

// This file can be generated by running: make gen-mock-repo

package mock_vision

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	vision "google.golang.org/genproto/googleapis/cloud/vision/v1"
)

// VisionFactory is an autogenerated mock type for the VisionFactory type
type VisionFactory struct {
	mock.Mock
}

// DetectTextFromImage provides a mock function with given fields: ctx, content, lang
func (_m *VisionFactory) DetectTextFromImage(ctx context.Context, content []byte, lang string) (*vision.TextAnnotation, error) {
	ret := _m.Called(ctx, content, lang)

	var r0 *vision.TextAnnotation
	if rf, ok := ret.Get(0).(func(context.Context, []byte, string) *vision.TextAnnotation); ok {
		r0 = rf(ctx, content, lang)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*vision.TextAnnotation)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, []byte, string) error); ok {
		r1 = rf(ctx, content, lang)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
