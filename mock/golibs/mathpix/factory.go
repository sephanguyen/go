// Code generated by mockery. DO NOT EDIT.

// This file can be generated by running: make gen-mock-repo

package mock_mathpix

import (
	context "context"

	mathpix "github.com/manabie-com/backend/internal/golibs/mathpix"
	mock "github.com/stretchr/testify/mock"
)

// Factory is an autogenerated mock type for the Factory type
type Factory struct {
	mock.Mock
}

// DetectLatexFromImage provides a mock function with given fields: ctx, content
func (_m *Factory) DetectLatexFromImage(ctx context.Context, content string) ([]mathpix.Data, error) {
	ret := _m.Called(ctx, content)

	var r0 []mathpix.Data
	if rf, ok := ret.Get(0).(func(context.Context, string) []mathpix.Data); ok {
		r0 = rf(ctx, content)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]mathpix.Data)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, content)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewFactory creates a new instance of Factory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFactory(t mockConstructorTestingTNewFactory) *Factory {
	mock := &Factory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
