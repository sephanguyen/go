// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/tom/domain/support"
)

type MockConversationStudentRepo struct {
	mock.Mock
}

func (r *MockConversationStudentRepo) BulkUpsert(arg1 context.Context, arg2 database.QueryExecer, arg3 []*support.ConversationStudent) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockConversationStudentRepo) FindByConversationIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) (map[pgtype.Text]*support.ConversationStudent, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(map[pgtype.Text]*support.ConversationStudent), args.Error(1)
}

func (r *MockConversationStudentRepo) FindByStaffIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) ([]string, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

func (r *MockConversationStudentRepo) FindByStudentIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray, arg4 pgtype.Text) ([]string, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

func (r *MockConversationStudentRepo) FindSearchIndexTime(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) (map[string]pgtype.Timestamptz, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(map[string]pgtype.Timestamptz), args.Error(1)
}

func (r *MockConversationStudentRepo) UpdateSearchIndexTime(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray, arg4 pgtype.Timestamptz) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
