// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/elastic"
	"github.com/manabie-com/backend/internal/tom/domain/support"
)

type MockSearchRepo struct {
	mock.Mock
}

func (r *MockSearchRepo) BulkUpsert(arg1 context.Context, arg2 elastic.SearchFactory, arg3 []support.SearchConversationDoc) (int, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(int), args.Error(1)
}

func (r *MockSearchRepo) BulkUpsertFields(arg1 context.Context, arg2 elastic.SearchFactory, arg3 []support.UpdateItems) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockSearchRepo) Search(arg1 context.Context, arg2 elastic.SearchFactory, arg3 support.ConversationFilter) ([]support.SearchConversationDoc, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]support.SearchConversationDoc), args.Error(1)
}

func (r *MockSearchRepo) SearchV2(arg1 context.Context, arg2 elastic.SearchFactory, arg3 support.ConversationFilter) ([]support.SearchConversationDoc, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]support.SearchConversationDoc), args.Error(1)
}

func (r *MockSearchRepo) UpsertFields(arg1 context.Context, arg2 elastic.SearchFactory, arg3 support.UpdateItems) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockSearchRepo) V2() {
	_ = r.Called()
	return
}
