// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/tom/domain/core"
)

type MockConversationLocationRepo struct {
	mock.Mock
}

func (r *MockConversationLocationRepo) BulkUpsert(arg1 context.Context, arg2 database.QueryExecer, arg3 []core.ConversationLocation) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockConversationLocationRepo) FindByConversationIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) (map[string][]core.ConversationLocation, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(map[string][]core.ConversationLocation), args.Error(1)
}

func (r *MockConversationLocationRepo) GetAllLocations(arg1 context.Context, arg2 database.QueryExecer, arg3 string) ([]*core.ConversationLocation, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*core.ConversationLocation), args.Error(1)
}

func (r *MockConversationLocationRepo) RemoveLocationsForConversation(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 []string) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
