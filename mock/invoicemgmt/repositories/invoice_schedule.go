// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"
	"time"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/invoicemgmt/entities"
)

type MockInvoiceScheduleRepo struct {
	mock.Mock
}

func (r *MockInvoiceScheduleRepo) CancelScheduleIfExists(arg1 context.Context, arg2 database.QueryExecer, arg3 time.Time) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockInvoiceScheduleRepo) Create(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.InvoiceSchedule) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockInvoiceScheduleRepo) FindAll(arg1 context.Context, arg2 database.QueryExecer) ([]*entities.InvoiceSchedule, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.InvoiceSchedule), args.Error(1)
}

func (r *MockInvoiceScheduleRepo) GetByStatusAndInvoiceDate(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 time.Time) (*entities.InvoiceSchedule, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.InvoiceSchedule), args.Error(1)
}

func (r *MockInvoiceScheduleRepo) GetByStatusAndScheduledDate(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 time.Time) (*entities.InvoiceSchedule, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.InvoiceSchedule), args.Error(1)
}

func (r *MockInvoiceScheduleRepo) GetCurrentEarliestInvoiceSchedule(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (*entities.InvoiceSchedule, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.InvoiceSchedule), args.Error(1)
}

func (r *MockInvoiceScheduleRepo) RetrieveInvoiceScheduleByID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (*entities.InvoiceSchedule, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.InvoiceSchedule), args.Error(1)
}

func (r *MockInvoiceScheduleRepo) Update(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.InvoiceSchedule) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
