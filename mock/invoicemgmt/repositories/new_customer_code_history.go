// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/invoicemgmt/entities"
)

type MockNewCustomerCodeHistoryRepo struct {
	mock.Mock
}

func (r *MockNewCustomerCodeHistoryRepo) Create(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.NewCustomerCodeHistory) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockNewCustomerCodeHistoryRepo) FindByAccountNumbers(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) ([]*entities.NewCustomerCodeHistory, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.NewCustomerCodeHistory), args.Error(1)
}

func (r *MockNewCustomerCodeHistoryRepo) FindByStudentIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) ([]*entities.NewCustomerCodeHistory, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.NewCustomerCodeHistory), args.Error(1)
}

func (r *MockNewCustomerCodeHistoryRepo) UpdateWithFields(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.NewCustomerCodeHistory, arg4 []string) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
