// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/invoicemgmt/entities"
	export "github.com/manabie-com/backend/internal/invoicemgmt/export_entities"
)

type MockBankBranchRepo struct {
	mock.Mock
}

func (r *MockBankBranchRepo) FindByBankBranchCodeAndBank(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string) (*entities.BankBranch, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.BankBranch), args.Error(1)
}

func (r *MockBankBranchRepo) FindByID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (*entities.BankBranch, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.BankBranch), args.Error(1)
}

func (r *MockBankBranchRepo) FindExportableBankBranches(arg1 context.Context, arg2 database.QueryExecer) ([]*export.BankBranchExport, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*export.BankBranchExport), args.Error(1)
}

func (r *MockBankBranchRepo) FindRelatedBankOfBankBranches(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) ([]*entities.BankRelationMap, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.BankRelationMap), args.Error(1)
}
