// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/invoicemgmt/entities"
)

type MockInvoiceAdjustmentRepo struct {
	mock.Mock
}

func (r *MockInvoiceAdjustmentRepo) FindByID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (*entities.InvoiceAdjustment, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.InvoiceAdjustment), args.Error(1)
}

func (r *MockInvoiceAdjustmentRepo) FindByInvoiceIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) ([]*entities.InvoiceAdjustment, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.InvoiceAdjustment), args.Error(1)
}

func (r *MockInvoiceAdjustmentRepo) SoftDeleteByIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockInvoiceAdjustmentRepo) UpsertMultiple(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.InvoiceAdjustment) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
