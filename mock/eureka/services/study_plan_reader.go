// Code generated by mockery v2.10.4. DO NOT EDIT.

package mock_services

import (
	context "context"

	epb "github.com/manabie-com/backend/pkg/manabuf/eureka/v1"
	mock "github.com/stretchr/testify/mock"
	grpc "google.golang.org/grpc"
)

// StudyPlanReaderServiceServer is an autogenerated mock type for the StudyPlanReaderServiceServer type
type StudyPlanReaderServiceServer struct {
	mock.Mock
}

// GetBookIDsBelongsToStudentStudyPlan provides a mock function with given fields: _a0, _a1
func (_m *StudyPlanReaderServiceServer) GetBookIDsBelongsToStudentStudyPlan(_a0 context.Context, _a1 *epb.GetBookIDsBelongsToStudentStudyPlanRequest, opts ...grpc.CallOption) (*epb.GetBookIDsBelongsToStudentStudyPlanResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *epb.GetBookIDsBelongsToStudentStudyPlanResponse
	if rf, ok := ret.Get(0).(func(context.Context, *epb.GetBookIDsBelongsToStudentStudyPlanRequest) *epb.GetBookIDsBelongsToStudentStudyPlanResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*epb.GetBookIDsBelongsToStudentStudyPlanResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *epb.GetBookIDsBelongsToStudentStudyPlanRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLOHighestScoresByStudyPlanItemIDs provides a mock function with given fields: _a0, _a1
func (_m *StudyPlanReaderServiceServer) GetLOHighestScoresByStudyPlanItemIDs(_a0 context.Context, _a1 *epb.GetLOHighestScoresByStudyPlanItemIDsRequest, opts ...grpc.CallOption) (*epb.GetLOHighestScoresByStudyPlanItemIDsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *epb.GetLOHighestScoresByStudyPlanItemIDsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *epb.GetLOHighestScoresByStudyPlanItemIDsRequest) *epb.GetLOHighestScoresByStudyPlanItemIDsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*epb.GetLOHighestScoresByStudyPlanItemIDsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *epb.GetLOHighestScoresByStudyPlanItemIDsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListStudyPlanByCourse provides a mock function with given fields: _a0, _a1
func (_m *StudyPlanReaderServiceServer) ListStudyPlanByCourse(_a0 context.Context, _a1 *epb.ListStudyPlanByCourseRequest, opts ...grpc.CallOption) (*epb.ListStudyPlanByCourseResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *epb.ListStudyPlanByCourseResponse
	if rf, ok := ret.Get(0).(func(context.Context, *epb.ListStudyPlanByCourseRequest) *epb.ListStudyPlanByCourseResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*epb.ListStudyPlanByCourseResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *epb.ListStudyPlanByCourseRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StudentBookStudyProgress provides a mock function with given fields: _a0, _a1
func (_m *StudyPlanReaderServiceServer) StudentBookStudyProgress(_a0 context.Context, _a1 *epb.StudentBookStudyProgressRequest, opts ...grpc.CallOption) (*epb.StudentBookStudyProgressResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *epb.StudentBookStudyProgressResponse
	if rf, ok := ret.Get(0).(func(context.Context, *epb.StudentBookStudyProgressRequest) *epb.StudentBookStudyProgressResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*epb.StudentBookStudyProgressResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *epb.StudentBookStudyProgressRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
