// Code generated by mockgen. DO NOT EDIT.
package mock_services

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/eureka/repositories"
	epb "github.com/manabie-com/backend/pkg/manabuf/eureka/v1"
	bpb "github.com/manabie-com/backend/pkg/manabuf/bob/v1"
	
	"google.golang.org/grpc"
)

type MockCourseReaderService struct {
	mock.Mock
}

func (m *MockCourseReaderService) RetrieveBookTreeByTopicIDs(arg1 context.Context, arg2 *bpb.RetrieveBookTreeByTopicIDsRequest, arg3 ...grpc.CallOption) (*bpb.RetrieveBookTreeByTopicIDsResponse, error) {
	args := m.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*bpb.RetrieveBookTreeByTopicIDsResponse), args.Error(1)
}

func (r *MockCourseReaderService) GetLOsByCourse(arg1 context.Context, arg2 *epb.GetLOsByCourseRequest) (*epb.GetLOsByCourseResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.GetLOsByCourseResponse), args.Error(1)
}

func (r *MockCourseReaderService) GetStudentsAccessPath(arg1 context.Context, arg2 *epb.GetStudentsAccessPathRequest) (*epb.GetStudentsAccessPathResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.GetStudentsAccessPathResponse), args.Error(1)
}

func (r *MockCourseReaderService) ListClassByCourse(arg1 context.Context, arg2 *epb.ListClassByCourseRequest) (*epb.ListClassByCourseResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.ListClassByCourseResponse), args.Error(1)
}

func (r *MockCourseReaderService) ListCourseIDsByStudents(arg1 context.Context, arg2 *epb.ListCourseIDsByStudentsRequest) (*epb.ListCourseIDsByStudentsResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.ListCourseIDsByStudentsResponse), args.Error(1)
}

func (r *MockCourseReaderService) ListStudentByCourse(arg1 context.Context, arg2 *epb.ListStudentByCourseRequest) (*epb.ListStudentByCourseResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.ListStudentByCourseResponse), args.Error(1)
}

func (r *MockCourseReaderService) ListStudentIDsByCourse(arg1 context.Context, arg2 *epb.ListStudentIDsByCourseRequest) (*epb.ListStudentIDsByCourseResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.ListStudentIDsByCourseResponse), args.Error(1)
}

func (r *MockCourseReaderService) ListStudentIDsByCourseV2(arg1 *epb.ListStudentIDsByCourseV2Request, arg2 epb.CourseReaderService_ListStudentIDsByCourseV2Server) error {
	args := r.Called(arg1, arg2)
	return args.Error(0)
}

func (r *MockCourseReaderService) ListTopicsByStudyPlan(arg1 context.Context, arg2 *epb.ListTopicsByStudyPlanRequest) (*epb.ListTopicsByStudyPlanResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.ListTopicsByStudyPlanResponse), args.Error(1)
}

func (r *MockCourseReaderService) RetrieveCourseStatistic(arg1 context.Context, arg2 *epb.RetrieveCourseStatisticRequest) (*epb.RetrieveCourseStatisticResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.RetrieveCourseStatisticResponse), args.Error(1)
}

func (r *MockCourseReaderService) RetrieveCourseStatisticV2(arg1 context.Context, arg2 *epb.RetrieveCourseStatisticRequestV2) (*epb.RetrieveCourseStatisticResponseV2, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.RetrieveCourseStatisticResponseV2), args.Error(1)
}

func (r *MockCourseReaderService) RetrieveLOs(arg1 context.Context, arg2 *epb.RetrieveLOsRequest) (*epb.RetrieveLOsResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.RetrieveLOsResponse), args.Error(1)
}

func (r *MockCourseReaderService) SearchStudents(arg1 context.Context, arg2 *repositories.SearchStudentsFilter) (map[string][]string, []string, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Get(1).([]string), args.Error(2)
	}

	if args.Get(1) == nil {
		return nil, nil, args.Error(2)
	}
	return args.Get(0).(map[string][]string), args.Get(1).([]string), args.Error(2)
}
