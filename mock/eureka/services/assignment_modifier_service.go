// Code generated by mockgen. DO NOT EDIT.
package mock_services

import (
	"context"

	"github.com/stretchr/testify/mock"
	"google.golang.org/protobuf/types/known/emptypb"

	epb "github.com/manabie-com/backend/pkg/manabuf/eureka/v1"
)

type MockAssignmentModifierService struct {
	mock.Mock
}

func (r *MockAssignmentModifierService) AssignAssignmentsToTopic(arg1 context.Context, arg2 *epb.AssignAssignmentsToTopicRequest) (*epb.AssignAssignmentsToTopicResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.AssignAssignmentsToTopicResponse), args.Error(1)
}

func (r *MockAssignmentModifierService) AssignStudyPlan(arg1 context.Context, arg2 *epb.AssignStudyPlanRequest) (*epb.AssignStudyPlanResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.AssignStudyPlanResponse), args.Error(1)
}

func (r *MockAssignmentModifierService) DeleteAssignments(arg1 context.Context, arg2 *epb.DeleteAssignmentsRequest) (*epb.DeleteAssignmentsResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.DeleteAssignmentsResponse), args.Error(1)
}

func (r *MockAssignmentModifierService) EditAssignmentTime(arg1 context.Context, arg2 *epb.EditAssignmentTimeRequest) (*epb.EditAssignmentTimeResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.EditAssignmentTimeResponse), args.Error(1)
}

func (r *MockAssignmentModifierService) ScheduleStudyPlan(arg1 context.Context, arg2 *epb.ScheduleStudyPlanRequest) (*epb.ScheduleStudyPlanResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.ScheduleStudyPlanResponse), args.Error(1)
}

func (r *MockAssignmentModifierService) UpsertAdHocAssignment(arg1 context.Context, arg2 *epb.UpsertAdHocAssignmentRequest) (*epb.UpsertAdHocAssignmentResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.UpsertAdHocAssignmentResponse), args.Error(1)
}

func (r *MockAssignmentModifierService) UpsertAssignment(arg1 context.Context, arg2 *epb.UpsertAssignmentsRequest) (*epb.UpsertAssignmentsResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.UpsertAssignmentsResponse), args.Error(1)
}

func (r *MockAssignmentModifierService) UpsertAssignments(arg1 context.Context, arg2 *epb.UpsertAssignmentsRequest) (*epb.UpsertAssignmentsResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.UpsertAssignmentsResponse), args.Error(1)
}

func (r *MockAssignmentModifierService) UpsertAssignmentsData(arg1 context.Context, arg2 *epb.UpsertAssignmentsDataRequest) (*emptypb.Empty, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*emptypb.Empty), args.Error(1)
}

func (r *MockAssignmentModifierService) UpsertStudyPlanItem(arg1 context.Context, arg2 *epb.UpsertStudyPlanItemRequest) (*epb.UpsertStudyPlanItemResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*epb.UpsertStudyPlanItemResponse), args.Error(1)
}
