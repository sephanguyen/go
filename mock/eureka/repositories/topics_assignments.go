// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/eureka/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockTopicsAssignmentsRepo struct {
	mock.Mock
}

func (r *MockTopicsAssignmentsRepo) BulkUpdateDisplayOrder(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.TopicsAssignments) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockTopicsAssignmentsRepo) BulkUpsert(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.TopicsAssignments) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockTopicsAssignmentsRepo) RetrieveByAssignmentIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) ([]*entities.TopicsAssignments, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.TopicsAssignments), args.Error(1)
}

func (r *MockTopicsAssignmentsRepo) SoftDeleteByAssignmentIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockTopicsAssignmentsRepo) Upsert(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.TopicsAssignments) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
