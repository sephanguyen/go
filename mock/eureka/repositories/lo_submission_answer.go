// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/eureka/entities"
	"github.com/manabie-com/backend/internal/eureka/repositories"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockLOSubmissionAnswerRepo struct {
	mock.Mock
}

func (r *MockLOSubmissionAnswerRepo) BulkUpsert(arg1 context.Context, arg2 database.QueryExecer, arg3 entities.LOSubmissionAnswers) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLOSubmissionAnswerRepo) List(arg1 context.Context, arg2 database.QueryExecer, arg3 *repositories.LOSubmissionAnswerFilter) ([]*entities.LOSubmissionAnswer, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.LOSubmissionAnswer), args.Error(1)
}

func (r *MockLOSubmissionAnswerRepo) ListSubmissionAnswers(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Int8, arg5 pgtype.Int8) ([]*entities.LOSubmissionAnswer, []pgtype.Text, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)

	if args.Get(0) == nil {
		return nil, args.Get(1).([]pgtype.Text), args.Error(2)
	}

	if args.Get(1) == nil {
		return nil, nil, args.Error(2)
	}
	return args.Get(0).([]*entities.LOSubmissionAnswer), args.Get(1).([]pgtype.Text), args.Error(2)
}

func (r *MockLOSubmissionAnswerRepo) Upsert(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.LOSubmissionAnswer) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
