// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/eureka/entities"
	"github.com/manabie-com/backend/internal/eureka/repositories"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockLearningMaterialRepo struct {
	mock.Mock
}

func (r *MockLearningMaterialRepo) Delete(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLearningMaterialRepo) FindByIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) ([]*entities.LearningMaterial, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.LearningMaterial), args.Error(1)
}

func (r *MockLearningMaterialRepo) FindInfoByStudyPlanItemIdentity(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text, arg5 pgtype.Text) ([]*repositories.LearningMaterialInfo, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*repositories.LearningMaterialInfo), args.Error(1)
}

func (r *MockLearningMaterialRepo) UpdateDisplayOrders(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.LearningMaterial) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLearningMaterialRepo) UpdateName(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text) (int64, error) {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Get(0).(int64), args.Error(1)
}
