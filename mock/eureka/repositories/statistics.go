// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/eureka/repositories"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockStatisticsRepo struct {
	mock.Mock
}

func (r *MockStatisticsRepo) GetStudentChapterProgress(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text) ([]*repositories.StudentChapterProgress, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*repositories.StudentChapterProgress), args.Error(1)
}

func (r *MockStatisticsRepo) GetStudentProgress(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text, arg5 pgtype.Text) ([]*repositories.LearningMaterialProgress, []*repositories.StudentTopicProgress, []*repositories.StudentChapterProgress, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)

	if args.Get(0) == nil {
		return nil, args.Get(1).([]*repositories.StudentTopicProgress), args.Get(2).([]*repositories.StudentChapterProgress), args.Error(3)
	}

	if args.Get(1) == nil {
		return nil, nil, args.Get(2).([]*repositories.StudentChapterProgress), args.Error(3)
	}

	if args.Get(2) == nil {
		return nil, nil, nil, args.Error(3)
	}
	return args.Get(0).([]*repositories.LearningMaterialProgress), args.Get(1).([]*repositories.StudentTopicProgress), args.Get(2).([]*repositories.StudentChapterProgress), args.Error(3)
}

func (r *MockStatisticsRepo) GetStudentTopicProgress(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text) ([]*repositories.StudentTopicProgress, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*repositories.StudentTopicProgress), args.Error(1)
}
