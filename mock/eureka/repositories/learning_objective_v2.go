// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/eureka/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockLearningObjectiveRepoV2 struct {
	mock.Mock
}

func (r *MockLearningObjectiveRepoV2) BulkInsert(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.LearningObjectiveV2) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLearningObjectiveRepoV2) CountLearningObjectivesByTopicIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) (int, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(int), args.Error(1)
}

func (r *MockLearningObjectiveRepoV2) Insert(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.LearningObjectiveV2) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLearningObjectiveRepoV2) ListByIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) ([]*entities.LearningObjectiveV2, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.LearningObjectiveV2), args.Error(1)
}

func (r *MockLearningObjectiveRepoV2) ListByTopicIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) ([]*entities.LearningObjectiveV2, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.LearningObjectiveV2), args.Error(1)
}

func (r *MockLearningObjectiveRepoV2) ListLOBaseByIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) ([]*entities.LearningObjectiveBaseV2, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.LearningObjectiveBaseV2), args.Error(1)
}

func (r *MockLearningObjectiveRepoV2) RetrieveLearningObjectivesByTopicIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) ([]*entities.LearningObjectiveV2, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.LearningObjectiveV2), args.Error(1)
}

func (r *MockLearningObjectiveRepoV2) Update(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.LearningObjectiveV2) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
