// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/eureka/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockClassStudentRepo struct {
	mock.Mock
}

func (r *MockClassStudentRepo) BulkSoftDelete(arg1 context.Context, arg2 database.QueryExecer, arg3 entities.ClassStudents) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockClassStudentRepo) GetClassStudentByCourse(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) ([]*entities.ClassStudent, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.ClassStudent), args.Error(1)
}

func (r *MockClassStudentRepo) GetClassStudentByCourseAndClassIds(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray, arg4 pgtype.TextArray) ([]*entities.ClassStudent, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.ClassStudent), args.Error(1)
}

func (r *MockClassStudentRepo) SoftDelete(arg1 context.Context, arg2 database.QueryExecer, arg3 []string, arg4 []string) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockClassStudentRepo) SoftDeleteByCourseStudent(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.CourseStudent) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockClassStudentRepo) Upsert(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.ClassStudent) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
