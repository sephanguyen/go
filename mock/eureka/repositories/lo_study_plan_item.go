// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/eureka/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockLoStudyPlanItemRepo struct {
	mock.Mock
}

func (r *MockLoStudyPlanItemRepo) BulkCopy(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.LoStudyPlanItem) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLoStudyPlanItemRepo) BulkInsert(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.LoStudyPlanItem) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLoStudyPlanItemRepo) BulkUpsertByStudyPlanItem(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.LoStudyPlanItem) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLoStudyPlanItemRepo) CopyFromStudyPlan(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLoStudyPlanItemRepo) DeleteLoStudyPlanItemsAndStudyPlanItemByLoIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLoStudyPlanItemRepo) DeleteLoStudyPlanItemsByLoIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLoStudyPlanItemRepo) FindByStudyPlanItemIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) ([]*entities.LoStudyPlanItem, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.LoStudyPlanItem), args.Error(1)
}

func (r *MockLoStudyPlanItemRepo) UpdateCompleted(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
