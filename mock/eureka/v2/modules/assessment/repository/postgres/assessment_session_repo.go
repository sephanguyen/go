// Code generated by mockgen. DO NOT EDIT.
package mock_postgres

import (
	"context"
	"time"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/eureka/v2/modules/assessment/domain"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockAssessmentSessionRepo struct {
	mock.Mock
}

func (r *MockAssessmentSessionRepo) GetByID(arg1 context.Context, arg2 database.Ext, arg3 string) (domain.Session, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(domain.Session), args.Error(1)
}

func (r *MockAssessmentSessionRepo) GetLatestByIdentity(arg1 context.Context, arg2 database.Ext, arg3 string, arg4 string) (domain.Session, error) {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Get(0).(domain.Session), args.Error(1)
}

func (r *MockAssessmentSessionRepo) GetManyByAssessments(arg1 context.Context, arg2 database.Ext, arg3 string, arg4 string) ([]domain.Session, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]domain.Session), args.Error(1)
}

func (r *MockAssessmentSessionRepo) Insert(arg1 context.Context, arg2 database.Ext, arg3 time.Time, arg4 domain.Session) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockAssessmentSessionRepo) UpdateStatus(arg1 context.Context, arg2 database.Ext, arg3 time.Time, arg4 domain.Session) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
