// Code generated by mockgen. DO NOT EDIT.
package mock_usecase

import (
	"context"

	"github.com/manabie-com/backend/internal/eureka/v2/modules/assessment/domain"
	"github.com/stretchr/testify/mock"
)

type MockAssessmentUsecaseImpl struct {
	mock.Mock
}

func (r *MockAssessmentUsecaseImpl) AllocateMarkerSubmissions(arg1 context.Context, arg2 []domain.Submission) error {
	args := r.Called(arg1, arg2)
	return args.Error(0)
}

func (r *MockAssessmentUsecaseImpl) CompleteAssessmentSession(arg1 context.Context, arg2 string) error {
	args := r.Called(arg1, arg2)
	return args.Error(0)
}

func (r *MockAssessmentUsecaseImpl) GetAssessmentSignedRequest(arg1 context.Context, arg2 domain.Session, arg3 string, arg4 string) (string, error) {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Get(0).(string), args.Error(1)
}

func (r *MockAssessmentUsecaseImpl) GetAssessmentSubmissionDetail(arg1 context.Context, arg2 string) (*domain.Submission, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*domain.Submission), args.Error(1)
}

func (r *MockAssessmentUsecaseImpl) ListAssessmentAttemptHistory(arg1 context.Context, arg2 string, arg3 string, arg4 string) ([]domain.Session, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]domain.Session), args.Error(1)
}

func (r *MockAssessmentUsecaseImpl) ListLearnositySessionStatuses(arg1 context.Context, arg2 string, arg3 string, arg4 []string) (map[string]bool, error) {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Get(0).(map[string]bool), args.Error(1)
}

func (r *MockAssessmentUsecaseImpl) ListNonQuizLearningMaterialStatuses(arg1 context.Context, arg2 string, arg3 string, arg4 []string) (map[string]bool, error) {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Get(0).(map[string]bool), args.Error(1)
}
