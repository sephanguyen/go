{
	"schema": [
		{
			"column_name": "created_at",
			"data_type": "timestamp with time zone",
			"column_default": null,
			"is_nullable": "NO"
		},
		{
			"column_name": "deleted_at",
			"data_type": "timestamp with time zone",
			"column_default": null,
			"is_nullable": "YES"
		},
		{
			"column_name": "location_id",
			"data_type": "text",
			"column_default": null,
			"is_nullable": "NO"
		},
		{
			"column_name": "remark",
			"data_type": "text",
			"column_default": null,
			"is_nullable": "YES"
		},
		{
			"column_name": "resource_path",
			"data_type": "text",
			"column_default": "autofillresourcepath()",
			"is_nullable": "YES"
		},
		{
			"column_name": "staff_id",
			"data_type": "text",
			"column_default": null,
			"is_nullable": "NO"
		},
		{
			"column_name": "timesheet_date",
			"data_type": "timestamp with time zone",
			"column_default": null,
			"is_nullable": "NO"
		},
		{
			"column_name": "timesheet_id",
			"data_type": "text",
			"column_default": null,
			"is_nullable": "NO"
		},
		{
			"column_name": "timesheet_status",
			"data_type": "text",
			"column_default": null,
			"is_nullable": "NO"
		},
		{
			"column_name": "updated_at",
			"data_type": "timestamp with time zone",
			"column_default": null,
			"is_nullable": "NO"
		}
	],
	"policies": [
		{
			"tablename": "timesheet",
			"policyname": "rls_timesheet_location",
			"qual": "(location_id IN ( SELECT p.location_id\n   FROM granted_permissions p\n  WHERE ((p.user_id = current_setting('app.user_id'::text)) AND (p.permission_id = ( SELECT p2.permission_id\n           FROM permission p2\n          WHERE ((p2.permission_name = 'timesheet.timesheet.read'::text) AND (p2.resource_path = current_setting('permission.resource_path'::text))))))))",
			"with_check": "(location_id IN ( SELECT p.location_id\n   FROM granted_permissions p\n  WHERE ((p.user_id = current_setting('app.user_id'::text)) AND (p.permission_id = ( SELECT p2.permission_id\n           FROM permission p2\n          WHERE ((p2.permission_name = 'timesheet.timesheet.write'::text) AND (p2.resource_path = current_setting('permission.resource_path'::text))))))))",
			"relrowsecurity": true,
			"relforcerowsecurity": true,
			"permissive": "PERMISSIVE",
			"roles": {
				"Elements": [
					"public"
				],
				"Dimensions": [
					{
						"Length": 1,
						"LowerBound": 1
					}
				],
				"Status": 2
			}
		},
		{
			"tablename": "timesheet",
			"policyname": "rls_timesheet_permission_v4",
			"qual": "(current_setting('app.user_id'::text) = staff_id)",
			"with_check": "(current_setting('app.user_id'::text) = staff_id)",
			"relrowsecurity": true,
			"relforcerowsecurity": true,
			"permissive": "PERMISSIVE",
			"roles": {
				"Elements": [
					"public"
				],
				"Dimensions": [
					{
						"Length": 1,
						"LowerBound": 1
					}
				],
				"Status": 2
			}
		},
		{
			"tablename": "timesheet",
			"policyname": "rls_timesheet_restrictive",
			"qual": "permission_check(resource_path, 'timesheet'::text)",
			"with_check": "permission_check(resource_path, 'timesheet'::text)",
			"relrowsecurity": true,
			"relforcerowsecurity": true,
			"permissive": "RESTRICTIVE",
			"roles": {
				"Elements": [
					"public"
				],
				"Dimensions": [
					{
						"Length": 1,
						"LowerBound": 1
					}
				],
				"Status": 2
			}
		}
	],
	"constraint": [
		{
			"constraint_name": "fk__location__location_id",
			"column_name": "location_id",
			"constraint_type": "FOREIGN KEY"
		},
		{
			"constraint_name": "timesheet__pk",
			"column_name": "timesheet_id",
			"constraint_type": "PRIMARY KEY"
		}
	],
	"table_name": "timesheet",
	"type": "BASE TABLE",
	"owner": "postgres"
}