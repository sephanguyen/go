// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/bob/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockConfigRepo struct {
	mock.Mock
}

func (r *MockConfigRepo) Find(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text) ([]*entities.Config, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.Config), args.Error(1)
}

func (r *MockConfigRepo) Retrieve(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text, arg5 pgtype.TextArray) ([]*entities.Config, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.Config), args.Error(1)
}

func (r *MockConfigRepo) RetrieveWithResourcePath(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text, arg5 pgtype.TextArray, arg6 pgtype.Text) ([]*entities.Config, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.Config), args.Error(1)
}

func (r *MockConfigRepo) Upsert(arg1 context.Context, arg2 database.Ext, arg3 []*entities.Config) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
