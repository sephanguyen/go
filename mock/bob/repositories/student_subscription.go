// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/jackc/pgx/v4"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/bob/entities"
	"github.com/manabie-com/backend/internal/bob/repositories"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockStudentSubscriptionRepo struct {
	mock.Mock
}

func (r *MockStudentSubscriptionRepo) BulkUpsert(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.StudentSubscription) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockStudentSubscriptionRepo) DeleteByCourseIDAndStudentID(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockStudentSubscriptionRepo) QueueUpsertStudentSubscription(arg1 *pgx.Batch, arg2 *entities.StudentSubscription) {
	_ = r.Called(arg1, arg2)
	return
}

func (r *MockStudentSubscriptionRepo) RetrieveStudentSubscriptionID(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text, arg5 pgtype.Text) (string, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Get(0).(string), args.Error(1)
}

func (r *MockStudentSubscriptionRepo) RetrieveStudentSubscriptions(arg1 context.Context, arg2 database.QueryExecer, arg3 *repositories.CourseQuery) (entities.StudentSubscriptions, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(entities.StudentSubscriptions), args.Error(1)
}
