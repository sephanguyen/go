// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	pb "github.com/manabie-com/backend/pkg/genproto/bob"
)

type MockCourseService struct {
	mock.Mock
}

func (r *MockCourseService) CreateBrightCoveUploadUrl(arg1 context.Context, arg2 *pb.CreateBrightCoveUploadUrlRequest) (*pb.CreateBrightCoveUploadUrlResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.CreateBrightCoveUploadUrlResponse), args.Error(1)
}

func (r *MockCourseService) FinishUploadBrightCove(arg1 context.Context, arg2 *pb.FinishUploadBrightCoveRequest) (*pb.FinishUploadBrightCoveResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.FinishUploadBrightCoveResponse), args.Error(1)
}

func (r *MockCourseService) GetChapterList(arg1 context.Context, arg2 *pb.GetChapterListRequest) (*pb.GetChapterListResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.GetChapterListResponse), args.Error(1)
}

func (r *MockCourseService) GetHistoryQuizDetail(arg1 context.Context, arg2 *pb.GetHistoryQuizDetailRequest) (*pb.GetHistoryQuizDetailResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.GetHistoryQuizDetailResponse), args.Error(1)
}

func (r *MockCourseService) IsJoinCourse(arg1 context.Context, arg2 string, arg3 string) (bool, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(bool), args.Error(1)
}

func (r *MockCourseService) ListTopic(arg1 context.Context, arg2 *pb.ListTopicRequest) (*pb.ListTopicResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.ListTopicResponse), args.Error(1)
}

func (r *MockCourseService) ListTopics(arg1 context.Context, arg2 *pb.ListTopicsRequest) (*pb.ListTopicsResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.ListTopicsResponse), args.Error(1)
}

func (r *MockCourseService) RetrieveAssignedCourses(arg1 context.Context, arg2 *pb.RetrieveCoursesRequest) (*pb.RetrieveCoursesResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.RetrieveCoursesResponse), args.Error(1)
}

func (r *MockCourseService) RetrieveBooks(arg1 context.Context, arg2 *pb.RetrieveBooksRequest) (*pb.RetrieveBooksResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.RetrieveBooksResponse), args.Error(1)
}

func (r *MockCourseService) RetrieveCourses(arg1 context.Context, arg2 *pb.RetrieveCoursesRequest) (*pb.RetrieveCoursesResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.RetrieveCoursesResponse), args.Error(1)
}

func (r *MockCourseService) RetrieveCoursesByIDs(arg1 context.Context, arg2 *pb.RetrieveCoursesByIDsRequest) (*pb.RetrieveCoursesResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.RetrieveCoursesResponse), args.Error(1)
}

func (r *MockCourseService) RetrieveGradeMap(arg1 context.Context, arg2 *pb.RetrieveGradeMapRequest) (*pb.RetrieveGradeMapResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.RetrieveGradeMapResponse), args.Error(1)
}

func (r *MockCourseService) RetrieveLiveLesson(arg1 context.Context, arg2 *pb.RetrieveLiveLessonRequest) (*pb.RetrieveLiveLessonResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.RetrieveLiveLessonResponse), args.Error(1)
}

func (r *MockCourseService) RetrieveStudentSubmissions(arg1 context.Context, arg2 *pb.RetrieveStudentSubmissionsRequest) (*pb.RetrieveStudentSubmissionsResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.RetrieveStudentSubmissionsResponse), args.Error(1)
}

func (r *MockCourseService) SuggestLO(arg1 context.Context, arg2 *pb.SuggestLORequest) (*pb.SuggestLOResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.SuggestLOResponse), args.Error(1)
}

func (r *MockCourseService) TakeTheQuiz(arg1 context.Context, arg2 *pb.TakeTheQuizRequest) (*pb.TakeTheQuizResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.TakeTheQuizResponse), args.Error(1)
}

func (r *MockCourseService) TakeTheQuizV2(arg1 context.Context, arg2 *pb.TakeTheQuizRequest) (*pb.TakeTheQuizV2Response, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.TakeTheQuizV2Response), args.Error(1)
}

func (r *MockCourseService) UpsertLOs(arg1 context.Context, arg2 *pb.UpsertLOsRequest) (*pb.UpsertLOsResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.UpsertLOsResponse), args.Error(1)
}

func (r *MockCourseService) UpsertPresetStudyPlanWeeklies(arg1 context.Context, arg2 *pb.UpsertPresetStudyPlanWeekliesRequest) (*pb.UpsertPresetStudyPlanWeekliesResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.UpsertPresetStudyPlanWeekliesResponse), args.Error(1)
}

func (r *MockCourseService) UpsertPresetStudyPlans(arg1 context.Context, arg2 *pb.UpsertPresetStudyPlansRequest) (*pb.UpsertPresetStudyPlansResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.UpsertPresetStudyPlansResponse), args.Error(1)
}

func (r *MockCourseService) UpsertQuestions(arg1 context.Context, arg2 *pb.UpsertQuestionsRequest) (*pb.UpsertQuestionsResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.UpsertQuestionsResponse), args.Error(1)
}

func (r *MockCourseService) UpsertQuizSets(arg1 context.Context, arg2 *pb.UpsertQuizRequest) (*pb.UpsertQuizResponse, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*pb.UpsertQuizResponse), args.Error(1)
}
