// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/go-pg/pg/orm"
	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/bob/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
	ey "github.com/manabie-com/backend/internal/yasuo/entities"
)

type MockCourseClassRepo struct {
	mock.Mock
}

func (r *MockCourseClassRepo) FindByClassIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Int4Array) (map[pgtype.Int4]pgtype.TextArray, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(map[pgtype.Int4]pgtype.TextArray), args.Error(1)
}

func (r *MockCourseClassRepo) FindByCourseID(arg1 context.Context, arg2 database.Ext, arg3 pgtype.Text, arg4 bool) (map[pgtype.Int4]*entities.CourseClass, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(map[pgtype.Int4]*entities.CourseClass), args.Error(1)
}

func (r *MockCourseClassRepo) FindByCourseIDs(arg1 context.Context, arg2 database.Ext, arg3 pgtype.TextArray, arg4 bool) ([]*entities.CourseClass, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.CourseClass), args.Error(1)
}

func (r *MockCourseClassRepo) SoftDelete(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockCourseClassRepo) SoftDeleteClass(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Int4) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockCourseClassRepo) Upsert(arg1 context.Context, arg2 orm.DB, arg3 []*ey.CourseClass) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockCourseClassRepo) UpsertV2(arg1 context.Context, arg2 database.Ext, arg3 []*entities.CourseClass) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
