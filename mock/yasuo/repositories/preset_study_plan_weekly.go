// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/bob/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockPresetStudyPlanWeeklyRepo struct {
	mock.Mock
}

func (r *MockPresetStudyPlanWeeklyRepo) Create(arg1 context.Context, arg2 database.Ext, arg3 []*entities.PresetStudyPlanWeekly) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockPresetStudyPlanWeeklyRepo) FindByLessonID(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text) (*entities.PresetStudyPlanWeekly, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.PresetStudyPlanWeekly), args.Error(1)
}

func (r *MockPresetStudyPlanWeeklyRepo) FindByLessonIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray, arg4 bool) (map[pgtype.Text]*entities.PresetStudyPlanWeekly, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(map[pgtype.Text]*entities.PresetStudyPlanWeekly), args.Error(1)
}

func (r *MockPresetStudyPlanWeeklyRepo) FindByPresetStudyPlanID(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text) ([]*entities.PresetStudyPlanWeekly, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.PresetStudyPlanWeekly), args.Error(1)
}

func (r *MockPresetStudyPlanWeeklyRepo) GetIDsByLessonIDAndPresetStudyPlanIDs(arg1 context.Context, arg2 database.Ext, arg3 pgtype.Text, arg4 pgtype.TextArray) ([]string, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

func (r *MockPresetStudyPlanWeeklyRepo) SoftDelete(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockPresetStudyPlanWeeklyRepo) SoftDeleteByPresetStudyPlanIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockPresetStudyPlanWeeklyRepo) Update(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.PresetStudyPlanWeekly) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockPresetStudyPlanWeeklyRepo) UpdateTimeByLessonAndCourses(arg1 context.Context, arg2 database.Ext, arg3 pgtype.Text, arg4 pgtype.TextArray, arg5 pgtype.Timestamptz, arg6 pgtype.Timestamptz) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6)
	return args.Error(0)
}
