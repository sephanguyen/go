// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"
	"time"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/virtualclassroom/modules/virtualclassroom/domain"
	"github.com/manabie-com/backend/internal/virtualclassroom/modules/virtuallesson/application/queries/payloads"
)

type MockVirtualLessonRepo struct {
	mock.Mock
}

func (r *MockVirtualLessonRepo) DecreaseNumberOfStreaming(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockVirtualLessonRepo) EndLiveLesson(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 time.Time) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockVirtualLessonRepo) GetLearnerIDsOfLesson(arg1 context.Context, arg2 database.QueryExecer, arg3 string) ([]string, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

func (r *MockVirtualLessonRepo) GetLessons(arg1 context.Context, arg2 database.QueryExecer, arg3 payloads.GetLessonsArgs) ([]domain.VirtualLesson, uint32, string, uint32, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Get(1).(uint32), args.Get(2).(string), args.Get(3).(uint32), args.Error(4)
	}
	return args.Get(0).([]domain.VirtualLesson), args.Get(1).(uint32), args.Get(2).(string), args.Get(3).(uint32), args.Error(4)
}

func (r *MockVirtualLessonRepo) GetStreamingLearners(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 bool) ([]string, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

func (r *MockVirtualLessonRepo) GetTeacherIDsOfLesson(arg1 context.Context, arg2 database.QueryExecer, arg3 string) ([]string, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

func (r *MockVirtualLessonRepo) GetVirtualLessonByID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (*domain.VirtualLesson, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*domain.VirtualLesson), args.Error(1)
}

func (r *MockVirtualLessonRepo) GetVirtualLessonByLessonIDsAndCourseIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string, arg4 []string) ([]*domain.VirtualLesson, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*domain.VirtualLesson), args.Error(1)
}

func (r *MockVirtualLessonRepo) GetVirtualLessonOnlyByID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (*domain.VirtualLesson, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*domain.VirtualLesson), args.Error(1)
}

func (r *MockVirtualLessonRepo) GetVirtualLessons(arg1 context.Context, arg2 database.QueryExecer, arg3 *payloads.GetVirtualLessonsArgs) ([]*domain.VirtualLesson, int32, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Get(1).(int32), args.Error(2)
	}
	return args.Get(0).([]*domain.VirtualLesson), args.Get(1).(int32), args.Error(2)
}

func (r *MockVirtualLessonRepo) GetVirtualLessonsByLessonIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) ([]*domain.VirtualLesson, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*domain.VirtualLesson), args.Error(1)
}

func (r *MockVirtualLessonRepo) GrantRecordingPermission(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 []uint8) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockVirtualLessonRepo) IncreaseNumberOfStreaming(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string, arg5 int) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Error(0)
}

func (r *MockVirtualLessonRepo) StopRecording(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string, arg5 []uint8) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Error(0)
}

func (r *MockVirtualLessonRepo) UpdateLessonRoomState(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 *domain.OldLessonRoomState) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockVirtualLessonRepo) UpdateRoomID(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
