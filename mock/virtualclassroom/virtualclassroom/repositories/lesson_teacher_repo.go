// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/virtualclassroom/modules/virtualclassroom/domain"
	"github.com/manabie-com/backend/internal/virtualclassroom/modules/virtualclassroom/infrastructure/repo"
)

type MockLessonTeacherRepo struct {
	mock.Mock
}

func (r *MockLessonTeacherRepo) GetTeacherIDsByLessonID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) ([]string, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

func (r *MockLessonTeacherRepo) GetTeacherIDsByLessonIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) ([]*repo.LessonTeacher, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*repo.LessonTeacher), args.Error(1)
}

func (r *MockLessonTeacherRepo) GetTeacherIDsOnlyByLessonIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) (map[string][]string, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(map[string][]string), args.Error(1)
}

func (r *MockLessonTeacherRepo) GetTeachersByLessonIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) (map[string]domain.LessonTeachers, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(map[string]domain.LessonTeachers), args.Error(1)
}
