// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/virtualclassroom/modules/virtualclassroom/domain"
	"github.com/manabie-com/backend/internal/virtualclassroom/modules/virtualclassroom/application/queries/payloads"
)

type MockRecordedVideoRepo struct {
	mock.Mock
}

func (r *MockRecordedVideoRepo) DeleteRecording(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockRecordedVideoRepo) GetRecordingByID(arg1 context.Context, arg2 database.QueryExecer, arg3 *payloads.GetRecordingByIDPayload) (*domain.RecordedVideo, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*domain.RecordedVideo), args.Error(1)
}

func (r *MockRecordedVideoRepo) InsertRecordedVideos(arg1 context.Context, arg2 database.QueryExecer, arg3 []*domain.RecordedVideo) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockRecordedVideoRepo) ListRecordingByLessonIDWithPaging(arg1 context.Context, arg2 database.QueryExecer, arg3 *payloads.RetrieveRecordedVideosByLessonIDPayload) (domain.RecordedVideos, uint32, string, uint32, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(domain.RecordedVideos), args.Get(1).(uint32), args.Get(2).(string), args.Get(3).(uint32), args.Error(4)
}

func (r *MockRecordedVideoRepo) ListRecordingByLessonIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) (domain.RecordedVideos, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(domain.RecordedVideos), args.Error(1)
}
