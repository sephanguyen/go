// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"
	"time"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/discount/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockUserDiscountTagRepo struct {
	mock.Mock
}

func (r *MockUserDiscountTagRepo) Create(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.UserDiscountTag) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockUserDiscountTagRepo) GetActiveDiscountTagIDsByDateAndUserID(arg1 context.Context, arg2 database.QueryExecer, arg3 time.Time, arg4 string) ([]string, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

func (r *MockUserDiscountTagRepo) GetDiscountEligibilityOfStudentProduct(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string, arg5 string) ([]*entities.UserDiscountTag, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.UserDiscountTag), args.Error(1)
}

func (r *MockUserDiscountTagRepo) GetDiscountTagsByUserID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) ([]*entities.UserDiscountTag, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.UserDiscountTag), args.Error(1)
}

func (r *MockUserDiscountTagRepo) GetDiscountTagsByUserIDAndLocationID(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string) ([]*entities.UserDiscountTag, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.UserDiscountTag), args.Error(1)
}

func (r *MockUserDiscountTagRepo) GetDiscountTagsWithActivityOnDate(arg1 context.Context, arg2 database.QueryExecer, arg3 time.Time) ([]*entities.UserDiscountTag, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.UserDiscountTag), args.Error(1)
}

func (r *MockUserDiscountTagRepo) GetUserIDsWithActivityOnDate(arg1 context.Context, arg2 database.QueryExecer, arg3 time.Time) ([]pgtype.Text, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]pgtype.Text), args.Error(1)
}

func (r *MockUserDiscountTagRepo) SoftDeleteByTypesAndUserID(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 pgtype.TextArray) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
