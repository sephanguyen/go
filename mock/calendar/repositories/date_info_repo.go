// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"
	"time"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/calendar/domain/dto"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockDateInfoRepo struct {
	mock.Mock
}

func (r *MockDateInfoRepo) DuplicateDateInfo(arg1 context.Context, arg2 database.QueryExecer, arg3 *dto.DuplicateDateInfoParams) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockDateInfoRepo) GetAllToExport(arg1 context.Context, arg2 database.QueryExecer) ([]uint8, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]uint8), args.Error(1)
}

func (r *MockDateInfoRepo) GetDateInfoByDateAndLocationID(arg1 context.Context, arg2 database.QueryExecer, arg3 time.Time, arg4 string) (*dto.DateInfo, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*dto.DateInfo), args.Error(1)
}

func (r *MockDateInfoRepo) GetDateInfoByDateRangeAndLocationID(arg1 context.Context, arg2 database.QueryExecer, arg3 time.Time, arg4 time.Time, arg5 string) ([]*dto.DateInfo, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*dto.DateInfo), args.Error(1)
}

func (r *MockDateInfoRepo) GetDateInfoDetailedByDateRangeAndLocationID(arg1 context.Context, arg2 database.QueryExecer, arg3 time.Time, arg4 time.Time, arg5 string, arg6 string) ([]*dto.DateInfo, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*dto.DateInfo), args.Error(1)
}

func (r *MockDateInfoRepo) UpsertDateInfo(arg1 context.Context, arg2 database.QueryExecer, arg3 *dto.UpsertDateInfoParams) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
