// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/draft/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockGithubPrRepo struct {
	mock.Mock
}

func (r *MockGithubPrRepo) AddPullRequestData(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string, arg5 string, arg6 int, arg7 string) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	return args.Error(0)
}

func (r *MockGithubPrRepo) GetOpenPRs(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (entities.GithubPRDatas, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(entities.GithubPRDatas), args.Error(1)
}

func (r *MockGithubPrRepo) GetPullRequestDataWithNumber(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 int) (*entities.GithubPRData, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.GithubPRData), args.Error(1)
}

func (r *MockGithubPrRepo) UpdateNumOfCommentPullRequestData(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 int, arg5 int) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Error(0)
}

func (r *MockGithubPrRepo) UpdatePRMergeStatus(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 int, arg5 string) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Error(0)
}

func (r *MockGithubPrRepo) UpdateTimePullRequestData(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 int, arg5 float32, arg6 bool) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6)
	return args.Error(0)
}

func (r *MockGithubPrRepo) UpdateTimeToFirstCommentPullRequestData(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 int, arg5 float32) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Error(0)
}
