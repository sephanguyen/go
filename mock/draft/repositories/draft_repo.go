// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/draft/entities"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockDraftRepo struct {
	mock.Mock
}

func (r *MockDraftRepo) AddHistory(arg1 context.Context, arg2 database.QueryExecer, arg3 float64, arg4 string, arg5 string, arg6 string, arg7 string, arg8 bool) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
	return args.Error(0)
}

func (r *MockDraftRepo) CreateTargetBranch(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string, arg5 bool, arg6 string, arg7 float64) error {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	return args.Error(0)
}

func (r *MockDraftRepo) GetGitHubEvent(arg1 context.Context, arg2 database.QueryExecer) (*entities.TargetCoverage, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.TargetCoverage), args.Error(1)
}

func (r *MockDraftRepo) GetTargetCoverage(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string, arg5 bool) (*entities.TargetCoverage, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.TargetCoverage), args.Error(1)
}

func (r *MockDraftRepo) UpdateTargetCoverage(arg1 context.Context, arg2 database.QueryExecer, arg3 float64, arg4 int64) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
