// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/notification/modules/system_notification/domain/model"
	"github.com/manabie-com/backend/internal/notification/modules/system_notification/infrastructure/repo"
)

type MockSystemNotificationRepo struct {
	mock.Mock
}

func (r *MockSystemNotificationRepo) CheckUserBelongToSystemNotification(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string) (bool, error) {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Get(0).(bool), args.Error(1)
}

func (r *MockSystemNotificationRepo) CountSystemNotifications(arg1 context.Context, arg2 database.QueryExecer, arg3 *repo.FindSystemNotificationFilter) (map[string]uint32, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(map[string]uint32), args.Error(1)
}

func (r *MockSystemNotificationRepo) FindByReferenceID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (*model.SystemNotification, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*model.SystemNotification), args.Error(1)
}

func (r *MockSystemNotificationRepo) FindSystemNotifications(arg1 context.Context, arg2 database.QueryExecer, arg3 *repo.FindSystemNotificationFilter) (model.SystemNotifications, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(model.SystemNotifications), args.Error(1)
}

func (r *MockSystemNotificationRepo) SetStatus(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockSystemNotificationRepo) UpsertSystemNotification(arg1 context.Context, arg2 database.QueryExecer, arg3 *model.SystemNotification) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
