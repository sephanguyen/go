// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/notification/entities"
	"github.com/manabie-com/backend/internal/notification/repositories"
)

type MockAudienceRepo struct {
	mock.Mock
}

func (r *MockAudienceRepo) CountDraftAudiencesByFilter(arg1 context.Context, arg2 database.QueryExecer, arg3 *repositories.FindDraftAudienceFilter, arg4 *repositories.FindAudienceOption) (uint32, error) {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Get(0).(uint32), args.Error(1)
}

func (r *MockAudienceRepo) CountGroupAudiencesByFilter(arg1 context.Context, arg2 database.QueryExecer, arg3 *repositories.FindGroupAudienceFilter, arg4 *repositories.FindAudienceOption) (uint32, error) {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Get(0).(uint32), args.Error(1)
}

func (r *MockAudienceRepo) FindDraftAudiencesByFilter(arg1 context.Context, arg2 database.QueryExecer, arg3 *repositories.FindDraftAudienceFilter, arg4 *repositories.FindAudienceOption) ([]*entities.Audience, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.Audience), args.Error(1)
}

func (r *MockAudienceRepo) FindGroupAudiencesByFilter(arg1 context.Context, arg2 database.QueryExecer, arg3 *repositories.FindGroupAudienceFilter, arg4 *repositories.FindAudienceOption) ([]*entities.Audience, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.Audience), args.Error(1)
}

func (r *MockAudienceRepo) FindIndividualAudiencesByFilter(arg1 context.Context, arg2 database.QueryExecer, arg3 *repositories.FindIndividualAudienceFilter) ([]*entities.Audience, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.Audience), args.Error(1)
}
