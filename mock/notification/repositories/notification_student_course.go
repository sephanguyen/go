// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/notification/entities"
	"github.com/manabie-com/backend/internal/notification/repositories"
)

type MockNotificationStudentCourseRepo struct {
	mock.Mock
}

func (r *MockNotificationStudentCourseRepo) BulkCreate(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.NotificationStudentCourse) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockNotificationStudentCourseRepo) BulkUpsert(arg1 context.Context, arg2 database.QueryExecer, arg3 []*entities.NotificationStudentCourse) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockNotificationStudentCourseRepo) Find(arg1 context.Context, arg2 database.QueryExecer, arg3 *repositories.FindNotificationStudentCourseFilter) (entities.NotificationStudentCourses, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(entities.NotificationStudentCourses), args.Error(1)
}

func (r *MockNotificationStudentCourseRepo) SoftDelete(arg1 context.Context, arg2 database.QueryExecer, arg3 *repositories.SoftDeleteNotificationStudentCourseFilter) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockNotificationStudentCourseRepo) Upsert(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.NotificationStudentCourse) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
