// Code generated by mockgen. DO NOT EDIT.
package mock_domain

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/notification/entities"
)

type MockAudienceRetrieverService struct {
	mock.Mock
}

func (r *MockAudienceRetrieverService) FindAudiences(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.InfoNotification) ([]*entities.Audience, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.Audience), args.Error(1)
}

func (r *MockAudienceRetrieverService) FindDraftAudiencesWithPaging(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 *entities.InfoNotificationTarget, arg5 []string, arg6 []string, arg7 int, arg8 int) ([]*entities.Audience, uint32, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

	if args.Get(0) == nil {
		return nil, args.Get(1).(uint32), args.Error(2)
	}
	return args.Get(0).([]*entities.Audience), args.Get(1).(uint32), args.Error(2)
}

func (r *MockAudienceRetrieverService) FindGroupAudiencesWithPaging(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 *entities.InfoNotificationTarget, arg5 string, arg6 []string, arg7 int, arg8 int) ([]*entities.Audience, uint32, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

	if args.Get(0) == nil {
		return nil, args.Get(1).(uint32), args.Error(2)
	}
	return args.Get(0).([]*entities.Audience), args.Get(1).(uint32), args.Error(2)
}
