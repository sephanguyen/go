// Code generated by mockery. DO NOT EDIT.

// This file can be generated by running: make gen-mock-repo

package mock_uploader

import (
	context "context"

	uploader "github.com/manabie-com/backend/internal/entryexitmgmt/services/uploader"
	mock "github.com/stretchr/testify/mock"
)

// Uploader is an autogenerated mock type for the Uploader type
type Uploader struct {
	mock.Mock
}

// InitUploader provides a mock function with given fields: ctx, req
func (_m *Uploader) InitUploader(ctx context.Context, req *uploader.UploadRequest) (*uploader.UploadInfo, error) {
	ret := _m.Called(ctx, req)

	var r0 *uploader.UploadInfo
	if rf, ok := ret.Get(0).(func(context.Context, *uploader.UploadRequest) *uploader.UploadInfo); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*uploader.UploadInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *uploader.UploadRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUploader interface {
	mock.TestingT
	Cleanup(func())
}

// NewUploader creates a new instance of Uploader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUploader(t mockConstructorTestingTNewUploader) *Uploader {
	mock := &Uploader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
