// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/entryexitmgmt/entities"
	"github.com/manabie-com/backend/internal/entryexitmgmt/repositories"
	"github.com/manabie-com/backend/internal/golibs/database"
)

type MockStudentEntryExitRecordsRepo struct {
	mock.Mock
}

func (r *MockStudentEntryExitRecordsRepo) Create(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.StudentEntryExitRecords) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockStudentEntryExitRecordsRepo) GetLatestRecordByID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (*entities.StudentEntryExitRecords, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.StudentEntryExitRecords), args.Error(1)
}

func (r *MockStudentEntryExitRecordsRepo) LockAdvisoryByStudentID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (bool, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(bool), args.Error(1)
}

func (r *MockStudentEntryExitRecordsRepo) RetrieveRecordsByStudentID(arg1 context.Context, arg2 database.QueryExecer, arg3 repositories.RetrieveEntryExitRecordFilter) ([]*entities.StudentEntryExitRecords, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.StudentEntryExitRecords), args.Error(1)
}

func (r *MockStudentEntryExitRecordsRepo) SoftDeleteByID(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Int4) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockStudentEntryExitRecordsRepo) UnLockAdvisoryByStudentID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockStudentEntryExitRecordsRepo) Update(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.StudentEntryExitRecords) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
