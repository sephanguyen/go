// Code generated by mockery v2.14.0. DO NOT EDIT.

package mock_mastermgmt

import (
	context "context"

	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"

	mpb "github.com/manabie-com/backend/pkg/manabuf/mastermgmt/v1"
)

// MasterMgmtConfigurationServiceClient is an autogenerated mock type for the MasterMgmtConfigurationServiceClient type
type MasterMgmtConfigurationServiceClient struct {
	mock.Mock
}

// GetConfigurationByKey provides a mock function with given fields: _a0, _a1, _a2
func (_m *MasterMgmtConfigurationServiceClient) GetConfigurationByKey(_a0 context.Context, _a1 *mpb.GetConfigurationByKeyRequest, _a2 ...grpc.CallOption) (*mpb.GetConfigurationByKeyResponse, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *mpb.GetConfigurationByKeyResponse
	if rf, ok := ret.Get(0).(func(context.Context, *mpb.GetConfigurationByKeyRequest, ...grpc.CallOption) *mpb.GetConfigurationByKeyResponse); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*mpb.GetConfigurationByKeyResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *mpb.GetConfigurationByKeyRequest, ...grpc.CallOption) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMasterMgmtConfigurationServiceClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewMasterMgmtConfigurationServiceClient creates a new instance of MasterMgmtConfigurationServiceClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMasterMgmtConfigurationServiceClient(t mockConstructorTestingTNewMasterMgmtConfigurationServiceClient) *MasterMgmtConfigurationServiceClient {
	mock := &MasterMgmtConfigurationServiceClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
