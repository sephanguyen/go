// Code generated by mockgen. DO NOT EDIT.
package mock_commands

import (
	"context"

	"github.com/stretchr/testify/mock"
	"google.golang.org/protobuf/types/known/timestamppb"

	"github.com/manabie-com/backend/internal/mastermgmt/modules/schedule_class/application/commands"
	"github.com/manabie-com/backend/internal/mastermgmt/modules/schedule_class/domain"
	mpb "github.com/manabie-com/backend/pkg/manabuf/mastermgmt/v1"
)

type MockReserveClassCommandHandler struct {
	mock.Mock
}

func (r *MockReserveClassCommandHandler) CancelReserveClass(arg1 context.Context, arg2 commands.CancelReserveClassCommandPayload) error {
	args := r.Called(arg1, arg2)
	return args.Error(0)
}

func (r *MockReserveClassCommandHandler) CheckWillReserveClass(arg1 context.Context, arg2 *mpb.ScheduleStudentClassRequest) (bool, string, error) {
	args := r.Called(arg1, arg2)
	return args.Get(0).(bool), args.Get(1).(string), args.Error(2)
}

func (r *MockReserveClassCommandHandler) DeleteReserveClassesByEffectiveDate(arg1 context.Context, arg2 string) error {
	args := r.Called(arg1, arg2)
	return args.Error(0)
}

func (r *MockReserveClassCommandHandler) PublicReserveClassEvt(arg1 context.Context, arg2 *mpb.EvtScheduleClass) error {
	args := r.Called(arg1, arg2)
	return args.Error(0)
}

func (r *MockReserveClassCommandHandler) ReserveStudentClass(arg1 context.Context, arg2 *mpb.ScheduleStudentClassRequest, arg3 string) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockReserveClassCommandHandler) UpsertReserveClass(arg1 context.Context, arg2 *domain.ReserveClass) (string, *timestamppb.Timestamp, error) {
	args := r.Called(arg1, arg2)

	if args.Get(1) == nil {
		return args.Get(0).(string), nil, args.Error(2)
	}
	return args.Get(0).(string), args.Get(1).(*timestamppb.Timestamp), args.Error(2)
}
