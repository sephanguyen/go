// Code generated by mockgen. DO NOT EDIT.
package mock_repo

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/mastermgmt/modules/schedule_class/domain"
)

type MockReserveClassRepo struct {
	mock.Mock
}

func (r *MockReserveClassRepo) DeleteByEffectiveDate(arg1 context.Context, arg2 database.QueryExecer, arg3 string) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockReserveClassRepo) DeleteOldReserveClass(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string, arg5 string) (pgtype.Text, pgtype.Date, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Get(0).(pgtype.Text), args.Get(1).(pgtype.Date), args.Error(2)
}

func (r *MockReserveClassRepo) GetByEffectiveDate(arg1 context.Context, arg2 database.QueryExecer, arg3 string) ([]*domain.ReserveClass, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*domain.ReserveClass), args.Error(1)
}

func (r *MockReserveClassRepo) GetByStudentIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 string) ([]*domain.ReserveClass, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*domain.ReserveClass), args.Error(1)
}

func (r *MockReserveClassRepo) InsertOne(arg1 context.Context, arg2 database.QueryExecer, arg3 *domain.ReserveClass) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
