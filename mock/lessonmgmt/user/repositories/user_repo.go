// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/lessonmgmt/modules/user/domain"
	"github.com/manabie-com/backend/internal/lessonmgmt/modules/user/infrastructure/repo"
)

type MockUserRepo struct {
	mock.Mock
}

func (r *MockUserRepo) FindByResourcePath(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 int, arg5 int) (domain.Users, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Get(0).(domain.Users), args.Error(1)
}

func (r *MockUserRepo) GetStudentCurrentGradeByUserIDs(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) (map[string]string, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(map[string]string), args.Error(1)
}

func (r *MockUserRepo) GetStudentsManyReferenceByNameOrEmail(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 uint32, arg5 uint32) (domain.Students, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Get(0).(domain.Students), args.Error(1)
}

func (r *MockUserRepo) GetUserByUserID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (*domain.User, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*domain.User), args.Error(1)
}

func (r *MockUserRepo) GetUserGroupByUserID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (string, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(string), args.Error(1)
}

func (r *MockUserRepo) Retrieve(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.TextArray, arg4 ...string) ([]*repo.User, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*repo.User), args.Error(1)
}
