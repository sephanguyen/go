// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/lessonmgmt/modules/lesson/domain"
)

type MockReallocationRepo struct {
	mock.Mock
}

func (r *MockReallocationRepo) CancelIfStudentReallocated(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockReallocationRepo) CancelReallocationByLessonID(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockReallocationRepo) DeleteByOriginalLessonID(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockReallocationRepo) GetByNewLessonID(arg1 context.Context, arg2 database.QueryExecer, arg3 []string, arg4 string) ([]*domain.Reallocation, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*domain.Reallocation), args.Error(1)
}

func (r *MockReallocationRepo) GetByNewLessonIDAndStudentID(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) ([]*domain.Reallocation, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*domain.Reallocation), args.Error(1)
}

func (r *MockReallocationRepo) GetFollowingReallocation(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 []string) ([]*domain.Reallocation, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*domain.Reallocation), args.Error(1)
}

func (r *MockReallocationRepo) GetReallocatedLesson(arg1 context.Context, arg2 database.QueryExecer, arg3 []string) ([]*domain.Reallocation, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*domain.Reallocation), args.Error(1)
}

func (r *MockReallocationRepo) SoftDelete(arg1 context.Context, arg2 database.QueryExecer, arg3 []string, arg4 bool) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockReallocationRepo) UpsertReallocation(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 []*domain.Reallocation) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
