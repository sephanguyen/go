// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/lessonmgmt/modules/lesson/domain"
)

type MockLessonRoomStateRepo struct {
	mock.Mock
}

func (r *MockLessonRoomStateRepo) GetLessonRoomStateByLessonID(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text) (*domain.LessonRoomState, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*domain.LessonRoomState), args.Error(1)
}

func (r *MockLessonRoomStateRepo) Spotlight(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.Text) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockLessonRoomStateRepo) UnSpotlight(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLessonRoomStateRepo) UpsertCurrentMaterial(arg1 context.Context, arg2 database.QueryExecer, arg3 *domain.CurrentMaterial) (*domain.CurrentMaterial, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*domain.CurrentMaterial), args.Error(1)
}

func (r *MockLessonRoomStateRepo) UpsertCurrentMaterialState(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text, arg4 pgtype.JSONB) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockLessonRoomStateRepo) UpsertWhiteboardZoomState(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 *domain.WhiteboardZoomState) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
