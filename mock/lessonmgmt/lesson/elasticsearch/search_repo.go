// Code generated by mockgen. DO NOT EDIT.
package mock_elasticsearch

import (
	"context"

	"github.com/manabie-com/backend/internal/lessonmgmt/modules/lesson/domain"
	"github.com/manabie-com/backend/internal/lessonmgmt/modules/lesson/infrastructure/elasticsearch"
	"github.com/stretchr/testify/mock"
)

type MockSearchRepo struct {
	mock.Mock
}

func (r *MockSearchRepo) BulkUpsert(arg1 context.Context, arg2 domain.LessonSearchs) (int, error) {
	args := r.Called(arg1, arg2)
	return args.Get(0).(int), args.Error(1)
}

func (r *MockSearchRepo) CreateLessonIndex() error {
	args := r.Called()
	return args.Error(0)
}

func (r *MockSearchRepo) DeleteLessonIndex() error {
	args := r.Called()
	return args.Error(0)
}

func (r *MockSearchRepo) GetLessonByID(arg1 context.Context, arg2 string) (*elasticsearch.LessonSearch, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*elasticsearch.LessonSearch), args.Error(1)
}

func (r *MockSearchRepo) Search(arg1 context.Context, arg2 *domain.ListLessonArgs) ([]*domain.Lesson, uint32, string, error) {
	args := r.Called(arg1, arg2)

	if args.Get(0) == nil {
		return nil, args.Get(1).(uint32), args.Get(2).(string), args.Error(3)
	}
	return args.Get(0).([]*domain.Lesson), args.Get(1).(uint32), args.Get(2).(string), args.Error(3)
}
