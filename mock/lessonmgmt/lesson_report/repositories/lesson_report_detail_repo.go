// Code generated by mockgen. DO NOT EDIT.
package mock_lesson_report

import (
	"context"

	"github.com/jackc/pgx/v4"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/lessonmgmt/modules/lesson_report/domain"
	"github.com/manabie-com/backend/internal/lessonmgmt/modules/lesson_report/infrastructure/repo"
)

type MockLessonReportDetailRepo struct {
	mock.Mock
}

func (r *MockLessonReportDetailRepo) GetByLessonReportID(arg1 context.Context, arg2 database.Ext, arg3 string) (domain.LessonReportDetails, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(domain.LessonReportDetails), args.Error(1)
}

func (r *MockLessonReportDetailRepo) GetDetailByLessonReportID(arg1 context.Context, arg2 database.Ext, arg3 string) (domain.LessonReportDetails, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(domain.LessonReportDetails), args.Error(1)
}

func (r *MockLessonReportDetailRepo) GetReportVersionByLessonID(arg1 context.Context, arg2 database.Ext, arg3 string) (domain.LessonReportDetails, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(domain.LessonReportDetails), args.Error(1)
}

func (r *MockLessonReportDetailRepo) Upsert(arg1 context.Context, arg2 database.Ext, arg3 string, arg4 domain.LessonReportDetails) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockLessonReportDetailRepo) UpsertFieldValues(arg1 context.Context, arg2 database.Ext, arg3 []*domain.PartnerDynamicFormFieldValue) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockLessonReportDetailRepo) UpsertFieldValuesQueue(arg1 *pgx.Batch, arg2 *repo.PartnerDynamicFormFieldValueDTO) {
	_ = r.Called(arg1, arg2)
	return
}

func (r *MockLessonReportDetailRepo) UpsertOne(arg1 context.Context, arg2 database.Ext, arg3 string, arg4 domain.LessonReportDetail) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}

func (r *MockLessonReportDetailRepo) UpsertQueue(arg1 *pgx.Batch, arg2 *repo.LessonReportDetailDTO) {
	_ = r.Called(arg1, arg2)
	return
}

func (r *MockLessonReportDetailRepo) UpsertQueueWithVersion(arg1 *pgx.Batch, arg2 *repo.LessonReportDetailDTO) {
	_ = r.Called(arg1, arg2)
	return
}

func (r *MockLessonReportDetailRepo) UpsertWithVersion(arg1 context.Context, arg2 database.Ext, arg3 string, arg4 domain.LessonReportDetails) error {
	args := r.Called(arg1, arg2, arg3, arg4)
	return args.Error(0)
}
