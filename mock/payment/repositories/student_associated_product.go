// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/payment/entities"
)

type MockStudentAssociatedProductRepo struct {
	mock.Mock
}

func (r *MockStudentAssociatedProductRepo) CountAssociatedProductIDsByStudentProductID(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (int, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(int), args.Error(1)
}

func (r *MockStudentAssociatedProductRepo) Create(arg1 context.Context, arg2 database.QueryExecer, arg3 entities.StudentAssociatedProduct) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockStudentAssociatedProductRepo) Delete(arg1 context.Context, arg2 database.QueryExecer, arg3 entities.StudentAssociatedProduct) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockStudentAssociatedProductRepo) GetAssociatedProductIDsByStudentProductID(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 int64, arg5 int64) ([]string, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]string), args.Error(1)
}

func (r *MockStudentAssociatedProductRepo) GetMapAssociatedProducts(arg1 context.Context, arg2 database.QueryExecer, arg3 string) (map[string]string, error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(map[string]string), args.Error(1)
}
