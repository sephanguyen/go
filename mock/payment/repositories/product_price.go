// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/manabie-com/backend/internal/golibs/database"
	"github.com/manabie-com/backend/internal/payment/entities"
)

type MockProductPriceRepo struct {
	mock.Mock
}

func (r *MockProductPriceRepo) Create(arg1 context.Context, arg2 database.QueryExecer, arg3 *entities.ProductPrice) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockProductPriceRepo) DeleteByProductID(arg1 context.Context, arg2 database.QueryExecer, arg3 pgtype.Text) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}

func (r *MockProductPriceRepo) GetByProductIDAndBillingSchedulePeriodIDAndPriceType(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string, arg5 string) (entities.ProductPrice, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Get(0).(entities.ProductPrice), args.Error(1)
}

func (r *MockProductPriceRepo) GetByProductIDAndBillingSchedulePeriodIDAndQuantityAndPriceType(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string, arg5 int32, arg6 string) (entities.ProductPrice, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5, arg6)
	return args.Get(0).(entities.ProductPrice), args.Error(1)
}

func (r *MockProductPriceRepo) GetByProductIDAndPriceType(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 string) ([]entities.ProductPrice, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]entities.ProductPrice), args.Error(1)
}

func (r *MockProductPriceRepo) GetByProductIDAndQuantityAndPriceType(arg1 context.Context, arg2 database.QueryExecer, arg3 string, arg4 int32, arg5 string) (entities.ProductPrice, error) {
	args := r.Called(arg1, arg2, arg3, arg4, arg5)
	return args.Get(0).(entities.ProductPrice), args.Error(1)
}
