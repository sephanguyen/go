// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	npb "github.com/manabie-com/backend/pkg/manabuf/nats/v1"
	mock "github.com/stretchr/testify/mock"
)

// ISubscriptionServiceForInternalService is an autogenerated mock type for the ISubscriptionServiceForInternalService type
type ISubscriptionServiceForInternalService struct {
	mock.Mock
}

// PublishStudentPackageForCreateOrder provides a mock function with given fields: ctx, eventMessages
func (_m *ISubscriptionServiceForInternalService) PublishStudentPackageForCreateOrder(ctx context.Context, eventMessages []*npb.EventStudentPackage) error {
	ret := _m.Called(ctx, eventMessages)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []*npb.EventStudentPackage) error); ok {
		r0 = rf(ctx, eventMessages)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewISubscriptionServiceForInternalService interface {
	mock.TestingT
	Cleanup(func())
}

// NewISubscriptionServiceForInternalService creates a new instance of ISubscriptionServiceForInternalService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewISubscriptionServiceForInternalService(t mockConstructorTestingTNewISubscriptionServiceForInternalService) *ISubscriptionServiceForInternalService {
	mock := &ISubscriptionServiceForInternalService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
