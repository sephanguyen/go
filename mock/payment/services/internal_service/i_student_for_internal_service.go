// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/manabie-com/backend/internal/golibs/database"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// IStudentForInternalService is an autogenerated mock type for the IStudentForInternalService type
type IStudentForInternalService struct {
	mock.Mock
}

// CheckIsEnrolledInOrgByStudentIDAndTime provides a mock function with given fields: ctx, db, studentID, _a3
func (_m *IStudentForInternalService) CheckIsEnrolledInOrgByStudentIDAndTime(ctx context.Context, db database.QueryExecer, studentID string, _a3 time.Time) (bool, error) {
	ret := _m.Called(ctx, db, studentID, _a3)

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string, time.Time) (bool, error)); ok {
		return rf(ctx, db, studentID, _a3)
	}
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string, time.Time) bool); ok {
		r0 = rf(ctx, db, studentID, _a3)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(context.Context, database.QueryExecer, string, time.Time) error); ok {
		r1 = rf(ctx, db, studentID, _a3)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIStudentForInternalService interface {
	mock.TestingT
	Cleanup(func())
}

// NewIStudentForInternalService creates a new instance of IStudentForInternalService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIStudentForInternalService(t mockConstructorTestingTNewIStudentForInternalService) *IStudentForInternalService {
	mock := &IStudentForInternalService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
