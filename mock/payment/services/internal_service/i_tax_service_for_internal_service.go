// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/manabie-com/backend/internal/golibs/database"
	entities "github.com/manabie-com/backend/internal/payment/entities"

	mock "github.com/stretchr/testify/mock"
)

// ITaxServiceForInternalService is an autogenerated mock type for the ITaxServiceForInternalService type
type ITaxServiceForInternalService struct {
	mock.Mock
}

// GetTaxByID provides a mock function with given fields: ctx, db, taxID
func (_m *ITaxServiceForInternalService) GetTaxByID(ctx context.Context, db database.QueryExecer, taxID string) (entities.Tax, error) {
	ret := _m.Called(ctx, db, taxID)

	var r0 entities.Tax
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string) (entities.Tax, error)); ok {
		return rf(ctx, db, taxID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string) entities.Tax); ok {
		r0 = rf(ctx, db, taxID)
	} else {
		r0 = ret.Get(0).(entities.Tax)
	}

	if rf, ok := ret.Get(1).(func(context.Context, database.QueryExecer, string) error); ok {
		r1 = rf(ctx, db, taxID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewITaxServiceForInternalService interface {
	mock.TestingT
	Cleanup(func())
}

// NewITaxServiceForInternalService creates a new instance of ITaxServiceForInternalService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewITaxServiceForInternalService(t mockConstructorTestingTNewITaxServiceForInternalService) *ITaxServiceForInternalService {
	mock := &ITaxServiceForInternalService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
