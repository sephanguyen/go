// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	elastic "github.com/olivere/elastic/v7"
	mock "github.com/stretchr/testify/mock"
)

// Condition is an autogenerated mock type for the Condition type
type Condition struct {
	mock.Mock
}

// BuildQuery provides a mock function with given fields:
func (_m *Condition) BuildQuery() elastic.Query {
	ret := _m.Called()

	var r0 elastic.Query
	if rf, ok := ret.Get(0).(func() elastic.Query); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(elastic.Query)
		}
	}

	return r0
}

// String provides a mock function with given fields:
func (_m *Condition) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewCondition interface {
	mock.TestingT
	Cleanup(func())
}

// NewCondition creates a new instance of Condition. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCondition(t mockConstructorTestingTNewCondition) *Condition {
	mock := &Condition{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
