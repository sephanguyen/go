// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	npb "github.com/manabie-com/backend/pkg/manabuf/nats/v1"
	mock "github.com/stretchr/testify/mock"
)

// ISubscriptionServiceForCourseMgMte is an autogenerated mock type for the ISubscriptionServiceForCourseMgMte type
type ISubscriptionServiceForCourseMgMte struct {
	mock.Mock
}

// PublishStudentClass provides a mock function with given fields: ctx, eventMessages
func (_m *ISubscriptionServiceForCourseMgMte) PublishStudentClass(ctx context.Context, eventMessages []*npb.EventStudentPackageV2) error {
	ret := _m.Called(ctx, eventMessages)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []*npb.EventStudentPackageV2) error); ok {
		r0 = rf(ctx, eventMessages)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PublishStudentPackage provides a mock function with given fields: ctx, eventMessages
func (_m *ISubscriptionServiceForCourseMgMte) PublishStudentPackage(ctx context.Context, eventMessages []*npb.EventStudentPackage) error {
	ret := _m.Called(ctx, eventMessages)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []*npb.EventStudentPackage) error); ok {
		r0 = rf(ctx, eventMessages)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewISubscriptionServiceForCourseMgMte interface {
	mock.TestingT
	Cleanup(func())
}

// NewISubscriptionServiceForCourseMgMte creates a new instance of ISubscriptionServiceForCourseMgMte. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewISubscriptionServiceForCourseMgMte(t mockConstructorTestingTNewISubscriptionServiceForCourseMgMte) *ISubscriptionServiceForCourseMgMte {
	mock := &ISubscriptionServiceForCourseMgMte{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
