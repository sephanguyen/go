// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/manabie-com/backend/internal/golibs/database"
	entities "github.com/manabie-com/backend/internal/payment/entities"

	mock "github.com/stretchr/testify/mock"
)

// IPackageCourseRepoForDiscountEventSubscription is an autogenerated mock type for the IPackageCourseRepoForDiscountEventSubscription type
type IPackageCourseRepoForDiscountEventSubscription struct {
	mock.Mock
}

// GetByPackageIDAndCourseID provides a mock function with given fields: ctx, db, packageID, courseID
func (_m *IPackageCourseRepoForDiscountEventSubscription) GetByPackageIDAndCourseID(ctx context.Context, db database.QueryExecer, packageID string, courseID string) (entities.PackageCourse, error) {
	ret := _m.Called(ctx, db, packageID, courseID)

	var r0 entities.PackageCourse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string, string) (entities.PackageCourse, error)); ok {
		return rf(ctx, db, packageID, courseID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string, string) entities.PackageCourse); ok {
		r0 = rf(ctx, db, packageID, courseID)
	} else {
		r0 = ret.Get(0).(entities.PackageCourse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, database.QueryExecer, string, string) error); ok {
		r1 = rf(ctx, db, packageID, courseID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIPackageCourseRepoForDiscountEventSubscription interface {
	mock.TestingT
	Cleanup(func())
}

// NewIPackageCourseRepoForDiscountEventSubscription creates a new instance of IPackageCourseRepoForDiscountEventSubscription. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIPackageCourseRepoForDiscountEventSubscription(t mockConstructorTestingTNewIPackageCourseRepoForDiscountEventSubscription) *IPackageCourseRepoForDiscountEventSubscription {
	mock := &IPackageCourseRepoForDiscountEventSubscription{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
