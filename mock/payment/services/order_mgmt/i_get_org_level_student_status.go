// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/manabie-com/backend/internal/golibs/database"
	mock "github.com/stretchr/testify/mock"

	pmpb "github.com/manabie-com/backend/pkg/manabuf/payment/v1"
)

// IGetOrgLevelStudentStatus is an autogenerated mock type for the IGetOrgLevelStudentStatus type
type IGetOrgLevelStudentStatus struct {
	mock.Mock
}

// GetEnrolledStatusInOrgByStudentInfo provides a mock function with given fields: ctx, db, req
func (_m *IGetOrgLevelStudentStatus) GetEnrolledStatusInOrgByStudentInfo(ctx context.Context, db database.QueryExecer, req *pmpb.GetOrgLevelStudentStatusRequest) ([]*pmpb.GetOrgLevelStudentStatusResponse_OrgLevelStudentStatus, error) {
	ret := _m.Called(ctx, db, req)

	var r0 []*pmpb.GetOrgLevelStudentStatusResponse_OrgLevelStudentStatus
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, *pmpb.GetOrgLevelStudentStatusRequest) ([]*pmpb.GetOrgLevelStudentStatusResponse_OrgLevelStudentStatus, error)); ok {
		return rf(ctx, db, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, *pmpb.GetOrgLevelStudentStatusRequest) []*pmpb.GetOrgLevelStudentStatusResponse_OrgLevelStudentStatus); ok {
		r0 = rf(ctx, db, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*pmpb.GetOrgLevelStudentStatusResponse_OrgLevelStudentStatus)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, database.QueryExecer, *pmpb.GetOrgLevelStudentStatusRequest) error); ok {
		r1 = rf(ctx, db, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIGetOrgLevelStudentStatus interface {
	mock.TestingT
	Cleanup(func())
}

// NewIGetOrgLevelStudentStatus creates a new instance of IGetOrgLevelStudentStatus. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIGetOrgLevelStudentStatus(t mockConstructorTestingTNewIGetOrgLevelStudentStatus) *IGetOrgLevelStudentStatus {
	mock := &IGetOrgLevelStudentStatus{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
