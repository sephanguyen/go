// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/manabie-com/backend/internal/golibs/database"
	mock "github.com/stretchr/testify/mock"
)

// IBillItemServiceForUpdateOrderReviewFlag is an autogenerated mock type for the IBillItemServiceForUpdateOrderReviewFlag type
type IBillItemServiceForUpdateOrderReviewFlag struct {
	mock.Mock
}

// UpdateReviewFlagForBillItem provides a mock function with given fields: ctx, db, orderID, isReviewFlag
func (_m *IBillItemServiceForUpdateOrderReviewFlag) UpdateReviewFlagForBillItem(ctx context.Context, db database.QueryExecer, orderID string, isReviewFlag bool) error {
	ret := _m.Called(ctx, db, orderID, isReviewFlag)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string, bool) error); ok {
		r0 = rf(ctx, db, orderID, isReviewFlag)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIBillItemServiceForUpdateOrderReviewFlag interface {
	mock.TestingT
	Cleanup(func())
}

// NewIBillItemServiceForUpdateOrderReviewFlag creates a new instance of IBillItemServiceForUpdateOrderReviewFlag. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIBillItemServiceForUpdateOrderReviewFlag(t mockConstructorTestingTNewIBillItemServiceForUpdateOrderReviewFlag) *IBillItemServiceForUpdateOrderReviewFlag {
	mock := &IBillItemServiceForUpdateOrderReviewFlag{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
