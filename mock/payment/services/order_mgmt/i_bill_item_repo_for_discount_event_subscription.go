// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/manabie-com/backend/internal/golibs/database"
	entities "github.com/manabie-com/backend/internal/payment/entities"

	mock "github.com/stretchr/testify/mock"
)

// IBillItemRepoForDiscountEventSubscription is an autogenerated mock type for the IBillItemRepoForDiscountEventSubscription type
type IBillItemRepoForDiscountEventSubscription struct {
	mock.Mock
}

// GetBillItemByStudentProductIDAndPeriodID provides a mock function with given fields: ctx, db, studentProductID, periodID
func (_m *IBillItemRepoForDiscountEventSubscription) GetBillItemByStudentProductIDAndPeriodID(ctx context.Context, db database.QueryExecer, studentProductID string, periodID string) (entities.BillItem, error) {
	ret := _m.Called(ctx, db, studentProductID, periodID)

	var r0 entities.BillItem
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string, string) (entities.BillItem, error)); ok {
		return rf(ctx, db, studentProductID, periodID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string, string) entities.BillItem); ok {
		r0 = rf(ctx, db, studentProductID, periodID)
	} else {
		r0 = ret.Get(0).(entities.BillItem)
	}

	if rf, ok := ret.Get(1).(func(context.Context, database.QueryExecer, string, string) error); ok {
		r1 = rf(ctx, db, studentProductID, periodID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIBillItemRepoForDiscountEventSubscription interface {
	mock.TestingT
	Cleanup(func())
}

// NewIBillItemRepoForDiscountEventSubscription creates a new instance of IBillItemRepoForDiscountEventSubscription. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIBillItemRepoForDiscountEventSubscription(t mockConstructorTestingTNewIBillItemRepoForDiscountEventSubscription) *IBillItemRepoForDiscountEventSubscription {
	mock := &IBillItemRepoForDiscountEventSubscription{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
