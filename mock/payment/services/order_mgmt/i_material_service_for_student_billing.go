// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/manabie-com/backend/internal/golibs/database"
	entities "github.com/manabie-com/backend/internal/payment/entities"

	mock "github.com/stretchr/testify/mock"
)

// IMaterialServiceForStudentBilling is an autogenerated mock type for the IMaterialServiceForStudentBilling type
type IMaterialServiceForStudentBilling struct {
	mock.Mock
}

// GetMaterialByID provides a mock function with given fields: ctx, db, materialID
func (_m *IMaterialServiceForStudentBilling) GetMaterialByID(ctx context.Context, db database.QueryExecer, materialID string) (entities.Material, error) {
	ret := _m.Called(ctx, db, materialID)

	var r0 entities.Material
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string) (entities.Material, error)); ok {
		return rf(ctx, db, materialID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, string) entities.Material); ok {
		r0 = rf(ctx, db, materialID)
	} else {
		r0 = ret.Get(0).(entities.Material)
	}

	if rf, ok := ret.Get(1).(func(context.Context, database.QueryExecer, string) error); ok {
		r1 = rf(ctx, db, materialID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIMaterialServiceForStudentBilling interface {
	mock.TestingT
	Cleanup(func())
}

// NewIMaterialServiceForStudentBilling creates a new instance of IMaterialServiceForStudentBilling. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIMaterialServiceForStudentBilling(t mockConstructorTestingTNewIMaterialServiceForStudentBilling) *IMaterialServiceForStudentBilling {
	mock := &IMaterialServiceForStudentBilling{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
