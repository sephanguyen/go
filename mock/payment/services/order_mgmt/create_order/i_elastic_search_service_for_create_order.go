// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	utils "github.com/manabie-com/backend/internal/payment/utils"
)

// IElasticSearchServiceForCreateOrder is an autogenerated mock type for the IElasticSearchServiceForCreateOrder type
type IElasticSearchServiceForCreateOrder struct {
	mock.Mock
}

type IElasticSearchServiceForCreateOrder_Expecter struct {
	mock *mock.Mock
}

func (_m *IElasticSearchServiceForCreateOrder) EXPECT() *IElasticSearchServiceForCreateOrder_Expecter {
	return &IElasticSearchServiceForCreateOrder_Expecter{mock: &_m.Mock}
}

// InsertOrderData provides a mock function with given fields: ctx, data
func (_m *IElasticSearchServiceForCreateOrder) InsertOrderData(ctx context.Context, data utils.ElasticSearchData) error {
	ret := _m.Called(ctx, data)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, utils.ElasticSearchData) error); ok {
		r0 = rf(ctx, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IElasticSearchServiceForCreateOrder_InsertOrderData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InsertOrderData'
type IElasticSearchServiceForCreateOrder_InsertOrderData_Call struct {
	*mock.Call
}

// InsertOrderData is a helper method to define mock.On call
//   - ctx context.Context
//   - data utils.ElasticSearchData
func (_e *IElasticSearchServiceForCreateOrder_Expecter) InsertOrderData(ctx interface{}, data interface{}) *IElasticSearchServiceForCreateOrder_InsertOrderData_Call {
	return &IElasticSearchServiceForCreateOrder_InsertOrderData_Call{Call: _e.mock.On("InsertOrderData", ctx, data)}
}

func (_c *IElasticSearchServiceForCreateOrder_InsertOrderData_Call) Run(run func(ctx context.Context, data utils.ElasticSearchData)) *IElasticSearchServiceForCreateOrder_InsertOrderData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(utils.ElasticSearchData))
	})
	return _c
}

func (_c *IElasticSearchServiceForCreateOrder_InsertOrderData_Call) Return(err error) *IElasticSearchServiceForCreateOrder_InsertOrderData_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *IElasticSearchServiceForCreateOrder_InsertOrderData_Call) RunAndReturn(run func(context.Context, utils.ElasticSearchData) error) *IElasticSearchServiceForCreateOrder_InsertOrderData_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewIElasticSearchServiceForCreateOrder interface {
	mock.TestingT
	Cleanup(func())
}

// NewIElasticSearchServiceForCreateOrder creates a new instance of IElasticSearchServiceForCreateOrder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIElasticSearchServiceForCreateOrder(t mockConstructorTestingTNewIElasticSearchServiceForCreateOrder) *IElasticSearchServiceForCreateOrder {
	mock := &IElasticSearchServiceForCreateOrder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
