// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/manabie-com/backend/internal/golibs/database"
	entities "github.com/manabie-com/backend/internal/payment/entities"

	mock "github.com/stretchr/testify/mock"

	utils "github.com/manabie-com/backend/internal/payment/utils"
)

// IDiscountServiceForRecurringBilling is an autogenerated mock type for the IDiscountServiceForRecurringBilling type
type IDiscountServiceForRecurringBilling struct {
	mock.Mock
}

// IsValidDiscountForRecurringBilling provides a mock function with given fields: ctx, db, orderItemData, proRatedBillItem, ratioOfProRatedBillingItem, normalBillItem, discountName
func (_m *IDiscountServiceForRecurringBilling) IsValidDiscountForRecurringBilling(ctx context.Context, db database.QueryExecer, orderItemData utils.OrderItemData, proRatedBillItem utils.BillingItemData, ratioOfProRatedBillingItem entities.BillingRatio, normalBillItem []utils.BillingItemData, discountName *string) error {
	ret := _m.Called(ctx, db, orderItemData, proRatedBillItem, ratioOfProRatedBillingItem, normalBillItem, discountName)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, database.QueryExecer, utils.OrderItemData, utils.BillingItemData, entities.BillingRatio, []utils.BillingItemData, *string) error); ok {
		r0 = rf(ctx, db, orderItemData, proRatedBillItem, ratioOfProRatedBillingItem, normalBillItem, discountName)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIDiscountServiceForRecurringBilling interface {
	mock.TestingT
	Cleanup(func())
}

// NewIDiscountServiceForRecurringBilling creates a new instance of IDiscountServiceForRecurringBilling. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIDiscountServiceForRecurringBilling(t mockConstructorTestingTNewIDiscountServiceForRecurringBilling) *IDiscountServiceForRecurringBilling {
	mock := &IDiscountServiceForRecurringBilling{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
