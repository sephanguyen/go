// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	entities "github.com/manabie-com/backend/internal/payment/entities"
	mock "github.com/stretchr/testify/mock"
)

// IDiscountServiceForProductPrice is an autogenerated mock type for the IDiscountServiceForProductPrice type
type IDiscountServiceForProductPrice struct {
	mock.Mock
}

// CalculatorDiscountPrice provides a mock function with given fields: discount, price, billItem
func (_m *IDiscountServiceForProductPrice) CalculatorDiscountPrice(discount entities.Discount, price float32, billItem *entities.BillItem) (float32, error) {
	ret := _m.Called(discount, price, billItem)

	var r0 float32
	var r1 error
	if rf, ok := ret.Get(0).(func(entities.Discount, float32, *entities.BillItem) (float32, error)); ok {
		return rf(discount, price, billItem)
	}
	if rf, ok := ret.Get(0).(func(entities.Discount, float32, *entities.BillItem) float32); ok {
		r0 = rf(discount, price, billItem)
	} else {
		r0 = ret.Get(0).(float32)
	}

	if rf, ok := ret.Get(1).(func(entities.Discount, float32, *entities.BillItem) error); ok {
		r1 = rf(discount, price, billItem)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIDiscountServiceForProductPrice interface {
	mock.TestingT
	Cleanup(func())
}

// NewIDiscountServiceForProductPrice creates a new instance of IDiscountServiceForProductPrice. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIDiscountServiceForProductPrice(t mockConstructorTestingTNewIDiscountServiceForProductPrice) *IDiscountServiceForProductPrice {
	mock := &IDiscountServiceForProductPrice{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
