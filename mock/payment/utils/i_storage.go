// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// IStorage is an autogenerated mock type for the IStorage type
type IStorage struct {
	mock.Mock
}

// UploadFromFile provides a mock function with given fields: ctx, file, fileID, contentType, fileSize
func (_m *IStorage) UploadFromFile(ctx context.Context, file io.Reader, fileID string, contentType string, fileSize int64) (string, error) {
	ret := _m.Called(ctx, file, fileID, contentType, fileSize)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, io.Reader, string, string, int64) (string, error)); ok {
		return rf(ctx, file, fileID, contentType, fileSize)
	}
	if rf, ok := ret.Get(0).(func(context.Context, io.Reader, string, string, int64) string); ok {
		r0 = rf(ctx, file, fileID, contentType, fileSize)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, io.Reader, string, string, int64) error); ok {
		r1 = rf(ctx, file, fileID, contentType, fileSize)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIStorage interface {
	mock.TestingT
	Cleanup(func())
}

// NewIStorage creates a new instance of IStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIStorage(t mockConstructorTestingTNewIStorage) *IStorage {
	mock := &IStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
