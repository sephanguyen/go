- name: allowed-queries
  definition:
    queries:
      - name: queryVideoIdByTypeForTest
        query: |
          query queryVideoIdByTypeForTest ($type: String!) {
          	media(where: {type:{_eq:$type}}, limit: 2) {
          		media_id
          		name
          		resource
          	}
          }
      - name: queryStudentIdByStudentEmailForTest
        query: |
          query queryStudentIdByStudentEmailForTest ($email: String!) {
          	students(where: {user:{email:{_eq:$email}}}, limit: 1) {
          		student_id
          	}
          }
      - name: CityOne
        query: |
          query CityOne ($city_id: Int = 0) {
          	cities(where: {city_id:{_eq:$city_id}}) {
          		... CityAttrs
          	}
          }
          fragment CityAttrs on cities {
          	city_id
          	country
          	display_order
          	name
          }
      - name: CityMany
        query: |
          query CityMany ($country: String, $city_id: Int, $name: String) {
          	cities(where: {country:{_eq:$country},city_id:{_eq:$city_id},name:{_ilike:$name}}) {
          		... CityAttrs
          	}
          }
          fragment CityAttrs on cities {
          	city_id
          	country
          	display_order
          	name
          }
      - name: ClassTitle
        query: |
          query ClassTitle ($class_id: Int!) {
          	classes(where: {class_id:{_eq:$class_id}}) {
          		class_id
          		name
          		class_code
          	}
          }
      - name: ClassOne
        query: |
          query ClassOne ($class_id: Int!) {
          	classes(where: {class_id:{_eq:$class_id}}) {
          		... ClassAttrs
          		avatar
          		status
          		subjects
          		grades
          		class_members(order_by: {is_owner:asc}, where: {status:{_eq:"CLASS_MEMBER_STATUS_ACTIVE"}}) {
          			class_member_id
          			user_id
          			status
          			is_owner
          		}
          		class_members_aggregate(where: {status:{_eq:"CLASS_MEMBER_STATUS_ACTIVE"},is_owner:{_eq:false}}) {
          			aggregate {
          				count
          			}
          		}
          	}
          }
          fragment ClassAttrs on classes {
          	class_id
          	class_code
          	name
          	school_id
          	created_at
          }
      - name: ClassMany
        query: |
          query ClassMany ($class_id: [Int!] = []) {
          	classes(where: {class_id:{_in:$class_id}}) {
          		... ClassAttrs
          	}
          }
          fragment ClassAttrs on classes {
          	class_id
          	class_code
          	name
          	school_id
          	created_at
          }
      - name: ClassList
        query: |
          query ClassList ($subjects: _text, $name: String, $grades: _int4, $school_name: String, $school_id: Int, $limit: Int = 30, $offset: Int = 0) {
          	classes(limit: $limit, offset: $offset, order_by: {created_at:desc,class_id:desc}, where: {subjects:{_eq:$subjects},name:{_ilike:$name},grades:{_eq:$grades},school:{name:{_ilike:$school_name},school_id:{_eq:$school_id}}}) {
          		... ClassAttrs
          		school {
          			name
          		}
          	}
          	classes_aggregate(where: {subjects:{_eq:$subjects},name:{_ilike:$name},grades:{_eq:$grades},school:{name:{_ilike:$school_name},school_id:{_eq:$school_id}}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment ClassAttrs on classes {
          	class_id
          	class_code
          	name
          	school_id
          	created_at
          }
      - name: DistrictOne
        query: |
          query DistrictOne ($district_id: Int = 0) {
          	districts(where: {district_id:{_eq:$district_id}}) {
          		... DistrictAttrs
          	}
          }
          fragment DistrictAttrs on districts {
          	district_id
          	country
          	city_id
          	name
          }
      - name: DistrictMany
        query: |
          query DistrictMany ($country: String, $district_id: Int, $name: String, $city_id: Int) {
          	districts(where: {country:{_eq:$country},city_id:{_eq:$city_id},district_id:{_eq:$district_id},name:{_ilike:$name}}) {
          		... DistrictAttrs
          	}
          }
          fragment DistrictAttrs on districts {
          	district_id
          	country
          	city_id
          	name
          }
      - name: InfoNotificationMsgsOne
        query: |
          query InfoNotificationMsgsOne ($notification_msg_id: String!) {
          	info_notification_msgs(where: {notification_msg_id:{_eq:$notification_msg_id}}) {
          		... InfoNotificationMsgsAttrs
          	}
          }
          fragment InfoNotificationMsgsAttrs on info_notification_msgs {
          	notification_msg_id
          	title
          	content
          	media_ids
          	created_at
          	updated_at
          }
      - name: InfoNotificationMsgsTitles
        query: |
          query InfoNotificationMsgsTitles ($notification_msg_id: [String!] = []) {
          	info_notification_msgs(where: {notification_msg_id:{_in:$notification_msg_id}}) {
          		notification_msg_id
          		title
          	}
          }
      - name: InfoNotificationsCountRead
        query: |
          query InfoNotificationsCountRead ($notification_id: [String!] = []) {
          	info_notifications(order_by: {updated_at:desc}, where: {notification_id:{_in:$notification_id}}) {
          		notification_id
          		all_receiver_aggregate: users_info_notifications_aggregate {
          			aggregate {
          				count
          			}
          		}
          		read_aggregate: users_info_notifications_aggregate(where: {status:{_eq:"USER_NOTIFICATION_STATUS_READ"}}) {
          			aggregate {
          				count
          			}
          		}
          	}
          }
      - name: InfoNotificationCountsByStatus
        query: |
          query InfoNotificationCountsByStatus {
          	draft: info_notifications_aggregate(where: {status:{_eq:"NOTIFICATION_STATUS_DRAFT"}}) {
          		aggregate {
          			count
          		}
          	}
          	sent: info_notifications_aggregate(where: {status:{_eq:"NOTIFICATION_STATUS_SENT"}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: LessonGroupsList
        query: |
          query LessonGroupsList ($course_id: String!, $limit: Int = 10, $offset: Int = 0) {
          	lesson_groups(limit: $limit, offset: $offset, order_by: {created_at:desc}, where: {course_id:{_eq:$course_id}}) {
          		... LessonGroupAttrs
          	}
          	lesson_groups_aggregate(where: {course_id:{_eq:$course_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment LessonGroupAttrs on lesson_groups {
          	media_ids
          	lesson_group_id
          }
      - name: LessonGroupById
        query: |
          query LessonGroupById ($lesson_group_id: String!) {
          	lesson_groups(where: {lesson_group_id:{_eq:$lesson_group_id}}) {
          		... LessonGroupAttrs
          	}
          }
          fragment LessonGroupAttrs on lesson_groups {
          	media_ids
          	lesson_group_id
          }
      - name: MediasOne
        query: |
          query MediasOne ($media_id: String = "") {
          	media(where: {media_id:{_eq:$media_id}}) {
          		... MediaAttrs
          	}
          }
          fragment MediaAttrs on media {
          	media_id
          	resource
          	type
          	name
          }
      - name: MediasList
        query: |
          query MediasList ($limit: Int = 10, $offset: Int = 0, $media_id: [String!], $resource: String, $type: String, $converted_images: Boolean, $comments: jsonb) {
          	media(limit: $limit, offset: $offset, order_by: {created_at:desc}, where: {resource:{_eq:$resource},type:{_eq:$type},media_id:{_in:$media_id},converted_images:{_is_null:$converted_images},comments:{_contains:$comments}}) {
          		... MediaAttrs
          	}
          	media_aggregate(where: {resource:{_eq:$resource},type:{_eq:$type},media_id:{_in:$media_id},converted_images:{_is_null:$converted_images},comments:{_contains:$comments}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment MediaAttrs on media {
          	media_id
          	resource
          	type
          	name
          }
      - name: ParentsMany
        query: |
          query ParentsMany ($student_ids: [String!]!) {
          	student_parents(where: {student_id:{_in:$student_ids}}) {
          		... StudentParentAttrs
          		parent_user {
          			name
          			email
          			phone_number
          			country
          		}
          	}
          }
          fragment StudentParentAttrs on student_parents {
          	parent_id
          	student_id
          	relationship
          	parent_user {
          		name
          		email
          		phone_number
          		country
          	}
          }
      - name: PlansMany
        query: |
          query PlansMany ($country: String!, $plan_id: [String!]) {
          	plans(order_by: {plan_id:asc,created_at:desc}, where: {country:{_eq:$country},plan_id:{_in:$plan_id}}) {
          		... PlansAttrs
          	}
          }
          fragment PlansAttrs on plans {
          	plan_id
          	country
          }
      - name: SchoolAdminsTitle
        query: |
          query SchoolAdminsTitle ($school_admin_id: String = "") {
          	school_admins(where: {school_admin_id:{_eq:$school_admin_id}}) {
          		... SchoolAdminAttrs
          	}
          }
          fragment SchoolAdminAttrs on school_admins {
          	users {
          		... UserAttrs
          	}
          	school_admin_id
          	school_admin_id
          	created_at
          	updated_at
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: SchoolAdminsOne
        query: |
          query SchoolAdminsOne ($school_admin_id: String = "") {
          	school_admins(where: {school_admin_id:{_eq:$school_admin_id}}) {
          		... SchoolAdminAttrs
          	}
          }
          fragment SchoolAdminAttrs on school_admins {
          	users {
          		... UserAttrs
          	}
          	school_admin_id
          	school_admin_id
          	created_at
          	updated_at
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: SchoolAdminsList
        query: |
          query SchoolAdminsList ($limit: Int = 10, $offset: Int = 0, $school_admin_id: [String!], $school_id: [Int!], $name: String) {
          	school_admins(limit: $limit, offset: $offset, order_by: {created_at:desc,school_admin_id:desc}, where: {school_id:{_in:$school_id},school_admin_id:{_in:$school_admin_id},users:{name:{_ilike:$name}}}) {
          		... SchoolAdminAttrs
          	}
          	school_admins_aggregate(where: {school_id:{_in:$school_id},school_admin_id:{_in:$school_admin_id},users:{name:{_ilike:$name}}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment SchoolAdminAttrs on school_admins {
          	users {
          		... UserAttrs
          	}
          	school_admin_id
          	school_admin_id
          	created_at
          	updated_at
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: SchoolAdminsMany
        query: |
          query SchoolAdminsMany ($school_admin_id: [String!] = []) {
          	school_admins(where: {school_admin_id:{_in:$school_admin_id}}) {
          		... SchoolAdminAttrs
          	}
          }
          fragment SchoolAdminAttrs on school_admins {
          	users {
          		... UserAttrs
          	}
          	school_admin_id
          	school_admin_id
          	created_at
          	updated_at
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: SchoolAdminsManyReference
        query: |
          query SchoolAdminsManyReference ($limit: Int = 30, $offset: Int = 0, $school_id: [Int!] = []) {
          	school_admins(limit: $limit, offset: $offset, order_by: {created_at:desc}, where: {school_id:{_in:$school_id}}) {
          		... SchoolAdminAttrs
          	}
          	school_admins_aggregate(where: {school_id:{_in:$school_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment SchoolAdminAttrs on school_admins {
          	users {
          		... UserAttrs
          	}
          	school_admin_id
          	school_admin_id
          	created_at
          	updated_at
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: SchoolConfigsOne
        query: |
          query SchoolConfigsOne ($school_id: Int = 0) {
          	school_configs(where: {school_id:{_eq:$school_id}}) {
          		... SchoolConfigAttrs
          	}
          }
          fragment SchoolConfigAttrs on school_configs {
          	country
          	created_at
          	plan_duration
          	plan_expired_at
          	plan_id
          	privileges
          	school_id
          }
      - name: SchoolConfigsList
        query: |
          query SchoolConfigsList ($limit: Int = 10, $offset: Int = 0, $school_id: [Int!]) {
          	school_configs(limit: $limit, offset: $offset, order_by: {created_at:desc,school_id:desc}, where: {school_id:{_in:$school_id}}) {
          		... SchoolConfigAttrs
          	}
          	school_configs_aggregate(where: {school_id:{_in:$school_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment SchoolConfigAttrs on school_configs {
          	country
          	created_at
          	plan_duration
          	plan_expired_at
          	plan_id
          	privileges
          	school_id
          }
      - name: SchoolConfigsMany
        query: |
          query SchoolConfigsMany ($school_id: [Int!] = []) {
          	school_configs(where: {school_id:{_in:$school_id}}) {
          		... SchoolConfigAttrs
          	}
          }
          fragment SchoolConfigAttrs on school_configs {
          	country
          	created_at
          	plan_duration
          	plan_expired_at
          	plan_id
          	privileges
          	school_id
          }
      - name: SchoolsTitle
        query: |
          query SchoolsTitle ($school_id: Int = 0) {
          	schools(where: {school_id:{_eq:$school_id}}) {
          		school_id
          		name
          	}
          }
      - name: SchoolsOne
        query: |
          query SchoolsOne ($school_id: Int = 0) {
          	schools(where: {school_id:{_eq:$school_id}}) {
          		... SchoolAttrs
          		point
          		classes_aggregate {
          			aggregate {
          				count
          			}
          		}
          	}
          }
          fragment SchoolAttrs on schools {
          	school_id
          	city_id
          	district_id
          	name
          	country
          	phone_number
          	point
          	is_system_school
          }
      - name: SchoolsList
        query: |
          query SchoolsList ($limit: Int = 10, $offset: Int = 0, $name: String, $phone_number: String, $school_id: [Int!], $is_system_school: Boolean) {
          	schools(limit: $limit, offset: $offset, order_by: {created_at:desc}, where: {_or:[{name:{_ilike:$name}},{phone_number:{_ilike:$phone_number}}],school_id:{_in:$school_id},is_system_school:{_eq:$is_system_school}}) {
          		... SchoolAttrs
          	}
          	schools_aggregate(where: {_or:[{name:{_ilike:$name}},{phone_number:{_ilike:$phone_number}}],school_id:{_in:$school_id},is_system_school:{_eq:$is_system_school}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment SchoolAttrs on schools {
          	school_id
          	city_id
          	district_id
          	name
          	country
          	phone_number
          	point
          	is_system_school
          }
      - name: SchoolsMany
        query: |
          query SchoolsMany ($school_id: [Int!] = []) {
          	schools(where: {school_id:{_in:$school_id}}) {
          		school_id
          		name
          		country
          		city {
          			name
          		}
          		district {
          			city_id
          			name
          		}
          		point
          		phone_number
          		is_system_school
          	}
          }
      - name: SchoolsManyReference
        query: |
          query SchoolsManyReference ($name: String, $phone_number: String, $limit: Int = 30, $offset: Int = 0) {
          	schools(limit: $limit, offset: $offset, order_by: {name:asc,created_at:desc}, where: {name:{_ilike:$name},phone_number:{_ilike:$phone_number}}) {
          		school_id
          		name
          		country
          		city {
          			name
          		}
          		district {
          			city_id
          			name
          		}
          		point
          		phone_number
          		is_system_school
          	}
          	schools_aggregate(where: {name:{_ilike:$name},phone_number:{_ilike:$phone_number}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: GradesOfStudent
        query: |
          query GradesOfStudent ($school_id: Int!) {
          	students(distinct_on: current_grade, where: {current_grade:{_is_null:false},school_id:{_eq:$school_id}}, order_by: {current_grade:asc}) {
          		current_grade
          	}
          }
      - name: StudentsListWithFilter
        query: |
          query StudentsListWithFilter ($name: String, $email: String, $limit: Int = 10, $offset: Int = 0, $order_by: students_order_by! = {created_at:desc}, $student_ids: [String!], $grades: [smallint!]) {
          	students(where: {user:{name:{_ilike:$name},email:{_ilike:$email}},student_id:{_in:$student_ids},current_grade:{_in:$grades}}, limit: $limit, offset: $offset, order_by: [$order_by]) {
          		... StudentFrg
          	}
          	students_aggregate(where: {user:{name:{_ilike:$name},email:{_ilike:$email}},student_id:{_in:$student_ids},current_grade:{_in:$grades}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment StudentFrg on students {
          	student_id
          	current_grade
          	user {
          		... UserAttrs
          	}
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: StudentsManyWithSchool
        query: |
          query StudentsManyWithSchool ($student_id: [String!] = []) {
          	students(where: {student_id:{_in:$student_id}}, order_by: {created_at:desc}) {
          		user {
          			name
          			user_id
          		}
          		school {
          			name
          		}
          	}
          }
      - name: TeacherTitle
        query: |
          query TeacherTitle ($teacher_id: String!) {
          	teachers(where: {teacher_id:{_eq:$teacher_id}}) {
          		users {
          			name
          		}
          	}
          }
      - name: TeacherOne
        query: |
          query TeacherOne ($teacher_id: String!) {
          	teachers(where: {teacher_id:{_eq:$teacher_id}}) {
          		teacher_by_school_ids {
          			school_id
          		}
          		... TeacherAttrs
          	}
          }
          fragment TeacherAttrs on teachers {
          	users {
          		name
          		email
          		avatar
          		phone_number
          		user_group
          		country
          	}
          	teacher_id
          }
      - name: TeacherList
        query: |
          query TeacherList ($limit: Int = 10, $offset: Int = 0, $user_name: String, $user_email: String, $school_id: Int! = 0) {
          	find_teacher_by_school_id(limit: $limit, offset: $offset, order_by: {created_at:desc}, args: {school_id:$school_id}, where: {name:{_ilike:$user_name},email:{_ilike:$user_email}}) {
          		name
          		email
          		user_id
          	}
          	find_teacher_by_school_id_aggregate(args: {school_id:$school_id}, where: {name:{_ilike:$user_name},email:{_ilike:$user_email}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: TeacherListWithoutTeacherIds
        query: |
          query TeacherListWithoutTeacherIds ($limit: Int = 10, $offset: Int = 0, $user_name: String, $user_email: String, $user_id: [String!] = [], $school_id: Int = 0) {
          	find_teacher_by_school_id(limit: $limit, offset: $offset, order_by: {created_at:desc}, args: {school_id:$school_id}, where: {name:{_ilike:$user_name},email:{_ilike:$user_email},user_id:{_nin:$user_id}}) {
          		name
          		email
          		user_id
          		avatar
          	}
          	find_teacher_by_school_id_aggregate(args: {school_id:$school_id}, where: {name:{_ilike:$user_name},email:{_ilike:$user_email},user_id:{_nin:$user_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: TeacherMany
        query: |
          query TeacherMany ($user_id: [String!] = [], $school_id: Int = 0) {
          	find_teacher_by_school_id(args: {school_id:$school_id}, where: {user_id:{_in:$user_id}}) {
          		name
          		email
          		user_id
          	}
          }
      - name: UsersTitle
        query: |
          query UsersTitle ($user_id: String!) {
          	users(where: {user_id:{_eq:$user_id}}) {
          		... UserAttrs
          	}
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: UserNameByIds
        query: |
          query UserNameByIds ($user_id: [String!] = []) {
          	users(where: {user_id:{_in:$user_id}}) {
          		user_id
          		name
          	}
          }
      - name: UsersMany
        query: |
          query UsersMany ($user_id: [String!] = []) {
          	users(where: {user_id:{_in:$user_id}}) {
          		... UserAttrs
          	}
          	users_aggregate(where: {user_id:{_in:$user_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: UserByEmail
        query: |
          query UserByEmail ($email: String, $phone_number: String, $user_id: String) {
          	users(where: {email:{_eq:$email},phone_number:{_eq:$phone_number},user_id:{_neq:$user_id}}) {
          		... UserAttrs
          	}
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: UsersInfoNotificationsList
        query: |
          query UsersInfoNotificationsList ($notification_id: String!, $limit: Int = 10, $offset: Int = 0) {
          	users_info_notifications(where: {notification_id:{_eq:$notification_id}}, limit: $limit, offset: $offset, order_by: {student_id:asc,user_group:desc}) {
          		... UsersInfoNotificationsAttrs
          		student_id
          		parent_id
          	}
          	users_info_notifications_aggregate(where: {notification_id:{_eq:$notification_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment UsersInfoNotificationsAttrs on users_info_notifications {
          	user_id
          	user_notification_id
          	notification_id
          	current_grade
          	course_ids
          	status
          	user_group
          }
      - name: StudentsManyReference
        query: |
          query StudentsManyReference ($user_ids: [String!], $name: String, $email: String, $limit: Int = 30, $offset: Int = 0) {
          	users(where: {user_group:{_eq:"USER_GROUP_STUDENT"},user_id:{_in:$user_ids},name:{_ilike:$name},email:{_ilike:$email}}, limit: $limit, offset: $offset, order_by: {created_at:desc}) {
          		... StudentUserAttrs
          	}
          }
          fragment StudentUserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          }
      - name: StudentsListWithFilterOptimize
        query: |
          query StudentsListByFiltersWithoutGrade ($name: String, $email: String, $limit: Int = 10, $offset: Int = 0, $order_by: users_order_by! = {created_at:desc}, $student_ids: [String!], $grades: [smallint!]) {
          	users(where: {name:{_ilike:$name},email:{_ilike:$email},user_id:{_in:$student_ids},user_group:{_eq:"USER_GROUP_STUDENT"},student:{current_grade:{_in:$grades}}}, limit: $limit, offset: $offset, order_by: [$order_by]) {
          		... StudentWithoutGradeFrg
          	}
          	users_aggregate(where: {name:{_ilike:$name},email:{_ilike:$email},user_id:{_in:$student_ids},user_group:{_eq:"USER_GROUP_STUDENT"},student:{current_grade:{_in:$grades}}}) {
          		aggregate {
          			count(columns: user_id)
          		}
          	}
          }
          fragment StudentWithoutGradeFrg on users {
          	user_id
          	name
          	email
          	phone_number
          	country
          }
      - name: MediasMany
        query: |
          query MediasMany ($media_id: [String!] = []) {
          	media(where: {media_id:{_in:$media_id}}) {
          		... MediaAttrs
          		conversion_tasks(order_by: {created_at:desc}, limit: 1) {
          			status
          		}
          	}
          }
          fragment MediaAttrs on media {
          	media_id
          	resource
          	type
          	name
          }
      - name: Syllabus_MediasMany
        query: |
          query Syllabus_MediasMany($media_id: [String!] = []) {
            media(where: {media_id: {_in: $media_id}}) {
              media_id
              resource
              type
              name
            }
          }
      - name: ParentsList
        query: |
          query ParentsList ($email: String, $name: String, $limit: Int = 30, $offset: Int = 0) {
          	parents(limit: $limit, offset: $offset, where: {user:{_or:[{email:{_ilike:$email}},{name:{_ilike:$name}}]}}) {
          		... ParentAttrs
          	}
          }
          fragment ParentAttrs on parents {
          	user {
          		user_id
          		name
          		email
          		phone_number
          		country
          	}
          	student_parents {
          		relationship
          	}
          }
      - name: ParentsManyReference
        query: |
          query ParentsManyReference ($email: String, $name: String, $limit: Int = 10, $offset: Int = 0) {
          	users(limit: $limit, offset: $offset, where: {_and:[{user_group:{_eq:"USER_GROUP_PARENT"}},{_or:[{email:{_ilike:$email}},{name:{_ilike:$name}}]}]}) {
          		... ParentAttrs
          	}
          }
          fragment ParentAttrs on users {
          	user_id
          	name
          	email
          	phone_number
          	country
          }
      - name: ParentRelationshipsByUserId
        query: |
          query ParentRelationshipsByUserId ($userId: String, $limit: Int = 1) {
          	student_parents(limit: $limit, where: {parent_id:{_eq:$userId}}) {
          		relationship
          	}
          }
      - name: getOneTeacher
        query: |
          query TeacherOne ($teacher_id: String!) {
          	teachers(where: {teacher_id:{_eq:$teacher_id}}) {
          		teacher_by_school_ids {
          			school_id
          		}
          		... TeacherAttrs
          	}
          }
          fragment TeacherAttrs on teachers {
          	users {
          		name
          		email
          		avatar
          		phone_number
          		user_group
          		country
          	}
          	teacher_id
          }
      - name: StudentsList
        query: |
          query StudentsList ($name: String, $email: String, $limit: Int = 10, $offset: Int = 0, $order_by: students_order_by! = {created_at:desc}, $student_ids: [String!]) {
          	students(where: {user:{name:{_ilike:$name},email:{_ilike:$email}},student_id:{_in:$student_ids}}, limit: $limit, offset: $offset, order_by: [$order_by]) {
          		... StudentFrg
          	}
          	students_aggregate(where: {user:{name:{_ilike:$name},email:{_ilike:$email}},student_id:{_in:$student_ids}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment StudentFrg on students {
          	student_id
          	current_grade
          	user {
          		... UserAttrs
          		last_login_date
          	}
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: LessonsByCourseId
        query: |
          query LessonsByCourseId ($course_id: String!) {
          	lessons(where: {course_id:{_eq:$course_id},deleted_at:{_is_null:true}}) {
          		name
          		lesson_group_id
          	}
          }
      - name: GradesOfStudentsList
        query: |
          query GradesOfStudentsList ($student_ids: [String!] = []) {
          	students(where: {student_id:{_in:$student_ids}}) {
          		student_id
          		current_grade
          		enrollment_status
          	}
          }
      - name: StudentsMany
        query: |
          query StudentsMany ($user_ids: [String!] = []) {
          	users(where: {user_group:{_eq:"USER_GROUP_STUDENT"},user_id:{_in:$user_ids}}) {
          		... StudentUserAttrs
          	}
          }
          fragment StudentUserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          }
      - name: TeacherManyReference
        query: |
          query TeacherManyReference ($limit: Int = 10, $offset: Int = 0, $email: String, $name: String, $school_id: Int! = 0) {
          	find_teacher_by_school_id(limit: $limit, offset: $offset, order_by: {created_at:desc}, args: {school_id:$school_id}, where: {_or:[{name:{_ilike:$name}},{email:{_ilike:$email}}]}) {
          		name
          		email
          		user_id
          		avatar
          	}
          }
      - name: getMediaConvertedImageForTest
        query: |
          query getMediaConvertedImageForTest ($id: String) {
          	media(where: {media_id:{_eq:$id}}) {
          		converted_images
          	}
          }
      - name: StudentsListByFiltersWithoutGrade
        query: |
          query StudentsListByFiltersWithoutGrade ($name: String, $email: String, $limit: Int = 10, $offset: Int = 0, $order_by: users_order_by! = {created_at:desc}, $student_ids: [String!], $grades: [smallint!], $enrollment_status: String) {
          	users(where: {name:{_ilike:$name},email:{_ilike:$email},user_id:{_in:$student_ids},user_group:{_eq:"USER_GROUP_STUDENT"},student:{current_grade:{_in:$grades},enrollment_status:{_eq:$enrollment_status}}}, limit: $limit, offset: $offset, order_by: [$order_by]) {
          		... StudentWithoutGradeFrg
          	}
          	users_aggregate(where: {name:{_ilike:$name},email:{_ilike:$email},user_id:{_in:$student_ids},user_group:{_eq:"USER_GROUP_STUDENT"},student:{current_grade:{_in:$grades},enrollment_status:{_eq:$enrollment_status}}}) {
          		aggregate {
          			count(columns: user_id)
          		}
          	}
          }
          fragment StudentWithoutGradeFrg on users {
          	user_id
          	name
          	email
          	phone_number
          	country
          }
      - name: CoursesMany
        query: |
          query CoursesMany ($course_id: [String!] = []) {
          	courses(where: {course_id:{_in:$course_id}}) {
          		... CourseAttrs
          	}
          }
          fragment CourseAttrs on courses {
          	course_id
          	name
          	icon
          	grade
          	subject
          	country
          	school_id
          	display_order
          }
      - name: CoursesManyReference
        query: |
          query CoursesManyReference ($name: String, $limit: Int = 10, $offset: Int = 0) {
          	courses(limit: $limit, offset: $offset, order_by: {created_at:desc,display_order:asc,name:asc,course_id:asc}, where: {name:{_ilike:$name}}) {
          		... CourseAttrs
          	}
          	courses_aggregate(where: {name:{_ilike:$name}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment CourseAttrs on courses {
          	course_id
          	name
          	icon
          	grade
          	subject
          	country
          	school_id
          	display_order
          }
      - name: CoursesOne
        query: |
          query CoursesOne ($course_id: String!) {
          	courses(where: {course_id:{_eq:$course_id}}) {
          		... CourseAttrs
          	}
          }
          fragment CourseAttrs on courses {
          	course_id
          	name
          	icon
          	grade
          	subject
          	country
          	school_id
          	display_order
          }
      - name: CourseTitle
        query: |
          query CourseTitle ($course_id: String!) {
          	courses(where: {course_id:{_eq:$course_id}}) {
          		name
          	}
          }
      - name: CountStudentWithFilter
        query: |
          query CountStudentWithFilter ($name: String, $email: String, $grades: [smallint!], $student_ids: [String!], $enrollment_status: String, $last_login_date: Boolean) {
          	users_aggregate(where: {name:{_ilike:$name},email:{_ilike:$email},user_id:{_in:$student_ids},user_group:{_eq:"USER_GROUP_STUDENT"},last_login_date:{_is_null:$last_login_date},student:{current_grade:{_in:$grades},enrollment_status:{_eq:$enrollment_status}}}) {
          		aggregate {
          			count(columns: user_id)
          		}
          	}
          }
      - name: PartnerFormConfigsOne
        query: |
          query PartnerFormConfigsOne ($feature_name: String, $school_id: Int) {
          	partner_form_configs(where: {_and:[{feature_name:{_eq:$feature_name},partner_id:{_eq:$school_id}}]}, order_by: {created_at:desc}, limit: 1) {
          		form_config_id
          		form_config_data
          	}
          }
      - name: LessonByLessonIdForLessonReport
        query: |
          query LessonByLessonIdForLessonReport ($lesson_id: String!) {
          	lessons_by_pk(lesson_id: $lesson_id) {
          		lesson_id
          		lesson_type
          		start_time
          		end_time
          		teaching_model
          		lessons_teachers {
          			teacher {
          				users {
          					user_id
          					name
          					email
          				}
          			}
          		}
          		lesson_members {
          			attendance_remark
          			attendance_status
          			user {
          				user_id
          				name
          				email
          			}
          			course {
          				course_id
          				name
          				subject
          			}
          		}
          	}
          }
      - name: LessonReportByLessonId
        query: |
          query LessonReportByLessonId ($lesson_id: String!) {
          	lesson_reports(where: {lesson_id:{_eq:$lesson_id}}) {
          		lesson_id
          		lesson_report_id
          		report_submitting_status
          		partner_form_config {
          			form_config_id
          			feature_name
          			form_config_data
          		}
          		lesson_report_details {
          			lesson_report_detail_id
          			student {
          				student_id
          			}
          			partner_dynamic_form_field_values {
          				dynamic_form_field_value_id
          				value_type
          				int_value
          				int_set_value
          				int_array_value
          				string_value
          				string_set_value
          				string_array_value
          				bool_value
          				field_render_guide
          				field_id
          			}
          		}
          	}
          }
      - name: InfoNotificationsGetStatusByID
        query: |
          query InfoNotificationsGetStatusByID ($notification_id: String!) {
          	info_notifications(where: {notification_id:{_eq:$notification_id}}) {
          		status
          	}
          }
      - name: InfoNotificationCountsByStatusV2
        query: |
          query InfoNotificationCountsByStatusV2 {
          	draft: info_notifications_aggregate(where: {status:{_eq:"NOTIFICATION_STATUS_DRAFT"}}) {
          		aggregate {
          			count
          		}
          	}
          	sent: info_notifications_aggregate(where: {status:{_eq:"NOTIFICATION_STATUS_SENT"}}) {
          		aggregate {
          			count
          		}
          	}
          	schedule: info_notifications_aggregate(where: {status:{_eq:"NOTIFICATION_STATUS_SCHEDULED"}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: PreviousLessonReportByCourseIdAndStudentIdAndId
        query: |
          query PreviousLessonReportByCourseIdAndStudentIdAndId ($user_id: String!, $report_course_id: String!, $report_id: String) {
          	get_previous_report_of_student(args: {report_course_id:$report_course_id,user_id:$user_id,report_id:$report_id}) {
          		form_config_id
          		lesson_report_id
          	}
          }
      - name: PartnerFormConfigById
        query: |
          query PartnerFormConfigById ($form_config_id: String!) {
          	partner_form_configs(where: {form_config_id:{_eq:$form_config_id}}) {
          		form_config_data
          	}
          }
      - name: PartnerDynamicFormFieldValuesByLessonReportDetailsIdAndStudentId
        query: |
          query PartnerDynamicFormFieldValuesByLessonReportDetailsIdAndStudentId ($user_id: String!, $report_id: String!) {
          	get_partner_dynamic_form_field_values_by_student(args: {report_id:$report_id,user_id:$user_id}) {
          		value_type
          		string_value
          		string_set_value
          		string_array_value
          		int_set_value
          		int_array_value
          		field_id
          		bool_value
          		int_value
          	}
          }
      - name: CountSchoolAdminsWithFilter
        query: |
          query CountSchoolAdminsWithFilter ($school_id: Int!, $filterValue: String) {
          	users_aggregate(where: {_and:[{school_admin:{school_id:{_eq:$school_id}}},{_or:[{email:{_ilike:$filterValue}},{name:{_ilike:$filterValue}}]}]}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: GetSchoolAdminsBySchoolId
        query: |
          query GetSchoolAdminsBySchoolId ($limit: Int = 10, $offset: Int = 0, $school_id: Int!, $filterValue: String) {
          	users(where: {_and:[{school_admin:{school_id:{_eq:$school_id}}},{_or:[{email:{_ilike:$filterValue}},{name:{_ilike:$filterValue}}]}]}, offset: $offset, order_by: {created_at:desc,user_id:desc}, limit: $limit) {
          		user_id
          		name
          		email
          		phone_number
          	}
          }
      - name: LessonMemberByUserIdAndCourseIdAndLessonId
        query: |
          query LessonMemberByUserIdAndCourseIdAndLessonId ($user_id: String!, $course_id: String!, $lesson_id: String) {
          	lesson_members(where: {user_id:{_eq:$user_id},course_id:{_eq:$course_id},lesson_id:{_eq:$lesson_id}}) {
          		attendance_remark
          		attendance_status
          	}
          }
      - name: LessonReportByCourseIdAndStudentIdAndReportId
        query: |
          query LessonReportByCourseIdAndStudentIdAndReportId ($user_id: String!, $report_course_id: String!, $report_id: String) {
          	get_previous_report_of_student(args: {report_course_id:$report_course_id,user_id:$user_id,report_id:$report_id}) {
          		form_config_id
          		lesson_report_id
          		lesson_id
          	}
          }
      - name: LessonMemberByUserIdAndCourseIdAndLessonIdV2
        query: |
          query LessonMemberByUserIdAndCourseIdAndLessonIdV2 ($user_id: String!, $course_id: String!, $lesson_id: String!) {
          	lesson_members(where: {user_id:{_eq:$user_id},course_id:{_eq:$course_id},lesson_id:{_eq:$lesson_id}}) {
          		attendance_remark
          		attendance_status
          	}
          }
      - name: PartnerFormConfigByIdV2
        query: |
          query PartnerFormConfigByIdV2 ($form_config_id: String!) {
          	partner_form_configs_by_pk(form_config_id: $form_config_id) {
          		form_config_data
          	}
          }
      - name: LocationListByName
        query: |
          query LocationListByName ($limit: Int = 10, $offset: Int = 0, $name: String!) {
          	locations(order_by: {created_at:desc}, limit: $limit, offset: $offset, where: {name:{_ilike:$name}}) {
          		name
          		location_id
          	}
          }
      - name: LocationListByNameV2
        query: |
          query LocationListByNameV2 ($limit: Int = 10, $offset: Int = 0, $name: String) {
          	locations(order_by: {created_at:desc}, limit: $limit, offset: $offset, where: {name:{_ilike:$name}}) {
          		name
          		location_id
          	}
          }
      - name: LocationListByIds
        query: |
          query LocationListByIds ($location_ids: [String!] = []) {
          	locations(where: {location_id:{_in:$location_ids}}) {
          		name
          		location_id
          	}
          }
      - name: LessonByLessonIdForLessonReportV2
        query: |
          query LessonByLessonIdForLessonReportV2 ($lesson_id: String!) {
          	lessons_by_pk(lesson_id: $lesson_id) {
          		lesson_id
          		center_id
          		lesson_group_id
          		teaching_medium
          		teaching_method
          		lesson_type
          		teaching_model
          		scheduling_status
          		start_time
          		end_time
          		lessons_teachers {
          			teacher {
          				users {
          					user_id
          					name
          					email
          				}
          			}
          		}
          		lesson_members {
          			attendance_remark
          			attendance_status
          			course {
          				course_id
          				name
          				subject
          			}
          			user {
          				user_id
          				name
          				email
          				student {
          					current_grade
          				}
          			}
          		}
          	}
          }
      - name: LocationByLocationId
        query: |
          query LocationByLocationId ($location_id: String!) {
          	locations(where: {location_id:{_eq:$location_id}}) {
          		location_id
          		name
          	}
          }
      - name: LessonByLessonIdForLessonManagement
        query: |
          query LessonByLessonIdForLessonManagement ($lesson_id: String!) {
          	lessons(where: {lesson_id:{_eq:$lesson_id}}) {
          		lesson_id
          		center_id
          		lesson_group_id
          		teaching_medium
          		teaching_method
          		lesson_type
          		scheduling_status
          		start_time
          		end_time
          		lessons_teachers {
          			teacher {
          				users {
          					user_id
          					name
          					email
          				}
          			}
          		}
          		lesson_members {
          			attendance_remark
          			attendance_status
          			course {
          				course_id
          				name
          				subject
          			}
          			user {
          				user_id
          				name
          				email
          				student {
          					current_grade
          				}
          			}
          		}
          	}
          }
      - name: OrganizationsManyReference
        query: |
          query OrganizationsManyReference ($name: String, $limit: Int = 10, $offset: Int = 0) {
          	organizations(limit: $limit, offset: $offset, where: {name:{_ilike:$name}}) {
          		... OrganizationsAttrs
          	}
          }
          fragment OrganizationsAttrs on organizations {
          	tenant_id
          	name
          }
      - name: StudentQRCodeByStudentIds
        query: |
          query StudentQRCodeByStudentIds ($student_ids: [String!] = []) {
          	student_qr(where: {student_id:{_in:$student_ids}}) {
          		qr_url
          		qr_id
          		student_id
          	}
          }
      - name: PreviousLessonReportByCourseIdAndStudentIdAndIdAndLessonId
        query: |
          query PreviousLessonReportByCourseIdAndStudentIdAndIdAndLessonId ($user_id: String!, $report_course_id: String!, $report_id: String, $report_lesson_id: String) {
          	get_previous_report_of_student_v2(args: {report_course_id:$report_course_id,user_id:$user_id,report_id:$report_id,report_lesson_id:$report_lesson_id}) {
          		form_config_id
          		lesson_report_id
          	}
          }
      - name: PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonId
        query: |
          query PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonId ($user_id: String!, $report_course_id: String!, $report_id: String, $report_lesson_id: String) {
          	get_previous_report_of_student_v2(args: {report_course_id:$report_course_id,user_id:$user_id,report_id:$report_id,report_lesson_id:$report_lesson_id}) {
          		form_config_id
          		lesson_report_id
          		lesson_id
          	}
          }
      - name: StudentsManyReferenceByNameAndEmail
        query: |
          query StudentsManyReferenceByNameAndEmail ($keyword: String, $limit: Int = 30, $offset: Int = 0) {
          	users(where: {user_group:{_eq:"USER_GROUP_STUDENT"},_or:[{email:{_ilike:$keyword}},{name:{_ilike:$keyword}}]}, limit: $limit, offset: $offset, order_by: {created_at:desc}) {
          		... StudentUserAttrs
          	}
          }
          fragment StudentUserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          }
      - name: PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonIdV2
        query: |
          query PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonIdV2 ($report_user_id: String!, $report_course_id: String!, $report_id: String, $report_lesson_id: String) {
          	get_previous_report_of_student_v3(args: {report_course_id:$report_course_id,report_user_id:$report_user_id,report_id:$report_id,report_lesson_id:$report_lesson_id}) {
          		form_config_id
          		lesson_report_id
          		lesson_id
          	}
          }
      - name: LocationsListByNameLowestLevel
        query: |
          query LocationsListByNameLowestLevel ($limit: Int = 10, $offset: Int = 0, $name: String = "") {
          	get_locations_lowest_level(args: {location_limit:$limit,location_offset:$offset,location_search_name:$name}) {
          		name
          		location_id
          	}
          }
      - name: StudentEntryExitRecordsByStudentId
        query: |
          query StudentEntryExitRecordsByStudentId ($student_id: String!, $limit: Int = 10, $offset: Int = 0) {
          	student_entryexit_records(where: {student_id:{_eq:$student_id}}, limit: $limit, offset: $offset) {
          		entry_at
          		entryexit_id
          		exit_at
          		student_id
          	}
          }
      - name: UserAccessPathWithFilter
        query: |
          query User_UserAccessPathWithFilter ($user_id: String!) {
          	user_access_paths(where: {user_id:{_eq:$user_id}}) {
          		location {
          			location_id
          			name
          		}
          	}
          }
      - name: User_UserAccessPathWithFilterV2
        query: |
          query User_UserAccessPathWithFilterV2 ($user_id: String!) {
          	user_access_paths(where: {user_id:{_eq:$user_id}}) {
          		location {
          			location_id
          			name
          			access_path
          			location_type
          			parent_location_id
          		}
          	}
          }
      - name: EntryExit_StudentEntryExitRecordsWithAggregateByStudentId
        query: |
          query EntryExit_StudentEntryExitRecordsWithAggregateByStudentId ($student_id: String!, $limit: Int = 10, $offset: Int = 0) {
          	student_entryexit_records(where: {student_id:{_eq:$student_id}}, limit: $limit, offset: $offset, order_by: {entry_at:desc}) {
          		entry_at
          		entryexit_id
          		exit_at
          		student_id
          	}
          	student_entryexit_records_aggregate(where: {student_id:{_eq:$student_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: Lesson_LocationIdsByCourseId
        query: |
          query Lesson_LocationIdsByCourseId ($course_id: String!) {
          	course_access_paths(where: {course_id:{_eq:$course_id}}) {
          		location_id
          	}
          }
      - name: Lesson_LocationIdsByCourseIdV2
        query: |
          query Lesson_LocationIdsByCourseIdV2 ($course: String = "") {
          	get_locations_active_by_course_id(args: {course:$course}) {
          		location_id
          	}
          }
      - name: EntryExit_StudentEntryExitRecordsByStudentId
        query: |
          query EntryExit_StudentEntryExitRecordsByStudentId ($student_id: String!, $limit: Int = 10, $offset: Int = 0) {
          	student_entryexit_records(where: {student_id:{_eq:$student_id},deleted_at:{_is_null:true}}, limit: $limit, offset: $offset, order_by: {entry_at:desc}) {
          		entry_at
          		entryexit_id
          		exit_at
          		student_id
          		deleted_at
          	}
          	student_entryexit_records_aggregate(where: {student_id:{_eq:$student_id},deleted_at:{_is_null:true}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: User_UserAccessPathByUserIds
        query: |
          query User_UserAccessPathByUserIds ($user_ids: [String!] = []) {
          	user_access_paths(where: {user_id:{_in:$user_ids}}) {
          		user_id
          		location {
          			location_id
          			name
          			access_path
          			location_type
          			parent_location_id
          		}
          	}
          }
      - name: Users_OrganizationsManyReference
        query: |
          query Users_OrganizationsManyReference ($domain_name: String) {
          	organizations(where: {domain_name:{_eq:$domain_name}}) {
          		tenant_id
          		domain_name
          	}
          }
      - name: Users_OrganizationsManyReferenceV2
        query: |
          query Users_OrganizationsManyReferenceV2 ($domain_name: String) {
          	organizations(where: {domain_name:{_eq:$domain_name}}) {
          		tenant_id
          		domain_name
          		logo_url
          		organization_id
          		name
          	}
          }
      - name: Lesson_LessonGroupsListByLessonGroupIdsAndCourseId
        query: |
          query Lesson_LessonGroupsListByLessonGroupIdsAndCourseId ($lesson_group_ids: [String!]!, $course_id: String, $limit: Int = 10, $offset: Int = 0) {
          	lesson_groups(limit: $limit, offset: $offset, order_by: {lesson_group_id:asc}, where: {lesson_group_id:{_in:$lesson_group_ids},course_id:{_eq:$course_id}}) {
          		... LessonGroupAttrs
          	}
          }
          fragment LessonGroupAttrs on lesson_groups {
          	media_ids
          	lesson_group_id
          }
      - name: User_CoursesManyWithLocation
        query: |
          query User_CoursesManyWithLocation ($course_id: [String!] = []) {
          	courses(where: {course_id:{_in:$course_id}}) {
          		... User_CourseWithLocationAttrs
          	}
          }
          fragment User_CourseWithLocationAttrs on courses {
          	course_id
          	name
          	icon
          	grade
          	subject
          	country
          	school_id
          	display_order
          	course_access_paths {
          		location {
          			name
          			location_type
          			location_id
          			parent_location_id
          			access_path
          		}
          	}
          }
      - name: User_CoursesManyReferenceWithLocation
        query: |
          query User_CoursesManyReferenceWithLocation ($name: String, $location_ids: [String!], $limit: Int = 10, $offset: Int = 0) {
          	courses(limit: $limit, offset: $offset, order_by: {created_at:desc,display_order:asc,name:asc,course_id:asc}, where: {name:{_ilike:$name},course_access_paths:{location_id:{_in:$location_ids}}}) {
          		... User_CourseWithLocationAttrs
          	}
          	courses_aggregate(where: {name:{_ilike:$name},course_access_paths:{location_id:{_in:$location_ids}}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment User_CourseWithLocationAttrs on courses {
          	course_id
          	name
          	icon
          	grade
          	subject
          	country
          	school_id
          	display_order
          	course_access_paths {
          		location {
          			name
          			location_type
          			location_id
          			parent_location_id
          			access_path
          		}
          	}
          }
      - name: User_CourseLocationsByIds
        query: |
          query User_CourseLocationsByIds ($course_ids: [String!] = []) {
          	course_access_paths(where: {course_id:{_in:$course_ids}}) {
          		course_id
          		location {
          			location_id
          			name
          			access_path
          			location_type
          			parent_location_id
          		}
          	}
          }
      - name: User_LocationListByIds
        query: |
          query User_LocationListByIds ($location_ids: [String!] = []) {
          	locations(where: {location_id:{_in:$location_ids}}) {
          		location_id
          		name
          		access_path
          		location_type
          		parent_location_id
          	}
          }
      - name: User_OneCourseByCourseIdAndLocationId
        query: |
          query User_OneCourseByCourseIdAndLocationId ($course_id: String!, $location_id: String!) {
          	course_access_paths(where: {course_id:{_eq:$course_id},location_id:{_eq:$location_id}}) {
          		location_id
          		course_id
          	}
          }
      - name: User_OneUserByUserIdAndLocationId
        query: |
          query User_OneUserByUserIdAndLocationId ($location_id: String!, $user_id: String!) {
          	user_access_paths(where: {location_id:{_eq:$location_id},user_id:{_eq:$user_id}}) {
          		user_id
          		location_id
          	}
          }
      - name: User_UserAccessPathWithFilterV3
        query: |
          query User_UserAccessPathWithFilterV3 ($user_id: String!) {
          	user_access_paths(where: {user_id:{_eq:$user_id}}) {
          		location {
          			location_id
          			name
          			access_path
          			location_type
          			parent_location_id
          			is_archived
          		}
          	}
          }
      - name: User_UserAccessPathByUserIdsV2
        query: |
          query User_UserAccessPathByUserIdsV2 ($user_ids: [String!] = []) {
          	user_access_paths(where: {user_id:{_in:$user_ids}}) {
          		user_id
          		location {
          			location_id
          			name
          			access_path
          			location_type
          			parent_location_id
          			is_archived
          		}
          	}
          }
      - name: Payment_LocationTypesByParentName
        query: |
          query Payment_LocationTypesByParentName ($parentName: String) {
          	location_types(where: {parent_name:{_eq:$parentName}}) {
          		location_type_id
          		display_name
          		name
          		parent_name
          		parent_location_type_id
          	}
          }
      - name: Payment_Eibanam_GetLowestLocationTypes
        query: |
          query Payment_Eibanam_GetLowestLocationTypes {
          	get_lowest_location_types {
          		location_type_id
          		display_name
          		name
          		parent_name
          		parent_location_type_id
          	}
          }
      - name: Payment_Eibanam_GetLowestLocationTypesV2
        query: |
          query Payment_Eibanam_GetLowestLocationTypesV2 {
          	get_lowest_location_types_v2 {
          		location_type_id
          		display_name
          		name
          		parent_name
          		parent_location_type_id
							level
          	}
          }
      - name: User_StaffList
        query: |
          query User_StaffList ($limit: Int = 10, $offset: Int = 0, $user_name: String, $user_email: String, $school_id: Int! = 0) {
          	find_teacher_by_school_id(limit: $limit, offset: $offset, order_by: {created_at:desc}, args: {school_id:$school_id}, where: {name:{_ilike:$user_name},email:{_ilike:$user_email}}) {
          		name
          		email
          		user_id
          	}
          	find_teacher_by_school_id_aggregate(args: {school_id:$school_id}, where: {name:{_ilike:$user_name},email:{_ilike:$user_email}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: User_StaffOne
        query: |
          query User_StaffOne ($teacher_id: String!) {
          	teachers(where: {teacher_id:{_eq:$teacher_id}}) {
          		teacher_by_school_ids {
          			school_id
          		}
          		... User_StaffAttrs
          	}
          }
          fragment User_StaffAttrs on teachers {
          	users {
          		name
          		email
          		avatar
          		phone_number
          		user_group
          		country
          	}
          	teacher_id
          }
      - name: Lesson_CoursesList
        query: |
          query Lesson_CoursesList ($name: String, $course_id: [String!], $course_type: String, $limit: Int = 10, $offset: Int = 0) {
          	courses(limit: $limit, offset: $offset, order_by: {created_at:desc,display_order:asc,name:asc,course_id:asc}, where: {name:{_ilike:$name},course_id:{_in:$course_id},course_type:{_eq:$course_type}}) {
          		... Lesson_CoursesAttrs
          	}
          	courses_aggregate(where: {name:{_ilike:$name},course_id:{_in:$course_id},course_type:{_eq:$course_type}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment Lesson_CoursesAttrs on courses {
          	course_id
          	name
          	icon
          	grade
          	subject
          	country
          	school_id
          	display_order
          	teaching_method
          }
      - name: User_UserGroupList
        query: |
          query User_UserGroupList ($limit: Int = 10, $offset: Int = 0) {
          	user_group(limit: $limit, offset: $offset, order_by: {created_at:desc}) {
          		user_group_id
          		user_group_name
          	}
          	user_group_aggregate {
          		aggregate {
          			count
          		}
          	}
          }
      - name: Lesson_CoursesOne
        query: |
          query Lesson_CoursesOne ($course_id: String!) {
          	courses(where: {course_id:{_eq:$course_id}}) {
          		... Lesson_CourseAttrs
          	}
          }
          fragment Lesson_CourseAttrs on courses {
          	course_id
          	name
          	icon
          	grade
          	subject
          	country
          	school_id
          	display_order
          	teaching_method
          }
      - name: Communication_Eibanam_InfoNotificationsGetStatusAndCountReadByNotificationId
        query: |
          query Communication_Eibanam_InfoNotificationsGetStatusAndCountReadByNotificationId ($notification_id: String!) {
          	info_notifications(where: {notification_id:{_eq:$notification_id}}) {
          		status
          		all_receiver_aggregate: users_info_notifications_aggregate {
          			aggregate {
          				count
          			}
          		}
          		read_aggregate: users_info_notifications_aggregate(where: {status:{_eq:"USER_NOTIFICATION_STATUS_READ"}}) {
          			aggregate {
          				count
          			}
          		}
          	}
          }
      - name: User_CoursesManyReferenceWithLocationV2
        query: |
          query User_CoursesManyReferenceWithLocationV2 ($name: String, $location_ids: [String!], $limit: Int = 10, $offset: Int = 0) {
          	courses(limit: $limit, offset: $offset, order_by: {created_at:desc,display_order:asc,name:asc,course_id:asc}, where: {name:{_ilike:$name},course_access_paths:{location_id:{_in:$location_ids}}}) {
          		... CourseAttrs
          	}
          }
          fragment CourseAttrs on courses {
          	course_id
          	name
          	icon
          	grade
          	subject
          	country
          	school_id
          	display_order
          }
      - name: User_CourseLocationsByCourseId
        query: |
          query User_CourseLocationsByCourseId ($course_id: String!) {
          	course_access_paths(where: {course_id:{_eq:$course_id}}) {
          		location {
          			location_id
          			name
          			access_path
          			location_type
          			parent_location_id
          		}
          	}
          }
      - name: Communication_GetListInfoNotifications
        query: |
          query Communication_GetListInfoNotifications ($status: String, $limit: Int, $offset: Int) {
          	info_notifications(limit: $limit, offset: $offset, order_by: {updated_at:desc}, where: {status:{_eq:$status}}) {
          		... InfoNotificationsAttrs
          	}
          }
          fragment InfoNotificationsAttrs on info_notifications {
          	notification_id
          	notification_msg_id
          	sent_at
          	receiver_ids
          	status
          	type
          	target_groups
          	updated_at
          	created_at
          	editor_id
          	event
          	scheduled_at
          }
      - name: Communication_GetInfoNotificationByNotificationId
        query: |
          query Communication_GetInfoNotificationByNotificationId ($notification_id: String!) {
          	info_notifications(where: {notification_id:{_eq:$notification_id}}) {
          		... InfoNotificationsAttrs
          	}
          }
          fragment InfoNotificationsAttrs on info_notifications {
          	notification_id
          	notification_msg_id
          	sent_at
          	receiver_ids
          	status
          	type
          	target_groups
          	updated_at
          	created_at
          	editor_id
          	event
          	scheduled_at
          }
      - name: Communication_GetInfoNotificationByNotificationIdV2
        query: |
          query Communication_GetInfoNotificationByNotificationIdV2 ($notification_id: String!) {
          	info_notifications(where: {notification_id:{_eq:$notification_id}}) {
          		... InfoNotificationsWithQuestionnaireAttrs
          	}
          }
          fragment InfoNotificationsWithQuestionnaireAttrs on info_notifications {
          	notification_id
          	notification_msg_id
          	sent_at
          	receiver_ids
          	status
          	type
          	target_groups
          	updated_at
          	created_at
          	editor_id
          	event
          	scheduled_at
          	is_important
          	questionnaire_id
          }
      - name: Communication_GetQuestionnaireQuestionsByQuestionnaireId
        query: |
          query Communication_GetQuestionnaireQuestionsByQuestionnaireId ($questionnaire_id: String) {
          	questionnaire_questions(where: {questionnaire_id:{_eq:$questionnaire_id}}) {
          		... QuestionnaireQuestionsAttrs
          	}
          }
          fragment QuestionnaireQuestionsAttrs on questionnaire_questions {
          	questionnaire_question_id
          	questionnaire_id
          	order_index
          	type
          	title
          	choices
          	is_required
          	created_at
          	updated_at
          }
      - name: Communication_GetQuestionnaireQuestionsByQuestionnaireIdAndSortByOrderIndex
        query: |
          query Communication_GetQuestionnaireQuestionsByQuestionnaireIdAndSortByOrderIndex ($questionnaire_id: String) {
          	questionnaire_questions(where: {questionnaire_id:{_eq:$questionnaire_id}}, order_by: {order_index:asc}) {
          		... QuestionnaireQuestionsAttrs
          	}
          }
          fragment QuestionnaireQuestionsAttrs on questionnaire_questions {
          	questionnaire_question_id
          	questionnaire_id
          	order_index
          	type
          	title
          	choices
          	is_required
          	created_at
          	updated_at
          }
      - name: Communication_GetQuestionnaireByQuestionnaireId
        query: |
          query Communication_GetQuestionnaireByQuestionnaireId ($questionnaire_id: String) {
          	questionnaires(where: {questionnaire_id:{_eq:$questionnaire_id}}) {
          		... QuestionnaireAttrs
          	}
          }
          fragment QuestionnaireAttrs on questionnaires {
          	questionnaire_id
          	resubmit_allowed
          	expiration_date
          	created_at
          	updated_at
          }
      - name: Communication_GetTagsManyReference
        query: |
          query Communication_GetTagsManyReference ($name: String, $limit: Int = 30, $offset: Int = 0) {
          	tags(limit: $limit, offset: $offset, where: {tag_name:{_ilike:$name}}, order_by: {updated_at:desc}) {
          		... TagAttrs
          	}
          	tags_aggregate(where: {tag_name:{_ilike:$name}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment TagAttrs on tags {
          	tag_id
          	name: tag_name
          	created_at
          	updated_at
          }
      - name: User_UserGroupOne
        query: |
          query User_UserGroupOne ($user_group_id: String!) {
          	user_group(where: {user_group_id:{_eq:$user_group_id}}) {
          		user_group_id
          		user_group_name
          	}
          }
      - name: User_GrantedRoleList
        query: |
          query User_GrantedRoleList ($user_group_id: String!, $limit: Int = 10, $offset: Int = 0) {
          	granted_role(where: {user_group_id:{_eq:$user_group_id}}, limit: $limit, offset: $offset, order_by: {created_at:desc}) {
          		granted_role_id
          		role {
          			role_id
          			role_name
          		}
          	}
          	granted_role_aggregate(where: {user_group_id:{_eq:$user_group_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: User_GrantedRoleAccessPathByGrantedRoleIds
        query: |
          query User_GrantedRoleAccessPathByGrantedRoleIds ($granted_role_ids: [String!] = []) {
          	granted_role_access_path(where: {granted_role_id:{_in:$granted_role_ids}}) {
          		granted_role_id
          		location {
          			location_id
          			name
          			parent_location_id
          			access_path
          			location_type
          			is_archived
          		}
          	}
          }
      - name: Communication_Eibanam_InfoNotificationMsgsGetNotificationIdByTitle
        query: |
          query Communication_Eibanam_InfoNotificationMsgsGetNotificationIdByTitle ($notificationTitle: String!) {
          	info_notification_msgs(where: {title:{_eq:$notificationTitle}}) {
          		info_notifications {
          			notification_id
          		}
          		notification_msg_id
          		title
          	}
          }
      - name: Lesson_ClassAssociationByClassId
        query: |
          query Lesson_ClassAssociationByClassId ($class_id: String!) {
          	class_member_aggregate(where: {class_id:{_eq:$class_id}}, limit: 1) {
          		aggregate {
          			count
          		}
          	}
          	lessons_aggregate(where: {class_id:{_eq:$class_id}}, limit: 1) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: User_StaffListV2
        query: |
          query User_StaffListV2 ($limit: Int = 10, $offset: Int = 0, $user_name: String, $user_email: String, $school_id: Int! = 0) {
          	find_teacher_by_school_id(limit: $limit, offset: $offset, order_by: {created_at:desc}, args: {school_id:$school_id}, where: {name:{_ilike:$user_name},email:{_ilike:$user_email}}) {
          		name
          		email
          		user_id
          		resource_path
          	}
          	find_teacher_by_school_id_aggregate(args: {school_id:$school_id}, where: {name:{_ilike:$user_name},email:{_ilike:$user_email}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: User_RoleList
        query: |
          query User_RoleList {
          	role {
          		role_id
          		role_name
          	}
          	role_aggregate {
          		aggregate {
          			count
          		}
          	}
          }
      - name: Communication_UsersInfoNotificationsList
        query: |
          query Communication_UsersInfoNotificationsList ($notification_id: String!, $limit: Int = 10, $offset: Int = 0) {
          	users_info_notifications(where: {notification_id:{_eq:$notification_id}}, limit: $limit, offset: $offset, order_by: {student_id:asc,user_group:desc}) {
          		... UsersInfoNotificationsWithQnStatusAttrs
          		student_id
          		parent_id
          	}
          	users_info_notifications_aggregate(where: {notification_id:{_eq:$notification_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
          fragment UsersInfoNotificationsWithQnStatusAttrs on users_info_notifications {
          	user_id
          	user_notification_id
          	notification_id
          	current_grade
          	course_ids
          	status
          	user_group
          	qn_status
          }
      - name: EntryExit_StudentQrCodeByStudentIdsV2
        query: |
          query EntryExit_StudentQrCodeByStudentIdsV2 ($student_ids: [String!] = []) {
          	student_qr(where: {student_id:{_in:$student_ids}}) {
          		qr_url
          		qr_id
          		student_id
          		version
          	}
          }
      - name: Lesson_ClassListByCourseIdV3
        query: |
          query Lesson_ClassListByCourseIdV3 ($course_id: String!, $limit: Int = 5, $offset: Int = 0, $order_by: [class_order_by!] = {name:asc}) {
          	class(where: {course_id:{_eq:$course_id}}, limit: $limit, offset: $offset, order_by: $order_by) {
          		class_id
          		name
          		location {
          			location_id
          			name
          		}
          	}
          	class_aggregate(where: {course_id:{_eq:$course_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: User_ClassListWithFilter
        query: |
          query User_ClassListWithFilter ($course_id: String!, $location_id: String!) {
          	class(where: {course_id:{_eq:$course_id},location_id:{_eq:$location_id}}) {
          		class_id
          		name
          	}
          }
      - name: User_ClassMany
        query: |
          query User_ClassMany ($class_ids: [String!] = []) {
          	class(where: {class_id:{_in:$class_ids}}) {
          		name
          		class_id
          	}
          }
      - name: Lesson_LessonByLessonIdForLessonManagementV2
        query: |
          query Lesson_LessonByLessonIdForLessonManagementV2 ($lesson_id: String!) {
          	lessons(where: {lesson_id:{_eq:$lesson_id}}) {
          		lesson_id
          		center_id
          		course {
          			course_id
          			name
          		}
          		class_id
          		lesson_group_id
          		teaching_medium
          		teaching_method
          		lesson_type
          		scheduling_status
          		start_time
          		end_time
          		lessons_teachers {
          			teacher {
          				users {
          					user_id
          					name
          					email
          				}
          			}
          		}
          		lesson_members {
          			attendance_remark
          			attendance_status
          			course {
          				course_id
          				name
          				subject
          			}
          			user {
          				user_id
          				name
          				email
          				student {
          					current_grade
          				}
          			}
          		}
          	}
          }
      - name: Lesson_ClassByClassIdForLessonManagement
        query: |
          query Lesson_ClassByClassIdForLessonManagement ($class_id: String!) {
          	class(where: {class_id:{_eq:$class_id}}) {
          		class_id
          		name
          	}
          }
      - name: Lesson_ClassManyForLessonManagement
        query: |
          query Lesson_ClassManyForLessonManagement ($class_ids: [String!] = []) {
          	class(where: {class_id:{_in:$class_ids}}) {
          		class_id
          		name
          	}
          }
      - name: User_Eibanam_GetPartnerInternalIdByLocationIds
        query: |
          query User_Eibanam_GetPartnerInternalIdByLocationIds ($location_ids: [String!] = []) {
          	locations(where: {location_id:{_in:$location_ids}}) {
          		location_id
          		partner_internal_id
          	}
          }
      - name: Lesson_CourseManyReferenceByNameAndLocationId
        query: |
          query Lesson_CourseManyReferenceByNameAndLocationId ($location_id: String!, $name: String, $limit: Int = 30, $order_by: [course_access_paths_order_by!] = {created_at:desc}) {
          	course_access_paths(where: {_and:[{location_id:{_eq:$location_id}},{course:{name:{_ilike:$name}}}]}, limit: $limit, order_by: $order_by) {
          		course {
          			course_id
          			name
          		}
          	}
          }
      - name: Lesson_ClassManyReferenceByNameAndCourseId
        query: |
          query Lesson_ClassManyReferenceByNameAndCourseId ($location_id: String!, $course_id: String!, $name: String, $limit: Int = 30, $order_by: [class_order_by!] = {name:asc}) {
          	class(where: {_and:[{course_id:{_eq:$course_id}},{location_id:{_eq:$location_id}},{name:{_ilike:$name}}]}, limit: $limit, order_by: $order_by) {
          		class_id
          		name
          	}
          }
      - name: User_RoleListV2
        query: |
          query User_RoleListV2 ($is_system: Boolean = false) {
          	role(where: {is_system:{_eq:$is_system}}) {
          		role_id
          		role_name
          	}
          	role_aggregate(where: {is_system:{_eq:$is_system}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: User_UserGroupListV2
        query: |
          query User_UserGroupListV2 ($limit: Int = 10, $offset: Int = 0, $is_system: Boolean = false) {
          	user_group(limit: $limit, offset: $offset, where: {is_system:{_eq:$is_system}}, order_by: {created_at:desc}) {
          		user_group_id
          		user_group_name
          	}
          	user_group_aggregate(where: {is_system:{_eq:$is_system}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: Payment_GetStudentsMany
        query: |
          query Payment_GetStudentsMany ($studentIds: [String!]!) {
          	students(where: {student_id:{_in:$studentIds}}) {
          		enrollment_status
          		student_external_id
          		student_note
          		student_id
          		current_grade
          		user {
          			user_id
          			name
          			email
          			user_group
          			country
          		}
          	}
          }
      - name: User_StaffListV3
        query: |
          query User_StaffListV3 ($limit: Int = 10, $offset: Int = 0, $user_name: String) {
          	staff(limit: $limit, offset: $offset, order_by: {created_at:desc}, where: {user:{name:{_ilike:$user_name}}}) {
          		staff_id
          		user {
          			email
          			name
          			user_group_members {
          				user_group {
          					user_group_id
          					user_group_name
          				}
          			}
          		}
          	}
          	staff_aggregate(where: {user:{name:{_ilike:$user_name}}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: User_StaffOneV2
        query: |
          query User_StaffOneV2 ($staff_id: String!) {
          	staff(where: {staff_id:{_eq:$staff_id}}) {
          		staff_id
          		user {
          			user_group_members {
          				user_group {
          					user_group_id
          					user_group_name
          				}
          			}
          			... UserAttrs
          		}
          	}
          }
          fragment UserAttrs on users {
          	user_id
          	name
          	email
          	avatar
          	phone_number
          	user_group
          	country
          }
      - name: Timesheet_LocationListByIds
        query: |
          query Timesheet_LocationListByIds ($location_ids: [String!] = []) {
          	locations(where: {location_id:{_in:$location_ids}}) {
          		... Timesheet_LocationAttrs
          	}
          }
          fragment Timesheet_LocationAttrs on locations {
          	location_id
          	name
          }
      - name: Timesheet_StaffListByIds
        query: |
          query Timesheet_StaffListByIds ($staff_ids: [String!] = []) {
          	users(where: {user_id:{_in:$staff_ids}}) {
          		... Timesheet_StaffAttrs
          	}
          }
          fragment Timesheet_StaffAttrs on users {
          	user_id
          	name
          	email
          }
      - name: Timesheet_LocationOne
        query: |
          query Timesheet_LocationOne ($location_id: String!) {
          	locations(where: {location_id:{_eq:$location_id}}) {
          		... Timesheet_LocationAttrs
          	}
          }
          fragment Timesheet_LocationAttrs on locations {
          	location_id
          	name
          }
      - name: Timesheet_GrantedLocationListByOneStaff
        query: |-
          query Timesheet_GrantedLocationListByOneStaff($staff_id: String!) {
              user_group_member(where: { user_id: { _eq: $staff_id } }) {
                  user_group {
                      granted_roles {
                          granted_role_access_paths {
                              location {
                                  ...Timesheet_LocationAttrs
                              }
                          }
                      }
                  }
              }
          }

          fragment Timesheet_LocationAttrs on locations {
            location_id
            name
          }
      - name: Timesheet_LocationListByAccessPathAndNamePattern
        query: |-
          query Timesheet_LocationListByAccessPathAndNamePattern(
              $access_path: String
              $name: String
              $limit: Int = 10
              $offset: Int = 0
          ) {
              locations(
                  limit: $limit
                  offset: $offset
                  order_by: { created_at: desc, name: asc }
                  where: { _and: { access_path: { _similar: $access_path }, name: { _ilike: $name, _neq: "" } } }
              ) {
                  ...Timesheet_LocationAttrs
              }
          }

          fragment Timesheet_LocationAttrs on locations {
              location_id
              name
          }
      - name: Timesheet_StaffOne
        query: |
          query Timesheet_StaffOne ($staff_id: String!) {
          	users(where: {user_id:{_eq:$staff_id}}) {
          		... Timesheet_StaffAttrs
          	}
          }
          fragment Timesheet_StaffAttrs on users {
          	user_id
          	name
          	email
          }
      - name: Lesson_ClassManyByNullableCourseIdAndName
        query: |
          query Lesson_ClassManyByNullableCourseIdAndName ($course_id: String, $name: String, $limit: Int = 30, $order_by: [class_order_by!] = {name:asc}) {
          	class(where: {_and:[{course_id:{_eq:$course_id}},{name:{_ilike:$name}}]}, limit: $limit, order_by: $order_by) {
          		class_id
          		name
          		course {
          			course_id
          		}
          	}
          }
      - name: Lesson_ClassManyByLocationIdAndCourseIdAndName
        query: |
          query Lesson_ClassManyByLocationIdAndCourseIdAndName ($location_id: String!, $course_id: String!, $name: String, $limit: Int = 30, $order_by: [class_order_by!] = {name:asc}) {
          	class(where: {_and:[{location_id:{_eq:$location_id}},{course_id:{_eq:$course_id}},{name:{_ilike:$name}}]}, limit: $limit, order_by: $order_by) {
          		class_id
          		name
          	}
          }
      - name: Calendar_LocationListByLocationType
        query: |
          query Calendar_LocationListByLocationType ($location_type_id: String!, $limit: Int = 100) {
          	locations(limit: $limit, where: {location_type:{_eq:$location_type_id}}) {
          		location_id
          		name
          		locations {
          			location_id
          			name
          		}
          		location_types {
          			location_type_id
          			display_name
          			name
          		}
          	}
          }
      - name: Lesson_ClassManyByNullableCourseIdsAndName
        query: |
          query Lesson_ClassManyByNullableCourseIdsAndName ($course_ids: [String!], $name: String, $limit: Int = 30, $order_by: [class_order_by!] = {name:asc}) {
          	class(where: {_and:[{course_id:{_in:$course_ids}},{name:{_ilike:$name}}]}, limit: $limit, order_by: $order_by) {
          		class_id
          		name
          	}
          }
      - name: Calendar_LocationsListByLocationTypes
        query: |
          query Calendar_LocationsListByLocationTypes ($location_type_id: String!, $limit: Int = 100) {
          	locations(limit: $limit, where: {location_type:{_eq:$location_type_id}}) {
          		location_id
          		name
          		locations {
          			location_id
          			name
          		}
          		location_types {
          			location_type_id
          			display_name
          			name
          		}
          		is_archived
          	}
          }
      - name: Calendar_LocationTypesList
        query: |
          query Calendar_LocationTypesList ($limit: Int = 100) {
          	location_types(limit: $limit) {
          		name
          		display_name
          		location_type_id
          		parent_location_type_id
          		parent_name
          		is_archived
          	}
          }
      - name: User_UserGroupsManyReference
        query: |
          query User_UserGroupsManyReference ($user_group_name: String, $limit: Int = 13, $offset: Int = 0) {
          	user_group(limit: $limit, offset: $offset, where: {user_group_name:{_ilike:$user_group_name}}, order_by: {created_at:desc}) {
          		user_group_id
          		user_group_name
          	}
          }
      - name: Timesheet_LocationList
        query: |
          query Timesheet_LocationList ($name: String, $limit: Int = 10, $offset: Int = 0) {
          	locations(limit: $limit, offset: $offset, order_by: {created_at:desc,name:asc}, where: {name:{_ilike:$name}}) {
          		... Timesheet_LocationAttrs
          	}
          }
          fragment Timesheet_LocationAttrs on locations {
          	location_id
          	name
          }
      - name: Timesheet_StaffList
        query: |
          query Timesheet_StaffList ($email: String, $name: String, $limit: Int = 10, $offset: Int = 0) {
          	users(limit: $limit, offset: $offset, where: {_and:[{_or:[{email:{_ilike:$email}},{name:{_ilike:$name}}]}]}) {
          		... Timesheet_StaffAttrs
          	}
          }
          fragment Timesheet_StaffAttrs on users {
          	user_id
          	name
          	email
          }
      - name: Timesheet_StaffListV2
        query: |
          query Timesheet_StaffListV2 ($keyword: String, $limit: Int = 10, $offset: Int = 0) {
          	staff(limit: $limit, offset: $offset, where: {user:{_or:[{email:{_ilike:$keyword}},{name:{_ilike:$keyword}}]}}) {
          		user {
          			name
          			email
          		}
          		staff_id
          	}
          }
      - name: Lesson_LessonByLessonIdForLessonManagementV3
        query: |
          query Lesson_LessonByLessonIdForLessonManagementV3 ($lesson_id: String!) {
          	lessons(where: {lesson_id:{_eq:$lesson_id}}) {
          		lesson_id
          		center_id
          		course {
          			course_id
          			name
          		}
          		class_id
          		lesson_group_id
          		teaching_medium
          		teaching_method
          		lesson_type
          		scheduling_status
          		scheduler_id
          		start_time
          		end_time
          		lessons_teachers {
          			teacher {
          				users {
          					user_id
          					name
          					email
          				}
          			}
          		}
          		lesson_members {
          			attendance_remark
          			attendance_status
          			course {
          				course_id
          				name
          				subject
          			}
          			user {
          				user_id
          				name
          				email
          				student {
          					current_grade
          				}
          			}
          		}
          	}
          }
      - name: Lesson_SchedulerBySchedulerId
        query: |
          query Lesson_SchedulerBySchedulerId ($scheduler_id: String!) {
          	scheduler(where: {scheduler_id:{_eq:$scheduler_id}}) {
          		scheduler_id
          		start_date
          		end_date
          		freq
          	}
          }
      - name: User_StaffListV4
        query: >
          query User_StaffListV4($limit: Int = 10, $offset: Int = 0, $user_name:
          String) {
            staff(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {user: {name: {_ilike: $user_name}}}
            ) {
              staff_id
              user {
                email
                name
                resource_path
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
              }
            }
            staff_aggregate(where: {user: {name: {_ilike: $user_name}}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_RoleListV3
        query: |
          query User_RoleListV3($is_system: Boolean = false) {
            role(
              where: {is_system: {_eq: $is_system}, role_name: {_in: ["Teacher", "School Admin"]}}
            ) {
              role_id
              role_name
            }
            role_aggregate(
              where: {is_system: {_eq: $is_system}, role_name: {_in: ["Teacher", "School Admin"]}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_UserGroupsManyReferenceV2
        query: >
          query User_UserGroupsManyReferenceV2($user_group_name: String,
          $is_system: Boolean = false, $limit: Int = 13, $offset: Int = 0) {
            user_group(
              limit: $limit
              offset: $offset
              where: {user_group_name: {_ilike: $user_group_name}, is_system: {_eq: $is_system}}
              order_by: {created_at: desc}
            ) {
              user_group_id
              user_group_name
            }
          }
      - name: User_GetStudentListWithFilterV2
        query: >
          query User_GetStudentListWithFilterV2($limit: Int = 10, $offset: Int =
          0, $order_by: users_order_by! = {created_at: desc}, $where:
          users_bool_exp! = {}) {
            users(where: $where, limit: $limit, offset: $offset, order_by: [$order_by]) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              student {
                contact_preference
              }
            }
          }
      - name: Timesheet_LowestLocationListByAccessPathAndNamePattern
        query: |-
          query Timesheet_LowestLocationListByAccessPathAndNamePattern(
              $access_path: String
              $name: String
              $limit: Int = 10
              $offset: Int = 0
          ) {
              get_locations_lowest_level_by_name_and_access_path(
                  args: {
                      granted_locations_id_pattern: $access_path
                      location_limit: $limit
                      location_offset: $offset
                      location_search_name: $name
                  }
              ) {
                  location_id
                  name
              }
          }
      - name: User_UserGroupListV3
        query: >
          query User_UserGroupListV3($limit: Int = 10, $offset: Int = 0, $where:
          user_group_bool_exp! = {}) {
            user_groups: get_sorted_user_groups(
              where: $where
              limit: $limit
              offset: $offset
            ) {
              user_group_id
              user_group_name
            }
            user_group_aggregate(where: $where) {
              aggregate {
                count
              }
            }
          }
      - name: User_StudentsOneV8
        query: |
          query User_StudentsOneV8($id: String!) {
            students(where: {student_id: {_eq: $id}}) {
              enrollment_status
              student_note
              contact_preference
              student_id
              current_grade
              grade_id
              grade {
                name
              }
              user {
                user_external_id
                user_id
                name
                email
                avatar
                phone_number
                user_group
                country
                last_login_date
                gender
                birthday
                first_name
                last_name
                first_name_phonetic
                last_name_phonetic
                full_name_phonetic
                deactivated_at
              }
            }
          }
      - name: User_GetStudentListWithFilterV3
        query: >
          query User_GetStudentListWithFilterV3($limit: Int = 10, $offset: Int =
          0, $where: users_bool_exp! = {}, $location_ids: _text,
          $enrollment_statuses: _text, $grade_ids: _text) {
            users: get_sorted_students_list(
              where: $where
              limit: $limit
              offset: $offset
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids}
            ) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              student {
                contact_preference
              }
            }
          }
      - name: User_CountStudentListWithFilterV3
        query: >
          query User_CountStudentListWithFilterV3($where: users_bool_exp! = {},
          $location_ids: _text, $enrollment_statuses: _text, $grade_ids: _text)
          {
            users_aggregate: get_sorted_students_list_aggregate(
              where: $where
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetStudentListWithFilterV4
        query: >
          query User_GetStudentListWithFilterV4($limit: Int = 10, $offset: Int =
          0, $where: users_bool_exp! = {}, $location_ids: _text,
          $enrollment_statuses: _text, $grade_ids: _text) {
            users: get_sorted_students_list_v2(
              where: $where
              limit: $limit
              offset: $offset
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids}
            ) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              student {
                contact_preference
              }
            }
          }
      - name: User_CountStudentListWithFilterV4
        query: >
          query User_CountStudentListWithFilterV4($where: users_bool_exp! = {},
          $location_ids: _text, $enrollment_statuses: _text, $grade_ids: _text)
          {
            users_aggregate: get_sorted_students_list_v2_aggregate(
              where: $where
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids, has_sort: false}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetStudentListWithFilterV5
        query: >
          query User_GetStudentListWithFilterV5($limit: Int = 10, $offset: Int =
          0, $where: users_bool_exp! = {}, $location_ids: _text,
          $enrollment_statuses: _text, $grade_ids: _text, $search_text: String,
          $student_ids_by_phone_number: _text, $sort_type: sort_type_enum) {
            users: get_sorted_students_list_v3(
              where: $where
              limit: $limit
              offset: $offset
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids, search_text: $search_text, student_ids_by_phone_number: $student_ids_by_phone_number, sort_type: $sort_type}
            ) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              student {
                contact_preference
              }
            }
          }
      - name: User_CountStudentListWithFilterV5
        query: >
          query User_CountStudentListWithFilterV5($where: users_bool_exp! = {},
          $location_ids: _text, $enrollment_statuses: _text, $grade_ids: _text,
          $search_text: String, $student_ids_by_phone_number: _text, $sort_type:
          sort_type_enum = "none") {
            users_aggregate: get_sorted_students_list_v3_aggregate(
              where: $where
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids, search_text: $search_text, student_ids_by_phone_number: $student_ids_by_phone_number, sort_type: $sort_type}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_StudentsOneV9
        query: |
          query User_StudentsOneV9($id: String!) {
            student: students_by_pk(student_id: $id) {
              enrollment_status
              student_note
              contact_preference
              student_id
              current_grade
              grade_id
              grade {
                name
              }
              user {
                user_external_id
                user_id
                name
                email
                avatar
                phone_number
                user_group
                country
                last_login_date
                gender
                birthday
                first_name
                last_name
                first_name_phonetic
                last_name_phonetic
                full_name_phonetic
                deactivated_at
                username
              }
            }
          }
      - name: User_GetStudentListWithFilterV6
        query: >
          query User_GetStudentListWithFilterV6($limit: Int = 10, $offset: Int =
          0, $where: users_bool_exp! = {}, $location_ids: _text,
          $enrollment_statuses: _text, $grade_ids: _text, $search_text: String,
          $student_ids_by_phone_number: _text, $sort_type: sort_type_enum) {
            users: get_sorted_students_list_v3(
              where: $where
              limit: $limit
              offset: $offset
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids, search_text: $search_text, student_ids_by_phone_number: $student_ids_by_phone_number, sort_type: $sort_type}
            ) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              username
              student {
                contact_preference
              }
            }
          }
      - name: User_GetManyStudentParentsByStudentIdV4
        query: |
          query User_GetManyStudentParentsByStudentIdV4($student_id: String!) {
            student_parents(where: {student_id: {_eq: $student_id}}) {
              student_id
              parent_id
              relationship
              parent_user {
                email
                phone_number
                country
                remarks
                first_name
                last_name
                last_name_phonetic
                first_name_phonetic
                full_name_phonetic
                name
                user_external_id
                username
              }
            }
          }
      - name: User_CountUsersListWithFilter
        query: |
          query User_CountUsersListWithFilter($where: users_bool_exp! = {}) {
            users_aggregate(where: $where) {
              aggregate {
                count
              }
            }
          }
      - name: User_StaffOneV7
        query: |
          query User_StaffOneV7($staff_id: String!) {
            staff: staff_by_pk(staff_id: $staff_id) {
              staff_id
              working_status
              start_date
              end_date
              user {
                user_external_id
                name
                last_name
                first_name
                full_name_phonetic
                last_name_phonetic
                first_name_phonetic
                email
                birthday
                gender
                remarks
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    location_id
                    name
                    access_path
                    location_type
                    parent_location_id
                    is_archived
                  }
                }
                user_phone_numbers {
                  phone_number
                  type
                  user_phone_number_id
                }
              }
            }
          }
      - name: User_GetParentsListWithFilter
        query: >
          query User_GetParentsListWithFilter($where: parents_bool_exp!
          = {}, $limit: Int = 10, $offset: Int = 0) {
            parents(where: $where, limit: $limit, offset: $offset) {
              parent_id
              user {
                email
                phone_number
                country
                remarks
                first_name
                last_name
                last_name_phonetic
                first_name_phonetic
                name
                user_external_id
                username
              }
            }
          }
      - name: User_GetManyReferenceSchoolInfoV3
        query: >
          query User_GetManyReferenceSchoolInfoV3($level_id: String,
          $search_text: String, $limit: Int = 100, $offset: Int = 0) {
            school_info: get_school_info_list(
              limit: $limit
              offset: $offset
              args: {search_text: $search_text, level_id: $level_id}
            ) {
              school_id
              school_name
              address
              is_archived
              school_level_id
              school_partner_id
            }
          }
      - name: User_GetManyStudentParentsByStudentIdV5
        query: |-
          query User_GetManyStudentParentsByStudentIdV5($student_id: String!) {
            student_parents(where: {student_id: {_eq: $student_id}}) {
              student_id
              parent_id
              relationship
              parent_user {
                email
                phone_number
                country
                remarks
                first_name
                last_name
                last_name_phonetic
                first_name_phonetic
                full_name_phonetic
                name
                user_external_id
                username
                deactivated_at
              }
            }
          }
      - name: User_GetStaffListWithFilterV5
        query: >
          query User_GetStaffListWithFilterV5($limit: Int = 10, $offset: Int =
          0, $order_by: [staff_order_by!] = [{created_at: desc}], $where:
          staff_bool_exp! = {}) {
            staff(limit: $limit, offset: $offset, order_by: $order_by, where: $where) {
              staff_id
              working_status
              user {
                email
                name
                full_name_phonetic
                username
              }
            }
          }
      - name: User_CountEnrolledStudents
        query: |
          query User_CountEnrolledStudents($location_ids: [String!]) {
            student_enrollment_status_history_aggregate(
              distinct_on: student_id
              where: {start_date: {_lt: "now()"}, _or: [{end_date: {_is_null: true}}, {end_date: {_gt: "now()"}}], deleted_at: {_is_null: true}, enrollment_status: {_eq: "STUDENT_ENROLLMENT_STATUS_ENROLLED"}, location_id: {_in: $location_ids}, user: {user_role: {_eq: "student"}}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_StaffOneV8
        query: |
          query User_StaffOneV8($staff_id: String!) {
            staff: staff_by_pk(staff_id: $staff_id) {
              staff_id
              working_status
              start_date
              end_date
              user {
                user_external_id
                name
                last_name
                first_name
                full_name_phonetic
                last_name_phonetic
                first_name_phonetic
                email
                birthday
                gender
                remarks
                username
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    location_id
                    name
                    access_path
                    location_type
                    parent_location_id
                    is_archived
                  }
                }
                user_phone_numbers {
                  phone_number
                  type
                  user_phone_number_id
                }
              }
            }
          }
