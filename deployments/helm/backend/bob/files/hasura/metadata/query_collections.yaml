- name: allowed-queries
  definition:
    queries:
      - name: queryVideoIdByTypeForTest
        query: |-
          query queryVideoIdByTypeForTest($type: String!) {
            media(where: {type: {_eq: $type}}, limit: 2) {
              media_id
              name
              resource
            }
          }
      - name: queryStudentIdByStudentEmailForTest
        query: |-
          query queryStudentIdByStudentEmailForTest($email: String!) {
            students(where: {user: {email: {_eq: $email}}}, limit: 1) {
              student_id
            }
          }
      - name: CityOne
        query: |-
          query CityOne($city_id: Int = 0) {
            cities(where: {city_id: {_eq: $city_id}}) {
              ...CityAttrs
            }
          }

          fragment CityAttrs on cities {
            city_id
            country
            display_order
            name
          }
      - name: CityMany
        query: |-
          query CityMany($country: String, $city_id: Int, $name: String) {
            cities(where: {country: {_eq: $country}, city_id: {_eq: $city_id}, name: {_ilike: $name}}) {
              ...CityAttrs
            }
          }

          fragment CityAttrs on cities {
            city_id
            country
            display_order
            name
          }
      - name: DistrictOne
        query: |-
          query DistrictOne($district_id: Int = 0) {
            districts(where: {district_id: {_eq: $district_id}}) {
              ...DistrictAttrs
            }
          }

          fragment DistrictAttrs on districts {
            district_id
            country
            city_id
            name
          }
      - name: DistrictMany
        query: >-
          query DistrictMany($country: String, $district_id: Int, $name: String,
          $city_id: Int) {
            districts(where: {country: {_eq: $country}, city_id: {_eq: $city_id}, district_id: {_eq: $district_id}, name: {_ilike: $name}}) {
              ...DistrictAttrs
            }
          }


          fragment DistrictAttrs on districts {
            district_id
            country
            city_id
            name
          }
      - name: InfoNotificationMsgsOne
        query: |-
          query InfoNotificationMsgsOne($notification_msg_id: String!) {
            info_notification_msgs(where: {notification_msg_id: {_eq: $notification_msg_id}}) {
              ...InfoNotificationMsgsAttrs
            }
          }

          fragment InfoNotificationMsgsAttrs on info_notification_msgs {
            notification_msg_id
            title
            content
            media_ids
            created_at
            updated_at
          }
      - name: InfoNotificationsCountRead
        query: |-
          query InfoNotificationsCountRead($notification_id: [String!] = []) {
            info_notifications(order_by: {updated_at: desc}, where: {notification_id: {_in: $notification_id}}) {
              notification_id
              all_receiver_aggregate: users_info_notifications_aggregate {
                aggregate {
                  count
                }
              }
              read_aggregate: users_info_notifications_aggregate(where: {status: {_eq: "USER_NOTIFICATION_STATUS_READ"}}) {
                aggregate {
                  count
                }
              }
            }
          }
      - name: Notification_CountReadReceiversInfoNotifications
        query: |-
          query Notification_CountReadReceiversInfoNotifications($notification_id: [String!] = []) {
            info_notifications(order_by: [{updated_at: desc}], where: {notification_id: {_in: $notification_id}}) {
              notification_id
              all_receiver_aggregate: users_info_notifications_aggregate {
                aggregate {
                  count
                }
              }
              read_aggregate: users_info_notifications_aggregate(where: {status: {_eq: "USER_NOTIFICATION_STATUS_READ"}}) {
                aggregate {
                  count
                }
              }
            }
          }
      - name: LessonGroupsList
        query: >-
          query LessonGroupsList($course_id: String!, $limit: Int = 10, $offset:
          Int = 0) {
            lesson_groups(limit: $limit, offset: $offset, order_by: {created_at: desc}, where: {course_id: {_eq: $course_id}}) {
              ...LessonGroupAttrs
            }
            lesson_groups_aggregate(where: {course_id: {_eq: $course_id}}) {
              aggregate {
                count
              }
            }
          }


          fragment LessonGroupAttrs on lesson_groups {
            media_ids
            lesson_group_id
          }
      - name: LessonGroupById
        query: |-
          query LessonGroupById($lesson_group_id: String!) {
            lesson_groups(where: {lesson_group_id: {_eq: $lesson_group_id}}) {
              ...LessonGroupAttrs
            }
          }

          fragment LessonGroupAttrs on lesson_groups {
            media_ids
            lesson_group_id
          }
      - name: MediasOne
        query: |-
          query MediasOne($media_id: String = "") {
            media(where: {media_id: {_eq: $media_id}}) {
              ...MediaAttrs
            }
          }

          fragment MediaAttrs on media {
            media_id
            resource
            type
            name
          }
      - name: MediasList
        query: >-
          query MediasList($limit: Int = 10, $offset: Int = 0, $media_id:
          [String!], $resource: String, $type: String, $converted_images:
          Boolean, $comments: jsonb) {
            media(limit: $limit, offset: $offset, order_by: {created_at: desc}, where: {resource: {_eq: $resource}, type: {_eq: $type}, media_id: {_in: $media_id}, converted_images: {_is_null: $converted_images}, comments: {_contains: $comments}}) {
              ...MediaAttrs
            }
            media_aggregate(where: {resource: {_eq: $resource}, type: {_eq: $type}, media_id: {_in: $media_id}, converted_images: {_is_null: $converted_images}, comments: {_contains: $comments}}) {
              aggregate {
                count
              }
            }
          }


          fragment MediaAttrs on media {
            media_id
            resource
            type
            name
          }
      - name: ParentsMany
        query: |-
          query ParentsMany($student_ids: [String!]!) {
            student_parents(where: {student_id: {_in: $student_ids}}) {
              ...StudentParentAttrs
              parent_user {
                name
                email
                phone_number
                country
              }
            }
          }

          fragment StudentParentAttrs on student_parents {
            parent_id
            student_id
            relationship
            parent_user {
              name
              email
              phone_number
              country
            }
          }
      - name: PlansMany
        query: |-
          query PlansMany($country: String!, $plan_id: [String!]) {
            plans(order_by: {plan_id: asc, created_at: desc}, where: {country: {_eq: $country}, plan_id: {_in: $plan_id}}) {
              ...PlansAttrs
            }
          }

          fragment PlansAttrs on plans {
            plan_id
            country
          }
      - name: SchoolAdminsTitle
        query: |-
          query SchoolAdminsTitle($school_admin_id: String = "") {
            school_admins(where: {school_admin_id: {_eq: $school_admin_id}}) {
              ...SchoolAdminAttrs
            }
          }

          fragment SchoolAdminAttrs on school_admins {
            users {
              ...UserAttrs
            }
            school_admin_id
            school_admin_id
            created_at
            updated_at
          }

          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: SchoolAdminsOne
        query: |-
          query SchoolAdminsOne($school_admin_id: String = "") {
            school_admins(where: {school_admin_id: {_eq: $school_admin_id}}) {
              ...SchoolAdminAttrs
            }
          }

          fragment SchoolAdminAttrs on school_admins {
            users {
              ...UserAttrs
            }
            school_admin_id
            school_admin_id
            created_at
            updated_at
          }

          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: SchoolAdminsList
        query: >-
          query SchoolAdminsList($limit: Int = 10, $offset: Int = 0,
          $school_admin_id: [String!], $school_id: [Int!], $name: String) {
            school_admins(limit: $limit, offset: $offset, order_by: {created_at: desc, school_admin_id: desc}, where: {school_id: {_in: $school_id}, school_admin_id: {_in: $school_admin_id}, users: {name: {_ilike: $name}}}) {
              ...SchoolAdminAttrs
            }
            school_admins_aggregate(where: {school_id: {_in: $school_id}, school_admin_id: {_in: $school_admin_id}, users: {name: {_ilike: $name}}}) {
              aggregate {
                count
              }
            }
          }


          fragment SchoolAdminAttrs on school_admins {
            users {
              ...UserAttrs
            }
            school_admin_id
            school_admin_id
            created_at
            updated_at
          }


          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: SchoolAdminsMany
        query: |-
          query SchoolAdminsMany($school_admin_id: [String!] = []) {
            school_admins(where: {school_admin_id: {_in: $school_admin_id}}) {
              ...SchoolAdminAttrs
            }
          }

          fragment SchoolAdminAttrs on school_admins {
            users {
              ...UserAttrs
            }
            school_admin_id
            school_admin_id
            created_at
            updated_at
          }

          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: SchoolAdminsManyReference
        query: >-
          query SchoolAdminsManyReference($limit: Int = 30, $offset: Int = 0,
          $school_id: [Int!] = []) {
            school_admins(limit: $limit, offset: $offset, order_by: {created_at: desc}, where: {school_id: {_in: $school_id}}) {
              ...SchoolAdminAttrs
            }
            school_admins_aggregate(where: {school_id: {_in: $school_id}}) {
              aggregate {
                count
              }
            }
          }


          fragment SchoolAdminAttrs on school_admins {
            users {
              ...UserAttrs
            }
            school_admin_id
            school_admin_id
            created_at
            updated_at
          }


          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: SchoolConfigsOne
        query: |-
          query SchoolConfigsOne($school_id: Int = 0) {
            school_configs(where: {school_id: {_eq: $school_id}}) {
              ...SchoolConfigAttrs
            }
          }

          fragment SchoolConfigAttrs on school_configs {
            country
            created_at
            plan_duration
            plan_expired_at
            plan_id
            privileges
            school_id
          }
      - name: SchoolConfigsList
        query: >-
          query SchoolConfigsList($limit: Int = 10, $offset: Int = 0,
          $school_id: [Int!]) {
            school_configs(limit: $limit, offset: $offset, order_by: {created_at: desc, school_id: desc}, where: {school_id: {_in: $school_id}}) {
              ...SchoolConfigAttrs
            }
            school_configs_aggregate(where: {school_id: {_in: $school_id}}) {
              aggregate {
                count
              }
            }
          }


          fragment SchoolConfigAttrs on school_configs {
            country
            created_at
            plan_duration
            plan_expired_at
            plan_id
            privileges
            school_id
          }
      - name: SchoolConfigsMany
        query: |-
          query SchoolConfigsMany($school_id: [Int!] = []) {
            school_configs(where: {school_id: {_in: $school_id}}) {
              ...SchoolConfigAttrs
            }
          }

          fragment SchoolConfigAttrs on school_configs {
            country
            created_at
            plan_duration
            plan_expired_at
            plan_id
            privileges
            school_id
          }
      - name: SchoolsTitle
        query: |-
          query SchoolsTitle($school_id: Int = 0) {
            schools(where: {school_id: {_eq: $school_id}}) {
              school_id
              name
            }
          }
      - name: SchoolsOne
        query: |-
          query SchoolsOne($school_id: Int = 0) {
            schools(where: {school_id: {_eq: $school_id}}) {
              ...SchoolAttrs
              point
              classes_aggregate {
                aggregate {
                  count
                }
              }
            }
          }

          fragment SchoolAttrs on schools {
            school_id
            city_id
            district_id
            name
            country
            phone_number
            point
            is_system_school
          }
      - name: SchoolsList
        query: >-
          query SchoolsList($limit: Int = 10, $offset: Int = 0, $name: String,
          $phone_number: String, $school_id: [Int!], $is_system_school: Boolean)
          {
            schools(limit: $limit, offset: $offset, order_by: {created_at: desc}, where: {_or: [{name: {_ilike: $name}}, {phone_number: {_ilike: $phone_number}}], school_id: {_in: $school_id}, is_system_school: { _eq: $is_system_school } }) {
              ...SchoolAttrs
            }
            schools_aggregate(where: {_or: [{name: {_ilike: $name}}, {phone_number: {_ilike: $phone_number}}], school_id: {_in: $school_id}, is_system_school: { _eq: $is_system_school }}) {
              aggregate {
                count
              }
            }
          }


          fragment SchoolAttrs on schools {
            school_id
            city_id
            district_id
            name
            country
            phone_number
            point
            is_system_school
          }
      - name: SchoolsMany
        query: |-
          query SchoolsMany($school_id: [Int!] = []) {
            schools(where: {school_id: {_in: $school_id}}) {
              school_id
              name
              country
              city {
                name
              }
              district {
                city_id
                name
              }
              point
              phone_number
              is_system_school
            }
          }
      - name: SchoolsManyReference
        query: >-
          query SchoolsManyReference($name: String, $phone_number: String,
          $limit: Int = 30, $offset: Int = 0) {
            schools(limit: $limit, offset: $offset, order_by: {name: asc, created_at: desc}, where: {name: {_ilike: $name}, phone_number: {_ilike: $phone_number}}) {
              school_id
              name
              country
              city {
                name
              }
              district {
                city_id
                name
              }
              point
              phone_number
              is_system_school
            }
            schools_aggregate(where: {name: {_ilike: $name}, phone_number: {_ilike: $phone_number}}) {
              aggregate {
                count
              }
            }
          }
      - name: GradesOfStudent
        query: |-
          query GradesOfStudent($school_id: Int!) {
            students(distinct_on: current_grade, where: {current_grade: {_is_null: false}, school_id: {_eq: $school_id}}, order_by: {current_grade: asc}) {
              current_grade
            }
          }
      - name: StudentsListWithFilter
        query: >-
          query StudentsListWithFilter($name: String, $email: String, $limit:
          Int = 10, $offset: Int = 0, $order_by: students_order_by! =
          {created_at: desc}, $student_ids: [String!], $grades: [smallint!]) {
            students(where: {user: {name: {_ilike: $name}, email: {_ilike: $email}}, student_id: {_in: $student_ids}, current_grade: {_in: $grades}}, limit: $limit, offset: $offset, order_by: [$order_by]) {
              ...StudentFrg
            }
            students_aggregate(where: {user: {name: {_ilike: $name}, email: {_ilike: $email}}, student_id: {_in: $student_ids}, current_grade: {_in: $grades}}) {
              aggregate {
                count
              }
            }
          }


          fragment StudentFrg on students {
            student_id
            current_grade
            user {
              ...UserAttrs
            }
          }


          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: StudentsManyWithSchool
        query: |-
          query StudentsManyWithSchool($student_id: [String!] = []) {
            students(where: {student_id: {_in: $student_id}}, order_by: {created_at: desc}) {
              user {
                name
                user_id
              }
              school {
                name
              }
            }
          }
      - name: TeacherTitle
        query: |-
          query TeacherTitle($teacher_id: String!) {
            teachers(where: {teacher_id: {_eq: $teacher_id}}) {
              users {
                name
              }
            }
          }
      - name: TeacherOne
        query: |
          query TeacherOne($teacher_id: String!) {
            teachers(where: {teacher_id: {_eq: $teacher_id}}) {
              teacher_by_school_ids {
                school_id
              }
              ...TeacherAttrs
            }
          }

          fragment TeacherAttrs on teachers {
            users {
              name
              email
              avatar
              phone_number
              user_group
              country
            }
            teacher_id
          }
      - name: TeacherList
        query: >-
          query TeacherList($limit: Int = 10, $offset: Int = 0, $user_name:
          String, $user_email: String, $school_id: Int! = 0) {
            find_teacher_by_school_id(limit: $limit, offset: $offset, order_by: {created_at: desc}, args: {school_id: $school_id}, where: {name: {_ilike: $user_name}, email: {_ilike: $user_email}}) {
              name
              email
              user_id
            }
            find_teacher_by_school_id_aggregate(args: {school_id: $school_id}, where: {name: {_ilike: $user_name}, email: {_ilike: $user_email}}) {
              aggregate {
                count
              }
            }
          }
      - name: TeacherListWithoutTeacherIds
        query: >-
          query TeacherListWithoutTeacherIds($limit: Int = 10, $offset: Int = 0,
          $user_name: String, $user_email: String, $user_id: [String!] = [],
          $school_id: Int = 0) {
            find_teacher_by_school_id(limit: $limit, offset: $offset, order_by: {created_at: desc}, args: {school_id: $school_id}, where: {name: {_ilike: $user_name}, email: {_ilike: $user_email}, user_id: {_nin: $user_id}}) {
              name
              email
              user_id
              avatar
            }
            find_teacher_by_school_id_aggregate(args: {school_id: $school_id}, where: {name: {_ilike: $user_name}, email: {_ilike: $user_email}, user_id: {_nin: $user_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: TeacherMany
        query: |-
          query TeacherMany($user_id: [String!] = [], $school_id: Int = 0) {
            find_teacher_by_school_id(args: {school_id: $school_id}, where: {user_id: {_in: $user_id}}) {
              name
              email
              user_id
            }
          }
      - name: UsersTitle
        query: |-
          query UsersTitle($user_id: String!) {
            users(where: {user_id: {_eq: $user_id}}) {
              ...UserAttrs
            }
          }

          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: UserNameByIds
        query: |-
          query UserNameByIds($user_id: [String!] = []) {
            users(where: {user_id: {_in: $user_id}}) {
              user_id
              name
            }
          }
      - name: UsersMany
        query: |-
          query UsersMany($user_id: [String!] = []) {
            users(where: {user_id: {_in: $user_id}}) {
              ...UserAttrs
            }
            users_aggregate(where: {user_id: {_in: $user_id}}) {
              aggregate {
                count
              }
            }
          }

          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: UserByEmail
        query: >-
          query UserByEmail($email: String, $phone_number: String, $user_id:
          String) {
            users(where: {email: {_eq: $email}, phone_number: {_eq: $phone_number}, user_id: {_neq: $user_id}}) {
              ...UserAttrs
            }
          }


          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: UsersInfoNotificationsList
        query: >-
          query UsersInfoNotificationsList($notification_id: String!, $limit:
          Int = 10, $offset: Int = 0) {
            users_info_notifications(where: {notification_id: {_eq: $notification_id}}, limit: $limit, offset: $offset, order_by: {student_id: asc, user_group: desc}) {
              ...UsersInfoNotificationsAttrs
              student_id
              parent_id
            }
            users_info_notifications_aggregate(where: {notification_id: {_eq: $notification_id}}) {
              aggregate {
                count
              }
            }
          }


          fragment UsersInfoNotificationsAttrs on users_info_notifications {
            user_id
            user_notification_id
            notification_id
            current_grade
            course_ids
            status
            user_group
          }
      - name: Notification_GetUsersInfoNotificationsList
        query: >-
          query Notification_GetUsersInfoNotificationsList($notification_id: String!, $limit: Int = 10, $offset: Int = 0) {
            users_info_notifications(where: {notification_id: {_eq: $notification_id}}, limit: $limit, offset: $offset, order_by: [{student_id: asc}, {user_group: desc}]) {
              ...Notification_GetUsersInfoNotificationsListAttrs
              student_id
              parent_id
            }
            users_info_notifications_aggregate(where: {notification_id: {_eq: $notification_id}}) {
              aggregate {
                count
              }
            }
          }

          fragment Notification_GetUsersInfoNotificationsListAttrs on users_info_notifications {
            user_id
            user_notification_id
            notification_id
            current_grade
            course_ids
            status
            user_group
          }
      - name: StudentsManyReference
        query: >
          query StudentsManyReference($user_ids: [String!], $name: String,
          $email: String, $limit: Int = 30, $offset: Int = 0) {
            users(where: {user_group: {_eq: "USER_GROUP_STUDENT"}, user_id: {_in: $user_ids}, name: {_ilike: $name}, email: {_ilike: $email}}, limit: $limit, offset: $offset, order_by: {created_at: desc}) {
              ...StudentUserAttrs
            }
          }


          fragment StudentUserAttrs on users {
            user_id
            name
            email
            avatar
          }
      - name: Notification_GetStudentsManyReference
        query: >
          query Notification_GetStudentsManyReference($user_ids: [String!], $name: String,
          $email: String, $limit: Int = 30, $offset: Int = 0) {
            users(where: {user_group: {_eq: "USER_GROUP_STUDENT"}, user_id: {_in: $user_ids}, name: {_ilike: $name}, email: {_ilike: $email}}, limit: $limit, offset: $offset, order_by: [{created_at: desc}]) {
              ...Notification_GetStudentsManyReferenceAttrs
            }
          }


          fragment Notification_GetStudentsManyReferenceAttrs on users {
            user_id
            name
            email
            avatar
          }
      - name: StudentsListWithFilterOptimize
        query: |-
          query StudentsListByFiltersWithoutGrade(
                  $name: String
                  $email: String
                  $limit: Int = 10
                  $offset: Int = 0
                  $order_by: users_order_by! = { created_at: desc }
                  $student_ids: [String!]
                  $grades: [smallint!]
          ) {
              users(
                  where: {
                      name: { _ilike: $name }
                      email: { _ilike: $email }
                      user_id: { _in: $student_ids }
                      user_group: { _eq: "USER_GROUP_STUDENT" }
                      student: { current_grade: { _in: $grades } }
                  }
                  limit: $limit
                  offset: $offset
                  order_by: [$order_by]
              ) {
                  ...StudentWithoutGradeFrg
              }
              users_aggregate(
                  where: {
                      name: { _ilike: $name }
                      email: { _ilike: $email }
                      user_id: { _in: $student_ids }
                      user_group: { _eq: "USER_GROUP_STUDENT" }
                      student: { current_grade: { _in: $grades } }
                  }
              ) {
                  aggregate {
                      count(columns: user_id)
                  }
              }
          }

          fragment StudentWithoutGradeFrg on users {
              user_id
              name
              email
              phone_number
              country
          }
      - name: MediasMany
        query: |-
          query MediasMany($media_id: [String!] = []) {
            media(where: {media_id: {_in: $media_id}}) {
              ...MediaAttrs
              conversion_tasks(order_by: {created_at: desc}, limit: 1) {
                status
              }
            }
          }

          fragment MediaAttrs on media {
            media_id
            resource
            type
            name
          }
      - name: Notification_GetMediasManyByMediaIds
        query: |-
          query Notification_GetMediasManyByMediaIds($media_ids: [String!] = []) {
            media(where: {media_id: {_in: $media_ids}}) {
              ...MediaWithFileSizeAttrs
              conversion_tasks(order_by: {created_at: desc}, limit: 1) {
                status
              }
            }
          }


          fragment MediaWithFileSizeAttrs on media {
            media_id
            resource
            type
            name
            file_size_bytes
          }
      - name: Notification_GetMediasManyByMediaIdsV2
        query: |-
          query Notification_GetMediasManyByMediaIdsV2($media_ids: [String!] = []) {
            media(where: {media_id: {_in: $media_ids}}) {
              ...Notification_GetMediasManyByMediaIdsV2Attrs
              conversion_tasks(order_by: [{created_at: desc}], limit: 1) {
                status
              }
            }
          }


          fragment Notification_GetMediasManyByMediaIdsV2Attrs on media {
            media_id
            resource
            type
            name
            file_size_bytes
          }
      - name: Syllabus_MediasMany
        query: |
          query Syllabus_MediasMany($media_id: [String!] = []) {
            media(where: {media_id: {_in: $media_id}}) {
              ...MediaAttrs
            }
          }

          fragment MediaAttrs on media {
            media_id
            resource
            type
            name
          }
      - name: ParentsList
        query: >-
          query ParentsList($email: String, $name: String, $limit: Int = 30,
          $offset: Int = 0) {
            parents(limit: $limit, offset: $offset, where: {user: {_or: [{email: {_ilike: $email}}, {name: {_ilike: $name}}]}}) {
              ...ParentAttrs
            }
          }


          fragment ParentAttrs on parents {
            user {
              user_id
              name
              email
              phone_number
              country
            }
            student_parents {
              relationship
            }
          }
      - name: ParentsManyReference
        query: >
          query ParentsManyReference($email: String, $name: String, $limit: Int
          = 10, $offset: Int = 0) {
            users(
              limit: $limit
              offset: $offset
              where: {_and: [{user_group: {_eq: "USER_GROUP_PARENT"}}, {_or: [{email: {_ilike: $email}}, {name: {_ilike: $name}}]}]}
            ) {
              ...ParentAttrs
            }
          }


          fragment ParentAttrs on users {
            user_id
            name
            email
            phone_number
            country
          }
      - name: ParentRelationshipsByUserId
        query: |
          query ParentRelationshipsByUserId($userId: String, $limit: Int = 1) {
            student_parents(limit: $limit, where: {parent_id: {_eq: $userId}}) {
              relationship
            }
          }
      - name: getOneTeacher
        query: |
          query TeacherOne($teacher_id: String!) {
            teachers(where: {teacher_id: {_eq: $teacher_id}}) {
              teacher_by_school_ids {
                school_id
              }
              ...TeacherAttrs
            }
          }

          fragment TeacherAttrs on teachers {
            users {
              name
              email
              avatar
              phone_number
              user_group
              country
            }
            teacher_id
          }
      - name: StudentsList
        query: >
          query StudentsList($name: String, $email: String, $limit: Int = 10,
          $offset: Int = 0, $order_by: students_order_by! = {created_at: desc},
          $student_ids: [String!]) {
            students(
              where: {user: {name: {_ilike: $name}, email: {_ilike: $email}}, student_id: {_in: $student_ids}}
              limit: $limit
              offset: $offset
              order_by: [$order_by]
            ) {
              ...StudentFrg
            }
            students_aggregate(
              where: {user: {name: {_ilike: $name}, email: {_ilike: $email}}, student_id: {_in: $student_ids}}
            ) {
              aggregate {
                count
              }
            }
          }


          fragment StudentFrg on students {
            student_id
            current_grade
            user {
              ...UserAttrs
              last_login_date
            }
          }


          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: LessonsByCourseId
        query: |-
          query LessonsByCourseId($course_id: String!) {
              lessons(where: { course_id: { _eq: $course_id }, deleted_at: { _is_null: true } }) {
                  name
                  lesson_group_id
              }
          }
      - name: GradesOfStudentsList
        query: |-
          query GradesOfStudentsList($student_ids: [String!] = []) {
              students(where: { student_id: { _in: $student_ids } }) {
                  student_id
                  current_grade
                  enrollment_status
              }
          }
      - name: StudentsMany
        query: |
          query StudentsMany($user_ids: [String!] = []) {
            users(
              where: {user_group: {_eq: "USER_GROUP_STUDENT"}, user_id: {_in: $user_ids}}
            ) {
              ...StudentUserAttrs
            }
          }

          fragment StudentUserAttrs on users {
            user_id
            name
            email
            avatar
          }
      - name: TeacherManyReference
        query: >-
          query TeacherManyReference($limit: Int = 10, $offset: Int = 0, $email:
          String, $name: String, $school_id: Int! = 0) {
            find_teacher_by_school_id(limit: $limit, offset: $offset, order_by: {created_at: desc}, args: {school_id: $school_id}, where: {_or: [{name: {_ilike: $name}}, {email: {_ilike: $email}}]}) {
              name
              email
              user_id
              avatar
            }
          }
      - name: getMediaConvertedImageForTest
        query: |
          query getMediaConvertedImageForTest($id: String) {
            media(where: {media_id: {_eq: $id}}) {
             converted_images
            }
          }
      - name: StudentsListByFiltersWithoutGrade
        query: |-
          query StudentsListByFiltersWithoutGrade(
              $name: String
              $email: String
              $limit: Int = 10
              $offset: Int = 0
              $order_by: users_order_by! = { created_at: desc }
              $student_ids: [String!]
              $grades: [smallint!]
              $enrollment_status: String
          ) {
              users(
                  where: {
                      name: { _ilike: $name }
                      email: { _ilike: $email }
                      user_id: { _in: $student_ids }
                      user_group: { _eq: "USER_GROUP_STUDENT" }
                      student: {
                          current_grade: { _in: $grades }
                          enrollment_status: { _eq: $enrollment_status }
                      }
                  }
                  limit: $limit
                  offset: $offset
                  order_by: [$order_by]
              ) {
                  ...StudentWithoutGradeFrg
              }
              users_aggregate(
                  where: {
                      name: { _ilike: $name }
                      email: { _ilike: $email }
                      user_id: { _in: $student_ids }
                      user_group: { _eq: "USER_GROUP_STUDENT" }
                      student: {
                          current_grade: { _in: $grades }
                          enrollment_status: { _eq: $enrollment_status }
                      }
                  }
              ) {
                  aggregate {
                      count(columns: user_id)
                  }
              }
          }

          fragment StudentWithoutGradeFrg on users {
              user_id
              name
              email
              phone_number
              country
          }
      - name: CoursesMany
        query: |-
          query CoursesMany($course_id: [String!] = []) {
            courses(where: {course_id: {_in: $course_id}}) {
              ...CourseAttrs
            }
          }

          fragment CourseAttrs on courses {
              course_id
              name
              icon
              grade
              subject
              country
              school_id
              display_order
          }
      - name: CoursesManyReference
        query: >
          query CoursesManyReference($name: String, $limit: Int = 10, $offset:
          Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}
              where: {name: {_ilike: $name}}
            ) {
              ...CourseAttrs
            }
            courses_aggregate(where: {name: {_ilike: $name}}) {
              aggregate {
                count
              }
            }
          }


          fragment CourseAttrs on courses {
            course_id
            name
            icon
            grade
            subject
            country
            school_id
            display_order
          }
      - name: CourseTitle
        query: |-
          query CourseTitle($course_id: String!) {
            courses(where: { course_id: { _eq: $course_id } }) {
              name
            }
          }
      - name: CountStudentWithFilter
        query: >
          query CountStudentWithFilter($name: String, $email: String, $grades:
          [smallint!], $student_ids: [String!], $enrollment_status: String,
          $last_login_date: Boolean) {
            users_aggregate(
              where: {name: {_ilike: $name}, email: {_ilike: $email}, user_id: {_in: $student_ids}, user_group: {_eq: "USER_GROUP_STUDENT"}, last_login_date: {_is_null: $last_login_date}, student: {current_grade: {_in: $grades}, enrollment_status: {_eq: $enrollment_status}}}
            ) {
              aggregate {
                count(columns: user_id)
              }
            }
          }
      - name: PartnerFormConfigsOne
        query: |-
          query PartnerFormConfigsOne($feature_name: String, $school_id: Int) {
              partner_form_configs(
                  where: {
                      _and: [{ feature_name: { _eq: $feature_name }, partner_id: { _eq: $school_id } }]
                  }
                  order_by: { created_at: desc }
                  limit: 1
              ) {
                  form_config_id
                  form_config_data
              }
          }
      - name: LessonByLessonIdForLessonReport
        query: |-
          query LessonByLessonIdForLessonReport($lesson_id: String!) {
              lessons_by_pk(lesson_id: $lesson_id) {
                  lesson_id
                  lesson_type
                  start_time
                  end_time
                  teaching_model
                  lessons_teachers {
                      teacher {
                          users {
                              user_id
                              name
                              email
                          }
                      }
                  }
                  lesson_members {
                      attendance_remark
                      attendance_status
                      user {
                          user_id
                          name
                          email
                      }
                      course {
                          course_id
                          name
                          subject
                      }
                  }
              }
          }
      - name: LessonReportByLessonId
        query: |-
          query LessonReportByLessonId($lesson_id: String!) {
              lesson_reports(where: { lesson_id: { _eq: $lesson_id } }) {
                  lesson_id
                  lesson_report_id
                  report_submitting_status
                  partner_form_config {
                      form_config_id
                      feature_name
                      form_config_data
                  }
                  lesson_report_details {
                      lesson_report_detail_id
                      student {
                          student_id
                      }
                      partner_dynamic_form_field_values {
                          dynamic_form_field_value_id
                          value_type
                          int_value
                          int_set_value
                          int_array_value
                          string_value
                          string_set_value
                          string_array_value
                          bool_value
                          field_render_guide
                          field_id
                      }
                  }
              }
          }
      - name: PreviousLessonReportByCourseIdAndStudentIdAndId
        query: >-
          query PreviousLessonReportByCourseIdAndStudentIdAndId($user_id:
          String!, $report_course_id: String!, $report_id: String) {
            get_previous_report_of_student(args: {report_course_id: $report_course_id, user_id: $user_id, report_id: $report_id}) {
              form_config_id
              lesson_report_id
            }
          }
      - name: PartnerFormConfigById
        query: |-
          query PartnerFormConfigById($form_config_id: String!) {
              partner_form_configs(where: { form_config_id: { _eq: $form_config_id } }) {
                  form_config_data
              }
          }
      - name: PartnerDynamicFormFieldValuesByLessonReportDetailsIdAndStudentId
        query: >-
          query
          PartnerDynamicFormFieldValuesByLessonReportDetailsIdAndStudentId($user_id:
          String!, $report_id: String!) {
            get_partner_dynamic_form_field_values_by_student(args: {report_id: $report_id, user_id: $user_id}) {
              value_type
              string_value
              string_set_value
              string_array_value
              int_set_value
              int_array_value
              field_id
              bool_value
              int_value
            }
          }
      - name: CountSchoolAdminsWithFilter
        query: >-
          query CountSchoolAdminsWithFilter($school_id: Int!, $filterValue:
          String) {
            users_aggregate(
              where: {
                _and: [
                  {
                    school_admin: {school_id: {_eq: $school_id}}
                  },
                  {_or: [
                    {email: {_ilike: $filterValue}},
                    {name: {_ilike: $filterValue}}
                  ]}
                ]
              }
            )
            {
              aggregate {
                count
              }
            }
          }
      - name: GetSchoolAdminsBySchoolId
        query: >-
          query GetSchoolAdminsBySchoolId($limit: Int = 10, $offset: Int = 0,
          $school_id: Int!, $filterValue: String) {
            users(
              where: {
                _and: [
                  {
                    school_admin: {
                      school_id: {_eq: $school_id}
                    }
                  },
                  {_or: [
                    {email: {_ilike: $filterValue}},
                    {name: {_ilike: $filterValue}}
                  ]}
                ]
              },
              offset: $offset, order_by: {created_at: desc, user_id: desc}, limit: $limit
            )
            {
              user_id
              name
              email
              phone_number
            }
          }
      - name: LessonMemberByUserIdAndCourseIdAndLessonId
        query: |-
          query LessonMemberByUserIdAndCourseIdAndLessonId(
                  $user_id: String!
                  $course_id: String!
                  $lesson_id: String
              ) {
                  lesson_members(
                      where: {
                          user_id: { _eq: $user_id }
                          course_id: { _eq: $course_id }
                          lesson_id: { _eq: $lesson_id }
                      }
                  ) {
                      attendance_remark
                      attendance_status
                  }
              }
      - name: LessonReportByCourseIdAndStudentIdAndReportId
        query: |-
          query LessonReportByCourseIdAndStudentIdAndReportId(
                  $user_id: String!
                  $report_course_id: String!
                  $report_id: String
              ) {
                  get_previous_report_of_student(
                      args: { report_course_id: $report_course_id, user_id: $user_id, report_id: $report_id }
                  ) {
                      form_config_id
                      lesson_report_id
                      lesson_id
                  }
              }
      - name: LessonMemberByUserIdAndCourseIdAndLessonIdV2
        query: |-
          query LessonMemberByUserIdAndCourseIdAndLessonIdV2(
                  $user_id: String!
                  $course_id: String!
                  $lesson_id: String!
              ) {
                  lesson_members(
                      where: {
                          user_id: { _eq: $user_id }
                          course_id: { _eq: $course_id }
                          lesson_id: { _eq: $lesson_id }
                      }
                  ) {
                      attendance_remark
                      attendance_status
                  }
              }
      - name: PartnerFormConfigByIdV2
        query: |-
          query PartnerFormConfigByIdV2($form_config_id: String!) {
                partner_form_configs_by_pk(form_config_id: $form_config_id) {
                    form_config_data
                }
            }
      - name: LocationListByName
        query: >-
          query LocationListByName($limit: Int = 10, $offset: Int = 0, $name:
          String!) {
            locations(order_by: {created_at: desc}, limit: $limit, offset: $offset, where: {name: {_ilike: $name}}) {
              name
              location_id
            }
          }
      - name: LocationListByNameV2
        query: >-
          query LocationListByNameV2($limit: Int = 10, $offset: Int = 0, $name:
          String) {
            locations(order_by: {created_at: desc}, limit: $limit, offset: $offset, where: {name: {_ilike: $name}}) {
              name
              location_id
            }
          }
      - name: LocationListByIds
        query: |
          query LocationListByIds($location_ids: [String!] = []) {
            locations(where: {location_id: {_in: $location_ids}}) {
              name
              location_id
            }
          }
      - name: LessonByLessonIdForLessonReportV2
        query: |-
          query LessonByLessonIdForLessonReportV2($lesson_id: String!) {
            lessons_by_pk(lesson_id: $lesson_id) {
              lesson_id
              center_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              teaching_model
              scheduling_status
              start_time
              end_time
              lessons_teachers {
                teacher {
                  users {
                    user_id
                    name
                    email
                  }
                }
              }
              lesson_members {
                attendance_remark
                attendance_status
                course {
                  course_id
                  name
                  subject
                }
                user {
                  user_id
                  name
                  email
                  student {
                    current_grade
                  }
                }
              }
            }
          }
      - name: LocationByLocationId
        query: |
          query LocationByLocationId($location_id: String!) {
            locations(where: { location_id: { _eq: $location_id}}) {
              location_id
              name
            }
          }
      - name: LessonByLessonIdForLessonManagement
        query: |-
          query LessonByLessonIdForLessonManagement($lesson_id: String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              lesson_id
              center_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              start_time
              end_time
              lessons_teachers {
                teacher {
                  users {
                    user_id
                    name
                    email
                  }
                }
              }
              lesson_members {
                attendance_remark
                attendance_status
                course {
                  course_id
                  name
                  subject
                }
                user {
                  user_id
                  name
                  email
                  student {
                    current_grade
                  }
                }
              }
            }
          }
      - name: OrganizationsManyReference
        query: >
          query OrganizationsManyReference($name: String, $limit: Int = 10,
          $offset: Int = 0) {
            organizations(
              limit: $limit
              offset: $offset
              where: { name: { _ilike: $name } }
            ) {
              ...OrganizationsAttrs
            }
          }


          fragment OrganizationsAttrs on organizations {
            tenant_id
            name
          }
      - name: StudentQRCodeByStudentIds
        query: |-
          query StudentQRCodeByStudentIds($student_ids: [String!] = []) {
            student_qr(where: {student_id: {_in: $student_ids}}) {
              qr_url
              qr_id
              student_id
            }
          }
      - name: PreviousLessonReportByCourseIdAndStudentIdAndIdAndLessonId
        query: >-
          query
          PreviousLessonReportByCourseIdAndStudentIdAndIdAndLessonId($user_id:
          String!, $report_course_id: String!, $report_id: String,
          $report_lesson_id: String) {
            get_previous_report_of_student_v2(args: {report_course_id: $report_course_id, user_id: $user_id, report_id: $report_id, report_lesson_id: $report_lesson_id}) {
              form_config_id
              lesson_report_id
            }
          }
      - name: PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonId
        query: >
          query
          PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonId($user_id:
          String!, $report_course_id: String!, $report_id: String,
          $report_lesson_id: String) {
            get_previous_report_of_student_v2(args: {report_course_id: $report_course_id, user_id: $user_id, report_id: $report_id, report_lesson_id: $report_lesson_id}) {
              form_config_id
              lesson_report_id
              lesson_id
            }
          }
      - name: StudentsManyReferenceByNameAndEmail
        query: >
          query StudentsManyReferenceByNameAndEmail($keyword: String, $limit:
          Int = 30, $offset: Int = 0) {
            users(where: {user_group: {_eq: "USER_GROUP_STUDENT"}, _or: [{email: {_ilike: $keyword}}, {name: {_ilike: $keyword}}]}, limit: $limit, offset: $offset, order_by: {created_at: desc}) {
              ...StudentUserAttrs
            }
          }


          fragment StudentUserAttrs on users {
            user_id
            name
            email
            avatar
          }
      - name: PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonIdV2
        query: >
          query
          PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonIdV2($report_user_id:
          String!, $report_course_id: String!, $report_id: String,
          $report_lesson_id: String) {
            get_previous_report_of_student_v3(args: {report_course_id: $report_course_id, report_user_id: $report_user_id, report_id: $report_id, report_lesson_id: $report_lesson_id}) {
              form_config_id
              lesson_report_id
              lesson_id
            }
          }
      - name: LocationsListByNameLowestLevel
        query: >
          query LocationsListByNameLowestLevel($limit: Int = 10, $offset: Int =
          0, $name: String = "") {
            get_locations_lowest_level(
              args: {location_limit: $limit, location_offset: $offset, location_search_name: $name}
            ) {
              name
              location_id
            }
          }
      - name: StudentEntryExitRecordsByStudentId
        query: >
          query StudentEntryExitRecordsByStudentId($student_id: String!, $limit:
          Int = 10, $offset: Int = 0) {
            student_entryexit_records(
              where: {student_id: {_eq: $student_id}}
              limit: $limit
              offset: $offset
            ) {
              entry_at
              entryexit_id
              exit_at
              student_id
            }
          }
      - name: UserAccessPathWithFilter
        query: |
          query User_UserAccessPathWithFilter($user_id: String!) {
            user_access_paths(where: {user_id: {_eq: $user_id}}) {
              location {
                location_id
                name
              }
            }
          }
      - name: User_UserAccessPathWithFilterV2
        query: |
          query User_UserAccessPathWithFilterV2($user_id: String!) {
            user_access_paths(where: {user_id: {_eq: $user_id}}) {
              location {
                location_id
                name
                access_path
                location_type
                parent_location_id
              }
            }
          }
      - name: EntryExit_StudentEntryExitRecordsWithAggregateByStudentId
        query: >
          query
          EntryExit_StudentEntryExitRecordsWithAggregateByStudentId($student_id:
          String!, $limit: Int = 10, $offset: Int = 0) {
            student_entryexit_records(
              where: {student_id: {_eq: $student_id}}
              limit: $limit
              offset: $offset
              order_by: {entry_at: desc}
            ) {
              entry_at
              entryexit_id
              exit_at
              student_id
            }
            student_entryexit_records_aggregate(where: {student_id: {_eq: $student_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: Lesson_LocationIdsByCourseId
        query: |-
          query Lesson_LocationIdsByCourseId($course_id: String!) {
            course_access_paths(where: { course_id: { _eq: $course_id } }) {
              location_id
            }
          }
      - name: Lesson_LocationIdsByCourseIdV2
        query: |-
          query Lesson_LocationIdsByCourseIdV2($course: String = "") {
            get_locations_active_by_course_id(
              args: {course: $course}
            ) {
              location_id
            }
          }
      - name: EntryExit_StudentEntryExitRecordsByStudentId
        query: >
          query EntryExit_StudentEntryExitRecordsByStudentId($student_id:
          String!, $limit: Int = 10, $offset: Int = 0) {
            student_entryexit_records(
              where: {student_id: {_eq: $student_id}, deleted_at: {_is_null: true}}
              limit: $limit
              offset: $offset
              order_by: {entry_at: desc}
            ) {
              entry_at
              entryexit_id
              exit_at
              student_id
              deleted_at
            }
            student_entryexit_records_aggregate(
              where: {student_id: {_eq: $student_id}, deleted_at: {_is_null: true}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_UserAccessPathByUserIds
        query: |
          query User_UserAccessPathByUserIds($user_ids: [String!] = []) {
            user_access_paths(where: {user_id: {_in: $user_ids}}) {
              user_id
              location {
                location_id
                name
                access_path
                location_type
                parent_location_id
              }
            }
          }
      - name: Users_OrganizationsManyReference
        query: |
          query Users_OrganizationsManyReference($domain_name: String) {
            organizations(where: {domain_name: {_eq: $domain_name}}) {
              tenant_id
              domain_name
            }
          }
      - name: Users_OrganizationsManyReferenceV2
        query: |
          query Users_OrganizationsManyReferenceV2($domain_name: String) {
            organizations(where: {domain_name: {_eq: $domain_name}}) {
              tenant_id
              domain_name
              logo_url
              organization_id
              name
            }
          }
      - name: Lesson_LessonGroupsListByLessonGroupIdsAndCourseId
        query: >
          query
          Lesson_LessonGroupsListByLessonGroupIdsAndCourseId($lesson_group_ids:
          [String!]!, $course_id: String, $limit: Int = 10, $offset: Int = 0) {
            lesson_groups(limit: $limit, offset: $offset, order_by: {lesson_group_id: asc}, where: {lesson_group_id: {_in: $lesson_group_ids}, course_id: {_eq: $course_id}}) {
              ...LessonGroupAttrs
            }
          }


          fragment LessonGroupAttrs on lesson_groups {
            media_ids
            lesson_group_id
          }
      - name: User_CoursesManyWithLocation
        query: |
          query User_CoursesManyWithLocation($course_id: [String!] = []) {
            courses(where: {course_id: {_in: $course_id}}) {
              ...User_CourseWithLocationAttrs
            }
          }

          fragment User_CourseWithLocationAttrs on courses {
            course_id
            name
            icon
            grade
            subject
            country
            school_id
            display_order
            course_access_paths {
              location {
                name
                location_type
                location_id
                parent_location_id
                access_path
              }
            }
          }
      - name: User_CoursesManyReferenceWithLocation
        query: >
          query User_CoursesManyReferenceWithLocation($name: String,
          $location_ids: [String!], $limit: Int = 10, $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}
              where: {name: {_ilike: $name}, course_access_paths: {location_id: {_in: $location_ids}}}
            ) {
              ...User_CourseWithLocationAttrs
            }
            courses_aggregate(
              where: {name: {_ilike: $name}, course_access_paths: {location_id: {_in: $location_ids}}}
            ) {
              aggregate {
                count
              }
            }
          }


          fragment User_CourseWithLocationAttrs on courses {
            course_id
            name
            icon
            grade
            subject
            country
            school_id
            display_order
            course_access_paths {
              location {
                name
                location_type
                location_id
                parent_location_id
                access_path
              }
            }
          }
      - name: User_CourseLocationsByIds
        query: |
          query User_CourseLocationsByIds($course_ids: [String!] = []) {
            course_access_paths(where: {course_id: {_in: $course_ids}}) {
              course_id
              location {
                location_id
                name
                access_path
                location_type
                parent_location_id
              }
            }
          }
      - name: User_LocationListByIds
        query: |
          query User_LocationListByIds($location_ids: [String!] = []) {
            locations(where: {location_id: {_in: $location_ids}}) {
              location_id
              name
              access_path
              location_type
              parent_location_id
            }
          }
      - name: User_OneCourseByCourseIdAndLocationId
        query: >
          query User_OneCourseByCourseIdAndLocationId($course_id: String!,
          $location_id: String!) {
            course_access_paths(
              where: {course_id: {_eq: $course_id}, location_id: {_eq: $location_id}}
            ) {
              location_id
              course_id
            }
          }
      - name: User_OneUserByUserIdAndLocationId
        query: >
          query User_OneUserByUserIdAndLocationId($location_id: String!,
          $user_id: String!) {
            user_access_paths(
              where: {location_id: {_eq: $location_id}, user_id: {_eq: $user_id}}
            ) {
              user_id
              location_id
            }
          }
      - name: User_UserAccessPathWithFilterV3
        query: |
          query User_UserAccessPathWithFilterV3($user_id: String!) {
            user_access_paths(where: {user_id: {_eq: $user_id}}) {
              location {
                location_id
                name
                access_path
                location_type
                parent_location_id
                is_archived
              }
            }
          }
      - name: User_UserAccessPathByUserIdsV2
        query: |
          query User_UserAccessPathByUserIdsV2($user_ids: [String!] = []) {
            user_access_paths(where: {user_id: {_in: $user_ids}}) {
              user_id
              location {
                location_id
                name
                access_path
                location_type
                parent_location_id
                is_archived
              }
            }
          }
      - name: Payment_LocationTypesByParentName
        query: |
          query Payment_LocationTypesByParentName($parentName: String) {
            location_types(where: {parent_name: {_eq: $parentName}}) {
              location_type_id
              display_name
              name
              parent_name
              parent_location_type_id
            }
          }
      - name: Payment_Eibanam_GetLowestLocationTypes
        query: |
          query Payment_Eibanam_GetLowestLocationTypes {
            get_lowest_location_types {
              location_type_id
              display_name
              name
              parent_name
              parent_location_type_id
            }
          }
      - name: Payment_Eibanam_GetLowestLocationTypesV2
        query: |
          query Payment_Eibanam_GetLowestLocationTypesV2 {
            get_lowest_location_types_v2 {
              location_type_id
              display_name
              name
              parent_name
              parent_location_type_id
              level
            }
          }
      - name: Arch_Eibanam_GetLocationTypes
        query: |
          query Arch_Eibanam_GetLocationTypes {
            location_types(where: {deleted_at: {_is_null: true}}, order_by: {level: asc}) {
              name
              display_name
              level
            }
          }
      - name: User_StaffList
        query: >
          query User_StaffList($limit: Int = 10, $offset: Int = 0, $user_name:
          String, $user_email: String, $school_id: Int! = 0) {
            find_teacher_by_school_id(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              args: {school_id: $school_id}
              where: {name: {_ilike: $user_name}, email: {_ilike: $user_email}}
            ) {
              name
              email
              user_id
            }
            find_teacher_by_school_id_aggregate(
              args: {school_id: $school_id}
              where: {name: {_ilike: $user_name}, email: {_ilike: $user_email}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_StaffOne
        query: |
          query User_StaffOne($teacher_id: String!) {
            teachers(where: {teacher_id: {_eq: $teacher_id}}) {
              teacher_by_school_ids {
                school_id
              }
              ...User_StaffAttrs
            }
          }

          fragment User_StaffAttrs on teachers {
            users {
              name
              email
              avatar
              phone_number
              user_group
              country
            }
            teacher_id
          }
      - name: User_UserGroupList
        query: |
          query User_UserGroupList($limit: Int = 10, $offset: Int = 0) {
            user_group(limit: $limit, offset: $offset, order_by: {created_at: desc}) {
              user_group_id
              user_group_name
            }
            user_group_aggregate {
              aggregate {
                  count
              }
            }
          }
      - name: >-
          Communication_Eibanam_InfoNotificationsGetStatusAndCountReadByNotificationId
        query: >
          query
          Communication_Eibanam_InfoNotificationsGetStatusAndCountReadByNotificationId($notification_id:
          String!) {
            info_notifications(where: {notification_id: {_eq: $notification_id}}) {
              status
              all_receiver_aggregate: users_info_notifications_aggregate {
                aggregate {
                  count
                }
              }
              read_aggregate: users_info_notifications_aggregate(where: {status: {_eq: "USER_NOTIFICATION_STATUS_READ"}}) {
                aggregate {
                  count
                }
              }
            }
          }
      - name: User_CoursesManyReferenceWithLocationV2
        query: >
          query User_CoursesManyReferenceWithLocationV2($name: String,
          $location_ids: [String!], $limit: Int = 10, $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}
              where: {name: {_ilike: $name}, course_access_paths: {location_id: {_in: $location_ids}}}
            ) {
              ...CourseAttrs
            }
          }


          fragment CourseAttrs on courses {
            course_id
            name
            icon
            grade
            subject
            country
            school_id
            display_order
          }
      - name: User_CourseLocationsByCourseId
        query: |
          query User_CourseLocationsByCourseId($course_id: String!) {
            course_access_paths(where: {course_id: {_eq: $course_id}}) {
              location {
                location_id
                name
                access_path
                location_type
                parent_location_id
              }
            }
          }
      - name: Communication_GetInfoNotificationByNotificationId
        query: >-
          query
          Communication_GetInfoNotificationByNotificationId($notification_id:
          String!) {
            info_notifications(where: {notification_id: {_eq: $notification_id}}) {
              ...InfoNotificationsAttrs
            }
          }


          fragment InfoNotificationsAttrs on info_notifications {
            notification_id
            notification_msg_id
            sent_at
            receiver_ids
            status
            type
            target_groups
            updated_at
            created_at
            editor_id
            event
            scheduled_at
          }
      - name: Communication_GetInfoNotificationByNotificationIdV2
        query: >-
          query
          Communication_GetInfoNotificationByNotificationIdV2($notification_id:
          String!) {
            info_notifications(where: {notification_id: {_eq: $notification_id}}) {
              ...InfoNotificationsWithQuestionnaireAttrs
            }
          }


          fragment InfoNotificationsWithQuestionnaireAttrs on info_notifications
          {
            notification_id
            notification_msg_id
            sent_at
            receiver_ids
            status
            type
            target_groups
            updated_at
            created_at
            editor_id
            event
            scheduled_at
            is_important
            questionnaire_id
          }
      - name: Notification_GetInfoNotificationsByNotificationId
        query: >-
          query
          Notification_GetInfoNotificationsByNotificationId($notification_id:
          String!) {
            info_notifications(where: {notification_id: {_eq: $notification_id}}) {
              ...InfoNotificationsWithQuestionnaireAndReceiverNameAttrs
            }
          }

          fragment InfoNotificationsWithQuestionnaireAndReceiverNameAttrs on info_notifications
          {
            notification_id
            notification_msg_id
            sent_at
            receiver_ids
            status
            type
            target_groups
            updated_at
            created_at
            editor_id
            event
            scheduled_at
            is_important
            questionnaire_id
            receiver_names
          }
      - name: Communication_GetQuestionnaireQuestionsByQuestionnaireId
        query: >-
          query
          Communication_GetQuestionnaireQuestionsByQuestionnaireId($questionnaire_id:
          String) {
                  questionnaire_questions(where: { questionnaire_id: { _eq: $questionnaire_id } }) {
                      ...QuestionnaireQuestionsAttrs
                  }
              }

          fragment QuestionnaireQuestionsAttrs on questionnaire_questions {
                  questionnaire_question_id
                  questionnaire_id
                  order_index
                  type
                  title
                  choices
                  is_required
                  created_at
                  updated_at
              }
      - name: >-
          Communication_GetQuestionnaireQuestionsByQuestionnaireIdAndSortByOrderIndex
        query: >-
          query
          Communication_GetQuestionnaireQuestionsByQuestionnaireIdAndSortByOrderIndex($questionnaire_id:
          String) {
                  questionnaire_questions(
                    where: { questionnaire_id: { _eq: $questionnaire_id }  }
                    order_by: {order_index: asc}
                  ) {
                      ...QuestionnaireQuestionsAttrs
                  }
              }

          fragment QuestionnaireQuestionsAttrs on questionnaire_questions {
              questionnaire_question_id
              questionnaire_id
              order_index
              type
              title
              choices
              is_required
              created_at
              updated_at
          }
      - name: >-
          Notification_GetQuestionnaireQuestionsByQuestionnaireIdAndSortByOrderIndex
        query: >-
          query
          Notification_GetQuestionnaireQuestionsByQuestionnaireIdAndSortByOrderIndex($questionnaire_id:
          String) {
                  questionnaire_questions(
                    where: { questionnaire_id: { _eq: $questionnaire_id }  }
                    order_by: [{order_index: asc}]
                  ) {
                      ...Notification_GetQuestionnaireQuestionsByQuestionnaireIdAndSortByOrderIndexAttrs
                  }
              }

          fragment Notification_GetQuestionnaireQuestionsByQuestionnaireIdAndSortByOrderIndexAttrs on questionnaire_questions {
              questionnaire_question_id
              questionnaire_id
              order_index
              type
              title
              choices
              is_required
              created_at
              updated_at
          }
      - name: Communication_GetQuestionnaireByQuestionnaireId
        query: >-
          query
          Communication_GetQuestionnaireByQuestionnaireId($questionnaire_id:
          String) {
                  questionnaires(where: { questionnaire_id: { _eq: $questionnaire_id } }) {
                      ...QuestionnaireAttrs
                  }
              }

          fragment QuestionnaireAttrs on questionnaires {
                  questionnaire_id
                  resubmit_allowed
                  expiration_date
                  created_at
                  updated_at
              }
      - name: Communication_GetUserAnswersByQuestionIds
        query: >
          query Communication_GetUserAnswersByQuestionIds($questionIds:
          [String!] = []) {
            questionnaire_user_answers(where: {questionnaire_question_id: {_in: $questionIds}}) {
              answer
              questionnaire_question_id
              submitted_at
              target_id
              user_id
              user_notification_id
            }
          }
      - name: Communication_GetTagsManyReference
        query: >
          query Communication_GetTagsManyReference($name: String, $limit: Int =
          30, $offset: Int = 0) {
            tags(limit: $limit, offset: $offset, where: {tag_name: {_ilike: $name}}, order_by: {updated_at: desc}) {
              ...TagAttrs
            }
            tags_aggregate(where: {tag_name: {_ilike: $name}}) {
              aggregate {
                count
              }
            }
          }


          fragment TagAttrs on tags {
            tag_id
            tag_name
            created_at
            updated_at
          }
      - name: Communication_GetListTagsByTagIds
        query: |
          query Communication_GetListTagsByTagIds($tag_ids: [String!] = []) {
            tags(where: { tag_id: { _in: $tag_ids } }) {
              ...TagAttrs
            }
          }
          fragment TagAttrs on tags {
            tag_id
            tag_name
            created_at
            updated_at
          }
      - name: Communication_GetGradesManyReference
        query: >
          query Communication_GetGradesManyReference($name: String, $limit: Int
          = 30, $offset: Int = 0) {
            grade(limit: $limit, offset: $offset, order_by: {sequence: asc}, where: {is_archived: {_eq: false}, name: {_ilike: $name}}) {
              ...Communication_GradeAttrs
            }
          }


          fragment Communication_GradeAttrs on grade {
            grade_id
            name
            sequence
            partner_internal_id
            created_at
            updated_at
          }
      - name: Communication_GetGradesByGradeIds
        query: |
          query Communication_GetGradesByGradeIds($grade_ids: [String!] = []) {
            grade(where: {grade_id: {_in: $grade_ids}}) {
              ...Communication_GradeAttrs
            }
          }
          fragment Communication_GradeAttrs on grade {
            grade_id
            name
            sequence
            partner_internal_id
            created_at
            updated_at
          }
      - name: Communication_GetTagsSelectedByNotificationId
        query: >
          query Communication_GetTagsSelectedByNotificationId($notification_id:
          String!) {
            tags(where: {info_notifications_tags: {notification_id: {_eq: $notification_id}}}, order_by: {updated_at:desc}) {
              ...TagAttrs
            }
          }

          fragment TagAttrs on tags {
            tag_id
            tag_name
            created_at
            updated_at
          }
      - name: Notification_GetTagsSelectedByNotificationId
        query: >
          query Notification_GetTagsSelectedByNotificationId($notification_id:
          String!) {
            tags(where: {info_notifications_tags: {notification_id: {_eq: $notification_id}}}, order_by: [{updated_at:desc}]) {
              ...Notification_GetTagsSelectedByNotificationIdAttrs
            }
          }

          fragment Notification_GetTagsSelectedByNotificationIdAttrs on tags {
            tag_id
            tag_name
            created_at
            updated_at
          }
      - name: User_UserGroupOne
        query: |
          query User_UserGroupOne($user_group_id: String!) {
            user_group(where: {user_group_id: {_eq: $user_group_id}}) {
              user_group_id
              user_group_name
            }
          }
      - name: User_GrantedRoleList
        query: >
          query User_GrantedRoleList($user_group_id: String!, $limit: Int = 10,
          $offset: Int = 0) {
            granted_role(
              where: {user_group_id: {_eq: $user_group_id}}
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
            ) {
              granted_role_id
              role {
                role_id
                role_name
              }
            }
            granted_role_aggregate(where: {user_group_id: {_eq: $user_group_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_GrantedRoleAccessPathByGrantedRoleIds
        query: >
          query User_GrantedRoleAccessPathByGrantedRoleIds($granted_role_ids:
          [String!] = []) {
            granted_role_access_path(where: {granted_role_id: {_in: $granted_role_ids}}) {
              granted_role_id
              location {
                location_id
                name
                parent_location_id
                access_path
                location_type
                is_archived
              }
            }
          }
      - name: Communication_Eibanam_InfoNotificationMsgsGetNotificationIdByTitle
        query: >
          query
          Communication_Eibanam_InfoNotificationMsgsGetNotificationIdByTitle($notificationTitle:
          String!) {
            info_notification_msgs(where: {title: {_eq: $notificationTitle}}) {
              info_notifications {
                notification_id
              }
              notification_msg_id
              title
            }
          }
      - name: Lesson_ClassAssociationByClassId
        query: |
          query Lesson_ClassAssociationByClassId($class_id: String!) {
            class_member_aggregate(where: {class_id: {_eq: $class_id}}, limit: 1) {
              aggregate {
                count
              }
            }
            lessons_aggregate(where: {class_id: {_eq: $class_id}}, limit: 1) {
              aggregate {
                count
              }
            }
          }
      - name: User_StaffListV2
        query: >
          query User_StaffListV2($limit: Int = 10, $offset: Int = 0, $user_name:
          String, $user_email: String, $school_id: Int! = 0) {
            find_teacher_by_school_id(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              args: {school_id: $school_id}
              where: {name: {_ilike: $user_name}, email: {_ilike: $user_email}}
            ) {
              name
              email
              user_id
              resource_path
            }
            find_teacher_by_school_id_aggregate(
              args: {school_id: $school_id}
              where: {name: {_ilike: $user_name}, email: {_ilike: $user_email}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_RoleList
        query: |
          query User_RoleList {
            role {
              role_id
              role_name
            }
            role_aggregate {
              aggregate {
                count
              }
            }
          }
      - name: Communication_UsersInfoNotificationsList
        query: >-
          query Communication_UsersInfoNotificationsList($notification_id:
          String!, $limit: Int = 10, $offset: Int = 0) {
            users_info_notifications(where: {notification_id: {_eq: $notification_id}}, limit: $limit, offset: $offset, order_by: {student_id: asc, user_group: desc}) {
              ...UsersInfoNotificationsWithQnStatusAttrs
              student_id
              parent_id
            }
            users_info_notifications_aggregate(where: {notification_id: {_eq: $notification_id}}) {
              aggregate {
                count
              }
            }
          }

          fragment UsersInfoNotificationsWithQnStatusAttrs on
          users_info_notifications {
            user_id
            user_notification_id
            notification_id
            current_grade
            course_ids
            status
            user_group
            qn_status
          }
      - name: Notification_GetUsersInfoNotificationsListWithQuestionnaireStatus
        query: >-
          query Notification_GetUsersInfoNotificationsListWithQuestionnaireStatus($notification_id:
          String!, $limit: Int = 10, $offset: Int = 0) {
            users_info_notifications(where: {notification_id: {_eq: $notification_id}}, limit: $limit, offset: $offset, order_by: [{student_id: asc}, {user_group: desc}]) {
              ...Notification_GetUsersInfoNotificationsListWithQuestionnaireStatusAttrs
              student_id
              parent_id
            }
            users_info_notifications_aggregate(where: {notification_id: {_eq: $notification_id}}) {
              aggregate {
                count
              }
            }
          }

          fragment Notification_GetUsersInfoNotificationsListWithQuestionnaireStatusAttrs on
          users_info_notifications {
            user_id
            user_notification_id
            notification_id
            current_grade
            course_ids
            status
            user_group
            qn_status
          }
      - name: EntryExit_StudentQrCodeByStudentIdsV2
        query: >
          query EntryExit_StudentQrCodeByStudentIdsV2($student_ids: [String!] =
          []) {
            student_qr(where: {student_id: {_in: $student_ids}}) {
              qr_url
              qr_id
              student_id
              version
            }
          }
      - name: Lesson_ClassListByCourseIdV3
        query: >
          query Lesson_ClassListByCourseIdV3($course_id: String!, $limit: Int =
          5, $offset: Int = 0, $order_by: [class_order_by!] = {name: asc}) {
            class(
              where: {course_id: {_eq: $course_id}}
              limit: $limit
              offset: $offset
              order_by: $order_by
            ) {
              class_id
              name
              location {
                location_id
                name
              }
            }
            class_aggregate(where: {course_id: {_eq: $course_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_ClassListWithFilter
        query: >
          query User_ClassListWithFilter($course_id: String!, $location_id:
          String!) {
            class(where: {course_id: {_eq: $course_id}, location_id: {_eq: $location_id}}) {
              class_id
              name
            }
          }
      - name: User_ClassMany
        query: |
          query User_ClassMany($class_ids: [String!] = []) {
            class(where: {class_id: {_in: $class_ids}}) {
              name
              class_id
            }
          }
      - name: Lesson_LessonByLessonIdForLessonManagementV2
        query: >-
          query Lesson_LessonByLessonIdForLessonManagementV2($lesson_id:
          String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              lesson_id
              center_id
              course {
                course_id
                name
              }
              class_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              start_time
              end_time
              lessons_teachers {
                teacher {
                  users {
                    user_id
                    name
                    email
                  }
                }
              }
              lesson_members {
                attendance_remark
                attendance_status
                course {
                  course_id
                  name
                  subject
                }
                user {
                  user_id
                  name
                  email
                  student {
                    current_grade
                  }
                }
              }
            }
          }
      - name: Lesson_ClassByClassIdForLessonManagement
        query: |-
          query Lesson_ClassByClassIdForLessonManagement($class_id: String!) {
            class(where: {class_id: {_eq: $class_id}}) {
              class_id
              name
            }
          }
      - name: Lesson_ClassManyForLessonManagement
        query: >-
          query Lesson_ClassManyForLessonManagement($class_ids: [String!] = [])
          {
            class(where: {class_id: {_in: $class_ids}}) {
              class_id
              name
            }
          }
      - name: User_Eibanam_GetPartnerInternalIdByLocationIds
        query: >
          query User_Eibanam_GetPartnerInternalIdByLocationIds($location_ids:
          [String!] = []) {
            locations(where: {location_id: {_in: $location_ids}}) {
              location_id
              partner_internal_id
            }
          }
      - name: Lesson_CourseManyReferenceByNameAndLocationId
        query: >
          query Lesson_CourseManyReferenceByNameAndLocationId($location_id:
          String!, $name: String, $limit: Int = 30, $order_by:
          [course_access_paths_order_by!] = {created_at: desc}) {
            course_access_paths(
              where: {_and: [{location_id: {_eq: $location_id}}, {course: {name: {_ilike: $name}}}]}
              limit: $limit
              order_by: $order_by
            ) {
              course {
                course_id
                name
              }
            }
          }
      - name: Lesson_ClassManyReferenceByNameAndCourseId
        query: >
          query Lesson_ClassManyReferenceByNameAndCourseId($location_id:
          String!, $course_id: String!, $name: String, $limit: Int = 30,
          $order_by: [class_order_by!] = {name: asc}) {
            class(
              where: {_and: [{course_id: {_eq: $course_id}}, {location_id: {_eq: $location_id}}, {name: {_ilike: $name}}]}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
            }
          }
      - name: User_RoleListV2
        query: |
          query User_RoleListV2($is_system: Boolean = false) {
            role(where: {is_system: {_eq: $is_system}}) {
              role_id
              role_name
            }
            role_aggregate(where: {is_system: {_eq: $is_system}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_UserGroupListV2
        query: >
          query User_UserGroupListV2($limit: Int = 10, $offset: Int = 0,
          $is_system: Boolean = false) {
            user_group(
              limit: $limit
              offset: $offset
              where: {is_system: {_eq: $is_system}}
              order_by: {created_at: desc}
            ) {
              user_group_id
              user_group_name
            }
            user_group_aggregate(where: {is_system: {_eq: $is_system}}) {
              aggregate {
                count
              }
            }
          }
      - name: Payment_GetStudentsMany
        query: |-
          query Payment_GetStudentsMany($studentIds: [String!]!) {
            students(where: {student_id: {_in: $studentIds}}) {
              enrollment_status
              student_external_id
              student_note
              student_id
              current_grade
              user {
                user_id
                name
                email
                user_group
                country
              }
            }
          }
      - name: Payment_GetStudentsManyV3
        query: |-
          query Payment_GetStudentsManyV3($studentIds: [String!]!) {
            students(where: {student_id: {_in: $studentIds}}) {
              enrollment_status
              student_external_id
              student_note
              student_id
              current_grade
              user {
                user_id
                email
                user_group
                country
                first_name
                last_name
                name
              }
            }
          }
      - name: User_StaffListV3
        query: >
          query User_StaffListV3($limit: Int = 10, $offset: Int = 0, $user_name:
          String) {
            staff(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {user: {name: {_ilike: $user_name}}}
            ) {
              staff_id
              user {
                email
                name
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
              }
            }
            staff_aggregate(where: {user: {name: {_ilike: $user_name}}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_StaffOneV2
        query: |
          query User_StaffOneV2($staff_id: String!) {
            staff(where: {staff_id: {_eq: $staff_id}}) {
              staff_id
              user {
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                ...UserAttrs
              }
            }
          }

          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: Timesheet_LocationListByIds
        query: |
          query Timesheet_LocationListByIds($location_ids: [String!] = []) {
            locations(where: {location_id: {_in: $location_ids}}) {
              ...Timesheet_LocationAttrs
            }
          }

          fragment Timesheet_LocationAttrs on locations {
            location_id
            name
          }
      - name: Timesheet_StaffListByIds
        query: |
          query Timesheet_StaffListByIds($staff_ids: [String!] = []) {
            users(where: {user_id: {_in: $staff_ids}}) {
              ...Timesheet_StaffAttrs
            }
          }

          fragment Timesheet_StaffAttrs on users {
            user_id
            name
            email
          }
      - name: Timesheet_LocationOne
        query: |
          query Timesheet_LocationOne($location_id: String!) {
            locations(where: {location_id: {_eq: $location_id}}) {
              ...Timesheet_LocationAttrs
            }
          }

          fragment Timesheet_LocationAttrs on locations {
            location_id
            name
          }
      - name: Timesheet_GrantedLocationListByOneStaff
        query: |-
          query Timesheet_GrantedLocationListByOneStaff($staff_id: String!) {
              user_group_member(where: { user_id: { _eq: $staff_id } }) {
                  user_group {
                      granted_roles {
                          granted_role_access_paths {
                              location {
                                  ...Timesheet_LocationAttrs
                              }
                          }
                      }
                  }
              }
          }

          fragment Timesheet_LocationAttrs on locations {
            location_id
            name
          }
      - name: Timesheet_LocationListByAccessPathAndNamePattern
        query: |-
          query Timesheet_LocationListByAccessPathAndNamePattern(
              $access_path: String
              $name: String
              $limit: Int = 10
              $offset: Int = 0
          ) {
              locations(
                  limit: $limit
                  offset: $offset
                  order_by: { created_at: desc, name: asc }
                  where: { _and: { access_path: { _similar: $access_path }, name: { _ilike: $name, _neq: "" } } }
              ) {
                  ...Timesheet_LocationAttrs
              }
          }

          fragment Timesheet_LocationAttrs on locations {
              location_id
              name
          }
      - name: Timesheet_StaffOne
        query: |
          query Timesheet_StaffOne($staff_id: String!) {
            users(where: {user_id: {_eq: $staff_id}}) {
              ...Timesheet_StaffAttrs
            }
          }

          fragment Timesheet_StaffAttrs on users {
            user_id
            name
            email
          }
      - name: Lesson_ClassManyByNullableCourseIdAndName
        query: >
          query Lesson_ClassManyByNullableCourseIdAndName($course_id: String,
          $name: String, $limit: Int = 30, $order_by: [class_order_by!] = {name:
          asc}) {
            class(
              where: {_and: [{course_id: {_eq: $course_id}}, {name: {_ilike: $name}}]}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
              course {
                course_id
              }
            }
          }
      - name: Lesson_ClassManyByLocationIdAndCourseIdAndName
        query: >
          query Lesson_ClassManyByLocationIdAndCourseIdAndName($location_id:
          String!, $course_id: String!, $name: String, $limit: Int = 30,
          $order_by: [class_order_by!] = {name: asc}) {
            class(
              where: {_and: [{location_id: {_eq: $location_id}}, {course_id: {_eq: $course_id}}, {name: {_ilike: $name}}]}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
            }
          }
      - name: Calendar_LocationListByLocationType
        query: >
          query Calendar_LocationListByLocationType($location_type_id: String!,
          $limit: Int = 100) {
            locations(limit: $limit, where: {location_type: {_eq: $location_type_id}}) {
              location_id
              name
              locations {
                location_id
                name
              }
              location_types {
                location_type_id
                display_name
                name
              }
            }
          }
      - name: Calendar_ClassroomListByLocationIdV2
        query: |
          query Calendar_ClassroomListByLocationIdV2($location_id: String!) {
            classroom(where: {location_id: {_eq: $location_id}, is_archived: {_eq: false}}) {
              classroom_id
              name
              room_area
              seat_capacity
            }
          }
      - name: Lesson_ClassManyByNullableCourseIdsAndName
        query: >
          query Lesson_ClassManyByNullableCourseIdsAndName($course_ids:
          [String!], $name: String, $limit: Int = 30, $order_by:
          [class_order_by!] = {name: asc}) {
            class(
              where: {_and: [{course_id: {_in: $course_ids}}, {name: {_ilike: $name}}]}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
            }
          }
      - name: Calendar_LocationsListByLocationTypes
        query: >
          query Calendar_LocationsListByLocationTypes($location_type_id:
          String!, $limit: Int = 100) {
            locations(limit: $limit, where: {location_type: {_eq: $location_type_id}}) {
              location_id
              name
              locations {
                location_id
                name
              }
              location_types {
                location_type_id
                display_name
                name
              }
              is_archived
            }
          }
      - name: Calendar_LocationsListByLocationTypeID
        query: >
          query Calendar_LocationsListByLocationTypeID($location_type_id:
          String!, $name: String, $limit: Int = 100) {
            locations(
              limit: $limit
              where: {location_type: {_eq: $location_type_id}, name: {_ilike: $name}}
            ) {
              location_id
              name
              locations {
                location_id
                name
              }
              location_types {
                location_type_id
                display_name
                name
              }
              is_archived
            }
          }
      - name: Calendar_LocationsListByLocationTypeIDV2
        query: >
          query Calendar_LocationsListByLocationTypeIDV2($location_type_id:
          String!, $name: String, $limit: Int = 100) {
            locations(limit: $limit, where: {is_archived: {_eq: false}, location_type: {_eq: $location_type_id}, name: {_ilike: $name}}) {
              location_id
              name
              locations {
                location_id
                name
              }
              location_types {
                location_type_id
                display_name
                name
              }
              is_archived
            }
          }
      - name: Calendar_LocationTypesList
        query: |
          query Calendar_LocationTypesList($limit: Int = 100) {
            location_types(limit: $limit) {
              name
              display_name
              location_type_id
              parent_location_type_id
              parent_name
              is_archived
            }
          }
      - name: User_UserGroupsManyReference
        query: >
          query User_UserGroupsManyReference($user_group_name: String, $limit:
          Int = 13, $offset: Int = 0) {
            user_group(limit: $limit, offset: $offset, where: {user_group_name: {_ilike: $user_group_name}}, order_by: {created_at: desc}) {
              user_group_id
              user_group_name
            }
          }
      - name: Timesheet_LocationList
        query: >
          query Timesheet_LocationList($name: String, $limit: Int = 10, $offset:
          Int = 0) {
            locations(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, name: asc}
              where: {name: {_ilike: $name}}
            ) {
              ...Timesheet_LocationAttrs
            }
          } fragment Timesheet_LocationAttrs on locations {
            location_id
            name
          }
      - name: Timesheet_StaffList
        query: >
          query Timesheet_StaffList($email: String, $name: String, $limit: Int =
          10, $offset: Int = 0) {
            users(
              limit: $limit
              offset: $offset
              where: {_and: [{_or: [{email: {_ilike: $email}}, {name: {_ilike: $name}}]}]}
            ) {
              ...Timesheet_StaffAttrs
            }
          } fragment Timesheet_StaffAttrs on users {
            user_id
            name
            email
          }
      - name: Timesheet_StaffListV2
        query: >
          query Timesheet_StaffListV2($keyword: String, $limit: Int = 10,
          $offset: Int = 0) {
            staff(
              limit: $limit
              offset: $offset
              where: {user: {_or: [{email: {_ilike: $keyword}}, {name: {_ilike: $keyword}}]}}
            ) {
              user {
                name
                email
              }
              staff_id
            }
          }
      - name: Lesson_LessonByLessonIdForLessonManagementV3
        query: >
          query Lesson_LessonByLessonIdForLessonManagementV3($lesson_id:
          String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              lesson_id
              center_id
              course {
                course_id
                name
              }
              class_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              scheduler_id
              start_time
              end_time
              lessons_teachers {
                teacher {
                  users {
                    user_id
                    name
                    email
                  }
                }
              }
              lesson_members {
                attendance_remark
                attendance_status
                course {
                  course_id
                  name
                  subject
                }
                user {
                  user_id
                  name
                  email
                  student {
                    current_grade
                  }
                }
              }
            }
          }
      - name: User_CountStudentWithLocationsFilter
        query: >
          query User_CountStudentWithLocationsFilter($name: String,
          $full_name_phonetic: String = "", $email: String, $grades:
          [smallint!], $student_ids: [String!], $enrollment_status: String,
          $last_login_date: Boolean, $location_ids: [String!]) {
            users_aggregate(
              where: {_or: [{name: {_ilike: $name}}, {full_name_phonetic: {_ilike: $full_name_phonetic}}], email: {_ilike: $email}, user_id: {_in: $student_ids}, user_group: {_eq: "USER_GROUP_STUDENT"}, last_login_date: {_is_null: $last_login_date}, student: {current_grade: {_in: $grades}, enrollment_status: {_eq: $enrollment_status}}, user_access_paths: {location_id: {_in: $location_ids}}}
            ) {
              aggregate {
                count(columns: user_id)
              }
            }
          }
      - name: Lesson_SchedulerBySchedulerId
        query: |
          query Lesson_SchedulerBySchedulerId($scheduler_id: String!) {
            scheduler(where: {scheduler_id: {_eq: $scheduler_id}}) {
              scheduler_id
              start_date
              end_date
              freq
            }
          }
      - name: User_StaffListV4
        query: >
          query User_StaffListV4($limit: Int = 10, $offset: Int = 0, $user_name:
          String) {
            staff(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {user: {name: {_ilike: $user_name}}}
            ) {
              staff_id
              user {
                email
                name
                resource_path
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
              }
            }
            staff_aggregate(where: {user: {name: {_ilike: $user_name}}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_RoleListV3
        query: |
          query User_RoleListV3($is_system: Boolean = false) {
            role(
              where: {is_system: {_eq: $is_system}, role_name: {_in: ["Teacher", "School Admin"]}}
            ) {
              role_id
              role_name
            }
            role_aggregate(
              where: {is_system: {_eq: $is_system}, role_name: {_in: ["Teacher", "School Admin"]}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: EntryExit_StudentEntryExitRecordsWithAggregateByStudentIdV2
        query: >
          query
          EntryExit_StudentEntryExitRecordsWithAggregateByStudentIdV2($student_id:
          String!, $limit: Int = 10, $offset: Int = 0, $start_date: timestamptz,
          $end_date: timestamptz) {
            student_entryexit_records(
              where: {student_id: {_eq: $student_id}, entry_at: {_gte: $start_date, _lte: $end_date}}
              limit: $limit
              offset: $offset
              order_by: {entry_at: desc}
            ) {
              entry_at
              entryexit_id
              exit_at
              student_id
            }
            student_entryexit_records_aggregate(
              where: {student_id: {_eq: $student_id}, entry_at: {_gte: $start_date, _lte: $end_date}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_UserGroupsManyReferenceV2
        query: >
          query User_UserGroupsManyReferenceV2($user_group_name: String,
          $is_system: Boolean = false, $limit: Int = 13, $offset: Int = 0) {
            user_group(
              limit: $limit
              offset: $offset
              where: {user_group_name: {_ilike: $user_group_name}, is_system: {_eq: $is_system}}
              order_by: {created_at: desc}
            ) {
              user_group_id
              user_group_name
            }
          }
      - name: User_ImportSchoolInfos
        query: |
          mutation User_ImportSchoolInfos($data: [school_info_insert_input!]!) {
            insert_school_info(
              objects: $data
              on_conflict: {constraint: school_info_pk, update_columns: [school_name, school_name_phonetic, school_partner_id, school_level_id, address, is_archived, updated_at]}
            ) {
              affected_rows
            }
          }
      - name: User_ImportSchoolLevels
        query: >
          mutation User_ImportSchoolLevels($data: [school_level_insert_input!]!)
          {
            insert_school_level(
              objects: $data
              on_conflict: {constraint: school_level__pk, update_columns: [school_level_name, sequence, is_archived, updated_at]}
            ) {
              affected_rows
            }
          }
      - name: User_CountSchoolInfoByIds
        query: |-
          query User_CountSchoolInfoByIds($schoolInfoIds: [String!]!) {
            school_info_aggregate(where: {school_id: {_in: $schoolInfoIds}}) {
              aggregate {
                count
              }
            }
          }
      - name: LessonGroupsListByIds
        query: >
          query LessonGroupsListByIds($lesson_group_ids: [String!]!, $course_id:
          String, $limit: Int = 10, $offset: Int = 0) {
            lesson_groups(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {lesson_group_id: {_in: $lesson_group_ids}, course_id: {_eq: $course_id}}
            ) {
              ...LessonGroupAttrs
            }
          }


          fragment LessonGroupAttrs on lesson_groups {
            media_ids
            lesson_group_id
          }
      - name: LessonByLessonId
        query: |
          query LessonByLessonId($lesson_id: String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              lesson_id
              lessons_courses {
                course {
                  name
                  course_id
                }
              }
              status
              end_time
              start_time
              name
              lessons_teachers {
                teacher {
                  users {
                    name
                    user_id
                    email
                  }
                }
              }
              lesson_members {
                user {
                  user_id
                  name
                  email
                  last_login_date
                  student {
                    student_id
                    current_grade
                    enrollment_status
                  }
                }
              }
              lesson_group_id
            }
          }
      - name: StudentsListByFiltersWithoutGradeAndAggregate
        query: >
          query StudentsListByFiltersWithoutGradeAndAggregate($name: String,
          $email: String, $limit: Int = 10, $offset: Int = 0, $order_by:
          users_order_by! = {created_at: desc}, $student_ids: [String!],
          $grades: [smallint!], $enrollment_status: String, $last_login_date:
          Boolean) {
            users(
              where: {name: {_ilike: $name}, email: {_ilike: $email}, user_id: {_in: $student_ids}, user_group: {_eq: "USER_GROUP_STUDENT"}, last_login_date: {_is_null: $last_login_date}, student: {current_grade: {_in: $grades}, enrollment_status: {_eq: $enrollment_status}}}
              limit: $limit
              offset: $offset
              order_by: [$order_by]
            ) {
              ...StudentWithoutGradeFrg
            }
          }


          fragment StudentWithoutGradeFrg on users {
            user_id
            name
            email
            phone_number
            country
            last_login_date
            resource_path
          }
      - name: Lesson_ClassListByCourseID
        query: >
          query Lesson_ClassListByCourseID($course_id: String!, $limit: Int = 5,
          $offset: Int = 0) {
            class(
              where: {course: {course_id: {_eq: $course_id}}}
              limit: $limit
              offset: $offset
            ) {
              class_id
              name
              location {
                location_id
                name
              }
            }
            class_aggregate(where: {course: {course_id: {_eq: $course_id}}}) {
              aggregate {
                count
              }
            }
          }
      - name: Lesson_ClassListByCourseIdV2
        query: >
          query Lesson_ClassListByCourseIdV2($course_id: String!, $limit: Int =
          5, $offset: Int = 0) {
            class(where: {course_id: {_eq: $course_id}}, limit: $limit, offset: $offset) {
              class_id
              name
              location {
                location_id
                name
              }
            }
            class_aggregate(where: {course_id: {_eq: $course_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetSchoolInfoByIdAndPartnerId
        query: >
          query User_GetSchoolInfoByIdAndPartnerId($schoolInfoId: String!,
          $schoolInfoPartnerId: String!) {
            school_info(where: {school_id: {eq: $schoolInfoId}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_CountSchoolLevelByIds
        query: |
          query User_CountSchoolLevelByIds($schoolLevelIds: [String!]!) {
            school_level_aggregate(where: {school_level_id: {_in: $schoolLevelIds}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_ImportSchoolCourses
        query: >
          mutation User_ImportSchoolCourses($data:
          [school_course_insert_input!]!) {
            insert_school_course(
              objects: $data
              on_conflict: {constraint: school_course__pk, update_columns: [school_course_name, school_course_name_phonetic, school_course_partner_id, school_id, is_archived, updated_at]}
            ) {
              affected_rows
            }
          }
      - name: User_CountSchoolCourseByIds
        query: |
          query User_CountSchoolCourseByIds($schoolCourseIds: [String!]!) {
            school_course_aggregate(where: {school_course_id: {_in: $schoolCourseIds}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetSchoolInfoIdByPartnerIds
        query: >
          query User_GetSchoolInfoIdByPartnerIds($schoolPartnerIds: [String!]!)
          {
            school_info(where: {school_partner_id: {_in: $schoolPartnerIds}}) {
              school_id
              school_partner_id
            }
          }
      - name: User_ImportSchoolLevelGrades
        query: >
          mutation User_ImportSchoolLevelGrades($data:
          [school_level_grade_insert_input!]!) {
            insert_school_level_grade(
              objects: $data
              on_conflict: {constraint: school_level_grade__pk, update_columns: []}
            ) {
              affected_rows
            }
          }
      - name: Users_PrefectureList
        query: |
          query Users_PrefectureList {
            prefecture(order_by: {prefecture_code: asc}) {
              prefecture_id
              name
            }
          }
      - name: Users_UserAddressByUserIds
        query: |
          query Users_UserAddressByUserIds($user_ids: [String!]) {
            user_address(where: {user_id: {_in: $user_ids}}) {
              user_id
              user_address_id
              postal_code
              city
              first_street
              second_street
              prefecture {
                prefecture_id
                name
              }
            }
          }
      - name: User_GetManyReferenceSchoolCourse
        query: >
          query User_GetManyReferenceSchoolCourse($school_id: String! = "",
          $name: String, $limit: Int = 10, $offset: Int = 0) {
            school_course(
              limit: $limit
              offset: $offset
              where: {school_id: {_eq: $school_id}, school_course_name: {_ilike: $name}}
            ) {
              school_course_id
              school_course_name
              is_archived
            }
          }
      - name: User_GetManyManyReferenceSchoolInfo
        query: >
          query User_GetManyManyReferenceSchoolInfo($school_level_id: String,
          $name: String, $limit: Int = 30, $offset: Int = 0) {
            school_info(
              limit: $limit
              offset: $offset
              where: {school_name: {_ilike: $name}, school_level_id: {_eq: $school_level_id}}
            ) {
              school_id
              school_name
              address
              is_archived
              school_level_id
            }
          }
      - name: User_StaffTimesheetConfig
        query: |
          query User_StaffTimesheetConfig($staff_id: String!) {
            staff(where: {staff_id: {_eq: $staff_id}}) {
              staff_id
              auto_create_timesheet
              updated_at
            }
          }
      - name: User_GetManyReferenceSchoolLevel
        query: >
          query User_GetManyReferenceSchoolLevel($school_id: String, $name:
          String, $limit: Int = 30, $offset: Int = 0) {
            school_level(
              where: {school_level_name: {_eq: $name}, school_infos: {school_id: {_eq: $school_id}}}
              limit: $limit
              offset: $offset
            ) {
              school_level_id
              school_level_name
              is_archived
              school_infos {
                school_id
              }
            }
          }
      - name: User_ImportUserTags
        query: |
          mutation User_ImportUserTags($data: [user_tag_insert_input!]!) {
            insert_user_tag(
              objects: $data
              on_conflict: {constraint: user_tag__pk, update_columns: [user_tag_name, user_tag_partner_id, is_archived, updated_at]}
            ) {
              affected_rows
            }
          }
      - name: User_CountUserTagByIds
        query: |
          query User_CountUserTagByIds($userTagIds: [String!]!) {
            user_tag_aggregate(where: {user_tag_id: {_in: $userTagIds}}) {
              aggregate {
                count
              }
            }
          }
      - name: Lesson_LessonReportListByLessonIds
        query: >
          query Lesson_LessonReportListByLessonIds($lesson_ids: [String!] = [])
          {
            lesson_reports(where: {lesson_id: {_in: $lesson_ids}}) {
              report_submitting_status
              lesson_report_id
              lesson_id
            }
          }
      - name: User_CountActiveSchoolInfoByPartnerIds
        query: >
          query User_CountActiveSchoolInfoByPartnerIds($schoolPartnerIds:
          [String!]!) {
            school_info_aggregate(
              where: {school_partner_id: {_in: $schoolPartnerIds}, is_archived: {_eq: false}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: Architecture_GetLowestLevelLocationTypes
        query: |
          query Architecture_GetLowestLevelLocationTypes {
            get_lowest_location_types {
              location_type_id
              name
            }
          }
      - name: Architecture_GetLowestLevelLocationTypesV2
        query: |
          query Architecture_GetLowestLevelLocationTypesV2 {
            get_lowest_location_types_v2 {
              location_type_id
              name
            }
          }
      - name: User_GetManySchoolHistoriesByStudentId
        query: >
          query User_GetManySchoolHistoriesByStudentId($student_id: String!,
          $limit: Int = 5, $offset: Int = 0) {
            school_history(
              limit: $limit
              offset: $offset
              where: {student_id: {_eq: $student_id}}
            ) {
              school_info {
                school_id
                school_name
                school_level {
                  school_level_id
                  school_level_name
                }
              }
              school_course {
                school_course_id
                school_course_name
              }
              start_date
              end_date
            }
            school_history_aggregate(where: {student_id: {_eq: $student_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_CountActiveSchoolLevelByIds
        query: |
          query User_CountActiveSchoolLevelByIds($schoolLevelIds: [String!]!) {
            school_level_aggregate(
              where: {school_level_id: {_in: $schoolLevelIds}, is_archived: {_eq: false}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetManyReferenceSchoolInfoV2
        query: >
          query User_GetManyReferenceSchoolInfoV2($school_level_id: String,
          $name: String, $limit: Int = 30, $offset: Int = 0) {
            school_info(
              limit: $limit
              offset: $offset
              where: {school_name: {_ilike: $name}, school_level_id: {_eq: $school_level_id}}
            ) {
              school_id
              school_name
              address
              is_archived
              school_level_id
            }
          }
      - name: User_GetManyReferenceSchoolLevelV2
        query: >
          query User_GetManyReferenceSchoolLevelV2($school_id: String, $name:
          String, $limit: Int = 30, $offset: Int = 0) {
            school_level(
              where: {school_level_name: {_ilike: $name}, school_infos: {school_id: {_eq: $school_id}}}
              limit: $limit
              offset: $offset
            ) {
              school_level_id
              school_level_name
              is_archived
              school_infos {
                school_id
              }
            }
          }
      - name: Users_GetManyUserPhoneNumberByUserIds
        query: |
          query Users_GetManyUserPhoneNumberByUserIds($user_ids: [String!]) {
            user_phone_number(where: {user_id: {_in: $user_ids}}) {
              user_phone_number_id
              user_id
              phone_number
              type
            }
          }
      - name: User_GetFirstParentsListByStudentIds
        query: >
          query User_GetFirstParentsListByStudentIds($student_ids: _text = "{}")
          {
            get_first_parent_from_student_ids(args: {student_ids: $student_ids}) {
              student_id
              parent_id
              relationship
            }
          }
      - name: Lesson_LessonByLessonIdForLessonManagementV4
        query: >-
          query Lesson_LessonByLessonIdForLessonManagementV4($lesson_id:
          String!) {
               lessons(where: { lesson_id: { _eq: $lesson_id } }) {
                   is_locked
                   lesson_id
                   center_id
                   course {
                       course_id
                       name
                   }
                   class_id
                   lesson_group_id
                   teaching_medium
                   teaching_method
                   lesson_type
                   scheduling_status
                   scheduler_id
                   start_time
                   end_time
                   lessons_teachers {
                       teacher {
                           users {
                               user_id
                               name
                               email
                           }
                       }
                   }
                   lesson_members {
                       attendance_remark
                       attendance_status
                       course {
                           course_id
                           name
                           subject
                       }
                       user {
                           user_id
                           name
                           email
                           student {
                               current_grade
                           }
                       }
                   }
               }
           }
      - name: >-
          Lesson_PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonIdV3
        query: >-
          query
          Lesson_PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonIdV3($report_user_id:
          String!, $report_course_id: String!, $report_id: String,
          $report_lesson_id: String) {
            get_previous_report_of_student_v3(args: {report_course_id: $report_course_id, report_user_id: $report_user_id, report_id: $report_id, report_lesson_id: $report_lesson_id}) {
              form_config_id
              lesson_report_id
              lesson {
                lesson_id
                start_time
                end_time
              }
            }
          }
      - name: User_StudentsOneV6
        query: |
          query User_StudentsOneV6($id: String!) {
            students(where: {student_id: {_eq: $id}}) {
              enrollment_status
              student_external_id
              student_note
              contact_preference
              student_id
              current_grade
              grade_id
              grade {
                name
              }
              user {
                user_id
                name
                email
                avatar
                phone_number
                user_group
                country
                last_login_date
                gender
                birthday
                first_name
                last_name
                first_name_phonetic
                last_name_phonetic
                full_name_phonetic
              }
            }
          }
      - name: User_GetGradesOfStudentsListV2
        query: |
          query User_GetGradesOfStudentsListV2($student_ids: [String!] = []) {
            students(where: {student_id: {_in: $student_ids}}) {
              student_id
              current_grade
              enrollment_status
              grade_id
              grade {
                name
              }
            }
          }
      - name: User_GetAllGrades
        query: |
          query User_GetAllGrades {
            grade(where: {is_archived: {_eq: false}}, order_by: {sequence: asc}) {
              grade_id
              name
              sequence
              partner_internal_id
            }
          }
      - name: User_GetUserTagByIds
        query: |
          query User_GetUserTagByIds($userTagIds: [String!]!) {
            user_tag(where: {user_tag_id: {_in: $userTagIds}}) {
              user_tag_id
              user_tag_name
              user_tag_type
            }
          }
      - name: Lesson_GetPreviousLessonReportGroupByLessonId
        query: >
          query Lesson_GetPreviousLessonReportGroupByLessonId($lesson_id:
          String!) {
            get_previous_lesson_report_group(args: {lesson_id_query: $lesson_id}) {
              lesson_id
              lesson {
                class_id
                start_time
                end_time
                lesson_members {
                  user {
                    user_id
                    name
                    email
                  }
                }
              }
              lesson_report_id
              report_submitting_status
              partner_form_config {
                form_config_id
                feature_name
                form_config_data
              }
              lesson_report_details {
                lesson_report_detail_id
                partner_dynamic_form_field_values {
                  dynamic_form_field_value_id
                  value_type
                  int_value
                  int_set_value
                  int_array_value
                  string_value
                  string_set_value
                  string_array_value
                  bool_value
                  field_render_guide
                  field_id
                }
                student {
                  student_id
                }
              }
            }
          }
      - name: Lesson_GetClassMemberByClassId
        query: |-
          query Lesson_GetClassMemberByClassId($class_id: String!) {
            class_member(where: {class_id: {_eq: $class_id}}) {
              user_id
            }
          }
      - name: Lesson_CountClosedDaysByDateAndLocationV2
        query: >
          query Lesson_CountClosedDaysByDateAndLocationV2($date: date!,
          $location_id: String!) {
            day_info_aggregate(
              where: {date: {_eq: $date}, day_type_id: {_eq: "closed"}, location_id: {_eq: $location_id}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetManySchoolHistoriesByStudentIdV2
        query: >
          query User_GetManySchoolHistoriesByStudentIdV2($student_id: String!,
          $limit: Int = 5, $offset: Int = 0) {
            school_history(
              limit: $limit
              offset: $offset
              where: {student_id: {_eq: $student_id}}
            ) {
              school_info {
                school_id
                school_name
                is_archived
                school_level {
                  school_level_id
                  school_level_name
                  is_archived
                }
              }
              school_course {
                school_course_id
                school_course_name
                is_archived
              }
              start_date
              end_date
            }
            school_history_aggregate(where: {student_id: {_eq: $student_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetManySchoolHistoriesByStudentIdV3
        query: >
          query User_GetManySchoolHistoriesByStudentIdV3($student_id: String!,
          $limit: Int = 5, $offset: Int = 0) {
            school_history(
              limit: $limit
              offset: $offset
              where: {student_id: {_eq: $student_id}}
              order_by: {school_info: {school_level: {sequence: desc}}}
            ) {
              school_info {
                school_id
                school_name
                is_archived
                school_level {
                  school_level_id
                  school_level_name
                  is_archived
                }
              }
              school_course {
                school_course_id
                school_course_name
                is_archived
              }
              start_date
              end_date
            }
            school_history_aggregate(where: {student_id: {_eq: $student_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_Eibanam_GetListGrade
        query: |
          query User_Eibanam_GetListGrade($limit: Int = 10) {
            grade(
              order_by: {created_at: desc}
              where: {is_archived: {_eq: false}}
              limit: $limit
            ) {
              grade_id
              name
              partner_internal_id
              sequence
            }
          }
      - name: User_Eibanam_GetListSchoolCourse
        query: |
          query User_Eibanam_GetListSchoolCourse($limit: Int = 10) {
            school_course(
              order_by: {created_at: desc}
              where: {is_archived: {_eq: false}}
              limit: $limit
            ) {
              school_course_id
              school_course_name
              school_course_partner_id
            }
          }
      - name: User_Eibanam_GetListSchoolInfo
        query: |
          query User_Eibanam_GetListSchoolInfo($limit: Int = 10) {
            school_info(
              order_by: {created_at: desc}
              where: {is_archived: {_eq: false}}
              limit: $limit
            ) {
              school_id
              school_name
              school_partner_id
            }
          }
      - name: User_Eibanam_GetListSchoolLevel
        query: |
          query User_Eibanam_GetListSchoolLevel($limit: Int = 10) {
            school_level(
              order_by: {created_at: desc}
              where: {is_archived: {_eq: false}}
              limit: $limit
            ) {
              school_level_id
              school_level_name
              sequence
            }
          }
      - name: User_Eibanam_CountSchoolLevelBySequence
        query: |
          query User_Eibanam_CountSchoolLevelBySequence($sequence: Int!) {
            school_level_aggregate(where: {sequence: {_eq: $sequence}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_Eibanam_GetListUserTag
        query: |
          query User_Eibanam_GetListUserTag($limit: Int = 10) {
            user_tag(
              order_by: {created_at: desc}
              where: {is_archived: {_eq: false}}
              limit: $limit
            ) {
              user_tag_id
              user_tag_name
              user_tag_partner_id
              user_tag_type
            }
          }
      - name: User_Eibanam_GetTagsByUserTagTypes
        query: >
          query User_Eibanam_GetTagsByUserTagTypes($user_tag_types: [String!],
          $user_tag_name: String, $limit: Int = 30) {
            user_tag(
              limit: $limit
              where: {is_archived: {_eq: false}, user_tag_type: {_in: $user_tag_types}, user_tag_name: {_ilike: $user_tag_name}}
            ) {
              user_tag_id
              user_tag_name
              user_tag_type
              user_tag_partner_id
            }
          }
      - name: Lesson_LessonByLessonIdForLessonManagementV5
        query: >
          query Lesson_LessonByLessonIdForLessonManagementV5($lesson_id:
          String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              is_locked
              lesson_id
              center_id
              course {
                course_id
                name
              }
              class_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              scheduler_id
              start_time
              end_time
              lessons_teachers {
                teacher {
                  users {
                    user_id
                    name
                    email
                  }
                }
              }
              lesson_members {
                attendance_remark
                attendance_status
                attendance_notice
                attendance_reason
                attendance_note
                course {
                  course_id
                  name
                  subject
                }
                user {
                  user_id
                  name
                  email
                  student {
                    current_grade
                  }
                }
              }
            }
          }
      - name: User_GetStudentIdsListByParentIds
        query: |
          query User_GetStudentIdsListByParentIds($parent_ids: [String!]!) {
            student_parents(where: {parent_id: {_in: $parent_ids}}) {
              student_id
            }
          }
      - name: User_GetManyUserPhoneNumberByPhoneNumberValue
        query: >
          query User_GetManyUserPhoneNumberByPhoneNumberValue($phone_number:
          String) {
            user_phone_number(where: {phone_number: {_ilike: $phone_number}}) {
              user_id
              type
            }
          }
      - name: Communication_GetCoursesManyReference
        query: >
          query Communication_GetCoursesManyReference($name: String, $limit: Int
          = 30, $offset: Int = 0) {
            courses(limit: $limit, offset: $offset, order_by: {created_at: desc, display_order: asc, name: asc}, where: {name: {_ilike: $name}}) {
              ...Communication_CourseAttrs
            }
          }

          fragment Communication_CourseAttrs on courses {
            course_id
            name
            icon
            grade
            subject
            country
            display_order
          }
      - name: Notification_GetCoursesManyReference
        query: >
          query Notification_GetCoursesManyReference($name: String, $limit: Int = 30, $offset: Int = 0) {
            courses(limit: $limit, offset: $offset, order_by: [{created_at: desc}, {display_order: asc}, {name: asc}], where: {name: {_ilike: $name}}) {
              ...Notification_GetCoursesManyReferenceAttrs
            }
          }

          fragment Notification_GetCoursesManyReferenceAttrs on courses {
            course_id
            name
            icon
            grade
            subject
            country
            display_order
          }
      - name: User_CountActiveGradesByIds
        query: |
          query User_CountActiveGradesByIds($gradeIds: [String!]!) {
            grade_aggregate(where: {grade_id: {_in: $gradeIds}, is_archived: {_eq: false}}) {
              aggregate {
                count
              }
            }
          }
      - name: Lesson_LessonMemberByUserIdAndCourseIdAndLessonId
        query: >
          query Lesson_LessonMemberByUserIdAndCourseIdAndLessonId($user_id:
          String!, $course_id: String!, $lesson_id: String!) {
            lesson_members(where: {user_id: {_eq: $user_id}, course_id: {_eq: $course_id}, lesson_id: {_eq: $lesson_id}}) {
              attendance_status
              attendance_notice
              attendance_reason
              attendance_note
              attendance_remark
            }
          }
      - name: User_StaffOneV3
        query: |
          query User_StaffOneV3($staff_id: String!) {
            staff(where: {staff_id: {_eq: $staff_id}}) {
              staff_id
              user {
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    location_id
                    name
                    access_path
                    location_type
                    parent_location_id
                    is_archived
                  }
                }
                ...UserAttrs
              }
            }
          }
          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: User_StaffOneV4
        query: |
          query User_StaffOneV4($staff_id: String!) {
            staff: staff_by_pk(staff_id: $staff_id) {
              staff_id
              user {
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    location_id
                    name
                    access_path
                    location_type
                    parent_location_id
                    is_archived
                  }
                }
                birthday
                gender
                user_phone_numbers {
                  phone_number
                  type
                  user_phone_number_id
                }
                ...UserAttrs
              }
            }
          }

          fragment UserAttrs on users {
            user_id
            name
            email
            avatar
            phone_number
            user_group
            country
          }
      - name: User_StaffListV5
        query: >
          query User_StaffListV5($limit: Int = 10, $offset: Int = 0, $user_name:
          String) {
            staff(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {user: {name: {_ilike: $user_name}}}
            ) {
              staff_id
              user {
                email
                name
                resource_path
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    name
                    location_id
                  }
                }
              }
            }
            staff_aggregate(where: {user: {name: {_ilike: $user_name}}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetManyCurrentSchoolsByStudentIds
        query: >
          query User_GetManyCurrentSchoolsByStudentIds($student_ids: [String!])
          {
            school_history(
              where: {student_id: {_in: $student_ids}, is_current: {_eq: true}}
            ) {
              student_id
              school_info {
                school_name
              }
            }
          }
      - name: User_GetManyStudentIdsBySchoolIds
        query: >
          query User_GetManyStudentIdsBySchoolIds($school_ids: [String!],
          $is_current: Boolean) {
            school_history(
              where: {school_id: {_in: $school_ids}, is_current: {_eq: $is_current}}
            ) {
              student_id
            }
          }
      - name: Lesson_TeacherList
        query: >-
          query Lesson_TeacherList($limit: Int = 10, $offset: Int = 0, $email:
          String, $name: String, $school_id: Int! = 0) {
            find_teacher_by_school_id_v2(limit: $limit, offset: $offset, order_by: {created_at: desc}, args: {school_id: $school_id}, where: {_or: [{name: {_ilike: $name}}, {email: {_ilike: $email}}]}) {
              name
              email
              user_id
              avatar
            }
          }
      - name: Lesson_TeacherList_v3
        query: >-
          query Lesson_TeacherList_v3($limit: Int = 10, $offset: Int = 0,
          $email: String, $name: String, $resource_path_id: String! = "") {
            find_teacher_by_resource_path(limit: $limit, offset: $offset, order_by: {created_at: desc}, args: {resource_path_id: $resource_path_id}, where: {_or: [{name: {_ilike: $name}}, {email: {_ilike: $email}}]}) {
              name
              email
              user_id
              avatar
            }
          }
      - name: Calendar_ClassById
        query: |
          query Calendar_ClassById($class_id: String!) {
            class(where: {class_id: {_eq: $class_id}}) {
              class_id
              name
            }
          }
      - name: Calendar_LessonGroupsById
        query: |
          query Calendar_LessonGroupsById($lesson_group_id: String!) {
            lesson_groups(where: {lesson_group_id: {_eq: $lesson_group_id}}) {
              media_ids
              lesson_group_id
            }
          }
      - name: Calendar_LessonByLessonId
        query: |
          query Calendar_LessonByLessonId($lesson_id: String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              is_locked
              lesson_id
              center_id
              course {
                course_id
                name
              }
              class_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              scheduler_id
              start_time
              end_time
              lessons_teachers {
                teacher {
                  users {
                    user_id
                    name
                    email
                  }
                }
              }
              lesson_members {
                attendance_remark
                attendance_status
                attendance_notice
                attendance_reason
                attendance_note
                course {
                  course_id
                  name
                  subject
                }
                user {
                  user_id
                  name
                  email
                  student {
                    current_grade
                  }
                }
              }
            }
          }
      - name: Calendar_LocationListByIds
        query: |
          query Calendar_LocationListByIds($location_ids: [String!] = []) {
            locations(where: {location_id: {_in: $location_ids}}) {
              name
              location_id
            }
          }
      - name: Calendar_MediaListByIds
        query: |
          query Calendar_MediaListByIds($media_ids: [String!] = []) {
            media(where: {media_id: {_in: $media_ids}}) {
              media_id
              resource
              type
              name
              conversion_tasks(order_by: {created_at: desc}, limit: 1) {
                status
              }
            }
          }
      - name: Calendar_SchedulerById
        query: |
          query Calendar_SchedulerById($scheduler_id: String!) {
            scheduler(where: {scheduler_id: {_eq: $scheduler_id}}) {
              scheduler_id
              start_date
              end_date
              freq
            }
          }
      - name: Calendar_ClassListByIds
        query: |
          query Calendar_ClassListByIds($class_ids: [String!] = []) {
            class(where: {class_id: {_in: $class_ids}}) {
              class_id
              name
            }
          }
      - name: Lesson_GetPreviousLessonReportIndividual
        query: >
          query Lesson_GetPreviousLessonReportIndividual($report_user_id:
          String!, $report_course_id: String!, $report_id: String,
          $report_lesson_id: String) {
            get_previous_report_of_student_v4(
              args: {report_course_id: $report_course_id, report_user_id: $report_user_id, report_id: $report_id, report_lesson_id: $report_lesson_id}
            ) {
              form_config_id
              lesson_report_id
              lesson {
                lesson_id
                start_time
                end_time
              }
            }
          }
      - name: Architecture_CourseByCourseId
        query: |
          query Architecture_CourseByCourseId($course_id: String!) {
            courses(where: {course_id: {_eq: $course_id}}) {
              course_id
              name
              teaching_method
              icon
              course_types {
                course_type_id
                name
              }
            }
          }
      - name: Architecture_CoursesList
        query: >
          query Architecture_CoursesList($name: String, $course_ids: [String!],
          $course_type_id: String, $limit: Int = 10, $offset: Int = 0) {
            courses(limit: $limit, offset: $offset, order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}, where: {name: {_ilike: $name}, course_id: {_in: $course_ids}, course_type_id: {_eq: $course_type_id}}) {
              course_id
              name
              teaching_method
              icon
              course_types {
                course_type_id
                name
              }
            }
            courses_aggregate(where: {name: {_ilike: $name}, course_id: {_in: $course_ids}, course_type_id: {_eq: $course_type_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetUsersTagsByIds
        query: >-
          query User_GetUsersTagsByIds($user_ids: [String!], $tag_ids:
          [String!]) {
              tagged_user(where: { user_id: { _in: $user_ids }, tag_id: { _in: $tag_ids } }) {
                  user_id
                  user_tag {
                      user_tag_id
                      user_tag_name
                      user_tag_type
                  }
              }
          }
      - name: User_GetTagsByUserTagTypes
        query: >
          query User_GetTagsByUserTagTypes($user_tag_types: [String!],
          $user_tag_name: String, $limit: Int = 30) {
            user_tag(
              limit: $limit
              where: {is_archived: {_eq: false}, user_tag_type: {_in: $user_tag_types}, user_tag_name: {_ilike: $user_tag_name}}
            ) {
              user_tag_id
              user_tag_name
              user_tag_type
            }
          }
      - name: User_GetStudentListWithFilter
        query: >
          query User_GetStudentListWithFilter($limit: Int = 10, $offset: Int =
          0, $order_by: users_order_by! = {created_at: desc}, $where:
          users_bool_exp! = {}) {
            users(where: $where, limit: $limit, offset: $offset, order_by: [$order_by]) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              resource_path
              student {
                contact_preference
              }
            }
          }
      - name: User_GetStudentListWithFilterV2
        query: >
          query User_GetStudentListWithFilterV2($limit: Int = 10, $offset: Int =
          0, $order_by: users_order_by! = {created_at: desc}, $where:
          users_bool_exp! = {}) {
            users(where: $where, limit: $limit, offset: $offset, order_by: [$order_by]) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              student {
                contact_preference
              }
            }
          }
      - name: User_CountStudentListWithFilter
        query: |
          query User_CountStudentListWithFilter($where: users_bool_exp! = {}) {
            users_aggregate(where: $where) {
              aggregate {
                count
              }
            }
          }
      - name: Architecture_CoursesTypeList
        query: >
          query Architecture_CoursesTypeList($name: String, $limit: Int = 10,
          $offset: Int = 0) {
            course_type(limit: $limit, offset: $offset, order_by: {created_at: desc, name: asc}, where: {name: {_ilike: $name}}) {
              course_type_id
              name
            }
            course_type_aggregate(where: {name: {_ilike: $name}}) {
              aggregate {
                count
              }
            }
          }
      - name: Payment_GetStudentsManyV4
        query: |-
          query Payment_GetStudentsManyV4($studentIds: [String!]!) {
              students(where: { student_id: { _in: $studentIds } }) {
                  enrollment_status
                  student_external_id
                  student_note
                  student_id
                  grade_id
                  user {
                      user_id
                      email
                      user_group
                      country
                      first_name
                      last_name
                      name
                  }
              }
          }
      - name: Lesson_GetAllGradesMaster
        query: |
          query Lesson_GetAllGradesMaster {
            grade(where: {is_archived: {_eq: false}}, order_by: {sequence: asc}) {
              grade_id
              name
              sequence
              partner_internal_id
            }
          }
      - name: User_GetManyStudentsByStudentIds
        query: >
          query User_GetManyStudentsByStudentIds($student_ids: [String!]!,
          $limit: Int = 5, $offset: Int = 0) {
            students(
              limit: $limit
              offset: $offset
              where: {student_id: {_in: $student_ids}}
            ) {
              student_id
              enrollment_status
              grade {
                grade_id
                name
              }
              user {
                name
                user_access_paths {
                  location {
                    location_id
                    name
                  }
                }
              }
            }
            students_aggregate(where: {student_id: {_in: $student_ids}}) {
              aggregate {
                count
              }
            }
          }
      - name: User_Eibanam_GetManyReferenceSchoolInfo
        query: >
          query User_Eibanam_GetManyReferenceSchoolInfo($school_level_id:
          String, $name: String, $limit: Int = 30, $offset: Int = 0) {
            school_info(
              limit: $limit
              offset: $offset
              where: {school_name: {_ilike: $name}, school_level_id: {_eq: $school_level_id}}
            ) {
              school_id
              school_name
              address
              is_archived
              school_level_id
              school_partner_id
            }
          }
      - name: User_GetStaffListWithFilter
        query: >
          query User_GetStaffListWithFilter($limit: Int = 10, $offset: Int = 0,
          $order_by: staff_order_by! = {created_at: desc}, $where:
          staff_bool_exp! = {}) {
            staff(limit: $limit, offset: $offset, order_by: [$order_by], where: $where) {
              staff_id
              working_status
              user {
                email
                name
                resource_path
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    name
                    location_id
                  }
                }
              }
            }
          }
      - name: User_CountStaffListWithFilter
        query: |
          query User_CountStaffListWithFilter($where: staff_bool_exp! = {}) {
            staff_aggregate(where: $where) {
              aggregate {
                count
              }
            }
          }
      - name: User_GetStudentsOfParentsListByParentIds
        query: >
          query User_GetStudentsOfParentsListByParentIds($parent_ids:
          [String!]!) {
            student_parents(where: {parent_id: {_in: $parent_ids}}) {
              parent_id
              student_user {
                name
                user_id
              }
            }
          }
      - name: User_GetParentIdsListByStudentIds
        query: |
          query User_GetParentIdsListByStudentIds($student_ids: [String!]!) {
            student_parents(where: {student_id: {_in: $student_ids}}) {
              student_id
              parent_id
            }
          }
      - name: User_GetTagsOfStudentParentByStudentIds
        query: >
          query User_GetTagsOfStudentParentByStudentIds($student_ids: [String!])
          {
            student_parents(where: {student_id: {_in: $student_ids}}) {
              student_user {
                user_id
                tagged_users {
                  user_tag {
                    is_archived
                    user_tag_name
                    user_tag_id
                    user_tag_type
                  }
                }
              }
              parent_user {
                user_id
                tagged_users {
                  user_tag {
                    is_archived
                    user_tag_name
                    user_tag_id
                    user_tag_type
                  }
                }
              }
            }
          }
      - name: Calendar_ClassManyByNullableCourseIdsAndName
        query: >
          query Calendar_ClassManyByNullableCourseIdsAndName($course_ids:
          [String!], $name: String, $limit: Int = 30, $order_by:
          [class_order_by!] = {name: asc}) {
            class(
              where: {_and: [{course_id: {_in: $course_ids}}, {name: {_ilike: $name}}]}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
            }
          }
      - name: Lesson_GradesByIds
        query: |
          query Lesson_GradesByIds($grade_ids: [String!]!) {
            grade(where: {grade_id: {_in: $grade_ids}}) {
              grade_id
              name
            }
          }
      - name: Lesson_StaffList
        query: >
          query Lesson_StaffList($limit: Int = 10, $offset: Int = 0, $email:
          String, $name: String) {
            staff(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {user: {_or: [{name: {_ilike: $name}}, {email: {_ilike: $email}}]}}
            ) {
              staff_id
              user {
                name
                email
              }
            }
          }
      - name: User_StaffOneV5
        query: |
          query User_StaffOneV5($staff_id: String!) {
            staff: staff_by_pk(staff_id: $staff_id) {
              staff_id
              working_status
              start_date
              end_date
              user {
                name
                email
                birthday
                gender
                remarks
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    location_id
                    name
                    access_path
                    location_type
                    parent_location_id
                    is_archived
                  }
                }
                user_phone_numbers {
                  phone_number
                  type
                  user_phone_number_id
                }
              }
            }
          }
      - name: Calendar_CoursesManyReference
        query: >
          query Calendar_CoursesManyReference($name: String, $limit: Int = 10,
          $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}
              where: {name: {_ilike: $name}}
            ) {
              ...Calendar_CourseAttrs
            }
          }


          fragment Calendar_CourseAttrs on courses {
            course_id
            name
            teaching_method
            icon
            course_types {
              course_type_id
              name
            }
          }
      - name: Calendar_ClassListByLocationIdsAndCourseIdsAndName
        query: >
          query Calendar_ClassListByLocationIdsAndCourseIdsAndName($course_ids:
          [String!], $location_ids: [String!] = [], $name: String, $limit: Int =
          30, $order_by: [class_order_by!] = {name: asc}) {
            class(
              where: {course_id: {_in: $course_ids}, name: {_ilike: $name}, location_id: {_in: $location_ids}}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
            }
          }
      - name: Calendar_CoursesListByLocationIdsAndName
        query: >
          query Calendar_CoursesListByLocationIdsAndName($name: String,
          $location_ids: [String!] = [], $limit: Int = 10, $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}
              where: {name: {_ilike: $name}, course_access_paths: {location_id: {_in: $location_ids}}}
            ) {
              ...Calendar_CourseAttrs
            }
          }


          fragment Calendar_CourseAttrs on courses {
            course_id
            name
            teaching_method
            icon
            course_types {
              course_type_id
              name
            }
          }
      - name: Calendar_StaffList
        query: >
          query Calendar_StaffList($limit: Int = 10, $offset: Int = 0, $email:
          String, $name: String) {
            staff(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {user: {_or: [{name: {_ilike: $name}}, {email: {_ilike: $email}}]}}
            ) {
              staff_id
              user {
                name
                email
              }
            }
          }
      - name: Calendar_StaffListByLocationIdsAndNameOrEmail
        query: >
          query Calendar_StaffListByLocationIdsAndNameOrEmail($limit: Int = 10,
          $offset: Int = 0, $email: String, $name: String, $location_ids:
          [String!] = []) {
            staff(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {user: {_or: [{name: {_ilike: $name}}, {email: {_ilike: $email}}], user_access_paths: {location_id: {_in: $location_ids}}}}
            ) {
              staff_id
              user {
                name
                email
              }
            }
          }
      - name: Calendar_StaffListByLocationIdsAndNameOrEmailV2
        query: >
          query Calendar_StaffListByLocationIdsAndNameOrEmailV2($limit: Int =
          10, $offset: Int = 0, $search_text: String, $location_ids:
          [String!] = [], $filtered_staff_ids: [String!] = []) {
            staff(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {user: {_or: [{name: {_ilike: $search_text}}, {email: {_ilike: $search_text}}], user_access_paths: {location_id: {_in: $location_ids}}}, staff_id: {_nin: $filtered_staff_ids}}
            ) {
              staff_id
              user {
                name
                email
              }
            }
          }
      - name: Calendar_CoursesListByLocationIdsAndNameV3
        query: >
          query Calendar_CoursesListByLocationIdsAndNameV3($name: String,
          $location_ids: [String!] = [], $filtered_course_ids: [String!] = [],
          $limit: Int = 10, $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: [{created_at: desc}, {display_order: asc}, {name: asc}, {course_id: asc}]
              where: {name: {_ilike: $name}, course_access_paths: {location_id: {_in: $location_ids}}, course_id: {_nin: $filtered_course_ids}}
            ) {
              ...Calendar_CourseAttrs
            }
          }


          fragment Calendar_CourseAttrs on courses {
            course_id
            name
            teaching_method
            icon
            course_types {
              course_type_id
              name
            }
          }
      - name: Calendar_ClassListByLocationIdsAndCourseIdsAndNameV2
        query: >
          query
          Calendar_ClassListByLocationIdsAndCourseIdsAndNameV2($course_ids:
          [String!], $location_ids: [String!] = [], $name: String, $limit: Int =
          30, $order_by: [class_order_by!] = {name: asc}) {
            class(
              where: {course_id: {_in: $course_ids}, name: {_ilike: $name}, location_id: {_in: $location_ids}}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
              course_id
            }
          }
      - name: Calendar_StudentsManyReferenceByNameAndEmail
        query: >
          query Calendar_StudentsManyReferenceByNameAndEmail($keyword: String,
          $limit: Int = 30, $offset: Int = 0) {
            users(
              where: {user_group: {_eq: "USER_GROUP_STUDENT"}, _or: [{email: {_ilike: $keyword}}, {name: {_ilike: $keyword}}]}
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
            ) {
              ...Calendar_StudentUserAttrs
            }
          }


          fragment Calendar_StudentUserAttrs on users {
            user_id
            name
            email
            avatar
          }
      - name: Calendar_StudentListByStatusAndLocationIdsAndNameOrEmail
        query: >
          query
          Calendar_StudentListByStatusAndLocationIdsAndNameOrEmail($keyword:
          String, $limit: Int = 30, $offset: Int = 0, $location_ids: [String!] =
          []) {
            users(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {user_group: {_eq: "USER_GROUP_STUDENT"}, student: {enrollment_status: {_in: ["STUDENT_ENROLLMENT_STATUS_POTENTIAL", "STUDENT_ENROLLMENT_STATUS_ENROLLED"]}}, user_access_paths: {location_id: {_in: $location_ids}}, _or: [{email: {_ilike: $keyword}}, {name: {_ilike: $keyword}}]}
            ) {
              ...Calendar_StudentUserAttrs
            }
          }


          fragment Calendar_StudentUserAttrs on users {
            user_id
            name
            email
            avatar
          }
      - name: Calendar_CountDayType
        query: |
          query Calendar_CountDayType($day_type_ids: [String!] = []) {
            day_type_aggregate(where: {day_type_id: {_in: $day_type_ids}}) {
              aggregate {
                count
              }
            }
          }
      - name: Calendar_ImportDayInfo
        query: |-
          mutation Calendar_ImportDayInfo($data: [day_info_insert_input!]!) {
              insert_day_info(
                  objects: $data
                  on_conflict: {
                      constraint: day_info_pk
                      update_columns: [updated_at, day_type_id, time_zone, opening_time, status]
                  }
              ) {
                  affected_rows
              }
          }
      - name: Lesson_ClassesByNameAndCourseIds
        query: >
          query Lesson_ClassesByNameAndCourseIds($course_ids: [String!], $name:
          String, $limit: Int = 30, $order_by: [class_order_by!] = {name: asc})
          {
            class(
              where: {_and: [{course_id: {_in: $course_ids}}, {name: {_ilike: $name}}]}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
              course_id
            }
          }
      - name: User_Eibanam_GetSchoolLevelGradeByIds
        query: >
          query User_Eibanam_GetSchoolLevelGradeByIds($grade_id: String,
          $school_level_id: String) {
            school_level_grade(
              where: {grade_id: {_eq: $grade_id}, school_level_id: {_eq: $school_level_id}}
            ) {
              grade_id
              school_level_id
            }
          }
      - name: Calendar_ClassroomListByLocationId
        query: |
          query Calendar_ClassroomListByLocationId($location_id: String!) {
            classroom(where: {location_id: {_eq: $location_id}, is_archived: {_eq: false}}) {
              classroom_id
              name
            }
          }
      - name: Calendar_LocationListByIdsV2
        query: |
          query Calendar_LocationListByIdsV2($location_ids: [String!] = []) {
            locations(where: {location_id: {_in: $location_ids}}) {
              name
              location_id
              is_archived
            }
          }
      - name: Calendar_LocationsListByLocationTypeIDV3
        query: >
          query Calendar_LocationsListByLocationTypeIDV3($location_type_id:
          String!, $name: String, $limit: Int = 100) {
            locations(
              limit: $limit
              where: {is_archived: {_eq: false}, location_type: {_eq: $location_type_id}, name: {_ilike: $name}}
              order_by: {updated_at: asc, created_at: asc}
            ) {
              location_id
              name
              locations {
                location_id
                name
              }
              location_types {
                location_type_id
                display_name
                name
              }
              is_archived
            }
          }
      - name: Lesson_LessonDetailByLessonId
        query: |
          query Lesson_LessonDetailByLessonId($lesson_id: String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              is_locked
              lesson_id
              center_id
              course {
                course_id
                name
              }
              class_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              scheduler_id
              start_time
              end_time
              lessons_teachers {
                teacher_id
              }
              lesson_members {
                attendance_remark
                attendance_status
                attendance_notice
                attendance_reason
                attendance_note
                course {
                  course_id
                  name
                  subject
                }
                user {
                  user_id
                  name
                  email
                  student {
                    current_grade
                  }
                }
              }
            }
          }
      - name: Lesson_StaffsByIds
        query: |
          query Lesson_StaffsByIds($staff_ids: [String!]!) {
            staff(where: {staff_id: {_in: $staff_ids}}) {
              staff_id
              user {
                name
                email
              }
            }
          }
      - name: Notification_GetClassesManyReference
        query: >
          query Notification_GetClassesManyReference($name: String, $limit: Int
          = 30, $order_by: [class_order_by!] = {name: asc}) {
            class(where: {_and: [{name: {_ilike: $name}}]}, limit: $limit, order_by: $order_by) {
              class_id
              name
            }
          }
      - name: Notification_GetClassesManyReferenceV2
        query: >
          query Notification_GetClassesManyReferenceV2($name: String, $limit: Int
          = 30, $order_by: [class_order_by!] = [{name: asc}]) {
            class(where: {_and: [{name: {_ilike: $name}}]}, limit: $limit, order_by: $order_by) {
              class_id
              name
            }
          }
      - name: User_GetManyEnrollmentStatusHistoryByStudentId
        query: >
          query User_GetManyEnrollmentStatusHistoryByStudentId($limit: Int = 5,
          $offset: Int = 0, $order_by:
          student_enrollment_status_history_order_by! = {created_at: desc},
          $where: student_enrollment_status_history_bool_exp! = {}) {
            student_enrollment_status_history(
              limit: $limit
              offset: $offset
              order_by: [$order_by]
              where: $where
            ) {
              student_id
              location_id
              enrollment_status
              start_date
              end_date
              order_id
              order_sequence_number
              location {
                name
              }
            }
            student_enrollment_status_history_aggregate(where: $where) {
              aggregate {
                count
              }
            }
          }
      - name: Lesson_ImportClassroom
        query: |-
          mutation Lesson_ImportClassroom($data: [classroom_insert_input!]!) {
            insert_classroom(
              objects: $data
              on_conflict: {
                  constraint: classroom_pk
                  update_columns: [updated_at, location_id, classroom_id, name, remarks, is_archived]
                }
            ) {
                affected_rows
            }
          }
      - name: Lesson_ClassroomsListByClassroomIds
        query: >
          query Lesson_ClassroomsListByClassroomIds($classroom_ids: [String!]!)
          {
            classroom(where: {classroom_id: {_in: $classroom_ids}}) {
              classroom_id
              name
              is_archived
              location_id
              remarks
            }
          }
      - name: Lesson_GetAllCourseTypes
        query: |-
          query Lesson_GetAllCourseTypes {
                  course_type {
                      course_type_id
                      name
                  }
              }
      - name: Lesson_CourseTypeByCourseId
        query: |
          query Lesson_CourseTypeByCourseId($course_id: String!) {
            course_type(where: {courses: {course_id: {_eq: $course_id}}}) {
              course_type_id
              name
            }
          }
      - name: Lesson_ClassroomsListByLocationId
        query: |-
          query Lesson_ClassroomsListByLocationId($location_id: String!) {
            classroom(where: {location_id: {_eq: $location_id}}) {
              classroom_id
              name
              is_archived
              location_id
              remarks
            }
          }
      - name: User_GetManyStudentParentsByStudentId
        query: |
          query User_GetManyStudentParentsByStudentId($student_id: String!) {
            student_parents(where: {student_id: {_eq: $student_id}}) {
              student_id
              parent_id
              relationship
              parent_user {
                name
                email
                phone_number
                country
                remarks
              }
            }
          }
      - name: User_GetManyParentPhoneNumbersByUserIds
        query: |
          query User_GetManyParentPhoneNumbersByUserIds($user_ids: [String!]) {
            user_phone_number(
              where: {type: {_in: ["PARENT_PRIMARY_PHONE_NUMBER", "PARENT_SECONDARY_PHONE_NUMBER"]}, user_id: {_in: $user_ids}}
            ) {
              user_id
              type
              phone_number
              user_phone_number_id
            }
          }
      - name: Lesson_GetLessonTimeListByLessonIds
        query: |
          query Lesson_GetLessonTimeListByLessonIds($lesson_ids: [String!]!) {
            lessons(where: {lesson_id: {_in: $lesson_ids}}) {
              lesson_id
              start_time
              end_time
            }
          }
      - name: Lesson_ClassroomListByLocationIdAndName
        query: |-
          query Lesson_ClassroomListByLocationIdAndName($location_id: String!, $name: String, $limit: Int = 30, $order_by: [classroom_order_by!] = {name: asc}) {
            classroom(where: {_and: [{location_id: {_eq: $location_id}}, {name: {_ilike: $name}}, {is_archived: {_eq: false}}]}, limit: $limit, order_by: $order_by) {
              classroom_id
              location_id
              is_archived
              remarks
              name
            }
          }
      - name: Payment_GetManyUserTagsByUserIdAndTagType
        query: >-
          query Payment_GetManyUserTagsByUserIdAndTagType($userIds: [String!]!,
          $userTagType: String) {
              tagged_user(
                  where: {
                      user_id: { _in: $userIds }
                      user_tag: { user_tag_type: { _eq: $userTagType } }
                  }
              ) {
                  user_id
                  user_tag {
                      user_tag_id
                      user_tag_name
                      user_tag_type
                      user_tag_partner_id
                  }
              }
          }
      - name: Lesson_GetManyClassroomsByLessonId
        query: |-
          query Lesson_GetManyClassroomsByLessonId($lesson_id: String!) {
            lesson_classrooms(where: {lesson_id: {_eq: $lesson_id}}) {
              lesson_id
              classroom {
                classroom_id
                name
                is_archived
                location_id
                remarks
              }
            }
          }
      - name: Lesson_ReallocationsByLessonIdAndStudentIds
        query: >
          query Lesson_ReallocationsByLessonIdAndStudentIds($student_ids:
          [String!]!, $new_lesson_id: String!) {
            reallocation(
              where: {student_id: {_in: $student_ids}, new_lesson_id: {_eq: $new_lesson_id}}
            ) {
              student_id
              original_lesson_id
            }
          }
      - name: Lesson_StaffListV2
        query: >
          query Lesson_StaffListV2($limit: Int = 30, $offset: Int = 0, $search_text: String) {
            staff(limit: $limit, offset: $offset, order_by: {created_at: desc}, where: {user: {_or: [{name: {_ilike: $search_text}}, {full_name_phonetic: {_ilike: $search_text}}, {email: {_ilike: $search_text}}]}}) {
              staff_id
              user {
                name
                email
                full_name_phonetic
              }
            }
          }
      - name: User_UserTags
        query: |
          query User_UserTag {
            user_tag {
              user_tag_id
              user_tag_partner_id
              user_tag_name
              user_tag_type
              is_archived
            }
          }
      - name: Lesson_StaffsByIdsV2
        query: >
          query Lesson_StaffsByIdsV2($staff_ids: [String!]!) {
            staff(where: {staff_id: {_in: $staff_ids}}) {
              staff_id
              user {
                name
                email
                full_name_phonetic
              }
            }
          }
      - name: User_GetEnrollmentStatusHistoryByStudentIdsList
        query: >
          query User_GetEnrollmentStatusHistoryByStudentIdsList($student_ids:
          [String!]) {
            student_enrollment_status_history(
              order_by: {created_at: desc}
              where: {student_id: {_in: $student_ids}, _or: [{end_date: {_is_null: true}}, {start_date: {_lt: "now()"}, end_date: {_gt: "now()"}}]}
            ) {
              student_id
              location_id
              enrollment_status
              start_date
              end_date
              comment
              location {
                name
              }
            }
          }
      - name: User_SchoolCourses
        query: |
          query User_SchoolCourses {
            school_course {
              school_course_id
              school_course_partner_id
              school_course_name
              school_course_name_phonetic
              school_id
              is_archived
            }
          }
      - name: User_SchoolCoursesV2
        query: |
          query User_SchoolCoursesV2 {
            school_course {
              school_course_id
              school_course_partner_id
              school_course_name
              school_course_name_phonetic
              is_archived
              school_info {
                  school_partner_id
              }
            }
          }
      - name: User_SchoolLevels
        query: |
          query User_SchoolLevels {
            school_level {
              school_level_id
              school_level_name
              sequence
              is_archived
            }
          }
      - name: User_Schools
        query: |
          query User_Schools {
            school_info {
              school_id
              school_partner_id
              school_name
              school_name_phonetic
              school_level_id
              address
              is_archived
            }
          }
      - name: User_GetStaffListWithFilterV2
        query: >
          query User_GetStaffListWithFilterV2($limit: Int = 10, $offset: Int =
          0, $order_by: users_order_by! = {created_at: desc}, $where:
          users_bool_exp! = {}) {
            users(limit: $limit, offset: $offset, order_by: [$order_by], where: $where) {
              email
              name
              resource_path
              staff {
                staff_id
                working_status
              }
            }
          }
      - name: User_CountStaffListWithFilterV2
        query: |
          query User_CountStaffListWithFilterV2($where: users_bool_exp! = {}) {
            users_aggregate(where: $where) {
              aggregate {
                count
              }
            }
          }
      - name: User_UserGroupMemberByUserIds
        query: |
          query User_UserGroupMemberByUserIds($user_ids: [String!] = []) {
            user_group_member(where: {user_id: {_in: $user_ids}}) {
              user_id
              user_group {
                user_group_id
                user_group_name
              }
            }
          }
      - name: Syllabus_CoursesManyReference
        query: |
          query Syllabus_CoursesManyReference($name: String, $limit: Int = 10, $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}
              where: {name: {_ilike: $name}}
            ) {
              course_id
              name
            }
          }
      - name: User_GetParentsManyReferenceByKeyword
        query: >
          query User_GetParentsManyReferenceByKeyword($keyword: String, $limit:
          Int = 10, $offset: Int = 0) {
            users(
              limit: $limit
              offset: $offset
              where: {_and: [{user_group: {_eq: "USER_GROUP_PARENT"}}, {_or: [{email: {_ilike: $keyword}}, {name: {_ilike: $keyword}}]}]}
            ) {
              user_id
              name
              email
              phone_number
              country
              remarks
            }
          }
      - name: Lesson_CoursesUnderLocations
        query: >
          query Lesson_CoursesUnderLocations($location_ids: [String!]!, $name:
          String, $limit: Int = 30, $offset: Int = 0) {
            courses(
              where: {_and: [{course_access_paths: {location_id: {_in: $location_ids}}}, {name: {_ilike: $name}}]}
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
            ) {
              ...CourseAttrs
            }
          }


          fragment CourseAttrs on courses {
            course_id
            name
            icon
            grade
            subject
            country
            school_id
            display_order
          }
      - name: Lesson_LessonDetailByLessonIdV2
        query: |
          query Lesson_LessonDetailByLessonIdV2($lesson_id: String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              is_locked
              lesson_id
              center_id
              course {
                course_id
                name
              }
              class_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              scheduler_id
              start_time
              end_time
              zoom_link
              zoom_owner_id
              zoom_id
              lessons_teachers {
                teacher_id
              }
              lesson_members {
                attendance_remark
                attendance_status
                attendance_notice
                attendance_reason
                attendance_note
                course {
                  course_id
                  name
                  subject
                }
                user {
                  user_id
                  name
                  email
                  student {
                    current_grade
                  }
                }
              }
            }
          }
      - name: Payment_GetParentIdsByStudentIds
        query: |
          query Payment_GetParentIdsByStudentIds($studentIds: [String!]!) {
            student_parents(where: {student_id: {_in: $studentIds}}) {
              parent_id
              student_id
            }
          }
      - name: User_GetStaffListWithFilterV3
        query: >
          query User_GetStaffListWithFilterV3($limit: Int = 10, $offset: Int =
          0, $order_by: staff_order_by! = {created_at: desc}, $where:
          staff_bool_exp! = {}) {
            staff(limit: $limit, offset: $offset, order_by: [$order_by], where: $where) {
              staff_id
              working_status
              user {
                email
                name
              }
            }
          }
      - name: User_GetManyPackageCoursesByPackageIds
        query: >
          query User_GetManyPackageCoursesByPackageIds($package_ids: [String!])
          {
            package_course(where: {package_id: {_in: $package_ids}}) {
              course_id
              package_id
            }
          }
      - name: User_GetManyProductsReference
        query: |
          query User_GetManyProductsReference($name: String, $limit: Int = 30) {
            product(
              limit: $limit
              where: {name: {_ilike: $name}, is_archived: {_eq: false}}
            ) {
              name
              product_id
            }
          }
      - name: User_GetManyProductsReferenceV2
        query: >
          query User_GetManyProductsReferenceV2($name: String, $product_tags:
          [String!], $limit: Int = 30) {
            product(
              limit: $limit
              where: {name: {_ilike: $name}, is_archived: {_eq: false}, product_tag: {_in: $product_tags}}
            ) {
              name
              product_id
            }
          }
      - name: Architecture_FutureLessonList
        query: >-
          fragment LessonAttrs on lessons {
            lesson_id
            start_time
            end_time
            scheduling_status
            center_id
            lessons_teachers {
              teacher_id
              teacher_name
            }
            teaching_medium
            teaching_method
            course_id
            class_id
          }


          query Architecture_FutureLessonList($limit: Int = 10, $offset: Int =
          0, $time: timestamptz) {
            lessons(limit: $limit, offset: $offset, where: {start_time: {_gte: $time}}, order_by: {start_time: asc, end_time: asc, lesson_id: asc}) {
              ...LessonAttrs
            }
            lessons_aggregate {
              aggregate {
                count
              }
            }
          }
      - name: User_GetSiblingsByStudentIds
        query: |
          query User_GetSiblingsByStudentIds($student_ids: [String!]!) {
            student_parents(where: {student_id: {_in: $student_ids}}) {
              student_id
              parent_id
              parent {
                student_parents {
                  student_id
                }
              }
            }
          }
      - name: User_GetUsersBasicInfoByIds
        query: >
          query User_GetUsersBasicInfoByIds($limit: Int, $offset: Int,
          $user_ids: [String!]!) {
            user_basic_info(
              limit: $limit
              offset: $offset
              where: {user_id: {_in: $user_ids}}
            ) {
              user_id
              name
              full_name_phonetic
              current_grade
              grade_id
            }
          }
      - name: Architecture_PastLessonList
        query: >
          query Architecture_PastLessonList($limit: Int = 10, $offset: Int = 0,
          $time: timestamptz) {
            lessons(
              limit: $limit
              offset: $offset
              where: {start_time: {_lte: $time}}
              order_by: {start_time: desc, end_time: desc, lesson_id: desc}
            ) {
              ...LessonAttrs
            }
            lessons_aggregate {
              aggregate {
                count
              }
            }
          }


          fragment LessonAttrs on lessons {
            lesson_id
            start_time
            end_time
            scheduling_status
            center_id
            lessons_teachers {
              teacher_id
              teacher_name
            }
            teaching_medium
            teaching_method
            course_id
            class_id
          }
      - name: GetManyGrantedPermissions
        query: |-
          query GetManyGrantedPermissions($permissions: [String!]!) {
            granted_permissions(where: { permission_name: { _in: $permissions } }) {
              permission_name
              location_id
              permission_id
              user_id
            }
          }
      - name: Lesson_ClassManyByNameAndCoursesUnderLocations
        query: >
          query Lesson_ClassManyByNameAndCoursesUnderLocations($name: String,
          $location_ids: [String!]!, $course_ids: [String!], $limit: Int = 30,
          $order_by: [class_order_by!] = {name: asc}) {
            class(
              where: {_and: [{course: {course_access_paths: {location_id: {_in: $location_ids}}, course_id: {_in: $course_ids}}}, {name: {_ilike: $name}}]}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
              course_id
            }
          }
      - name: User_GetCoursesManyReferenceV2
        query: >
          query User_GetCoursesManyReferenceV2($name: String, $courseIds:
          [String!], $limit: Int = 30, $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}
              where: {name: {_ilike: $name}, course_id: {_in: $courseIds}}
            ) {
              course_id
              name
            }
          }
      - name: Lesson_GetZoomOwnerList
        query: >
          query Lesson_GetZoomOwnerList($limit: Int = 10, $offset: Int = 0,
          $email: String) {
            zoom_account(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
              where: {email: {_ilike: $email}}
            ) {
              zoom_id
              email
            }
          }
      - name: User_GetManyStudentIdsByProductIds
        query: >-
          query User_GetManyStudentIdsByProductIds($productIds: [String!],
          $productStatus: String) {
            student_product(
              where: {product_id: {_in: $productIds}, product_status: {_eq: $productStatus}}
            ) {
              student_id
              product_id
            }
          }
      - name: User_GetManyStudentIdsByProductIdsV2
        query: >
          query User_GetManyStudentIdsByProductIdsV2($productIds: [String!],
          $productStatus: String, $product_tags: [String!]) {
            student_product(
              where: {product_id: {_in: $productIds}, product_status: {_eq: $productStatus}, product: {product_tag: {_in: $product_tags}}}
            ) {
              student_id
              product_id
            }
          }
      - name: Lesson_EnrollmentStudentStatusesUnderLocation
        query: >-
          query Lesson_EnrollmentStudentStatusesUnderLocation($where: [student_enrollment_status_history_bool_exp]) {
            student_enrollment_status_history(where: {_or: $where}) {
              student_id
              start_date
              enrollment_status
              location_id
            }
          }
      - name: User_GetParentsManyReferenceByKeywordV2
        query: >
          query User_GetParentsManyReferenceByKeywordV2($keyword: String,
          $limit: Int = 10, $offset: Int = 0) {
            parents(
              limit: $limit
              offset: $offset
              where: {user: {_or: [{name: {_ilike: $keyword}}, {email: {_ilike: $keyword}}]}}
            ) {
              parent_id
              user {
                ...UserParentAttrs
                name
              }
            }
          }


          fragment UserParentAttrs on users {
            email
            phone_number
            country
            remarks
            first_name
            last_name
            last_name_phonetic
            first_name_phonetic
          }
      - name: User_GetManyStudentParentsByStudentIdV2
        query: |
          query User_GetManyStudentParentsByStudentIdV2($student_id: String!) {
            student_parents(where: {student_id: {_eq: $student_id}}) {
              student_id
              parent_id
              relationship
              parent_user {
                ...UserParentAttrs
                full_name_phonetic
                name
              }
            }
          }

          fragment UserParentAttrs on users {
            email
            phone_number
            country
            remarks
            first_name
            last_name
            last_name_phonetic
            first_name_phonetic
          }
      - name: User_GetStaffListWithFilterV4
        query: >
          query User_GetStaffListWithFilterV4($limit: Int = 10, $offset: Int =
          0, $order_by: staff_order_by! = {created_at: desc}, $where:
          staff_bool_exp! = {}) {
            staff(limit: $limit, offset: $offset, order_by: [$order_by], where: $where) {
              staff_id
              working_status
              user {
                email
                name
                full_name_phonetic
              }
            }
          }
      - name: Architecture_ExportCourseTypes
        query: |
          query Architecture_ExportCourseTypes {
            course_type {
              course_type_id
              name
              remarks
              is_archived
            }
          }
      - name: User_StaffOneV6
        query: |
          query User_StaffOneV6($staff_id: String!) {
            staff: staff_by_pk(staff_id: $staff_id) {
              staff_id
              working_status
              start_date
              end_date
              user {
                name
                last_name
                first_name
                full_name_phonetic
                last_name_phonetic
                first_name_phonetic
                email
                birthday
                gender
                remarks
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    location_id
                    name
                    access_path
                    location_type
                    parent_location_id
                    is_archived
                  }
                }
                user_phone_numbers {
                  phone_number
                  type
                  user_phone_number_id
                }
              }
            }
          }
      - name: Lesson_GetZoomOwnerById
        query: |-
          query Lesson_GetZoomOwnerById($zoom_id: String!) {
                  zoom_account(where: { zoom_id: { _eq: $zoom_id } }) {
                      zoom_id
                      email
                  }
              }
      - name: >-
          Notification_GetUsersInfoNotificationsIndividualNamesByNotificationIdV2
        query: >
          query Notification_GetUsersInfoNotificationsIndividualNamesByNotificationIdV2($notification_id: String!, $limit: Int = 10, $offset: Int = 0, $order_by: [users_info_notifications_order_by!] = {student_name: asc, parent_name: asc}) {
            users_info_notifications(where: {notification_id: {_eq: $notification_id}}, limit: $limit, offset: $offset, order_by: $order_by) {
              ...Notification_UsersInfoNotificationsV2Attrs
            }
            users_info_notifications_aggregate(where: {notification_id: {_eq: $notification_id}}) {
              aggregate {
                count
              }
            }
          }

          fragment Notification_UsersInfoNotificationsV2Attrs on users_info_notifications {
            user_id
            user_notification_id
            notification_id
            current_grade
            course_ids
            status
            user_group
            student_name
            parent_name
            student_id
            parent_id
            grade_id
            qn_status
            is_individual
          }
      - name: >-
          Notification_GetUsersInfoNotificationsIndividualNamesByNotificationId
        query: >
          query Notification_GetUsersInfoNotificationsIndividualNamesByNotificationId($notification_id: String!, $limit: Int = 10, $offset: Int = 0, $order_by: [users_info_notifications_order_by!] = [{student_name: asc}, {parent_name: asc}]) {
            users_info_notifications(where: {notification_id: {_eq: $notification_id}}, limit: $limit, offset: $offset, order_by: $order_by) {
              ...Notification_GetUsersInfoNotificationsIndividualNamesByNotificationIdAttrs
            }
            users_info_notifications_aggregate(where: {notification_id: {_eq: $notification_id}}) {
              aggregate {
                count
              }
            }
          }

          fragment Notification_GetUsersInfoNotificationsIndividualNamesByNotificationIdAttrs on users_info_notifications {
            user_id
            user_notification_id
            notification_id
            current_grade
            course_ids
            status
            user_group
            student_name
            parent_name
            student_id
            parent_id
            grade_id
            qn_status
            is_individual
          }
      - name: User_GetManyStudentParentsByStudentIdV3
        query: |
          query User_GetManyStudentParentsByStudentIdV3($student_id: String!) {
            student_parents(where: {student_id: {_eq: $student_id}}) {
              student_id
              parent_id
              relationship
              parent_user {
                ...UserParentAttrs
                full_name_phonetic
                name
                user_external_id
              }
            }
          }

          fragment UserParentAttrs on users {
            email
            phone_number
            country
            remarks
            first_name
            last_name
            last_name_phonetic
            first_name_phonetic
          }
      - name: User_StudentsOneV7
        query: |
          query User_StudentsOneV7($id: String!) {
            students(where: {student_id: {_eq: $id}}) {
              enrollment_status
              student_note
              contact_preference
              student_id
              current_grade
              grade_id
              grade {
                name
              }
              user {
                user_external_id
                user_id
                name
                email
                avatar
                phone_number
                user_group
                country
                last_login_date
                gender
                birthday
                first_name
                last_name
                first_name_phonetic
                last_name_phonetic
                full_name_phonetic
              }
            }
          }
      - name: User_GetOneByExternalUserId
        query: >
          query User_GetOneByExternalUserId($user_id: String, $user_external_id:
          String) {
            users(
              where: {user_id: {_neq: $user_id}, user_external_id: {_eq: $user_external_id}}
            ) {
              user_id
              user_external_id
            }
          }
      - name: User_GetParentsManyReferenceByKeywordV3
        query: >
          query User_GetParentsManyReferenceByKeywordV3($keyword: String,
          $limit: Int = 10, $offset: Int = 0) {
            parents(
              limit: $limit
              offset: $offset
              where: {user: {_or: [{name: {_ilike: $keyword}}, {email: {_ilike: $keyword}}]}}
            ) {
              parent_id
              user {
                ...UserParentAttrs
                name
                user_external_id
              }
            }
          }

          fragment UserParentAttrs on users {
            email
            phone_number
            country
            remarks
            first_name
            last_name
            last_name_phonetic
            first_name_phonetic
          }
      - name: Lesson_GetManyGrantedPermissions
        query: >
          query Lesson_GetManyGrantedPermissions($permissions: [String!]!,
          $location_ids: [String!]) {
            granted_permissions(
              where: {permission_name: {_in: $permissions}, location_id: {_in: $location_ids}}
            ) {
              permission_name
              location_id
              permission_id
              user_id
            }
          }
      - name: Lesson_ClassManyByNameAndCoursesUnderLocationsV2
        query: >
          query Lesson_ClassManyByNameAndCoursesUnderLocationsV2($name: String,
          $location_ids: [String!], $course_ids: [String!], $limit: Int = 30,
          $order_by: [class_order_by!] = {name: asc}) {
            class(
              where: {_and: [{course: {course_access_paths: {location_id: {_in: $location_ids}}, course_id: {_in: $course_ids}}}, {name: {_ilike: $name}}]}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
              course_id
            }
          }
      - name: Lesson_CoursesUnderLocationsV2
        query: >
          query Lesson_CoursesUnderLocationsV2($location_ids: [String!], $name:
          String, $limit: Int = 30, $offset: Int = 0) {
            courses(
              where: {_and: [{course_access_paths: {location_id: {_in: $location_ids}}}, {name: {_ilike: $name}}]}
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
            ) {
              ...CourseAttrs
            }
          }

          fragment CourseAttrs on courses {
            course_id
            name
            icon
            grade
            subject
            country
            school_id
            display_order
          }
      - name: Notification_IndividualRecipientByStudentsAndParents
        query: >
          query Notification_IndividualRecipientByStudentsAndParents($keyword:
          String = "", $user_ids: _text = null, $limit: Int = 30) {
            find_parents_or_enrolled_students(args: {keyword: $keyword, user_ids: $user_ids}, limit: $limit, offset: 0) {
              user_id
              user_group
              name
              avatar
              email
            }
          }
      - name: Calendar_CourseTypeByCourseId
        query: |
          query Calendar_CourseTypeByCourseId($course_id: String!) {
            course_type(where: {courses: {course_id: {_eq: $course_id}}}) {
              course_type_id
              name
            }
          }
      - name: Timesheet_LowestLocationListByAccessPathAndNamePattern
        query: |-
          query Timesheet_LowestLocationListByAccessPathAndNamePattern(
              $access_path: String
              $name: String
              $limit: Int = 10
              $offset: Int = 0
          ) {
              get_locations_lowest_level_by_name_and_access_path(
                  args: {
                      granted_locations_id_pattern: $access_path
                      location_limit: $limit
                      location_offset: $offset
                      location_search_name: $name
                  }
              ) {
                  location_id
                  name
              }
          }
      - name: Notification_GetInfoNotificationsAudienceSelectorByNotificationId
        query: |-
          query Notification_GetInfoNotificationsAudienceSelectorByNotificationId($notification_id: String!) {
            info_notifications(where: {notification_id: {_eq: $notification_id}}) {
              ...InfoNotificationsAudienceSelectorAttrs
            }
          }

          fragment InfoNotificationsAudienceSelectorAttrs on info_notifications {
            notification_id
            notification_msg_id
            sent_at
            receiver_ids
            status
            type
            target_groups
            updated_at
            created_at
            editor_id
            event
            scheduled_at
            is_important
            questionnaire_id
            receiver_names
            generic_receiver_ids
            excluded_generic_receiver_ids
          }

      - name: Notification_GetClassListByClassIds
        query: |-
          query Notification_GetClassListByClassIds($class_ids: [String!] = []) {
            class(where: {class_id: {_in: $class_ids}}) {
              class_id
              name
            }
          }
      - name: Calendar_GetZoomOwnerById
        query: |-
          query Calendar_GetZoomOwnerById($zoom_id: String!) {
                  zoom_account(where: { zoom_id: { _eq: $zoom_id } }) {
                      zoom_id
                      email
                  }
              }
      - name: Calendar_EnrollmentStudentStatusesUnderLocation
        query: >-
          query Calendar_EnrollmentStudentStatusesUnderLocation($where: [student_enrollment_status_history_bool_exp]) {
            student_enrollment_status_history(where: {_or: $where}) {
              student_id
              start_date
              enrollment_status
              location_id
            }
          }
      - name: Calendar_ReallocationsByLessonIdAndStudentIds
        query: >
          query Calendar_ReallocationsByLessonIdAndStudentIds($student_ids:
          [String!]!, $new_lesson_id: String!) {
            reallocation(
              where: {student_id: {_in: $student_ids}, new_lesson_id: {_eq: $new_lesson_id}}
            ) {
              student_id
              original_lesson_id
            }
          }
      - name: Calendar_CoursesListByLocationIdsAndNameV2
        query: >
          query Calendar_CoursesListByLocationIdsAndNameV2($name: String,
          $location_ids: [String!] = [], $limit: Int = 10, $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: [{created_at: desc}, {display_order: asc}, {name: asc}, {course_id: asc}]
              where: {name: {_ilike: $name}, course_access_paths: {location_id: {_in: $location_ids}}}
            ) {
              ...Calendar_CourseAttrs
            }
          }


          fragment Calendar_CourseAttrs on courses {
            course_id
            name
            teaching_method
            icon
            course_types {
              course_type_id
              name
            }
          }
      - name: Calendar_LocationsListByLocationTypeIdV4
        query: >
          query Calendar_LocationsListByLocationTypeIdV4($location_type_id:
          String!, $name: String, $limit: Int = 100) {
            locations(
              limit: $limit
              where: {is_archived: {_eq: false}, location_type: {_eq: $location_type_id}, name: {_ilike: $name}}
              order_by: [{updated_at: asc}, {created_at: asc}]
            ) {
              location_id
              name
              locations {
                location_id
                name
              }
              location_types {
                location_type_id
                display_name
                name
              }
              is_archived
            }
          }
      - name: Architecture_CoursesListV2
        query: >
          query Architecture_CoursesListV2(
              $name: String
              $course_ids: [String!]
              $course_type_id: String
              $limit: Int = 10
              $offset: Int = 0
          ) {
              courses(
                  limit: $limit
                  offset: $offset
                  order_by: [
                      { created_at: desc }
                      { display_order: asc }
                      { name: asc }
                      { course_id: asc }
                  ]
                  where: {
                      name: { _ilike: $name }
                      course_id: { _in: $course_ids }
                      course_type_id: { _eq: $course_type_id }
                  }
              ) {
                  course_id
                  name
                  teaching_method
                  icon
                  course_types {
                      course_type_id
                      name
                  }
              }
              courses_aggregate(
                  where: {
                      name: { _ilike: $name }
                      course_id: { _in: $course_ids }
                      course_type_id: { _eq: $course_type_id }
                  }
              ) {
                  aggregate {
                      count
                  }
              }
          }
      - name: Architecture_CoursesTypeListV2
        query: >
          query Architecture_CoursesTypeListV2($name: String, $limit: Int = 10, $offset: Int = 0) {
              course_type(
                  limit: $limit
                  offset: $offset
                  order_by: [{ created_at: desc }, { name: asc }]
                  where: { name: { _ilike: $name } }
              ) {
                  course_type_id
                  name
              }
              course_type_aggregate(where: { name: { _ilike: $name } }) {
                  aggregate {
                      count
                  }
              }
          }
      - name: Syllabus_CoursesManyReferenceV2
        query: >
          query Syllabus_CoursesManyReferenceV2($name: String, $limit: Int = 10, $offset: Int = 0) {
              courses(
                  limit: $limit
                  offset: $offset
                  order_by: [
                      { created_at: desc }
                      { display_order: asc }
                      { name: asc }
                      { course_id: asc }
                  ]
                  where: { name: { _ilike: $name } }
              ) {
                  course_id
                  name
              }
          }

      - name: Syllabus_StudentGetFirstAndLastName
        query: |
          query Syllabus_StudentGetFirstAndLastName($studentId: String!) {
            students(where: { student_id: { _eq: $studentId } }) {
              user {
                first_name
                last_name
              }
            }
          }
      - name: Lesson_GetPreviousLessonReportGroupByLessonIdV2
        query: >
          query Lesson_GetPreviousLessonReportGroupByLessonIdV2($lesson_id:
          String!) {
            get_previous_lesson_report_group(args: {lesson_id_query: $lesson_id}) {
              lesson_id
              lesson {
                class_id
                start_time
                end_time
                lesson_members {
                  user {
                    user_id
                    name
                    email
                  }
                  attendance_note
                  attendance_notice
                  attendance_reason
                  attendance_status
                  attendance_remark
                }
              }
              lesson_report_id
              report_submitting_status
              partner_form_config {
                form_config_id
                feature_name
                form_config_data
              }
              lesson_report_details {
                lesson_report_detail_id
                partner_dynamic_form_field_values {
                  dynamic_form_field_value_id
                  value_type
                  int_value
                  int_set_value
                  int_array_value
                  string_value
                  string_set_value
                  string_array_value
                  bool_value
                  field_render_guide
                  field_id
                }
                student {
                  student_id
                }
              }
            }
          }
      - name: User_GetManyBanksReference
        query: |
          query User_GetManyBanksReference {
            bank(order_by: {bank_code: asc}) {
              bank_id
              bank_name
              bank_code
            }
          }
      - name: Lesson_StudentsByNameAndEmail
        query: >
          query Lesson_StudentsByNameAndEmail($keyword: String, $limit:
          Int = 30, $offset: Int = 0) {
            users(
              where: {user_group: {_eq: "USER_GROUP_STUDENT"}, _or: [{email: {_ilike: $keyword}}, {name: {_ilike: $keyword}}, {given_name: {_ilike: $keyword}}]}
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
            ) {
              ...StudentUserAttrsV2
            }
          }


          fragment StudentUserAttrsV2 on users {
            user_id
            name
            email
            avatar
            given_name
          }
      - name: Notification_Eibanam_GetClassesByLocationIdsAndCourseIdsAndName
        query: >
          query Notification_Eibanam_GetClassesByLocationIdsAndCourseIdsAndName($location_ids: [String!], $course_ids: [String!], $name: String) {
            class(where: {location_id: {_in: $location_ids}, course_id: {_in: $course_ids}, name: {_ilike: $name}}) {
              class_id
              name
            }
          }
      - name: User_GetEnrollmentStatusHistoryByStudentIdsListV2
        query: >
          query User_GetEnrollmentStatusHistoryByStudentIdsListV2($student_ids:
          [String!]) {
            student_enrollment_status_history(
              order_by: {created_at: desc}
              where: {student_id: {_in: $student_ids}, start_date: {_lt: "now()"}, _or: [{end_date: {_is_null: true}}, {end_date: {_gt: "now()"}}]}
            ) {
              student_id
              location_id
              enrollment_status
              start_date
              end_date
              comment
              location {
                name
              }
            }
          }
      - name: Lesson_ClassMembersByClassIdAndStudentIds
        query: >
          query Lesson_ClassMembersByStudentList($class_id: String!,
          $student_ids: [String!]!) {
            class_member(where: {class_id: {_eq: $class_id}, user_id: {_in: $student_ids}}) {
              user_id
            }
          }
      - name: Lesson_GetIndividualReportHistory
        query: >
          query Lesson_GetIndividualReportHistory($report_course_id: String!,
          $report_user_id: String!) {
            get_all_individual_report_of_student(
              args: {report_course_id: $report_course_id, report_user_id: $report_user_id}
            ) {
              lesson_report_id
              partner_form_config {
                form_config_id
                form_config_data
              }
              lesson {
                lesson_id
                start_time
                end_time
              }
            }
          }
      - name: Lesson_GetGroupReportHistory
        query: |
          query Lesson_GetGroupReportHistory($lesson_id: String!) {
            get_all_group_report_by_lesson_id(args: {lesson_id_query: $lesson_id}) {
              lesson_report_id
              lesson {
                lesson_id
                class_id
                start_time
                end_time
                lesson_members {
                  user {
                    user_id
                    name
                  }
                  attendance_note
                  attendance_notice
                  attendance_reason
                  attendance_status
                  attendance_remark
                }
              }
              partner_form_config {
                form_config_id
                form_config_data
              }
            }
          }
      - name: Lesson_LessonReportDetailByReportIdAndStudentIds
        query: >
          query
          Lesson_LessonReportDetailByReportIdAndStudentIds($lesson_report_id:
          String!, $student_ids: [String!]!) {
            lesson_report_details(
              where: {lesson_report_id: {_eq: $lesson_report_id}, student_id: {_in: $student_ids}}
            ) {
              student_id
              lesson_report_detail_id
              partner_dynamic_form_field_values {
                dynamic_form_field_value_id
                value_type
                int_value
                int_set_value
                int_array_value
                string_value
                string_set_value
                string_array_value
                bool_value
                field_id
              }
            }
          }
      - name: Lesson_ReallocationByLessonListWithMultiStudents
        query: >
          query Lesson_ReallocationByLessonListWithMultiStudents($where:
          reallocation_bool_exp!) {
            reallocation(where: $where) {
              original_lesson_id
              new_lesson_id
              student_id
            }
          }
      - name: Notification_GetClassesListByCourseIdsAndName
        query: >
          query Notification_GetClassesListByCourseIdsAndName($course_ids: [String!], $name:
          String, $limit: Int = 30, $order_by: [class_order_by!] = [{name: asc}])
          {
            class(
              where: {_and: [{course_id: {_in: $course_ids}}, {name: {_ilike: $name}}]}
              limit: $limit
              order_by: $order_by
            ) {
              class_id
              name
              course_id
            }
          }
      - name: Notification_SchoolListAutoCompleteBasedOnGrantedStudents
        query: >
          query Notification_SchoolListAutoCompleteBasedOnGrantedStudents($logged_in_user_id: String = "",
          $keyword: String = "", $school_ids: _text = null, $limit: Int = 30) {
            find_schools_based_on_student_in_granted_locations(args: {logged_in_user_id: $logged_in_user_id, keyword: $keyword, school_ids: $school_ids, limit: $limit, offset: 0}
            ) {
              school_id
              school_name
            }
          }
      - name: Lesson_GetIndividualReportHistoryV2
        query: >
          query Lesson_GetIndividualReportHistoryV2($report_course_id: String!,
          $report_user_id: String!, $report_lesson_id: String!) {
            get_all_individual_report_of_student_v2(
              args: {report_course_id: $report_course_id, report_user_id: $report_user_id, report_lesson_id: $report_lesson_id}
            ) {
              lesson_report_id
              partner_form_config {
                form_config_id
                form_config_data
              }
              lesson {
                lesson_id
                start_time
                end_time
              }
            }
          }
      - name: Calendar_LocationsListWithParentByLocationIds
        query: >
          query Calendar_LocationsListWithParentByLocationIds($location_ids:
          [String!] = [], $name: String, $limit: Int = 100) {
            locations(
              limit: $limit
              where: {location_id: {_in: $location_ids}, name: {_ilike: $name}, is_archived: {_eq: false}}
              order_by: [{updated_at: asc}, {created_at: asc}]
            ) {
              location_id
              name
              locations {
                location_id
                name
              }
              is_archived
            }
          }
      - name: Calendar_LocationsListWithParentByLocationIdsV2
        query: >
          query Calendar_LocationsListWithParentByLocationIdsV2($location_ids:
          [String!] = [], $name: String, $limit: Int = 100) {
            locations(
              limit: $limit
              where: {location_id: {_in: $location_ids}, name: {_ilike: $name}}
              order_by: [{updated_at: asc}, {created_at: asc}]
            ) {
              location_id
              name
              locations {
                location_id
                name
              }
            }
          }
      - name: Calendar_LessonsTeachersByTeacherIdsList
        query: >
          query Calendar_LessonsTeachersByTeacherIdsList($teacher_ids: [String!]
          = [], $from_date: timestamptz!, $to_date: timestamptz!) {
            lessons_teachers(
              where: {teacher_id: {_in: $teacher_ids}, lesson: {start_time: {_gte: $from_date}, end_time: {_lt: $to_date}}}
            ) {
              teacher_id
              lesson {
                lesson_id
                center_id
                end_time
                start_time
              }
            }
          }
      - name: LessonReportByLessonIdV2
        query: |
          query LessonReportByLessonIdV2($lesson_id: String!) {
            lesson_reports(where: {lesson_id: {_eq: $lesson_id}}) {
              lesson_id
              lesson_report_id
              report_submitting_status
              partner_form_config {
                form_config_id
                feature_name
                form_config_data
              }
              lesson_report_details {
                lesson_report_detail_id
                report_version
                student_id
                partner_dynamic_form_field_values {
                  dynamic_form_field_value_id
                  value_type
                  int_value
                  int_set_value
                  int_array_value
                  string_value
                  string_set_value
                  string_array_value
                  bool_value
                  field_render_guide
                  field_id
                }
              }
            }
          }
      - name: User_UserGroupListV3
        query: >
          query User_UserGroupListV3($limit: Int = 10, $offset: Int = 0, $where:
          user_group_bool_exp! = {}) {
            user_groups: get_sorted_user_groups(
              where: $where
              limit: $limit
              offset: $offset
            ) {
              user_group_id
              user_group_name
            }
            user_group_aggregate(where: $where) {
              aggregate {
                count
              }
            }
          }
      - name: User_StudentsOneV8
        query: |
          query User_StudentsOneV8($id: String!) {
            students(where: {student_id: {_eq: $id}}) {
              enrollment_status
              student_note
              contact_preference
              student_id
              current_grade
              grade_id
              grade {
                name
              }
              user {
                user_external_id
                user_id
                name
                email
                avatar
                phone_number
                user_group
                country
                last_login_date
                gender
                birthday
                first_name
                last_name
                first_name_phonetic
                last_name_phonetic
                full_name_phonetic
                deactivated_at
              }
            }
          }
      - name: StudentCourse_GetManyClassByClassIds
        query: >
          query StudentCourse_GetManyClassByClassIds($class_ids: [String!] = [])
          {
            class(where: {class_id: {_in: $class_ids}}) {
              name
              class_id
            }
          }
      - name: StudentCourse_GetManyClassByFilter
        query: >
          query StudentCourse_GetManyClassByFilter($course_id: String!,
          $location_id: String!) {
            class(where: {course_id: {_eq: $course_id}, location_id: {_eq: $location_id}}) {
              class_id
              name
            }
          }
      - name: StudentCourse_GetOneCourseAccessPathsByCourseIdAndLocationId
        query: >
          query
          StudentCourse_GetOneCourseAccessPathsByCourseIdAndLocationId($course_id:
          String!, $location_id: String!) {
            course_access_paths(
              where: {course_id: {_eq: $course_id}, location_id: {_eq: $location_id}}
            ) {
              location_id
              course_id
            }
          }
      - name: StudentCourse_GetManyCourseLocationsByCourseId
        query: >
          query StudentCourse_GetManyCourseLocationsByCourseId($course_id:
          String!) {
            course_access_paths(where: {course_id: {_eq: $course_id}}) {
              location {
                location_id
                name
                access_path
                location_type
                parent_location_id
              }
            }
          }
      - name: StudentCourse_GetManyCoursesByCourseIds
        query: >
          query StudentCourse_GetManyCoursesByCourseIds($course_id: [String!] =
          []) {
            courses(where: {course_id: {_in: $course_id}}) {
              course_id
              name
              icon
              grade
              subject
              country
              school_id
              display_order
              course_access_paths {
                location {
                  name
                  location_type
                  location_id
                  parent_location_id
                  access_path
                }
              }
            }
          }
      - name: StudentCourse_GetManyCoursesReference
        query: >
          query StudentCourse_GetManyCoursesReference($name: String,
          $location_ids: [String!], $limit: Int = 10, $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}
              where: {name: {_ilike: $name}, course_access_paths: {location_id: {_in: $location_ids}}}
            ) {
              course_id
              name
              icon
              grade
              subject
              country
              school_id
              display_order
            }
          }
      - name: StudentCourse_GetManyLocationsByIds
        query: >
          query StudentCourse_GetManyLocationsByIds($location_ids: [String!] =
          []) {
            locations(where: {location_id: {_in: $location_ids}}) {
              location_id
              name
              access_path
              location_type
              parent_location_id
            }
          }
      - name: StudentCourse_GetOneStudentById
        query: >
          query StudentCourse_GetOneStudentById($id: String!,
          $showExternalUserID: Boolean!) {
            students(where: {student_id: {_eq: $id}}) {
              enrollment_status
              student_note
              contact_preference
              student_id
              current_grade
              grade_id
              grade {
                name
              }
              user {
                user_external_id @include(if: $showExternalUserID)
                user_id
                name
                email
                avatar
                phone_number
                user_group
                country
                last_login_date
                gender
                birthday
                first_name
                last_name
                first_name_phonetic
                last_name_phonetic
                full_name_phonetic
              }
            }
          }
      - name: StudentCourse_GetManyUserAccessByUserId
        query: |
          query StudentCourse_GetManyUserAccessByUserId($user_id: String!) {
            user_access_paths(where: {user_id: {_eq: $user_id}}) {
              location {
                location_id
                name
                access_path
                location_type
                parent_location_id
                is_archived
              }
            }
          }
      - name: StudentCourse_GetOneUserAccessPathsByUserIdAndLocationId
        query: >
          query
          StudentCourse_GetOneUserAccessPathsByUserIdAndLocationId($location_id:
          String!, $user_id: String!) {
            user_access_paths(
              where: {location_id: {_eq: $location_id}, user_id: {_eq: $user_id}}
            ) {
              user_id
              location_id
            }
          }
      - name: StudentCourse_GetManyTaggedUserByIds
        query: >
          query StudentCourse_GetManyTaggedUserByIds($user_ids: [String!],
          $tag_ids: [String!]) {
            tagged_user(where: {user_id: {_in: $user_ids}, tag_id: {_in: $tag_ids}}) {
              user_id
              user_tag {
                user_tag_id
                user_tag_name
                user_tag_type
              }
            }
          }
      - name: Lesson_CoursesUnderLocationsAndCourseTypes
        query: >
          query Lesson_CoursesUnderLocationsAndCourseTypes($location_ids:
          [String!], $course_type_ids: [String!], $name: String, $limit: Int =
          30, $offset: Int = 0) {
            courses(
              where: {_and: [{course_access_paths: {location_id: {_in: $location_ids}}}, {name: {_ilike: $name}}, {course_type_id: {_in: $course_type_ids}}]}
              limit: $limit
              offset: $offset
              order_by: {created_at: desc}
            ) {
              course_id
              name
            }
          }
      - name: User_GetStudentListWithFilterV3
        query: >
          query User_GetStudentListWithFilterV3($limit: Int = 10, $offset: Int =
          0, $where: users_bool_exp! = {}, $location_ids: _text,
          $enrollment_statuses: _text, $grade_ids: _text) {
            users: get_sorted_students_list(
              where: $where
              limit: $limit
              offset: $offset
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids}
            ) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              student {
                contact_preference
              }
            }
          }
      - name: User_CountStudentListWithFilterV3
        query: >
          query User_CountStudentListWithFilterV3($where: users_bool_exp! = {},
          $location_ids: _text, $enrollment_statuses: _text, $grade_ids: _text)
          {
            users_aggregate: get_sorted_students_list_aggregate(
              where: $where
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: Architecture_GetAllSubjects
        query: >
          query Architecture_GetAllSubjects($name: String, $limit: Int = 10,
          $offset: Int = 0) {
            subject(
              limit: $limit
              offset: $offset
              order_by: [{created_at: desc}, {name: asc}]
              where: {name: {_ilike: $name}}
            ) {
              subject_id
              name
            }
            subject_aggregate(where: {name: {_ilike: $name}}) {
              aggregate {
                count
              }
            }
          }
      - name: Architecture_CourseByCourseIdV2
        query: |
          query Architecture_CourseByCourseIdV2($course_id: String!) {
            courses(where: {course_id: {_eq: $course_id}}) {
              course_id
              name
              teaching_method
              icon
              course_types {
                course_type_id
                name
              }
              course_subjects {
                subject_id
              }
            }
          }
      - name: Architecture_CoursesListV3
        query: >
          query Architecture_CoursesListV3($name: String, $course_ids:
          [String!], $course_type_id: String, $limit: Int = 10, $offset: Int =
          0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: [{created_at: desc}, {display_order: asc}, {name: asc}, {course_id: asc}]
              where: {name: {_ilike: $name}, course_id: {_in: $course_ids}, course_type_id: {_eq: $course_type_id}}
            ) {
              course_id
              name
              teaching_method
              icon
              course_types {
                course_type_id
                name
              }
              course_subjects {
                subject_id
              }
            }
            courses_aggregate(
              where: {name: {_ilike: $name}, course_id: {_in: $course_ids}, course_type_id: {_eq: $course_type_id}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: Architecture_GetSubjectsByIds
        query: |
          query Architecture_GetSubjectsByIds($subject_ids: [String!]) {
            subject(where: {subject_id: {_in: $subject_ids}}) {
              name
              subject_id
            }
          }
      - name: Lesson_SchoolInfoManyBySchoolIds
        query: |
          query Lesson_SchoolInfoManyBySchoolIds($school_ids: [String!]!) {
            school_info(where: {school_id: {_in: $school_ids}}) {
              school_id
              school_name
            }
          }
      - name: Lesson_LessonDetailByLessonIdV3
        query: |
          query Lesson_LessonDetailByLessonIdV3($lesson_id: String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              is_locked
              lesson_id
              center_id
              course {
                course_id
                name
              }
              class_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              scheduler_id
              start_time
              end_time
              zoom_link
              zoom_owner_id
              zoom_id
              lessons_teachers {
                teacher_id
              }
              lesson_members {
                attendance_remark
                attendance_status
                attendance_notice
                attendance_reason
                attendance_note
                course {
                  course_id
                  name
                  subject
                }
                user_id
              }
            }
          }
      - name: Lesson_UserInfoManyByUserIds
        query: |
          query Lesson_UserInfoManyByUserIds($user_ids: [String!]!) {
            user_basic_info(where: {user_id: {_in: $user_ids}}) {
              user_id
              name
              email
              full_name_phonetic
              gender
            }
          }
      - name: Lesson_SchoolIdsByStudentIdsAndLessonDate
        query: |
          query Lesson_SchoolIdsByStudentIdsAndLessonDate($student_ids: [String!]!, $lesson_date: timestamptz!) {
            school_history(where: {_and: [{student_id: {_in: $student_ids}}, {start_date: {_lte: $lesson_date}}, {end_date: {_gte: $lesson_date}}]}) {
              school_id
              student_id
              start_date
              end_date
            }
          }
      - name: User_GetStudentListWithFilterV4
        query: >
          query User_GetStudentListWithFilterV4($limit: Int = 10, $offset: Int =
          0, $where: users_bool_exp! = {}, $location_ids: _text,
          $enrollment_statuses: _text, $grade_ids: _text) {
            users: get_sorted_students_list_v2(
              where: $where
              limit: $limit
              offset: $offset
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids}
            ) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              student {
                contact_preference
              }
            }
          }
      - name: User_CountStudentListWithFilterV4
        query: >
          query User_CountStudentListWithFilterV4($where: users_bool_exp! = {},
          $location_ids: _text, $enrollment_statuses: _text, $grade_ids: _text)
          {
            users_aggregate: get_sorted_students_list_v2_aggregate(
              where: $where
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids, has_sort: false}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: Lesson_GetManyClassroomsByLessonIdV2
        query: |
          query Lesson_GetManyClassroomsByLessonIdV2($lesson_id: String!) {
            lesson_classrooms(where: {lesson_id: {_eq: $lesson_id}}) {
              classroom {
                classroom_id
                name
                seat_capacity
                room_area
                location_id
                remarks
                is_archived
              }
            }
          }
      - name: Lesson_GetOccupiedClassrooms
        query: >
          query Lesson_GetOccupiedClassrooms($start_time: timestamptz!,
          $end_time: timestamptz!, $classroom_ids: [String!]!) {
            lesson_classrooms(
              where: {_and: [{lesson: {_and: [{start_time: {_lt: $end_time}, end_time: {_gt: $start_time}}]}}, {classroom_id: {_in: $classroom_ids}}]}
            ) {
              lesson_id
              classroom_id
            }
          }
      - name: Lesson_GetLessonCapacity
        query: |
          query Lesson_GetLessonCapacity($lesson_id: String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              lesson_capacity
            }
          }
      - name: Notification_GetQuestionnaireByQuestionnaireId
        query: |
          query Notification_GetQuestionnaireByQuestionnaireId($questionnaire_id: String) {
            questionnaires(where: {questionnaire_id: {_eq: $questionnaire_id}}) {
              ...QuestionnaireWithTemplateAttrs
            }
          }

          fragment QuestionnaireWithTemplateAttrs on questionnaires {
            questionnaire_id
            resubmit_allowed
            expiration_date
            created_at
            updated_at
            questionnaire_template_id
          }
      - name: Notification_GetTemplatesManyReference
        query: |-
          query Notification_GetTemplatesManyReference($name: String, $questionnaire_template_id: String, $limit: Int = 30, $offset: Int = 0) {
            questionnaire_templates(limit: $limit, offset: $offset, where: {name: {_ilike: $name}, questionnaire_template_id: {_eq: $questionnaire_template_id}}, order_by: {updated_at: desc}) {
              questionnaire_template_id
              expiration_date
              name
              resubmit_allowed
              type
              updated_at
              created_at
            }
          }
      - name: Notification_GetTemplateQuestionsByQuestionnaireTemplateId
        query: |-
          query Notification_GetTemplateQuestionsByQuestionnaireTemplateId($questionnaire_template_id: String!) {
            questionnaire_template_questions(where: {questionnaire_template_id: {_eq: $questionnaire_template_id}}, order_by: {order_index: desc}) {
              questionnaire_template_id
              questionnaire_template_question_id
              order_index
              type
              title
              choices
              is_required
              created_at
              updated_at
            }
          }
      - name: Notification_GetComposersManyReference
        query: |
          query Notification_GetComposersManyReference(
              $name: String
              $limit: Int = 30
              $offset: Int = 0
          ) {
              staff(
                  limit: $limit
                  offset: $offset
                  order_by: [{ user: { name: asc } }]
                  where: { user: { name: { _ilike: $name }, is_system: { _eq: false } } }
              ) {
                  user {
                      name
                      user_id
                  }
              }
          }
      - name: Lesson_GetCourseInfo
        query: |
          query Lesson_GetCourseInfo($course_id: String!) {
            courses(where: {course_id: {_eq: $course_id}}) {
              name
              teaching_method
              course_types {
                course_type_id
                name
              }
            }
          }
      - name: Lesson_GetLessonStudentSubscription
        query: >
          query Lesson_GetLessonStudentSubscription($student_subscription_id:
          String!) {
            lesson_student_subscriptions(
              where: {student_subscription_id: {_eq: $student_subscription_id}}
            ) {
              student_id
              course_id
              lesson_student_subscription_access_paths {
                location_id
              }
              start_at
              end_at
              package_type
              subscription_id
            }
          }
      - name: Lesson_GetStudentName
        query: |
          query Lesson_GetStudentName($student_id: String!) {
            user_basic_info(where: {user_id: {_eq: $student_id}}) {
              name
              full_name_phonetic
            }
          }
      - name: Lesson_CourseTypeByCourseTypeIds
        query: |
          query Lesson_CourseTypeByCourseTypeIds($course_type_ids: [String!]!) {
            course_type(where: {course_type_id: {_in: $course_type_ids}}) {
              course_type_id
              name
            }
          }
      - name: Lesson_GetClassByStudentSubscription
        query: >
          query Lesson_GetClassByStudentSubscription($student_id: String!,
          $course_id: String!, $location_id: String!) {
            class(
              where: {_and: [{course_id: {_eq: $course_id}, location_id: {_eq: $location_id}}, {class_members: {user_id: {_eq: $student_id}}}]}
            ) {
              class_id
              name
            }
          }
      - name: Lesson_GetReallocationByStudentIdAndLessonIds
        query: >
          query Lesson_GetReallocationByStudentIdAndLessonIds($student_id:
          String!, $origin_lesson_ids: [String!]!) {
            reallocation(
              where: {_and: [{student_id: {_eq: $student_id}, original_lesson_id: {_in: $origin_lesson_ids}}]}
            ) {
              new_lesson_id
              original_lesson_id
            }
          }
      - name: User_GetStudentListWithFilterV5
        query: >
          query User_GetStudentListWithFilterV5($limit: Int = 10, $offset: Int =
          0, $where: users_bool_exp! = {}, $location_ids: _text,
          $enrollment_statuses: _text, $grade_ids: _text, $search_text: String,
          $student_ids_by_phone_number: _text, $sort_type: sort_type_enum) {
            users: get_sorted_students_list_v3(
              where: $where
              limit: $limit
              offset: $offset
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids, search_text: $search_text, student_ids_by_phone_number: $student_ids_by_phone_number, sort_type: $sort_type}
            ) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              student {
                contact_preference
              }
            }
          }
      - name: User_CountStudentListWithFilterV5
        query: >
          query User_CountStudentListWithFilterV5($where: users_bool_exp! = {},
          $location_ids: _text, $enrollment_statuses: _text, $grade_ids: _text,
          $search_text: String, $student_ids_by_phone_number: _text, $sort_type:
          sort_type_enum = "none") {
            users_aggregate: get_sorted_students_list_v3_aggregate(
              where: $where
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids, search_text: $search_text, student_ids_by_phone_number: $student_ids_by_phone_number, sort_type: $sort_type}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: Lesson_ReallocationFlagByStudentIds
        query: |
          query Lesson_ReallocationFlagByStudentIds($student_ids: [String!]!) {
            reallocation(
              where: {student_id: {_in: $student_ids}, new_lesson_id: {_is_null: true}}
            ) {
              student_id
              original_lesson_id
              course_id
            }
          }
      - name: VirtualClassroom_LessonDetailByLessonId
        query: |
          query VirtualClassroom_LessonDetailByLessonId($lesson_id: String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              is_locked
              lesson_id
              center_id
              course_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              start_time
              end_time
              end_at
              zoom_link
              lessons_teachers {
                teacher_id
              }
              lesson_members {
                course_id
                user_id
              }
            }
          }
      - name: Lesson_GetManyCourseInfo
        query: |
          query Lesson_GetManyCourseInfo($course_ids: [String!]!) {
            courses(where: {course_id: {_in: $course_ids}}) {
              name
              teaching_method
              course_id
              course_types {
                course_type_id
                name
              }
            }
          }
      - name: StudentCourse_GetOneStudentByIdV2
        query: |
          query StudentCourse_GetOneStudentByIdV2($id: String!) {
            students(where: {student_id: {_eq: $id}}) {
              user {
                user_id
              }
            }
          }
      - name: StudentCourse_GetManyCourseLocationsByCourseIdV2
        query: >
          query StudentCourse_GetManyCourseLocationsByCourseIdV2($course_id:
          String!) {
            course_access_paths(where: {course_id: {_eq: $course_id}}) {
              location {
                location_id
                name
              }
            }
          }
      - name: StudentCourse_GetManyCoursesByCourseIdsV2
        query: >
          query StudentCourse_GetManyCoursesByCourseIdsV2($course_id: [String!]
          = []) {
            courses(where: {course_id: {_in: $course_id}}) {
              course_id
              name
              course_access_paths {
                location {
                  name
                  location_id
                }
              }
            }
          }
      - name: StudentCourse_GetManyCoursesReferenceV2
        query: >
          query StudentCourse_GetManyCoursesReferenceV2($name: String,
          $location_ids: [String!], $limit: Int = 10, $offset: Int = 0) {
            courses(
              limit: $limit
              offset: $offset
              order_by: {created_at: desc, display_order: asc, name: asc, course_id: asc}
              where: {name: {_ilike: $name}, course_access_paths: {location_id: {_in: $location_ids}}}
            ) {
              course_id
              name
            }
          }
      - name: StudentCourse_GetManyLocationsByIdsV2
        query: >
          query StudentCourse_GetManyLocationsByIdsV2($location_ids: [String!] =
          []) {
            locations(where: {location_id: {_in: $location_ids}}) {
              location_id
              name
            }
          }
      - name: Lesson_GetManyClassMemberByClassIds
        query: |
          query Lesson_GetManyClassMemberByClassIds($class_ids: [String!]!) {
            class_member(where: {class_id: {_in: $class_ids}}) {
              class_id
              class_member_id
              user_id
            }
          }
      - name: Lesson_GetManyClassByCourseIds
        query: |
          query Lesson_GetManyClassByCourseIds($course_ids: [String!]!) {
            class(where: {course_id: {_in: $course_ids}}) {
              course_id
              class_id
            }
          }
      - name: Lesson_GetLessonStudentSubscriptionV2
        query: >
          query Lesson_GetLessonStudentSubscriptionV2($student_subscription_id:
          String!) {
            lesson_student_subscriptions(
              where: {student_subscription_id: {_eq: $student_subscription_id}}
            ) {
              student_id
              course_id
              lesson_student_subscription_access_paths {
                location_id
              }
              start_at
              end_at
              subscription_id
            }
          }
      - name: User_SchoolLevelGrades
        query: |
          query User_SchoolLevelGrades {
            school_level_grade {
              school_level_id
              grade_id
            }
          }
      - name: User_StudentsOneV9
        query: |
          query User_StudentsOneV9($id: String!) {
            student: students_by_pk(student_id: $id) {
              enrollment_status
              student_note
              contact_preference
              student_id
              current_grade
              grade_id
              grade {
                name
              }
              user {
                user_external_id
                user_id
                name
                email
                avatar
                phone_number
                user_group
                country
                last_login_date
                gender
                birthday
                first_name
                last_name
                first_name_phonetic
                last_name_phonetic
                full_name_phonetic
                deactivated_at
                username
              }
            }
          }
      - name: User_GetStudentListWithFilterV6
        query: >
          query User_GetStudentListWithFilterV6($limit: Int = 10, $offset: Int =
          0, $where: users_bool_exp! = {}, $location_ids: _text,
          $enrollment_statuses: _text, $grade_ids: _text, $search_text: String,
          $student_ids_by_phone_number: _text, $sort_type: sort_type_enum) {
            users: get_sorted_students_list_v3(
              where: $where
              limit: $limit
              offset: $offset
              args: {location_ids: $location_ids, enrollment_statuses: $enrollment_statuses, grade_ids: $grade_ids, search_text: $search_text, student_ids_by_phone_number: $student_ids_by_phone_number, sort_type: $sort_type}
            ) {
              user_id
              name
              full_name_phonetic
              email
              phone_number
              country
              last_login_date
              gender
              resource_path
              deactivated_at
              username
              student {
                contact_preference
              }
            }
          }
      - name: User_GetManyStudentParentsByStudentIdV4
        query: |
          query User_GetManyStudentParentsByStudentIdV4($student_id: String!) {
            student_parents(where: {student_id: {_eq: $student_id}}) {
              student_id
              parent_id
              relationship
              parent_user {
                email
                phone_number
                country
                remarks
                first_name
                last_name
                last_name_phonetic
                first_name_phonetic
                full_name_phonetic
                name
                user_external_id
                username
              }
            }
          }
      - name: User_CountUsersListWithFilter
        query: |
          query User_CountUsersListWithFilter($where: users_bool_exp! = {}) {
            users_aggregate(where: $where) {
              aggregate {
                count
              }
            }
          }
      - name: User_StaffOneV7
        query: |
          query User_StaffOneV7($staff_id: String!) {
            staff: staff_by_pk(staff_id: $staff_id) {
              staff_id
              working_status
              start_date
              end_date
              user {
                user_external_id
                name
                last_name
                first_name
                full_name_phonetic
                last_name_phonetic
                first_name_phonetic
                email
                birthday
                gender
                remarks
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    location_id
                    name
                    access_path
                    location_type
                    parent_location_id
                    is_archived
                  }
                }
                user_phone_numbers {
                  phone_number
                  type
                  user_phone_number_id
                }
              }
            }
          }
      - name: User_GetParentsListWithFilter
        query: >
          query User_GetParentsListWithFilter($where: parents_bool_exp!
          = {}, $limit: Int = 10, $offset: Int = 0) {
            parents(where: $where, limit: $limit, offset: $offset) {
              parent_id
              user {
                email
                phone_number
                country
                remarks
                first_name
                last_name
                last_name_phonetic
                first_name_phonetic
                name
                user_external_id
                username
              }
            }
          }
      - name: Syllabus_GetCourseListWithFilters
        query: >
          query Syllabus_GetCourseListWithFilters(
              $where: courses_bool_exp! = {}
              $limit: Int = 10
              $offset: Int = 0
          ) {
              courses(
                  limit: $limit
                  offset: $offset
                  order_by: [
                      { created_at: desc }
                      { display_order: asc }
                      { name: asc }
                      { course_id: asc }
                  ]
                  where: $where
              ) {
                  course_id
                  name
                  teaching_method
                  icon
                  course_types {
                      course_type_id
                      name
                  }
              }
              courses_aggregate(where: $where) {
                  aggregate {
                      count
                  }
              }
          }
      - name: Syllabus_CoursesGetManyReferenceByLocationIds
        query: |-
          query Syllabus_CoursesGetManyReferenceByLocationIds(
            $name: String
            $location_ids: [String!] = []
            $limit: Int = 30
            $offset: Int = 0
          ) {
            courses(
              limit: $limit
              offset: $offset
              order_by: [{ created_at: desc }, { name: asc }]
              where: {
                name: { _ilike: $name }
                course_access_paths: { location_id: { _in: $location_ids } }
              }
            ) {
              course_id
              name
            }
          }
      - name: Syllabus_ClassGetManyReferenceByCourseIds
        query: |-
          query Syllabus_ClassGetManyReferenceByCourseIds(
            $name: String
            $course_ids: [String!] = []
            $limit: Int = 30
            $offset: Int = 0
          ) {
            class(
              limit: $limit
              offset: $offset
              order_by: [{ created_at: desc }, { name: asc }]
              where: { name: { _ilike: $name }, course_id: { _in: $course_ids } }
            ) {
              class_id
              name
            }
          }
      - name: User_GetManyReferenceSchoolInfoV3
        query: >
          query User_GetManyReferenceSchoolInfoV3($level_id: String,
          $search_text: String, $limit: Int = 100, $offset: Int = 0) {
            school_info: get_school_info_list(
              limit: $limit
              offset: $offset
              args: {search_text: $search_text, level_id: $level_id}
            ) {
              school_id
              school_name
              address
              is_archived
              school_level_id
              school_partner_id
            }
          }
      - name: User_GetManyStudentParentsByStudentIdV5
        query: |-
          query User_GetManyStudentParentsByStudentIdV5($student_id: String!) {
            student_parents(where: {student_id: {_eq: $student_id}}) {
              student_id
              parent_id
              relationship
              parent_user {
                email
                phone_number
                country
                remarks
                first_name
                last_name
                last_name_phonetic
                first_name_phonetic
                full_name_phonetic
                name
                user_external_id
                username
                deactivated_at
              }
            }
          }
      - name: User_GetStaffListWithFilterV5
        query: >
          query User_GetStaffListWithFilterV5($limit: Int = 10, $offset: Int =
          0, $order_by: [staff_order_by!] = [{created_at: desc}], $where:
          staff_bool_exp! = {}) {
            staff(limit: $limit, offset: $offset, order_by: $order_by, where: $where) {
              staff_id
              working_status
              user {
                email
                name
                full_name_phonetic
                username
              }
            }
          }
      - name: User_StaffOneV8
        query: |
          query User_StaffOneV8($staff_id: String!) {
            staff: staff_by_pk(staff_id: $staff_id) {
              staff_id
              working_status
              start_date
              end_date
              user {
                user_external_id
                name
                last_name
                first_name
                full_name_phonetic
                last_name_phonetic
                first_name_phonetic
                email
                birthday
                gender
                remarks
                username
                user_group_members {
                  user_group {
                    user_group_id
                    user_group_name
                  }
                }
                user_access_paths {
                  location {
                    location_id
                    name
                    access_path
                    location_type
                    parent_location_id
                    is_archived
                  }
                }
                user_phone_numbers {
                  phone_number
                  type
                  user_phone_number_id
                }
              }
            }
          }
      - name: User_CountEnrolledStudents
        query: |
          query User_CountEnrolledStudents($location_ids: [String!]) {
            student_enrollment_status_history_aggregate(
              distinct_on: student_id
              where: {start_date: {_lt: "now()"}, _or: [{end_date: {_is_null: true}}, {end_date: {_gt: "now()"}}], deleted_at: {_is_null: true}, enrollment_status: {_eq: "STUDENT_ENROLLMENT_STATUS_ENROLLED"}, location_id: {_in: $location_ids}, user: {user_role: {_eq: "student"}}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: Lesson_LessonDetailByLessonIdV4
        query: |
          query Lesson_LessonDetailByLessonIdV4($lesson_id: String!) {
            lessons(where: {lesson_id: {_eq: $lesson_id}}) {
              is_locked
              lesson_id
              center_id
              course {
                course_id
                name
              }
              class_id
              lesson_group_id
              teaching_medium
              teaching_method
              lesson_type
              scheduling_status
              scheduler_id
              start_time
              end_time
              zoom_link
              zoom_owner_id
              zoom_id
              lessons_teachers {
                teacher_id
              }
              lesson_members {
                attendance_remark
                attendance_status
                attendance_notice
                attendance_reason
                attendance_note
                course {
                  course_id
                  name
                  subject
                }
                user_id
              }
              classdo_owner_id
              classdo_room_id
              classdo_link
            }
          }
      - name: Architecture_GetClassMemberAssociationCount
        query: >
          query Architecture_GetClassMemberAssociationCount($class_id: String!)
          {
            class_member_aggregate(where: {class_id: {_eq: $class_id}}, limit: 1) {
              aggregate {
                count
              }
            }
          }
      - name: Architecture_GetManyClassByCourseAndLocations
        query: |
          query Architecture_GetManyClassByCourseAndLocations($location_ids: [String!], $course_id: String!, $name: String, $limit: Int = 30, $order_by: [class_order_by!] = {name: asc}) {
            class(where: {_and: [{location_id: {_in: $location_ids}}, {course_id: {_eq: $course_id}}, {name: {_ilike: $name}}]}, limit: $limit, order_by: $order_by) {
              class_id
              name
            }
          }
      - name: Syllabus_GetCourseListWithFiltersV2
        query: |
          query Syllabus_GetCourseListWithFiltersV2($where: courses_bool_exp! = {}, $limit: Int = 10, $offset: Int = 0) {
            courses(limit: $limit, offset: $offset, order_by: [{created_at: desc}, {display_order: asc}, {name: asc}, {course_id: asc}], where: $where) {
              course_id
              name
              teaching_method
              icon
              course_types {
                course_type_id
                name
              }
              course_subjects {
                subject {
                  subject_id
                  name
                }
              }
            }
            courses_aggregate(where: $where) {
              aggregate {
                count
              }
            }
          }
