- name: allowed-queries
  definition:
    queries:
      - name: EntryExit_StudentQrCodeByStudentIdsV2
        query: |
          query EntryExit_StudentQrCodeByStudentIdsV2($student_ids: [String!] =
          []) {
            student_qr(where: {student_id: {_in: $student_ids}}) {
              qr_url
              qr_id
              student_id
              version
            }
          }
      - name: StudentQRCodeByStudentIds
        query: |
          query StudentQRCodeByStudentIds($student_ids: [String!] = []) {
            student_qr(where: {student_id: {_in: $student_ids}}) {
              qr_url
              qr_id
              student_id
            }
          }
      - name: EntryExit_StudentEntryExitRecordsWithAggregateByStudentId
        query: |
          query EntryExit_StudentEntryExitRecordsWithAggregateByStudentId($student_id: String!, $limit: Int = 10, $offset: Int = 0) {
            student_entryexit_records(
              where: {student_id: {_eq: $student_id}}
              limit: $limit
              offset: $offset
              order_by: {entry_at: desc}
            ) {
              entry_at
              entryexit_id
              exit_at
              student_id
            }
            student_entryexit_records_aggregate(where: {student_id: {_eq: $student_id}}) {
              aggregate {
                count
              }
            }
          }
      - name: EntryExit_StudentEntryExitRecordsWithAggregateByStudentIdV2
        query: >
          query
          EntryExit_StudentEntryExitRecordsWithAggregateByStudentIdV2($student_id:
          String!, $limit: Int = 10, $offset: Int = 0, $start_date: timestamptz,
          $end_date: timestamptz) {
            student_entryexit_records(
              where: {student_id: {_eq: $student_id}, entry_at: {_gte: $start_date, _lte: $end_date}}
              limit: $limit
              offset: $offset
              order_by: {entry_at: desc}
            ) {
              entry_at
              entryexit_id
              exit_at
              student_id
            }
            student_entryexit_records_aggregate(
              where: {student_id: {_eq: $student_id}, entry_at: {_gte: $start_date, _lte: $end_date}}
            ) {
              aggregate {
                count
              }
            }
          }
      - name: EntryExit_StudentQrCodeByStudentIdsV3
        query: >
          query EntryExit_StudentQrCodeByStudentIdsV3($student_ids: [String!] =
          []) {
            student_qr(where: {student_id: {_in: $student_ids}}) {
              qr_url
              qr_id
              student_id
              version
              student_info {
                email
              }
            }
          }
      - name: EntryExit_EntryExitRecordsCustomFilter
        query: >
          query EntryExit_EntryExitRecordsCustomFilter($limit: Int = 10,
          $offset: Int = 0, $whereEntryExitRecords:
          student_entryexit_records_bool_exp,
          $student_entryexit_records_order_by:
          student_entryexit_records_order_by! = {entry_at: desc}) {
            student_entryexit_records(
              where: $whereEntryExitRecords
              limit: $limit
              offset: $offset
              order_by: [$student_entryexit_records_order_by]
            ) {
              entry_at
              entryexit_id
              exit_at
              user_basic_info {
                name
                current_grade
                user_id
              }
            }
            student_entryexit_records_aggregate(where: $whereEntryExitRecords) {
              aggregate {
                count
              }
            }
          }
      - name: EntryExit_Users
        query: |
          query EntryExit_Users($user_ids: [String!] = []) {
            user_basic_info(where: {user_id: {_in: $user_ids}}) {
              user_id
              name
            }
          }
      - name: EntryExit_EntryExitRecordsWithGradeCustomFilter
        query: >
          query EntryExit_EntryExitRecordsWithGradeCustomFilter($limit: Int =
          10, $offset: Int = 0, $whereEntryExitRecords:
          student_entryexit_records_bool_exp,
          $student_entryexit_records_order_by:
          student_entryexit_records_order_by! = {entry_at: desc}) {
            student_entryexit_records(
              where: $whereEntryExitRecords
              limit: $limit
              offset: $offset
              order_by: [$student_entryexit_records_order_by]
            ) {
              entry_at
              entryexit_id
              exit_at
              user_basic_info {
                name
                user_id
                grade {
                  grade_id
                  name
                }
              }
            }
            student_entryexit_records_aggregate(where: $whereEntryExitRecords) {
              aggregate {
                count
              }
            }
          }
      - name: EntryExit_EntryExitRecordsWithStudentGradeCustomFilter
        query: >
          query EntryExit_EntryExitRecordsWithStudentGradeCustomFilter(
              $limit: Int = 10
              $offset: Int = 0
              $whereEntryExitRecords: student_entryexit_records_bool_exp
              $student_entryexit_records_order_by: student_entryexit_records_order_by! = {
                  entry_at: desc
              }
          ) {
              student_entryexit_records(
                  where: $whereEntryExitRecords
                  limit: $limit
                  offset: $offset
                  order_by: [$student_entryexit_records_order_by]
              ) {
                  entry_at
                  entryexit_id
                  exit_at
                  students {
                      grade_id
                      grade {
                          name
                      }
                  }
                  user_basic_info {
                      name
                      user_id
                  }
              }
              student_entryexit_records_aggregate(where: $whereEntryExitRecords) {
                  aggregate {
                      count
                  }
              }
          }
