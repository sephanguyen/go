SET 'auto.offset.reset' = 'earliest';
CREATE STREAM IF NOT EXISTS SCHOOL_LEVEL_STREAM_ORIGIN_V1 WITH (kafka_topic='{{ .Values.global.environment }}.kec.datalake.bob.school_level', value_format='AVRO');
CREATE STREAM IF NOT EXISTS SCHOOL_LEVEL_STREAM_FORMATED_V1
    AS SELECT
        SCHOOL_LEVEL_STREAM_ORIGIN_V1.AFTER->SCHOOL_LEVEL_ID AS SCHOOL_LEVEL_ID,
        SCHOOL_LEVEL_STREAM_ORIGIN_V1.AFTER->SCHOOL_LEVEL_NAME AS SCHOOL_LEVEL_NAME,
        SCHOOL_LEVEL_STREAM_ORIGIN_V1.AFTER->IS_ARCHIVED AS IS_ARCHIVED,
        SCHOOL_LEVEL_STREAM_ORIGIN_V1.AFTER->CREATED_AT AS CREATED_AT,
        SCHOOL_LEVEL_STREAM_ORIGIN_V1.AFTER->UPDATED_AT AS UPDATED_AT,
        SCHOOL_LEVEL_STREAM_ORIGIN_V1.AFTER->DELETED_AT AS DELETED_AT,
        SCHOOL_LEVEL_STREAM_ORIGIN_V1.AFTER->SEQUENCE AS SEQUENCE

    FROM SCHOOL_LEVEL_STREAM_ORIGIN_V1
    WHERE SCHOOL_LEVEL_STREAM_ORIGIN_V1.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}';

CREATE STREAM IF NOT EXISTS GRADE_STREAM_ORIGIN_V1 WITH (kafka_topic='{{ .Values.global.environment }}.kec.datalake.bob.grade', value_format='AVRO');
CREATE STREAM IF NOT EXISTS GRADE_STREAM_FORMATED_V1
    AS SELECT
        GRADE_STREAM_ORIGIN_V1.AFTER->GRADE_ID AS GRADE_ID,
        GRADE_STREAM_ORIGIN_V1.AFTER->NAME AS NAME,
        GRADE_STREAM_ORIGIN_V1.AFTER->IS_ARCHIVED AS IS_ARCHIVED,
        GRADE_STREAM_ORIGIN_V1.AFTER->CREATED_AT AS CREATED_AT,
        GRADE_STREAM_ORIGIN_V1.AFTER->UPDATED_AT AS UPDATED_AT,
        GRADE_STREAM_ORIGIN_V1.AFTER->DELETED_AT AS DELETED_AT,
        GRADE_STREAM_ORIGIN_V1.AFTER->PARTNER_INTERNAL_ID AS PARTNER_INTERNAL_ID,
        GRADE_STREAM_ORIGIN_V1.AFTER->SEQUENCE AS SEQUENCE

    FROM GRADE_STREAM_ORIGIN_V1
    WHERE GRADE_STREAM_ORIGIN_V1.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}';

CREATE STREAM IF NOT EXISTS SCHOOL_LEVEL_GRADE_STREAM_ORIGIN_V1 WITH (kafka_topic='{{ .Values.global.environment }}.kec.datalake.bob.school_level_grade', value_format='AVRO');
CREATE STREAM IF NOT EXISTS SCHOOL_LEVEL_GRADE_STREAM_FORMATED_V1
    AS SELECT
        SCHOOL_LEVEL_GRADE_STREAM_ORIGIN_V1.AFTER->SCHOOL_LEVEL_ID AS SCHOOL_LEVEL_ID,
        SCHOOL_LEVEL_GRADE_STREAM_ORIGIN_V1.AFTER->GRADE_ID AS GRADE_ID,
        SCHOOL_LEVEL_GRADE_STREAM_ORIGIN_V1.AFTER->CREATED_AT AS CREATED_AT,
        SCHOOL_LEVEL_GRADE_STREAM_ORIGIN_V1.AFTER->UPDATED_AT AS UPDATED_AT,
        SCHOOL_LEVEL_GRADE_STREAM_ORIGIN_V1.AFTER->DELETED_AT AS DELETED_AT

    FROM SCHOOL_LEVEL_GRADE_STREAM_ORIGIN_V1
    WHERE SCHOOL_LEVEL_GRADE_STREAM_ORIGIN_V1.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}';

CREATE STREAM IF NOT EXISTS SCHOOL_LEVEL_PUBLIC_INFO_V1 
AS SELECT
    SCHOOL_LEVEL_STREAM_FORMATED_V1.SCHOOL_LEVEL_ID AS LEVEL_ID,
    SCHOOL_LEVEL_STREAM_FORMATED_V1.SCHOOL_LEVEL_NAME AS LEVEL_NAME,
    SCHOOL_LEVEL_STREAM_FORMATED_V1.SEQUENCE AS SCHOOL_LEVEL_SEQUENCE,
    SCHOOL_LEVEL_STREAM_FORMATED_V1.CREATED_AT AS SCHOOL_LEVEL_CREATED_AT,
    SCHOOL_LEVEL_STREAM_FORMATED_V1.UPDATED_AT AS SCHOOL_LEVEL_UPDATED_AT,
    SCHOOL_LEVEL_STREAM_FORMATED_V1.DELETED_AT AS SCHOOL_LEVEL_DELETED_AT,
    SCHOOL_LEVEL_STREAM_FORMATED_V1.IS_ARCHIVED AS SCHOOL_LEVEL_IS_ARCHIVED,

    GRADE_STREAM_FORMATED_V1.GRADE_ID AS KEY,
    AS_VALUE(GRADE_STREAM_FORMATED_V1.GRADE_ID) AS GRADE_ID,
    GRADE_STREAM_FORMATED_V1.NAME AS NAME,
    GRADE_STREAM_FORMATED_V1.PARTNER_INTERNAL_ID AS PARTNER_INTERNAL_ID,
    GRADE_STREAM_FORMATED_V1.SEQUENCE AS GRADE_SEQUENCE,
    GRADE_STREAM_FORMATED_V1.CREATED_AT AS GRADE_CREATED_AT,
    GRADE_STREAM_FORMATED_V1.UPDATED_AT AS GRADE_UPDATED_AT,
    GRADE_STREAM_FORMATED_V1.DELETED_AT AS GRADE_DELETED_AT,
    GRADE_STREAM_FORMATED_V1.IS_ARCHIVED AS GRADE_IS_ARCHIVED,

    SCHOOL_LEVEL_GRADE_STREAM_FORMATED_V1.CREATED_AT AS SCHOOL_LEVEL_GRADE_CREATED_AT,
    SCHOOL_LEVEL_GRADE_STREAM_FORMATED_V1.UPDATED_AT AS SCHOOL_LEVEL_GRADE_UPDATED_AT,
    SCHOOL_LEVEL_GRADE_STREAM_FORMATED_V1.DELETED_AT AS SCHOOL_LEVEL_GRADE_DELETED_AT

FROM SCHOOL_LEVEL_STREAM_FORMATED_V1 
JOIN SCHOOL_LEVEL_GRADE_STREAM_FORMATED_V1 WITHIN 2 HOURS ON SCHOOL_LEVEL_STREAM_FORMATED_V1.SCHOOL_LEVEL_ID = SCHOOL_LEVEL_GRADE_STREAM_FORMATED_V1.SCHOOL_LEVEL_ID
JOIN GRADE_STREAM_FORMATED_V1 WITHIN 2 HOURS ON SCHOOL_LEVEL_GRADE_STREAM_FORMATED_V1.GRADE_ID = GRADE_STREAM_FORMATED_V1.GRADE_ID;

CREATE SINK CONNECTOR IF NOT EXISTS SCHOOL_LEVEL_STREAM_FORMATED_V1 WITH (
      'connector.class'='io.confluent.connect.jdbc.JdbcSinkConnector',
      'transforms.unwrap.delete.handling.mode'='drop',
      'tasks.max'='1',
      'topics'='{{ .Values.topicPrefix }}SCHOOL_LEVEL_PUBLIC_INFO_V1',
      'fields.whitelist'='level_id,level_name,school_level_sequence,school_level_created_at,school_level_updated_at,school_level_deleted_at,school_level_is_archived,grade_id,name,partner_internal_id,grade_sequence,grade_created_at,grade_updated_at,grade_deleted_at,grade_is_archived,school_level_grade_created_at,school_level_grade_updated_at,school_level_grade_deleted_at',
      'key.converter'='org.apache.kafka.connect.storage.StringConverter',
      'value.converter'='io.confluent.connect.avro.AvroConverter',
      'value.converter.schema.registry.url'='{{ .Values.cpRegistryHost }}',
      'delete.enabled'='false',
      'transforms.unwrap.drop.tombstones'='true',
      'auto.create'='true',
      'connection.url'='${file:/decrypted/kafka-connect.secrets.properties:kec_url}',
      'insert.mode'='upsert',
      'table.name.format'='bob.school_level_public_info',
      'pk.mode'='record_key',
      'transforms'='RenameField',
      'transforms.RenameField.type'= 'org.apache.kafka.connect.transforms.ReplaceField$Value',
      'transforms.RenameField.renames'='LEVEL_ID:level_id,LEVEL_NAME:level_name,SCHOOL_LEVEL_SEQUENCE:school_level_sequence,SCHOOL_LEVEL_CREATED_AT:school_level_created_at,SCHOOL_LEVEL_UPDATED_AT:school_level_updated_at,SCHOOL_LEVEL_DELETED_AT:school_level_deleted_at,SCHOOL_LEVEL_IS_ARCHIVED:school_level_is_archived,GRADE_ID:grade_id,NAME:name,PARTNER_INTERNAL_ID:partner_internal_id,GRADE_SEQUENCE:grade_sequence,GRADE_CREATED_AT:grade_created_at,GRADE_UPDATED_AT:grade_updated_at,GRADE_DELETED_AT:grade_deleted_at,GRADE_IS_ARCHIVED:grade_is_archived,SCHOOL_LEVEL_GRADE_CREATED_AT:school_level_grade_created_at,SCHOOL_LEVEL_GRADE_UPDATED_AT:school_level_grade_updated_at,SCHOOL_LEVEL_GRADE_DELETED_AT:school_level_grade_deleted_at',
      'pk.fields'='level_id'
);
