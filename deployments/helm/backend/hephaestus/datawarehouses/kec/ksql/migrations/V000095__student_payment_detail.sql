SET 'auto.offset.reset' = 'earliest';


DROP CONNECTOR IF EXISTS SINK_STUDENT_PAYMENT_DETAIL_HISTORY_PUBLIC_INFO_V1;

DROP TABLE IF EXISTS STUDENT_PAYMENT_DETAIL_HISTORY_PUBLIC_INFO_V1;
DROP TABLE IF EXISTS STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V1;
DROP STREAM IF EXISTS STUDENT_PAYMENT_DETAIL_STREAM_FORMATTED_V1;


CREATE STREAM IF NOT EXISTS STUDENT_PAYMENT_DETAIL_STREAM_FORMATTED_V2
    AS SELECT
        STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->STUDENT_PAYMENT_DETAIL_ID AS KEY,
        AS_VALUE(STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->STUDENT_PAYMENT_DETAIL_ID) AS STUDENT_PAYMENT_DETAIL_ID,
        STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->STUDENT_ID AS STUDENT_ID,
        STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->PAYER_PHONE_NUMBER AS PAYER_PHONE_NUMBER,
        STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->PAYER_NAME AS PAYER_NAME,
        STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->PAYMENT_METHOD AS PAYMENT_METHOD,
        STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->CREATED_AT AS STUDENT_PAYMENT_DETAIL_CREATED_AT,
        STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->UPDATED_AT AS STUDENT_PAYMENT_DETAIL_UPDATED_AT,
        STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->DELETED_AT AS STUDENT_PAYMENT_DETAIL_DELETED_AT
    FROM STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1
    WHERE STUDENT_PAYMENT_DETAIL_STREAM_ORIGIN_V1.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}'
    PARTITION BY AFTER->STUDENT_PAYMENT_DETAIL_ID
    EMIT CHANGES;

CREATE TABLE IF NOT EXISTS STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2 (KEY VARCHAR PRIMARY KEY) with (kafka_topic='{{ .Values.topicPrefix }}STUDENT_PAYMENT_DETAIL_STREAM_FORMATTED_V2', value_format='AVRO');


DROP TABLE IF EXISTS STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V1;
DROP STREAM IF EXISTS STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_FORMATTED_V1;

CREATE STREAM IF NOT EXISTS STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_FORMATTED_V2
    AS SELECT
        STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1.AFTER->STUDENT_PAYMENT_DETAIL_ACTION_ID AS KEY,
        AS_VALUE(STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1.AFTER->STUDENT_PAYMENT_DETAIL_ACTION_ID) AS STUDENT_PAYMENT_DETAIL_ACTION_ID,
        STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1.AFTER->STUDENT_PAYMENT_DETAIL_ID AS STUDENT_PAYMENT_DETAIL_ID,
        STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1.AFTER->USER_ID AS STAFF_ID,
        STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1.AFTER->ACTION AS ACTION,
        STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1.AFTER->CREATED_AT AS STUDENT_PAYMENT_DETAIL_ACTION_LOG_CREATED_AT,
        STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1.AFTER->UPDATED_AT AS STUDENT_PAYMENT_DETAIL_ACTION_LOG_UPDATED_AT,
        STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1.AFTER->DELETED_AT AS STUDENT_PAYMENT_DETAIL_ACTION_LOG_DELETED_AT
    FROM STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1
    WHERE STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_ORIGIN_V1.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}'
    PARTITION BY AFTER->STUDENT_PAYMENT_DETAIL_ACTION_ID
    EMIT CHANGES;

CREATE TABLE IF NOT EXISTS STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V2 (KEY VARCHAR PRIMARY KEY) with (kafka_topic='{{ .Values.topicPrefix }}STUDENT_PAYMENT_DETAIL_ACTION_LOG_STREAM_FORMATTED_V2', value_format='AVRO');


CREATE TABLE IF NOT EXISTS STUDENT_PAYMENT_DETAIL_HISTORY_PUBLIC_INFO_V2
AS SELECT
    STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V2.KEY AS STUDENT_PAYMENT_DETAIL_ACTION_ID,
    AS_VALUE(STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2.KEY) AS STUDENT_PAYMENT_DETAIL_ID,
    STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2.STUDENT_ID AS STUDENT_ID,
    STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2.PAYER_NAME AS PAYER_NAME,
    STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2.PAYER_PHONE_NUMBER AS PAYER_PHONE_NUMBER,
    STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2.PAYMENT_METHOD AS PAYMENT_METHOD,
    STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2.STUDENT_PAYMENT_DETAIL_CREATED_AT AS STUDENT_PAYMENT_DETAIL_CREATED_AT,
    STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2.STUDENT_PAYMENT_DETAIL_UPDATED_AT AS STUDENT_PAYMENT_DETAIL_UPDATED_AT,
    STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2.STUDENT_PAYMENT_DETAIL_DELETED_AT AS STUDENT_PAYMENT_DETAIL_DELETED_AT,
    STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V2.STAFF_ID AS STAFF_ID,
    STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V2.ACTION AS ACTION,
    STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V2.STUDENT_PAYMENT_DETAIL_ACTION_LOG_CREATED_AT AS STUDENT_PAYMENT_DETAIL_ACTION_LOG_CREATED_AT,
    STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V2.STUDENT_PAYMENT_DETAIL_ACTION_LOG_UPDATED_AT AS STUDENT_PAYMENT_DETAIL_ACTION_LOG_UPDATED_AT,
    STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V2.STUDENT_PAYMENT_DETAIL_ACTION_LOG_DELETED_AT AS STUDENT_PAYMENT_DETAIL_ACTION_LOG_DELETED_AT
FROM STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V2
JOIN STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2
ON STUDENT_PAYMENT_DETAIL_ACTION_LOG_TABLE_FORMATTED_V2.STUDENT_PAYMENT_DETAIL_ID = STUDENT_PAYMENT_DETAIL_TABLE_FORMATTED_V2.KEY;

CREATE SINK CONNECTOR IF NOT EXISTS SINK_STUDENT_PAYMENT_DETAIL_HISTORY_PUBLIC_INFO_V2 WITH (
      'connector.class'='io.confluent.connect.jdbc.JdbcSinkConnector',
      'transforms.unwrap.delete.handling.mode'='drop',
      'tasks.max'='1',
      'topics'='{{ .Values.topicPrefix }}STUDENT_PAYMENT_DETAIL_HISTORY_PUBLIC_INFO_V2',
      'fields.whitelist'='student_payment_detail_action_id,student_payment_detail_id,student_id,payer_phone_number,payer_name,payment_method,staff_id,action,student_payment_detail_created_at,student_payment_detail_updated_at,student_payment_detail_deleted_at,student_payment_detail_action_log_created_at,student_payment_detail_action_log_updated_at,student_payment_detail_action_log_deleted_at',
      'key.converter'='org.apache.kafka.connect.storage.StringConverter',
      'value.converter'='io.confluent.connect.avro.AvroConverter',
      'value.converter.schema.registry.url'='{{ .Values.cpRegistryHost }}',
      'delete.enabled'='false',
      'transforms.unwrap.drop.tombstones'='true',
      'auto.create'='true',
      'connection.url'='${file:/decrypted/kafka-connect.secrets.properties:kec_url}',
      'insert.mode'='upsert',
      'table.name.format'='public.student_payment_detail',
      'pk.mode'='record_key',
      'transforms'='RenameField',
      'transforms.RenameField.type'= 'org.apache.kafka.connect.transforms.ReplaceField$Value',
      'transforms.RenameField.renames'='KEY:student_payment_detail_action_id,STUDENT_PAYMENT_DETAIL_ID:student_payment_detail_id,STUDENT_ID:student_id,PAYER_PHONE_NUMBER:payer_phone_number,PAYER_NAME:payer_name,PAYMENT_METHOD:payment_method,STAFF_ID:staff_id,ACTION:action,STUDENT_PAYMENT_DETAIL_CREATED_AT:student_payment_detail_created_at, STUDENT_PAYMENT_DETAIL_UPDATED_AT:student_payment_detail_updated_at,STUDENT_PAYMENT_DETAIL_DELETED_AT:student_payment_detail_deleted_at,STUDENT_PAYMENT_DETAIL_ACTION_LOG_CREATED_AT:student_payment_detail_action_log_created_at,STUDENT_PAYMENT_DETAIL_ACTION_LOG_UPDATED_AT:student_payment_detail_action_log_updated_at,STUDENT_PAYMENT_DETAIL_ACTION_LOG_DELETED_AT:student_payment_detail_action_log_deleted_at',
      'pk.fields'='student_payment_detail_action_id'
);
