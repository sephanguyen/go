CREATE STREAM IF NOT EXISTS TIMESHEET_AUTO_CREATE_FLAG_ACTIVITY_LOG_FORMATTED
AS SELECT
    AFTER->ID AS KEY,
    AS_VALUE(AFTER->ID) AS ID,
    AFTER->STAFF_ID AS STAFF_ID,
    AFTER->CHANGE_TIME AS CHANGE_TIME,
    AFTER->FLAG_ON AS FLAG_ON,
    AFTER->CREATED_AT AS CREATED_AT,
    AFTER->UPDATED_AT AS UPDATED_AT,
    AFTER->DELETED_AT AS DELETED_AT
FROM TIMESHEET_AUTO_CREATE_FLAG_ACTIVITY_LOG_ORIGINAL
WHERE TIMESHEET_AUTO_CREATE_FLAG_ACTIVITY_LOG_ORIGINAL.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}'
PARTITION BY AFTER->ID
EMIT CHANGES;

CREATE TABLE IF NOT EXISTS TIMESHEET_AUTO_CREATE_FLAG_ACTIVITY_LOG_TABLE (KEY VARCHAR(STRING) PRIMARY KEY)
WITH(kafka_topic='{{ .Values.topicPrefix }}TIMESHEET_AUTO_CREATE_FLAG_ACTIVITY_LOG_FORMATTED', value_format='AVRO');

CREATE STREAM IF NOT EXISTS TIMESHEET_AUTO_CREATE_TIMESHEET_FLAG_FORMATTED
AS SELECT
    AFTER->STAFF_ID AS KEY,
    AS_VALUE(AFTER->STAFF_ID) AS STAFF_ID,
    AFTER->FLAG_ON AS FLAG_ON,
    AFTER->CREATED_AT AS CREATED_AT,
    AFTER->UPDATED_AT AS UPDATED_AT,
    AFTER->DELETED_AT AS DELETED_AT
FROM TIMESHEET_AUTO_CREATE_TIMESHEET_FLAG_ORIGINAL
WHERE TIMESHEET_AUTO_CREATE_TIMESHEET_FLAG_ORIGINAL.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}'
PARTITION BY AFTER->STAFF_ID
EMIT CHANGES;

CREATE TABLE IF NOT EXISTS TIMESHEET_AUTO_CREATE_TIMESHEET_FLAG_TABLE (KEY VARCHAR(STRING) PRIMARY KEY)
WITH(kafka_topic='{{ .Values.topicPrefix }}TIMESHEET_AUTO_CREATE_TIMESHEET_FLAG_FORMATTED', value_format='AVRO');

CREATE STREAM IF NOT EXISTS TIMESHEET_TIMESHEET_CONFIRMATION_CUT_OFF_DATE_FORMATTED
AS SELECT
    AFTER->ID AS KEY,
    AS_VALUE(AFTER->ID) AS ID,
    AFTER->CUT_OFF_DATE AS CUT_OFF_DATE,
    AFTER->START_DATE AS START_DATE,
    AFTER->END_DATE AS END_DATE,
    AFTER->CREATED_AT AS CREATED_AT,
    AFTER->UPDATED_AT AS UPDATED_AT,
    AFTER->DELETED_AT AS DELETED_AT
FROM TIMESHEET_TIMESHEET_CONFIRMATION_CUT_OFF_DATE_ORIGINAL
WHERE TIMESHEET_TIMESHEET_CONFIRMATION_CUT_OFF_DATE_ORIGINAL.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}'
PARTITION BY AFTER->ID
EMIT CHANGES;

CREATE TABLE IF NOT EXISTS TIMESHEET_TIMESHEET_CONFIRMATION_CUT_OFF_DATE_TABLE (KEY VARCHAR(STRING) PRIMARY KEY)
WITH(kafka_topic='{{ .Values.topicPrefix }}TIMESHEET_TIMESHEET_CONFIRMATION_CUT_OFF_DATE_FORMATTED', value_format='AVRO');

CREATE STREAM IF NOT EXISTS TIMESHEET_TIMESHEET_CONFIRMATION_INFO_FORMATTED
AS SELECT
    AFTER->ID AS KEY,
    AS_VALUE(AFTER->ID) AS ID,
    AFTER->PERIOD_ID AS PERIOD_ID,
    AFTER->LOCATION_ID AS LOCATION_ID,
    AFTER->CREATED_AT AS CREATED_AT,
    AFTER->UPDATED_AT AS UPDATED_AT,
    AFTER->DELETED_AT AS DELETED_AT
FROM TIMESHEET_TIMESHEET_CONFIRMATION_INFO_ORIGINAL
WHERE TIMESHEET_TIMESHEET_CONFIRMATION_INFO_ORIGINAL.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}'
PARTITION BY AFTER->ID
EMIT CHANGES;

CREATE TABLE IF NOT EXISTS TIMESHEET_TIMESHEET_CONFIRMATION_INFO_TABLE (KEY VARCHAR(STRING) PRIMARY KEY)
WITH(kafka_topic='{{ .Values.topicPrefix }}TIMESHEET_TIMESHEET_CONFIRMATION_INFO_FORMATTED', value_format='AVRO');