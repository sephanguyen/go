CREATE STREAM IF NOT EXISTS TIMESHEET_STAFF_TRANSPORTATION_EXPENSE_FORMATTED
AS SELECT
    AFTER->ID AS KEY,
    AS_VALUE(AFTER->ID) AS ID,
    AFTER->STAFF_ID AS STAFF_ID,
    AFTER->LOCATION_ID AS LOCATION_ID,
    AFTER->TRANSPORTATION_TYPE AS TRANSPORTATION_TYPE,
    AFTER->TRANSPORTATION_FROM AS TRANSPORTATION_FROM,
    AFTER->TRANSPORTATION_TO AS TRANSPORTATION_TO,
    AFTER->COST_AMOUNT AS COST_AMOUNT,
    AFTER->ROUND_TRIP AS ROUND_TRIP,
    AFTER->REMARKS AS REMARKS,
    AFTER->CREATED_AT AS CREATED_AT,
    AFTER->UPDATED_AT AS UPDATED_AT,
    AFTER->DELETED_AT AS DELETED_AT
FROM TIMESHEET_STAFF_TRANSPORTATION_EXPENSE_ORIGINAL
WHERE TIMESHEET_STAFF_TRANSPORTATION_EXPENSE_ORIGINAL.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}'
PARTITION BY AFTER->ID
EMIT CHANGES;

CREATE TABLE IF NOT EXISTS TIMESHEET_STAFF_TRANSPORTATION_EXPENSE_TABLE (KEY VARCHAR(STRING) PRIMARY KEY)
WITH(kafka_topic='{{ .Values.topicPrefix }}TIMESHEET_STAFF_TRANSPORTATION_EXPENSE_FORMATTED', value_format='AVRO');

CREATE STREAM IF NOT EXISTS TIMESHEET_LESSONS_FORMATTED
AS SELECT
    AFTER->LESSON_ID AS KEY,
    AS_VALUE(AFTER->LESSON_ID) AS LESSON_ID,
    AFTER->TEACHER_ID AS TEACHER_ID,
    AFTER->COURSE_ID AS COURSE_ID,
    AFTER->END_AT AS END_AT,
    AFTER->CONTROL_SETTINGS AS CONTROL_SETTINGS,
    AFTER->LESSON_GROUP_ID AS LESSON_GROUP_ID,
    AFTER->ROOM_ID AS ROOM_ID,
    AFTER->LESSON_TYPE,
    AFTER->STATUS AS STATUS,
    AFTER->STREAM_LEARNER_COUNTER AS STREAM_LEARNER_COUNTER,
    AFTER->LEARNER_IDS AS LEARNER_IDS,
    AFTER->NAME AS NAME,
    AFTER->START_TIME AS START_TIME,
    AFTER->END_TIME AS END_TIME,
    AFTER->ROOM_STATE AS ROOM_STATE,
    AFTER->TEACHING_MODEL AS TEACHING_MODEL,
    AFTER->CLASS_ID AS CLASS_ID,
    AFTER->CENTER_ID AS CENTER_ID,
    AFTER->TEACHING_METHOD AS TEACHING_METHOD,
    AFTER->TEACHING_MEDIUM AS TEACHING_MEDIUM,
    AFTER->SCHEDULING_STATUS AS SCHEDULING_STATUS,
    AFTER->IS_LOCKED AS IS_LOCKED,
    AFTER->SCHEDULER_ID AS SCHEDULER_ID,
    AFTER->CREATED_AT AS CREATED_AT,
    AFTER->UPDATED_AT AS UPDATED_AT,
    AFTER->DELETED_AT AS DELETED_AT
FROM TIMESHEET_LESSONS_ORIGINAL
WHERE TIMESHEET_LESSONS_ORIGINAL.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}'
PARTITION BY AFTER->LESSON_ID
EMIT CHANGES;

CREATE TABLE IF NOT EXISTS TIMESHEET_LESSONS_TABLE (KEY VARCHAR(STRING) PRIMARY KEY)
WITH(kafka_topic='{{ .Values.topicPrefix }}TIMESHEET_LESSONS_FORMATTED', value_format='AVRO');

CREATE STREAM IF NOT EXISTS TIMESHEET_TIMESHEET_LESSON_HOURS_FORMATTED
AS SELECT
    AFTER->TIMESHEET_ID AS TIMESHEET_ID,
    AFTER->LESSON_ID AS LESSON_ID,
    AFTER->FLAG_ON AS FLAG_ON,
    AFTER->CREATED_AT AS CREATED_AT,
    AFTER->UPDATED_AT AS UPDATED_AT,
    AFTER->DELETED_AT AS DELETED_AT
FROM TIMESHEET_TIMESHEET_LESSON_HOURS_ORIGINAL
WHERE TIMESHEET_TIMESHEET_LESSON_HOURS_ORIGINAL.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}'
EMIT CHANGES;