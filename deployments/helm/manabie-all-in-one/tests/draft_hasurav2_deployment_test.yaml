suite: draft hasura deployment yaml file
templates:
  - charts/draft/templates/app.yaml
values:
  - ../charts/draft/values.yaml
  - ../values.yaml
  - ../stag-manabie-values.yaml
  - ../../platforms/gateway/stag-manabie-values.yaml
tests:
  - it: First template should be hasura-configmaps
    set: &defaultHelmSet
      global.draft.enabled: true
      global.draft.sops.enabled: true
      global.configs.kmsPath: ""
      global.environment: local
      global.vendor: manabie
      global.image.repository: local
      draft.image.tag: v1
      draftv2.service.port: 5450
      global.sqlProxy.enabled: true
    documentIndex: 10
    asserts:
      - isKind:
          of: ConfigMap
      - isNotNull:
          path: data.[files-hasurav2-metadata-actions.yaml]
      - isNotNull:
          path: data.[files-hasurav2-metadata-databases-draft-tables-public_e2e_features.yaml]
  - it: 2nd template should be hasura-pdb
    set:
      <<: *defaultHelmSet
    documentIndex: 11
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.maxUnavailable
          value: 1
  - it: 3rd template should be hasurav2 service account
    set:
      <<: *defaultHelmSet
    documentIndex: 9
    asserts:
      - isKind:
          of: ServiceAccount
      - equal:
          path: metadata.name
          value: stag-draft-hasura
      - isNotNull:
          path: metadata.annotations.[iam.gke.io/gcp-service-account]
  - it: 4th template should be hasura-deployment
    set:
      <<: *defaultHelmSet
    documentIndex: 12
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: wait-for-shamir
      # metadata
      - equal:
          path: spec.template.metadata.labels.[app.kubernetes.io/name]
          value: "draft-hasurav2"

      # containers
      - equal:
          path: spec.template.spec.containers[0].name
          value: hasura
      - equal:
          path: spec.template.spec.containers[0].image
          value: asia.gcr.io/student-coach-e1e95/customized-graphql-engine:v2.8.1.cli-migrations-v3
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            name: http
            containerPort: 8080
            protocol: TCP
      # volumes
      - equal:
          path: spec.template.spec.volumes[0].name
          value: hasurav2-secrets-decrypted-volume
      - equal:
          path: spec.template.spec.volumes[1].configMap.name
          value: draft-hasurav2-metadata

      #affinity
      - contains:
          path: spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms
          content:
            matchExpressions:
            - key: cloud.google.com/gke-spot
              operator: In
              values:
              - "true"
      - contains:
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution
          content:
            weight: 100
            podAffinityTerm:
              labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: draft-hasurav2
              topologyKey: kubernetes.io/hostname
      - contains:
          path: spec.template.spec.tolerations
          content:
            effect: NoSchedule
            key: "cloud.google.com/gke-spot"
            operator: Exists
  - it: 5th template should be hasura-service
    set:
      <<: *defaultHelmSet
    documentIndex: 13
    asserts:
      - isKind:
          of: Service
      - contains:
          path: spec.ports
          content:
            name: http
            protocol: TCP
            targetPort: http
            port: 8080
