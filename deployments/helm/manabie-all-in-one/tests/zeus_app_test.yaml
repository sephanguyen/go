suite: Zeus app yaml file
templates:
  - charts/zeus/templates/app.yaml
values:
  - ../charts/zeus/values.yaml
  - ../values.yaml
  - ../stag-manabie-values.yaml
  - ../../platforms/gateway/stag-manabie-values.yaml
tests:
  - it: first template should be ConfigMap
    set:
      global.zeus.enabled: true
      global.zeus.sops.enabled: true
      global.environment: local
      global.vendor: manabie
      global.image.repository: local
      zeus.image.tag: v1
      zeus.service.port: 1234
      global.sqlProxy.enabled: true
    documentIndex: 0
    asserts:
      - isKind:
          of: ConfigMap
      - isNotNull:
          path: data.[zeus.common.config.yaml]
      - isNotNull:
          path: data.[zeus.config.yaml]

  - it: second template should be Secret
    set:
      global.zeus.enabled: true
      global.zeus.sops.enabled: true
      global.environment: local
      global.vendor: manabie
      global.image.repository: local
      zeus.image.tag: v1
      zeus.service.port: 1234
      global.sqlProxy.enabled: true
    documentIndex: 1
    asserts:
      - isKind:
          of: Secret
      - isNotNull:
          path: data.[zeus.secrets.encrypted.yaml]
      - isNotNull:
          path: data.[zeus_migrate.secrets.encrypted.yaml]
      - isNull:
          path: data.[hasura.secrets.encrypted.yaml]

  - it: third template should be PodDisruptionBudget
    set:
      global.zeus.enabled: true
      global.zeus.sops.enabled: true
      global.environment: local
      global.vendor: manabie
      global.image.repository: local
      zeus.image.tag: v1
      zeus.service.port: 1234
      global.sqlProxy.enabled: true
    documentIndex: 2
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.maxUnavailable
          value: 1

  - it: fourth template should be ServiceAccount
    set:
      global.zeus.enabled: true
      global.zeus.sops.enabled: true
      global.environment: local
      global.vendor: manabie
      global.image.repository: local
      zeus.image.tag: v1
      zeus.service.port: 1234
      global.sqlProxy.enabled: true
    documentIndex: 3
    asserts:
      - isKind:
          of: ServiceAccount
      - equal:
          path: metadata.name
          value: local-zeus

  - it: fifth template should be Deployment
    set:
      global.zeus.enabled: true
      global.zeus.sops.enabled: true
      global.environment: local
      global.vendor: manabie
      global.image.repository: local
      zeus.image.tag: v1
      global.sqlProxy.enabled: true
    documentIndex: 4
    asserts:
      - isKind:
          of: Deployment

      # init containers
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: zeus-migrate
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts[0].mountPath
          value: /configs/zeus.common.config.yaml
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts[1].mountPath
          value: /configs/zeus.config.yaml
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts[2].mountPath
          value: /configs/zeus_migrate.secrets.encrypted.yaml
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts[3].mountPath
          value: /configs/service_credential.json

      # metadata
      - equal:
          path: spec.template.metadata.labels.[app.kubernetes.io/name]
          value: "zeus"
      - equal:
          path: spec.template.metadata.annotations.[sidecar.istio.io/inject]
          value: "false"
      - isNotEmpty:
          path: spec.template.metadata.annotations.[checksum/zeus.config.yaml]
      - isNotEmpty:
          path: spec.template.metadata.annotations.[checksum/zeus.secrets.encrypted.yaml]
      - isNotEmpty:
          path: spec.template.metadata.annotations.[checksum/zeus_migrate.secrets.encrypted.yaml]

      # containers
      - equal:
          path: spec.template.spec.containers[0].name
          value: zeus
      - equal:
          path: spec.template.spec.containers[0].image
          value: local:v1
      - equal:
          path: spec.template.spec.containers[0].args[1]
          value: zeus
      - equal:
          path: spec.template.spec.containers[0].args[2]
          value: --commonConfigPath=/configs/zeus.common.config.yaml
      - equal:
          path: spec.template.spec.containers[0].args[3]
          value: --configPath=/configs/zeus.config.yaml
      - equal:
          path: spec.template.spec.containers[0].args[4]
          value: --secretsPath=/configs/zeus.secrets.encrypted.yaml
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            name: grpc
            containerPort: 5950
            protocol: TCP
      - matchRegex:
          path: spec.template.spec.containers[0].readinessProbe.exec.command[2]
          pattern: .*localhost:5950.*
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.periodSeconds
          value: 10

      # # volumes
      # - equal:
      #     path: spec.template.spec.volumes[0].secret.secretName
      #     value: zeus
      # - equal:
      #     path: spec.template.spec.volumes[0].secret.items[0].key
      #     value: zeus.secrets.encrypted.yaml
      # - equal:
      #     path: spec.template.spec.volumes[0].secret.items[1].key
      #     value: zeus_migrate.secrets.encrypted.yaml
      # - equal:
      #     path: spec.template.spec.volumes[1].secret.items[0].key
      #     value: service_credential.json
      # - equal:
      #     path: spec.template.spec.volumes[2].configMap.name
      #     value: zeus

  - it: sixth template should be Service
    set:
      global.zeus.enabled: true
      global.zeus.sops.enabled: true
      global.environment: local
      global.vendor: manabie
      global.image.repository: local
      zeus.image.tag: v1
      zeus.service.port: 1234
      global.sqlProxy.enabled: true
    documentIndex: 5
    asserts:
      - isKind:
          of: Service
      - contains:
          path: spec.ports
          content:
            name: grpc-web-port
            protocol: TCP
            targetPort: grpc
            port: 5950
