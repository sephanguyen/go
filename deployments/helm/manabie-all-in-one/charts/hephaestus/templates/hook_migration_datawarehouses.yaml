{{- if .Values.postHookMigrateDatawarehouses }}
{{- range $.Values.dataWarehousePartners }}
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
{{ include "util.labels" $ | indent 4 }}
  name: {{ . }}-datawarehouse-migrations
data:
{{- tpl ($.Files.Glob (printf "datawarehouses/%s/migrations/**.sql" . )).AsConfig $ | nindent 2 }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "util.fullname" $ }}-migrate-{{ . }}-datawarehouse
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: {{ include "util.chart" $ }}
    app.kubernetes.io/name: {{ include "util.name" $ }}-migrate-{{ . }}-datawarehouse
    app.kubernetes.io/instance: {{ $.Release.Name }}
    {{- if $.Chart.AppVersion }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "util.name" $ }}-migrate-{{ . }}-datawarehouse
        app.kubernetes.io/instance: {{ $.Release.Name }}
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      serviceAccountName: "{{ include "hephaestus.dwhKafkaConnectServiceAccountName" $ }}"
      {{- with (default $.Values.global.imagePullSecrets $.Values.imagePullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      # hephaestus config map
      - name: hephaestus-config
        configMap:
          name: {{ include "util.fullname" $ }}
          items:
          - key: hephaestus.common.config.yaml
            path: hephaestus.common.config.yaml
          - key: hephaestus.config.yaml
            path: hephaestus.config.yaml
      - name: {{ . }}-datawarehouse-migrations
        configMap:
          name: {{ . }}-datawarehouse-migrations
          defaultMode: 0777
{{- if eq "local" $.Values.global.environment }}
      - name: service-credential
        secret:
          secretName: {{ include "util.fullname" $ }}
          items:
          - key: service_credential.json
            path: service_credential.json
{{- end }}
      # hephaestus secret volume
      - name: hephaestus-secrets
        secret:
          secretName: {{ include "util.fullname" $ }}
          items:
          - key: hephaestus_migrate.secrets.encrypted.yaml
            path: hephaestus_migrate.secrets.encrypted.yaml
      containers:
        - name: {{ $.Chart.Name }}-migrate-datawarehouses
          image: {{ include "util.image" $ }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              /server gjob hephaestus_migrate_datawarehouse \
                --dataWarehouseMigratePath=file:///datawarehouse-migrations \
                --dataWarehouseName={{ . }} \
                --commonConfigPath=/configs/hephaestus.common.config.yaml \
                --configPath=/configs/hephaestus.config.yaml \
                --secretsPath=""
          volumeMounts:
          # hephaestus config volumes
          - name: hephaestus-config
            mountPath: /configs/hephaestus.common.config.yaml
            subPath: hephaestus.common.config.yaml
            readOnly: true
          - name: hephaestus-config
            mountPath: /configs/hephaestus.config.yaml
            subPath: hephaestus.config.yaml
            readOnly: true
          # hephaestus secret volume
          - name: hephaestus-secrets
            mountPath: /configs/hephaestus_migrate.secrets.encrypted.yaml
            subPath: hephaestus_migrate.secrets.encrypted.yaml
            readOnly: true
          - name: {{ . }}-datawarehouse-migrations
            mountPath: /datawarehouse-migrations
{{- if eq "local" $.Values.global.environment }}
          - name: service-credential
            mountPath: /configs/service_credential.json
            subPath: service_credential.json
            readOnly: true
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/configs/service_credential.json"
{{- end }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml $ | nindent 8 }}
      {{- end }}
    {{- with $.Values.affinity }}
      affinity:
        {{- toYaml $ | nindent 8 }}
    {{- end }}
    {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml $ | nindent 8 }}
    {{- end }}
{{- end }}
{{- end }}
