{
  "name": "{{ .Values.global.environment }}_datalake_to_kec_datawarehouse_source_connector",
  "config": {
    "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
    "database.password": "${file:/decrypted/kafka-connect.secrets.properties:datalake_password}",
    "database.dbname": "${file:/config/kafka-connect-config.properties:datalake_dbname}",
    "database.hostname": "${file:/config/kafka-connect-config.properties:datalake_hostname}",
    "database.user": "${file:/config/kafka-connect-config.properties:datalake_user}",
    "database.port": "${file:/config/kafka-connect-config.properties:datalake_port}",
    "database.server.name": "datalake",
    "database.sslmode": "disable",
    "plugin.name": "pgoutput",
    "tasks.max": "1",
    "key.converter": "io.confluent.connect.avro.AvroConverter",
    "key.converter.schema.registry.url": "http://dwh-cp-schema-registry:8081",
    "key.converter.schemas.enable": "false",
    "value.converter": "io.confluent.connect.avro.AvroConverter",
    "value.converter.schema.registry.url": "http://dwh-cp-schema-registry:8081",
    "value.converter.schemas.enable": "false",
    "slot.name": "{{ .Values.global.environment }}_datalake_to_kec_datawarehouse",
    "slot.drop.on.stop": "false",
    "publication.autocreate.mode": "disabled",
    "publication.name": "publication_for_datawarehouse",
{{- if or (eq .Values.global.environment "local")}}
    "snapshot.mode":"initial",
{{- else }}
    "snapshot.mode":"never",
{{- end }}
    "tombstones.on.delete": "true",
    "heartbeat.interval.ms": "20000",
    "producer.max.request.size": "10485760",
    "schema.include.list": "public,bob,timesheet,invoicemgmt,fatima,mastermgmt,lessonmgmt,calendar",
    "table.whitelist": "public.*,bob.*,timesheet.*,invoicemgmt.*,fatima.*,mastermgmt.*,lessonmgmt.*,calendar.*",
    "signal.data.collection": "public.snapshot_datawarehouse_signal",
    "time.precision.mode": "connect",
    "decimal.handling.mode": "double",
    "incremental.snapshot.chunk.size": "512",
    "topic.creation.default.replication.factor": "-1",
    "topic.creation.default.partitions": "1",
    "topic.creation.default.cleanup.policy": "compact",
    "topic.creation.default.compression.type": "lz4",
    "topic.creation.default.delete.retention.ms": "6000",
    "transforms": "route,filterResourcePath",
    "transforms.route.type": "org.apache.kafka.connect.transforms.RegexRouter",
    "transforms.route.regex": "([^.]+).([^.]+).([^.]+)",
    "transforms.route.replacement": "{{ .Values.global.environment }}.kec.$1.$2.$3",
    "transforms.filterResourcePath.type": "io.confluent.connect.transforms.Filter$Value",
    "transforms.filterResourcePath.filter.condition": "$.[?(@.after.resource_path == {{ .Values.kecResourcePath }})]",
    "transforms.filterResourcePath.filter.type": "include",
    "max.queue.size": "327680",
    "max.batch.size": "2048",
    "producer.override.batch.size": "327680",
    "snapshot.fetch.size": "20240",
    "heartbeat.action.query": "INSERT INTO public.debezium_heartbeat (id, updated_at) VALUES (1, NOW()) ON CONFLICT(id) DO UPDATE SET updated_at=EXCLUDED.updated_at;"
  }
}
