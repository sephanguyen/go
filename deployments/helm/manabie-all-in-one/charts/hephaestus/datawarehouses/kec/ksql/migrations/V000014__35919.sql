set 'auto.offset.reset' = 'earliest';
CREATE STREAM IF NOT EXISTS LESSONS_STREAM_ORIGIN_V1 WITH (kafka_topic='{{ .Values.global.environment }}.kec.datalake.bob.lessons', value_format='AVRO');
CREATE STREAM IF NOT EXISTS LESSON_MEMBERS_STREAM_ORIGIN_V1 WITH (kafka_topic='{{ .Values.global.environment }}.kec.datalake.bob.lesson_members', value_format='AVRO');

CREATE STREAM IF NOT EXISTS LESSONS_STREAM_FORMATED_V1
    AS SELECT
         LESSONS_STREAM_ORIGIN_V1.AFTER->LESSON_ID AS LESSON_ID,
         LESSONS_STREAM_ORIGIN_V1.AFTER->COURSE_ID AS COURSE_ID,
         LESSONS_STREAM_ORIGIN_V1.AFTER->CREATED_AT AS CREATED_AT,
         LESSONS_STREAM_ORIGIN_V1.AFTER->UPDATED_AT AS UPDATED_AT,
         LESSONS_STREAM_ORIGIN_V1.AFTER->DELETED_AT AS DELETED_AT,
         LESSONS_STREAM_ORIGIN_V1.AFTER->END_AT AS END_AT,
         LESSONS_STREAM_ORIGIN_V1.AFTER->LESSON_GROUP_ID AS LESSON_GROUP_ID,
         LESSONS_STREAM_ORIGIN_V1.AFTER->ROOM_ID AS ROOM_ID,
         LESSONS_STREAM_ORIGIN_V1.AFTER->LESSON_TYPE AS LESSON_TYPE,
         LESSONS_STREAM_ORIGIN_V1.AFTER->STATUS AS STATUS,
         LESSONS_STREAM_ORIGIN_V1.AFTER->STREAM_LEARNER_COUNTER AS STREAM_LEARNER_COUNTER,
         LESSONS_STREAM_ORIGIN_V1.AFTER->LEARNER_IDS AS LEARNER_IDS,
         LESSONS_STREAM_ORIGIN_V1.AFTER->NAME AS NAME,
         LESSONS_STREAM_ORIGIN_V1.AFTER->START_TIME AS START_TIME,
         LESSONS_STREAM_ORIGIN_V1.AFTER->END_TIME AS END_TIME,
         LESSONS_STREAM_ORIGIN_V1.AFTER->ROOM_STATE AS ROOM_STATE,
         LESSONS_STREAM_ORIGIN_V1.AFTER->CLASS_ID AS CLASS_ID,
         LESSONS_STREAM_ORIGIN_V1.AFTER->CENTER_ID AS CENTER_ID,
         LESSONS_STREAM_ORIGIN_V1.AFTER->TEACHING_METHOD AS TEACHING_METHOD,
         LESSONS_STREAM_ORIGIN_V1.AFTER->TEACHING_MEDIUM AS TEACHING_MEDIUM,
         LESSONS_STREAM_ORIGIN_V1.AFTER->SCHEDULING_STATUS AS SCHEDULING_STATUS,
         LESSONS_STREAM_ORIGIN_V1.AFTER->IS_LOCKED AS IS_LOCKED,
         LESSONS_STREAM_ORIGIN_V1.AFTER->SCHEDULER_ID AS SCHEDULER_ID
    FROM LESSONS_STREAM_ORIGIN_V1 WHERE LESSONS_STREAM_ORIGIN_V1.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}';

CREATE STREAM IF NOT EXISTS LESSON_MEMBERS_STREAM_FORMATED_V1
    AS SELECT
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->LESSON_ID AS LESSON_ID,
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->USER_ID AS USER_ID,
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->UPDATED_AT AS UPDATED_AT, 
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->CREATED_AT AS CREATED_AT,
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->DELETED_AT AS DELETED_AT,
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->ATTENDANCE_STATUS AS ATTENDANCE_STATUS,
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->ATTENDANCE_REMARK AS ATTENDANCE_REMARK,
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->COURSE_ID AS COURSE_ID,
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->ATTENDANCE_NOTICE AS ATTENDANCE_NOTICE,
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->ATTENDANCE_REASON AS ATTENDANCE_REASON,
              LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->ATTENDANCE_NOTE AS ATTENDANCE_NOTE
       FROM LESSON_MEMBERS_STREAM_ORIGIN_V1 WHERE LESSON_MEMBERS_STREAM_ORIGIN_V1.AFTER->RESOURCE_PATH = '{{ .Values.kecResourcePath }}';

CREATE STREAM IF NOT EXISTS LESSON_MEMBERS_PUBLIC_INFO_V1 
    AS SELECT
    LESSON_MEMBERS_STREAM_FORMATED_V1.LESSON_ID AS rowkey,
    AS_VALUE(LESSON_MEMBERS_STREAM_FORMATED_V1.LESSON_ID) AS LESSON_ID,
    LESSON_MEMBERS_STREAM_FORMATED_V1.USER_ID AS STUDENT_ID,
    LESSON_MEMBERS_STREAM_FORMATED_V1.COURSE_ID AS COURSE_ID,
    LESSON_MEMBERS_STREAM_FORMATED_V1.UPDATED_AT AS LESSON_MEMBERS_UPDATED_AT,
    LESSON_MEMBERS_STREAM_FORMATED_V1.CREATED_AT AS LESSON_MEMBERS_CREATED_AT,
    LESSON_MEMBERS_STREAM_FORMATED_V1.DELETED_AT AS LESSON_MEMBERS_DELETED_AT,
    LESSON_MEMBERS_STREAM_FORMATED_V1.ATTENDANCE_STATUS AS ATTENDANCE_STATUS,
    LESSON_MEMBERS_STREAM_FORMATED_V1.ATTENDANCE_REMARK AS ATTENDANCE_REMARK,
    LESSON_MEMBERS_STREAM_FORMATED_V1.ATTENDANCE_NOTICE AS ATTENDANCE_NOTICE,
    LESSON_MEMBERS_STREAM_FORMATED_V1.ATTENDANCE_REASON AS ATTENDANCE_REASON,
    LESSON_MEMBERS_STREAM_FORMATED_V1.ATTENDANCE_NOTE AS ATTENDANCE_NOTE,
    LESSONS_STREAM_FORMATED_V1.CREATED_AT AS LESSONS_CREATED_AT,
    LESSONS_STREAM_FORMATED_V1.UPDATED_AT AS LESSONS_UPDATED_AT,
    LESSONS_STREAM_FORMATED_V1.DELETED_AT AS LESSONS_DELETED_AT,
    LESSONS_STREAM_FORMATED_V1.END_AT AS END_AT,
    LESSONS_STREAM_FORMATED_V1.LESSON_GROUP_ID AS LESSON_GROUP_ID,
    LESSONS_STREAM_FORMATED_V1.ROOM_ID AS ROOM_ID,
    LESSONS_STREAM_FORMATED_V1.LESSON_TYPE AS LESSON_TYPE,
    LESSONS_STREAM_FORMATED_V1.STATUS AS STATUS,
    LESSONS_STREAM_FORMATED_V1.STREAM_LEARNER_COUNTER AS STREAM_LEARNER_COUNTER,
    LESSONS_STREAM_FORMATED_V1.LEARNER_IDS AS LEARNER_IDS,
    LESSONS_STREAM_FORMATED_V1.NAME AS NAME,
    LESSONS_STREAM_FORMATED_V1.START_TIME AS START_TIME,
    LESSONS_STREAM_FORMATED_V1.END_TIME AS END_TIME,
    LESSONS_STREAM_FORMATED_V1.ROOM_STATE AS ROOM_STATE,
    LESSONS_STREAM_FORMATED_V1.CLASS_ID AS CLASS_ID,
    LESSONS_STREAM_FORMATED_V1.CENTER_ID AS CENTER_ID,
    LESSONS_STREAM_FORMATED_V1.TEACHING_METHOD AS TEACHING_METHOD,
    LESSONS_STREAM_FORMATED_V1.TEACHING_MEDIUM AS TEACHING_MEDIUM,
    LESSONS_STREAM_FORMATED_V1.SCHEDULING_STATUS AS SCHEDULING_STATUS,
    LESSONS_STREAM_FORMATED_V1.IS_LOCKED AS IS_LOCKED
    FROM LESSONS_STREAM_FORMATED_V1 JOIN LESSON_MEMBERS_STREAM_FORMATED_V1 
    WITHIN 2 HOURS ON LESSONS_STREAM_FORMATED_V1.LESSON_ID = LESSON_MEMBERS_STREAM_FORMATED_V1.LESSON_ID;


CREATE SINK CONNECTOR SINK_LESSON_MEMBERS_PUBLIC_INFO WITH (
      'connector.class'='io.confluent.connect.jdbc.JdbcSinkConnector',
      'transforms.unwrap.delete.handling.mode'='drop',
      'tasks.max'='1',
      'topics'='{{ .Values.topicPrefix }}LESSON_MEMBERS_PUBLIC_INFO_V1',
      'fields.whitelist'='lesson_id,student_id,course_id,lesson_members_updated_at,lesson_members_created_at,lesson_members_deleted_at,attendance_status,attendance_remark,attendance_notice,attendance_reason,attendance_note,lessons_created_at,lessons_updated_at,lessons_deleted_at,end_at,lesson_group_id,room_id,lesson_type,status,stream_learner_counter,learner_ids,name,start_time,end_time,room_state,class_id,center_id,teaching_method,teaching_medium,scheduling_status,is_locked,scheduler_id',
      'key.converter'='org.apache.kafka.connect.storage.StringConverter',
      'value.converter'='io.confluent.connect.avro.AvroConverter',
      'value.converter.schema.registry.url'='{{ .Values.cpRegistryHost }}',
      'delete.enabled'='false',
      'transforms.unwrap.drop.tombstones'='true',
      'auto.create'='true',
      'connection.url'='${file:/decrypted/kafka-connect.secrets.properties:kec_url}',
      'insert.mode'='upsert',
      'table.name.format'='bob.lesson_members_public_info',
      'pk.mode'='record_value',
      'transforms'='RenameField',
      'transforms.RenameField.type'= 'org.apache.kafka.connect.transforms.ReplaceField$Value',
      'transforms.RenameField.renames'='LESSON_ID:lesson_id,STUDENT_ID:student_id,COURSE_ID:course_id,LESSON_MEMBERS_UPDATED_AT:lesson_members_updated_at,LESSON_MEMBERS_CREATED_AT:lesson_members_created_at,LESSON_MEMBERS_DELETED_AT:lesson_members_deleted_at,ATTENDANCE_STATUS:attendance_status,ATTENDANCE_REMARK:attendance_remark,ATTENDANCE_NOTICE:attendance_notice,ATTENDANCE_REASON:attendance_reason,ATTENDANCE_NOTE:attendance_note,LESSONS_CREATED_AT:lessons_created_at,LESSONS_UPDATED_AT:lessons_updated_at,LESSONS_DELETED_AT:lessons_deleted_at,END_AT:end_at,LESSON_GROUP_ID:lesson_group_id,ROOM_ID:room_id,LESSON_TYPE:lesson_type,STATUS:status,STREAM_LEARNER_COUNTER:stream_learner_counter,LEARNER_IDS:learner_ids,NAME:name,START_TIME:start_time,END_TIME:end_time,ROOM_STATE:room_state,CLASS_ID:class_id,CENTER_ID:center_id,TEACHING_METHOD:teaching_method,TEACHING_MEDIUM:teaching_medium,SCHEDULING_STATUS:scheduling_status,IS_LOCKED:is_locked,SCHEDULER_ID:scheduler_id',
      'pk.fields'='lesson_id,student_id'
);
