service:
  type: ClusterIP
  port: 6450
grpcPort: 6450
httpPort: 6480

resources:
  requests:
    memory: "120Mi"

metrics:
  enabled: true
  podAnnotations:
    prometheus.io/scheme: "http"
    prometheus.io/port: "8888"
    prometheus.io/scrape: "true"

clientVersion: "v0.30.0"

hasura:
  enableConsole: true
  enabledApis: "metadata,graphql"
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      memory: 256Mi
      cpu: 10m
  pgConnections: 8
  pgTimeout: 10
  anonymous:
    enabled: false

apiHttp:
  - match:
    - uri:
        prefix: /mastermgmt.v1.InternalService
    - uri:
        prefix: /mastermgmt.v1.MasterInternalService
    route:
      - destination:
          host: mastermgmt
          port:
            number: 6450
    fault:
      abort:
        percentage:
          value: 100
        httpStatus: 403
  - match:
    - uri:
        prefix: /mastermgmt.v1
    route:
      - destination:
          host: mastermgmt
          port:
            number: 6450
  - match:
    - uri:
        prefix: /mastermgmt/api
    route:
      - destination:
          host: mastermgmt
          port:
            number: 6480

webHttp:
  - match:
    - uri:
        prefix: /mastermgmt.v1
    route:
    - destination:
        host: mastermgmt
        port:
          number: 6450
    corsPolicy: &CORSPolicy
      allowOrigins:
        - regex: ".*"
      allowMethods:
        - POST
        - GET
        - OPTIONS
        - PUT
        - DELETE
      allowHeaders:
        - authorization
        - grpc-timeout
        - content-type
        - keep-alive
        - user-agent
        - cache-control
        - content-transfer-encoding
        - token
        - x-accept-content-transfer-encoding
        - x-accept-response-streaming
        - x-request-id
        - x-user-agent
        - x-graphql-mesh-authorization
        - x-grpc-web
        - if-none-match
        - pkg
        - version
        - connect-timeout-ms
        - connect-protocol-version
        - connect-content-encoding
        - connect-accept-encoding
      maxAge: 100s
      exposeHeaders:
        - grpc-status
        - grpc-message
        - etag
        - grpc-status-details-bin

  - match:
    - uri:
        prefix: /mastermgmt/api
    route:
    - destination:
        host: mastermgmt
        port:
          number: 6480
    corsPolicy: *CORSPolicy

adminHttp:
  - match:
    - uri:
        prefix: /mastermgmt/ # accessing hasura by /mastermgmt/console path
    rewrite:
      uri: /
    route:
    - destination:
        host: mastermgmt-hasura
        port:
          number: 8080
    corsPolicy: *CORSPolicy


nodeSelector: {}

tolerations:

affinity: {}
affinityOverride: {}

pdb:
  enabled: false

podAnnotations:
  sidecar.istio.io/proxyCPU: "10m"
  sidecar.istio.io/proxyMemory: "50Mi"

jobs:
  create-organization:
    cmd: mastermgmt_create_organization

  create-config-zoom-for-partner:
    cmd: create_config_key_of_zoom_for_partner

cronjobs:
  scan-es-rp:
    cmd: scan_es_resource_path
    schedule: "* 1 * * *"

