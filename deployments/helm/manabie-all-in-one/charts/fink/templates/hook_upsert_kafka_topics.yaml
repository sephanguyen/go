{{- if .Values.preHookUpsertKafkaTopic }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "util.fullname" . }}-upsert-kafka-topics
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-7"
    "helm.sh/hook-delete-policy": before-hook-creation
  labels:
{{ include "util.labels" . | indent 4 }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "util.fullname" . }}-upsert-kafka-topics
        app.kubernetes.io/instance: {{ .Release.Name }}
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ include "util.serviceAccountName" . }}
      volumes:
      # fink config map
      - name: fink-config
        configMap:
          name: {{ include "util.fullname" . }}
          items:
          - key: fink.common.config.yaml
            path: fink.common.config.yaml
          - key: fink.config.yaml
            path: fink.config.yaml
{{- if eq "local" .Values.global.environment }}
      - name: service-credential
        secret:
          secretName: {{ include "util.fullname" . }}
          items:
          - key: service_credential.json
            path: service_credential.json
{{- end }}
      # fink secret volume
      - name: fink-secrets
        secret:
          secretName: {{ include "util.fullname" . }}
          items:
          - key: fink.secrets.encrypted.yaml
            path: fink.secrets.encrypted.yaml
      containers:
        - name: {{ .Chart.Name }}-upsert-kafka-topics
          image: {{ include "util.image" . }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              /server gjob upsert_kafka_topics \
                --commonConfigPath=/configs/fink.common.config.yaml \
                --configPath=/configs/fink.config.yaml \
                --secretsPath=/configs/fink.secrets.encrypted.yaml
          volumeMounts:
          # fink config volumes
          - name: fink-config
            mountPath: /configs/fink.common.config.yaml
            subPath: fink.common.config.yaml
            readOnly: true
          - name: fink-config
            mountPath: /configs/fink.config.yaml
            subPath: fink.config.yaml
            readOnly: true
          # fink secret volume
          - name: fink-secrets
            mountPath: /configs/fink.secrets.encrypted.yaml
            subPath: fink.secrets.encrypted.yaml
            readOnly: true
{{- if eq "local" .Values.global.environment }}
          - name: service-credential
            mountPath: /configs/service_credential.json
            subPath: service_credential.json
            readOnly: true
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/configs/service_credential.json"
{{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
