apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-{{ include "elastic.fullname" . }}
type: Opaque
data:
{{- if eq "local" .Values.environment }}
  service_credential.json: {{ include "util.serviceCredential" . }}
{{- end }}
  root-ca-key.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/root-ca-key.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  root-ca.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/root-ca.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  admin-key.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/admin-key.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  admin.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/admin.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}

  root-ca-key_v2.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/root-ca-key_v2.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  root-ca_v2.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/root-ca_v2.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  admin-key_v2.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/admin-key_v2.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  admin_v2.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/admin_v2.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}

---
apiVersion: v1
kind: Secret
metadata:
  name: kibana-{{ include "elastic.fullname" . }}
type: Opaque
data:
{{- if eq "local" .Values.environment }}
  service_credential.json: {{ include "util.serviceCredential" . }}
{{- end }}
  root-ca.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/root-ca.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  # kibana.yml is not a PEM formatted file, just a lazy hack for quick encrypt script
  kibana.encrypted.yaml: |-
{{ printf "secrets/%s/%s/kibana.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}

  root-ca_v2.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/root-ca_v2.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  # kibana.yml is not a PEM formatted file, just a lazy hack for quick encrypt script
  kibana_v2.encrypted.yaml: |-
{{ printf "secrets/%s/%s/kibana_v2.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}


---
apiVersion: v1
kind: Secret
metadata:
  name: es-exporter-{{ include "elastic.fullname" . }}
type: Opaque
data:
{{- if eq "local" .Values.environment }}
  service_credential.json: {{ include "util.serviceCredential" . }}
{{- end }}
  root-ca.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/root-ca.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  es-exporter.encrypted.yaml: |-
{{ printf "secrets/%s/%s/es-exporter.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}

  root-ca_v2.pem.encrypted.yaml: |-
{{ printf "secrets/%s/%s/root-ca_v2.pem.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
  es-exporter_v2.encrypted.yaml: |-
{{ printf "secrets/%s/%s/es-exporter_v2.encrypted.yaml" .Values.vendor .Values.environment | .Files.Get | b64enc | indent 4 }}
