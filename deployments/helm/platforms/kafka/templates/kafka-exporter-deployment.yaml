apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-exporter-{{ include "kafka.fullname" . }}
  labels:
    app.kubernetes.io/name: kafka-exporter-{{ include "kafka.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- if .Values.kafkaExporter.labels -}}
    {{ .Values.kafkaExporter.labels | toYaml | nindent 4 -}}
    {{- end }}
spec:
  replicas: {{ .Values.kafkaExporter.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka-exporter-{{ include "kafka.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka-exporter-{{ include "kafka.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}

      annotations:
        {{- if .Values.kafkaExporter.podAnnotations -}}
        {{ .Values.kafkaExporter.podAnnotations | toYaml | nindent 8 -}}
        {{- end }}

    spec:
      containers:
        - name: kafka-exporter-{{ include "kafka.name" . }}
          image: "{{ .Values.kafkaExporter.image.repository }}:{{ .Values.kafkaExporter.image.tag }}"
          imagePullPolicy: {{ .Values.kafkaExporter.image.pullPolicy }}
          args:
            {{- if .Values.kafkaExporter}}
            {{- range .Values.kafkaExporter.kafka.servers }}
            - "--kafka.server={{ . }}"
            {{- end }}
            {{- if .Values.kafkaExporter.kafka.version }}
            - --kafka.version={{ .Values.kafkaExporter.kafka.version }}
            {{- end }}
            {{- end}}
            {{- if .Values.kafkaExporter.sasl.enabled }}
            - --sasl.enabled
            {{- if not .Values.kafkaExporter.sasl.handshake }}
            - --sasl.handshake=false
            {{- end }}
            - --sasl.username={{ .Values.kafkaExporter.sasl.username }}
            - --sasl.password={{ .Values.kafkaExporter.sasl.password }}
            - --sasl.mechanism={{ .Values.kafkaExporter.sasl.mechanism }}
            {{- end }}
            {{- if .Values.kafkaExporter.tls.enabled}}
            - --tls.enabled
            {{- if .Values.kafkaExporter.tls.insecureSkipTlsVerify}}
            - --tls.insecure-skip-tls-verify
            {{- else }}
            - --tls.ca-file=/etc/tls-certs/ca-file
            - --tls.cert-file=/etc/tls-certs/cert-file
            - --tls.key-file=/etc/tls-certs/key-file
            {{- end }}
            {{- end }}
            {{- if .Values.kafkaExporter.log }}
            - --verbosity={{ .Values.kafkaExporter.log.verbosity }}
            {{- end }}
            {{- if .Values.kafkaExporter.log.enableSarama }}
            - --log.enable-sarama
            {{- end }}
            - --web.listen-address=:9308
            - --web.telemetry-path=/metrics
          ports:
            - name: metrics
              containerPort: 9308
              protocol: TCP
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 9
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 9

          {{- if and .Values.kafkaExporter.tls.enabled (not .Values.kafkaExporter.tls.insecureSkipTlsVerify) }}
          volumeMounts:
          - name: tls-certs
            mountPath: "/etc/tls-certs/"
            readOnly: true
          {{- end }}
          resources:
            {{- toYaml .Values.kafkaExporter.resources | nindent 12 }}
      {{- with .Values.kafkaExporter.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kafkaExporter.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kafkaExporter }}
      {{- $context := (mustMerge (deepCopy .) $) }}
      affinity: {{- include "util.affinityNew" $context | nindent 8 }}
      tolerations: {{- include "util.tolerations" $context | nindent 8 }}
      {{- end }}
    {{- if and .Values.kafkaExporter.tls.enabled (not .Values.kafkaExporter.tls.insecureSkipTlsVerify) }}
      volumes:
      - name: tls-certs
        secret:
          secretName: kafka-exporter
    {{- end }}
