apiVersion: v1
kind: Service
metadata:
  name: pull-through-registry
  namespace: actions-runner-system
  labels:
    app: pull-through-registry
spec:
  ports:
    - port: 5000
      name: http
      targetPort: http
    - port: 443
      name: https
      targetPort: https
    - port: 5001
      name: prometheus
      targetPort: prometheus
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 600
  selector:
    app: pull-through-registry
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pull-through-registry
  namespace: actions-runner-system
spec:
  serviceName: "pull-through-registry"
  replicas: 2
  selector:
    matchLabels:
      app: pull-through-registry
  template:
    metadata:
      annotations:
        prometheus.io/port: "5001"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
      labels:
        app: pull-through-registry
    spec:
      containers:
        - name: pull-through-registry
          image: registry:2
          env:
            - name: REGISTRY_HTTP_ADDR
              value: "0.0.0.0:443"
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: "/certs/tls.cert"
            - name: REGISTRY_HTTP_TLS_KEY
              value: "/certs/tls.key"
            - name: REGISTRY_HTTP_SECRET
              value: "pull-through-registry"
            - name: REGISTRY_STORAGE_FILESYSTEM_MAXTHREADS
              value: "5000"
            - name: REGISTRY_HTTP_DEBUG_ADDR
              value: "0.0.0.0:5001"
            - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_ENABLED
              value: "true"
            - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_PATH
              value: "/metrics"
          ports:
            - containerPort: 5000
              name: http
            - containerPort: 443
              name: https
            - containerPort: 5001
              name: prometheus
          volumeMounts:
            - name: pull-through-registry
              mountPath: /var/lib/registry
            - mountPath: /certs
              name: secret
            - name: secret-volume
              mountPath: "/etc/docker/registry"
          # resources:
          #   requests:
          #     cpu: 100m
          #     memory: 2Gi
      volumes:
      - name: secret
        secret:
          defaultMode: 420
          secretName: pull-through-registry-secret
      - name: secret-volume
        secret:
          secretName: pull-through-registry-config-secret
  volumeClaimTemplates:
    - metadata:
        name: pull-through-registry
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
        storageClassName: longhorn
