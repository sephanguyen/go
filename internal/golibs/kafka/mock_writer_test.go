// Code generated by mockery v2.25.1. DO NOT EDIT.

package kafka

import (
        context "context"

        kafka_go "github.com/segmentio/kafka-go"

        mock "github.com/stretchr/testify/mock"
)

// MockWriter is an autogenerated mock type for the Writer type
type MockWriter struct {
        mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockWriter) Close() error {
        ret := _m.Called()

        var r0 error
        if rf, ok := ret.Get(0).(func() error); ok {
                r0 = rf()
        } else {
                r0 = ret.Error(0)
        }

        return r0
}

// WriteMessages provides a mock function with given fields: ctx, msgs
func (_m *MockWriter) WriteMessages(ctx context.Context, msgs ...kafka_go.Message) error {
        _va := make([]interface{}, len(msgs))
        for _i := range msgs {
                _va[_i] = msgs[_i]
        }
        var _ca []interface{}
        _ca = append(_ca, ctx)
        _ca = append(_ca, _va...)
        ret := _m.Called(_ca...)

        var r0 error
        if rf, ok := ret.Get(0).(func(context.Context, ...kafka_go.Message) error); ok {
                r0 = rf(ctx, msgs...)
        } else {
                r0 = ret.Error(0)
        }

        return r0
}

type mockConstructorTestingTNewMockWriter interface {
        mock.TestingT
        Cleanup(func())
}

// NewMockWriter creates a new instance of MockWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockWriter(t mockConstructorTestingTNewMockWriter) *MockWriter {
        mock := &MockWriter{}
        mock.Mock.Test(t)

        t.Cleanup(func() { mock.AssertExpectations(t) })

        return mock
}
