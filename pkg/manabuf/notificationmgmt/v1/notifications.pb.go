// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: notificationmgmt/v1/notifications.proto

package npb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// BOB requests - START
type RetrieveNotificationDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId     string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	TargetId           string `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	UserNotificationId string `protobuf:"bytes,3,opt,name=user_notification_id,json=userNotificationId,proto3" json:"user_notification_id,omitempty"`
}

func (x *RetrieveNotificationDetailRequest) Reset() {
	*x = RetrieveNotificationDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveNotificationDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveNotificationDetailRequest) ProtoMessage() {}

func (x *RetrieveNotificationDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveNotificationDetailRequest.ProtoReflect.Descriptor instead.
func (*RetrieveNotificationDetailRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{0}
}

func (x *RetrieveNotificationDetailRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *RetrieveNotificationDetailRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RetrieveNotificationDetailRequest) GetUserNotificationId() string {
	if x != nil {
		return x.UserNotificationId
	}
	return ""
}

type RetrieveNotificationDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item              *v1.Notification      `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	UserNotification  *v1.UserNotification  `protobuf:"bytes,2,opt,name=user_notification,json=userNotification,proto3" json:"user_notification,omitempty"`
	UserQuestionnaire *v1.UserQuestionnaire `protobuf:"bytes,3,opt,name=user_questionnaire,json=userQuestionnaire,proto3" json:"user_questionnaire,omitempty"`
}

func (x *RetrieveNotificationDetailResponse) Reset() {
	*x = RetrieveNotificationDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveNotificationDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveNotificationDetailResponse) ProtoMessage() {}

func (x *RetrieveNotificationDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveNotificationDetailResponse.ProtoReflect.Descriptor instead.
func (*RetrieveNotificationDetailResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{1}
}

func (x *RetrieveNotificationDetailResponse) GetItem() *v1.Notification {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *RetrieveNotificationDetailResponse) GetUserNotification() *v1.UserNotification {
	if x != nil {
		return x.UserNotification
	}
	return nil
}

func (x *RetrieveNotificationDetailResponse) GetUserQuestionnaire() *v1.UserQuestionnaire {
	if x != nil {
		return x.UserQuestionnaire
	}
	return nil
}

type RetrieveNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging        *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	ImportantOnly bool       `protobuf:"varint,2,opt,name=important_only,json=importantOnly,proto3" json:"important_only,omitempty"`
}

func (x *RetrieveNotificationsRequest) Reset() {
	*x = RetrieveNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveNotificationsRequest) ProtoMessage() {}

func (x *RetrieveNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveNotificationsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveNotificationsRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RetrieveNotificationsRequest) GetImportantOnly() bool {
	if x != nil {
		return x.ImportantOnly
	}
	return false
}

type RetrieveNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage *v1.Paging                                        `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Items    []*RetrieveNotificationsResponse_NotificationInfo `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RetrieveNotificationsResponse) Reset() {
	*x = RetrieveNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveNotificationsResponse) ProtoMessage() {}

func (x *RetrieveNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveNotificationsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveNotificationsResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveNotificationsResponse) GetItems() []*RetrieveNotificationsResponse_NotificationInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type CountUserNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status v1.UserNotificationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.UserNotificationStatus" json:"status,omitempty"`
}

func (x *CountUserNotificationRequest) Reset() {
	*x = CountUserNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserNotificationRequest) ProtoMessage() {}

func (x *CountUserNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserNotificationRequest.ProtoReflect.Descriptor instead.
func (*CountUserNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{4}
}

func (x *CountUserNotificationRequest) GetStatus() v1.UserNotificationStatus {
	if x != nil {
		return x.Status
	}
	return v1.UserNotificationStatus_USER_NOTIFICATION_STATUS_NONE
}

type CountUserNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumByStatus int32 `protobuf:"varint,1,opt,name=num_by_status,json=numByStatus,proto3" json:"num_by_status,omitempty"`
	Total       int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountUserNotificationResponse) Reset() {
	*x = CountUserNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserNotificationResponse) ProtoMessage() {}

func (x *CountUserNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserNotificationResponse.ProtoReflect.Descriptor instead.
func (*CountUserNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{5}
}

func (x *CountUserNotificationResponse) GetNumByStatus() int32 {
	if x != nil {
		return x.NumByStatus
	}
	return 0
}

func (x *CountUserNotificationResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAnswersByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireId string     `protobuf:"bytes,1,opt,name=questionnaire_id,json=questionnaireId,proto3" json:"questionnaire_id,omitempty"`
	Keyword         string     `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Paging          *v1.Paging `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *GetAnswersByFilterRequest) Reset() {
	*x = GetAnswersByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswersByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswersByFilterRequest) ProtoMessage() {}

func (x *GetAnswersByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswersByFilterRequest.ProtoReflect.Descriptor instead.
func (*GetAnswersByFilterRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{6}
}

func (x *GetAnswersByFilterRequest) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

func (x *GetAnswersByFilterRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetAnswersByFilterRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type GetAnswersByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAnswers  []*GetAnswersByFilterResponse_UserAnswer `protobuf:"bytes,1,rep,name=user_answers,json=userAnswers,proto3" json:"user_answers,omitempty"`
	TotalItems   uint32                                   `protobuf:"varint,2,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	NextPage     *v1.Paging                               `protobuf:"bytes,3,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage *v1.Paging                               `protobuf:"bytes,4,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	Questions    []*v1.Question                           `protobuf:"bytes,5,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GetAnswersByFilterResponse) Reset() {
	*x = GetAnswersByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswersByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswersByFilterResponse) ProtoMessage() {}

func (x *GetAnswersByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswersByFilterResponse.ProtoReflect.Descriptor instead.
func (*GetAnswersByFilterResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{7}
}

func (x *GetAnswersByFilterResponse) GetUserAnswers() []*GetAnswersByFilterResponse_UserAnswer {
	if x != nil {
		return x.UserAnswers
	}
	return nil
}

func (x *GetAnswersByFilterResponse) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *GetAnswersByFilterResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *GetAnswersByFilterResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

func (x *GetAnswersByFilterResponse) GetQuestions() []*v1.Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type SetUserNotificationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationIds []string                  `protobuf:"bytes,1,rep,name=notification_ids,json=notificationIds,proto3" json:"notification_ids,omitempty"`
	Status          v1.UserNotificationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=common.v1.UserNotificationStatus" json:"status,omitempty"`
}

func (x *SetUserNotificationStatusRequest) Reset() {
	*x = SetUserNotificationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserNotificationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserNotificationStatusRequest) ProtoMessage() {}

func (x *SetUserNotificationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserNotificationStatusRequest.ProtoReflect.Descriptor instead.
func (*SetUserNotificationStatusRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{8}
}

func (x *SetUserNotificationStatusRequest) GetNotificationIds() []string {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

func (x *SetUserNotificationStatusRequest) GetStatus() v1.UserNotificationStatus {
	if x != nil {
		return x.Status
	}
	return v1.UserNotificationStatus_USER_NOTIFICATION_STATUS_NONE
}

type SetUserNotificationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetUserNotificationStatusResponse) Reset() {
	*x = SetUserNotificationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserNotificationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserNotificationStatusResponse) ProtoMessage() {}

func (x *SetUserNotificationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserNotificationStatusResponse.ProtoReflect.Descriptor instead.
func (*SetUserNotificationStatusResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{9}
}

// YASUO requests - START
type UpsertNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification  *v1.Notification  `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	Questionnaire *v1.Questionnaire `protobuf:"bytes,2,opt,name=questionnaire,proto3" json:"questionnaire,omitempty"`
	TagIds        []string          `protobuf:"bytes,3,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
}

func (x *UpsertNotificationRequest) Reset() {
	*x = UpsertNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertNotificationRequest) ProtoMessage() {}

func (x *UpsertNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertNotificationRequest.ProtoReflect.Descriptor instead.
func (*UpsertNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{10}
}

func (x *UpsertNotificationRequest) GetNotification() *v1.Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *UpsertNotificationRequest) GetQuestionnaire() *v1.Questionnaire {
	if x != nil {
		return x.Questionnaire
	}
	return nil
}

func (x *UpsertNotificationRequest) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type UpsertNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *UpsertNotificationResponse) Reset() {
	*x = UpsertNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertNotificationResponse) ProtoMessage() {}

func (x *UpsertNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertNotificationResponse.ProtoReflect.Descriptor instead.
func (*UpsertNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{11}
}

func (x *UpsertNotificationResponse) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type SendNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{12}
}

func (x *SendNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type SendNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{13}
}

type DiscardNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *DiscardNotificationRequest) Reset() {
	*x = DiscardNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscardNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardNotificationRequest) ProtoMessage() {}

func (x *DiscardNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardNotificationRequest.ProtoReflect.Descriptor instead.
func (*DiscardNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{14}
}

func (x *DiscardNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type DiscardNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscardNotificationResponse) Reset() {
	*x = DiscardNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscardNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardNotificationResponse) ProtoMessage() {}

func (x *DiscardNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardNotificationResponse.ProtoReflect.Descriptor instead.
func (*DiscardNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{15}
}

type NotifyUnreadUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *NotifyUnreadUserRequest) Reset() {
	*x = NotifyUnreadUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyUnreadUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyUnreadUserRequest) ProtoMessage() {}

func (x *NotifyUnreadUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyUnreadUserRequest.ProtoReflect.Descriptor instead.
func (*NotifyUnreadUserRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{16}
}

func (x *NotifyUnreadUserRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type NotifyUnreadUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyUnreadUserResponse) Reset() {
	*x = NotifyUnreadUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyUnreadUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyUnreadUserResponse) ProtoMessage() {}

func (x *NotifyUnreadUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyUnreadUserResponse.ProtoReflect.Descriptor instead.
func (*NotifyUnreadUserResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{17}
}

type SendScheduledNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId         string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	From                   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	IsRunningForAllTenants bool                   `protobuf:"varint,4,opt,name=is_running_for_all_tenants,json=isRunningForAllTenants,proto3" json:"is_running_for_all_tenants,omitempty"`
	TenantIds              []string               `protobuf:"bytes,5,rep,name=tenant_ids,json=tenantIds,proto3" json:"tenant_ids,omitempty"`
}

func (x *SendScheduledNotificationRequest) Reset() {
	*x = SendScheduledNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendScheduledNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendScheduledNotificationRequest) ProtoMessage() {}

func (x *SendScheduledNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendScheduledNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendScheduledNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{18}
}

func (x *SendScheduledNotificationRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *SendScheduledNotificationRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SendScheduledNotificationRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendScheduledNotificationRequest) GetIsRunningForAllTenants() bool {
	if x != nil {
		return x.IsRunningForAllTenants
	}
	return false
}

func (x *SendScheduledNotificationRequest) GetTenantIds() []string {
	if x != nil {
		return x.TenantIds
	}
	return nil
}

type SendScheduledNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendScheduledNotificationResponse) Reset() {
	*x = SendScheduledNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendScheduledNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendScheduledNotificationResponse) ProtoMessage() {}

func (x *SendScheduledNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendScheduledNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendScheduledNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{19}
}

type SubmitQuestionnaireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfoNotificationId string       `protobuf:"bytes,1,opt,name=user_info_notification_id,json=userInfoNotificationId,proto3" json:"user_info_notification_id,omitempty"`
	QuestionnaireId        string       `protobuf:"bytes,2,opt,name=questionnaire_id,json=questionnaireId,proto3" json:"questionnaire_id,omitempty"`
	Answers                []*v1.Answer `protobuf:"bytes,3,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *SubmitQuestionnaireRequest) Reset() {
	*x = SubmitQuestionnaireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitQuestionnaireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQuestionnaireRequest) ProtoMessage() {}

func (x *SubmitQuestionnaireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQuestionnaireRequest.ProtoReflect.Descriptor instead.
func (*SubmitQuestionnaireRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{20}
}

func (x *SubmitQuestionnaireRequest) GetUserInfoNotificationId() string {
	if x != nil {
		return x.UserInfoNotificationId
	}
	return ""
}

func (x *SubmitQuestionnaireRequest) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

func (x *SubmitQuestionnaireRequest) GetAnswers() []*v1.Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type SubmitQuestionnaireResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitQuestionnaireResponse) Reset() {
	*x = SubmitQuestionnaireResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitQuestionnaireResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQuestionnaireResponse) ProtoMessage() {}

func (x *SubmitQuestionnaireResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQuestionnaireResponse.ProtoReflect.Descriptor instead.
func (*SubmitQuestionnaireResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{21}
}

type UpdateUserDeviceTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceToken       string `protobuf:"bytes,2,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	AllowNotification bool   `protobuf:"varint,3,opt,name=allow_notification,json=allowNotification,proto3" json:"allow_notification,omitempty"`
}

func (x *UpdateUserDeviceTokenRequest) Reset() {
	*x = UpdateUserDeviceTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDeviceTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDeviceTokenRequest) ProtoMessage() {}

func (x *UpdateUserDeviceTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDeviceTokenRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserDeviceTokenRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateUserDeviceTokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserDeviceTokenRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *UpdateUserDeviceTokenRequest) GetAllowNotification() bool {
	if x != nil {
		return x.AllowNotification
	}
	return false
}

type UpdateUserDeviceTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *UpdateUserDeviceTokenResponse) Reset() {
	*x = UpdateUserDeviceTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDeviceTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDeviceTokenResponse) ProtoMessage() {}

func (x *UpdateUserDeviceTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDeviceTokenResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserDeviceTokenResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateUserDeviceTokenResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type DeleteNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type DeleteNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNotificationResponse) Reset() {
	*x = DeleteNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationResponse) ProtoMessage() {}

func (x *DeleteNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{25}
}

type SetStatusForUserNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNotificationIds []string                  `protobuf:"bytes,1,rep,name=user_notification_ids,json=userNotificationIds,proto3" json:"user_notification_ids,omitempty"`
	Status              v1.UserNotificationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=common.v1.UserNotificationStatus" json:"status,omitempty"`
}

func (x *SetStatusForUserNotificationsRequest) Reset() {
	*x = SetStatusForUserNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStatusForUserNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStatusForUserNotificationsRequest) ProtoMessage() {}

func (x *SetStatusForUserNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStatusForUserNotificationsRequest.ProtoReflect.Descriptor instead.
func (*SetStatusForUserNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{26}
}

func (x *SetStatusForUserNotificationsRequest) GetUserNotificationIds() []string {
	if x != nil {
		return x.UserNotificationIds
	}
	return nil
}

func (x *SetStatusForUserNotificationsRequest) GetStatus() v1.UserNotificationStatus {
	if x != nil {
		return x.Status
	}
	return v1.UserNotificationStatus_USER_NOTIFICATION_STATUS_NONE
}

type SetStatusForUserNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetStatusForUserNotificationsResponse) Reset() {
	*x = SetStatusForUserNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStatusForUserNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStatusForUserNotificationsResponse) ProtoMessage() {}

func (x *SetStatusForUserNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStatusForUserNotificationsResponse.ProtoReflect.Descriptor instead.
func (*SetStatusForUserNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{27}
}

type GetNotificationsByFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword                       string                      `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	TagIds                        []string                    `protobuf:"bytes,2,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	SentFrom                      *timestamppb.Timestamp      `protobuf:"bytes,3,opt,name=sent_from,json=sentFrom,proto3" json:"sent_from,omitempty"`
	SentTo                        *timestamppb.Timestamp      `protobuf:"bytes,4,opt,name=sent_to,json=sentTo,proto3" json:"sent_to,omitempty"`
	Status                        v1.NotificationStatus       `protobuf:"varint,5,opt,name=status,proto3,enum=common.v1.NotificationStatus" json:"status,omitempty"`
	Paging                        *v1.Paging                  `protobuf:"bytes,6,opt,name=paging,proto3" json:"paging,omitempty"`
	TargetGroup                   *v1.NotificationTargetGroup `protobuf:"bytes,7,opt,name=target_group,json=targetGroup,proto3" json:"target_group,omitempty"`
	IsQuestionnaireFullySubmitted bool                        `protobuf:"varint,8,opt,name=is_questionnaire_fully_submitted,json=isQuestionnaireFullySubmitted,proto3" json:"is_questionnaire_fully_submitted,omitempty"`
	ComposerIds                   []string                    `protobuf:"bytes,9,rep,name=composer_ids,json=composerIds,proto3" json:"composer_ids,omitempty"`
}

func (x *GetNotificationsByFilterRequest) Reset() {
	*x = GetNotificationsByFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsByFilterRequest) ProtoMessage() {}

func (x *GetNotificationsByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsByFilterRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationsByFilterRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{28}
}

func (x *GetNotificationsByFilterRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetNotificationsByFilterRequest) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *GetNotificationsByFilterRequest) GetSentFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SentFrom
	}
	return nil
}

func (x *GetNotificationsByFilterRequest) GetSentTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SentTo
	}
	return nil
}

func (x *GetNotificationsByFilterRequest) GetStatus() v1.NotificationStatus {
	if x != nil {
		return x.Status
	}
	return v1.NotificationStatus_NOTIFICATION_STATUS_NONE
}

func (x *GetNotificationsByFilterRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *GetNotificationsByFilterRequest) GetTargetGroup() *v1.NotificationTargetGroup {
	if x != nil {
		return x.TargetGroup
	}
	return nil
}

func (x *GetNotificationsByFilterRequest) GetIsQuestionnaireFullySubmitted() bool {
	if x != nil {
		return x.IsQuestionnaireFullySubmitted
	}
	return false
}

func (x *GetNotificationsByFilterRequest) GetComposerIds() []string {
	if x != nil {
		return x.ComposerIds
	}
	return nil
}

type GetNotificationsByFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications       []*GetNotificationsByFilterResponse_Notification               `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	TotalItems          uint32                                                         `protobuf:"varint,2,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	TotalItemsForStatus []*GetNotificationsByFilterResponse_TotalNotificationForStatus `protobuf:"bytes,3,rep,name=total_items_for_status,json=totalItemsForStatus,proto3" json:"total_items_for_status,omitempty"`
	NextPage            *v1.Paging                                                     `protobuf:"bytes,4,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage        *v1.Paging                                                     `protobuf:"bytes,5,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
}

func (x *GetNotificationsByFilterResponse) Reset() {
	*x = GetNotificationsByFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsByFilterResponse) ProtoMessage() {}

func (x *GetNotificationsByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsByFilterResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationsByFilterResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{29}
}

func (x *GetNotificationsByFilterResponse) GetNotifications() []*GetNotificationsByFilterResponse_Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetNotificationsByFilterResponse) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *GetNotificationsByFilterResponse) GetTotalItemsForStatus() []*GetNotificationsByFilterResponse_TotalNotificationForStatus {
	if x != nil {
		return x.TotalItemsForStatus
	}
	return nil
}

func (x *GetNotificationsByFilterResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *GetNotificationsByFilterResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

type RetrieveGroupAudienceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword     string                      `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	TargetGroup *v1.NotificationTargetGroup `protobuf:"bytes,2,opt,name=target_group,json=targetGroup,proto3" json:"target_group,omitempty"`
	Paging      *v1.Paging                  `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	UserIds     []string                    `protobuf:"bytes,4,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *RetrieveGroupAudienceRequest) Reset() {
	*x = RetrieveGroupAudienceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveGroupAudienceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveGroupAudienceRequest) ProtoMessage() {}

func (x *RetrieveGroupAudienceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveGroupAudienceRequest.ProtoReflect.Descriptor instead.
func (*RetrieveGroupAudienceRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{30}
}

func (x *RetrieveGroupAudienceRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *RetrieveGroupAudienceRequest) GetTargetGroup() *v1.NotificationTargetGroup {
	if x != nil {
		return x.TargetGroup
	}
	return nil
}

func (x *RetrieveGroupAudienceRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RetrieveGroupAudienceRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type RetrieveGroupAudienceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audiences    []*RetrieveGroupAudienceResponse_Audience `protobuf:"bytes,1,rep,name=audiences,proto3" json:"audiences,omitempty"`
	TotalItems   uint32                                    `protobuf:"varint,2,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	NextPage     *v1.Paging                                `protobuf:"bytes,3,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage *v1.Paging                                `protobuf:"bytes,4,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
}

func (x *RetrieveGroupAudienceResponse) Reset() {
	*x = RetrieveGroupAudienceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveGroupAudienceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveGroupAudienceResponse) ProtoMessage() {}

func (x *RetrieveGroupAudienceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveGroupAudienceResponse.ProtoReflect.Descriptor instead.
func (*RetrieveGroupAudienceResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{31}
}

func (x *RetrieveGroupAudienceResponse) GetAudiences() []*RetrieveGroupAudienceResponse_Audience {
	if x != nil {
		return x.Audiences
	}
	return nil
}

func (x *RetrieveGroupAudienceResponse) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *RetrieveGroupAudienceResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveGroupAudienceResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

type GetQuestionnaireAnswersCSVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireId string `protobuf:"bytes,1,opt,name=questionnaire_id,json=questionnaireId,proto3" json:"questionnaire_id,omitempty"`
	Timezone        string `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Language        string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetQuestionnaireAnswersCSVRequest) Reset() {
	*x = GetQuestionnaireAnswersCSVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireAnswersCSVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireAnswersCSVRequest) ProtoMessage() {}

func (x *GetQuestionnaireAnswersCSVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireAnswersCSVRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireAnswersCSVRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{32}
}

func (x *GetQuestionnaireAnswersCSVRequest) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

func (x *GetQuestionnaireAnswersCSVRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *GetQuestionnaireAnswersCSVRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetQuestionnaireAnswersCSVResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetQuestionnaireAnswersCSVResponse) Reset() {
	*x = GetQuestionnaireAnswersCSVResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireAnswersCSVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireAnswersCSVResponse) ProtoMessage() {}

func (x *GetQuestionnaireAnswersCSVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireAnswersCSVResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireAnswersCSVResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{33}
}

func (x *GetQuestionnaireAnswersCSVResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RetrieveDraftAudienceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string     `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	Paging         *v1.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *RetrieveDraftAudienceRequest) Reset() {
	*x = RetrieveDraftAudienceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveDraftAudienceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveDraftAudienceRequest) ProtoMessage() {}

func (x *RetrieveDraftAudienceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveDraftAudienceRequest.ProtoReflect.Descriptor instead.
func (*RetrieveDraftAudienceRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{34}
}

func (x *RetrieveDraftAudienceRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *RetrieveDraftAudienceRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type RetrieveDraftAudienceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audiences    []*RetrieveDraftAudienceResponse_Audience `protobuf:"bytes,1,rep,name=audiences,proto3" json:"audiences,omitempty"`
	TotalItems   uint32                                    `protobuf:"varint,2,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	NextPage     *v1.Paging                                `protobuf:"bytes,3,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage *v1.Paging                                `protobuf:"bytes,4,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
}

func (x *RetrieveDraftAudienceResponse) Reset() {
	*x = RetrieveDraftAudienceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveDraftAudienceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveDraftAudienceResponse) ProtoMessage() {}

func (x *RetrieveDraftAudienceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveDraftAudienceResponse.ProtoReflect.Descriptor instead.
func (*RetrieveDraftAudienceResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{35}
}

func (x *RetrieveDraftAudienceResponse) GetAudiences() []*RetrieveDraftAudienceResponse_Audience {
	if x != nil {
		return x.Audiences
	}
	return nil
}

func (x *RetrieveDraftAudienceResponse) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *RetrieveDraftAudienceResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveDraftAudienceResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

type UpsertQuestionnaireTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireTemplate *QuestionnaireTemplate `protobuf:"bytes,1,opt,name=questionnaire_template,json=questionnaireTemplate,proto3" json:"questionnaire_template,omitempty"`
}

func (x *UpsertQuestionnaireTemplateRequest) Reset() {
	*x = UpsertQuestionnaireTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertQuestionnaireTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertQuestionnaireTemplateRequest) ProtoMessage() {}

func (x *UpsertQuestionnaireTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertQuestionnaireTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpsertQuestionnaireTemplateRequest) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{36}
}

func (x *UpsertQuestionnaireTemplateRequest) GetQuestionnaireTemplate() *QuestionnaireTemplate {
	if x != nil {
		return x.QuestionnaireTemplate
	}
	return nil
}

type UpsertQuestionnaireTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireTemplateId string `protobuf:"bytes,1,opt,name=questionnaire_template_id,json=questionnaireTemplateId,proto3" json:"questionnaire_template_id,omitempty"`
}

func (x *UpsertQuestionnaireTemplateResponse) Reset() {
	*x = UpsertQuestionnaireTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertQuestionnaireTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertQuestionnaireTemplateResponse) ProtoMessage() {}

func (x *UpsertQuestionnaireTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertQuestionnaireTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpsertQuestionnaireTemplateResponse) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{37}
}

func (x *UpsertQuestionnaireTemplateResponse) GetQuestionnaireTemplateId() string {
	if x != nil {
		return x.QuestionnaireTemplateId
	}
	return ""
}

type RetrieveNotificationsResponse_NotificationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title            string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description      string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	UserNotification *v1.UserNotification   `protobuf:"bytes,3,opt,name=user_notification,json=userNotification,proto3" json:"user_notification,omitempty"`
	SentAt           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	IsImportant      bool                   `protobuf:"varint,5,opt,name=is_important,json=isImportant,proto3" json:"is_important,omitempty"`
	QuestionnaireId  string                 `protobuf:"bytes,6,opt,name=questionnaire_id,json=questionnaireId,proto3" json:"questionnaire_id,omitempty"`
	TargetId         string                 `protobuf:"bytes,7,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *RetrieveNotificationsResponse_NotificationInfo) Reset() {
	*x = RetrieveNotificationsResponse_NotificationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveNotificationsResponse_NotificationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveNotificationsResponse_NotificationInfo) ProtoMessage() {}

func (x *RetrieveNotificationsResponse_NotificationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveNotificationsResponse_NotificationInfo.ProtoReflect.Descriptor instead.
func (*RetrieveNotificationsResponse_NotificationInfo) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{3, 0}
}

func (x *RetrieveNotificationsResponse_NotificationInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RetrieveNotificationsResponse_NotificationInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RetrieveNotificationsResponse_NotificationInfo) GetUserNotification() *v1.UserNotification {
	if x != nil {
		return x.UserNotification
	}
	return nil
}

func (x *RetrieveNotificationsResponse_NotificationInfo) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *RetrieveNotificationsResponse_NotificationInfo) GetIsImportant() bool {
	if x != nil {
		return x.IsImportant
	}
	return false
}

func (x *RetrieveNotificationsResponse_NotificationInfo) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

func (x *RetrieveNotificationsResponse_NotificationInfo) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type GetAnswersByFilterResponse_UserAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponderName      string                 `protobuf:"bytes,1,opt,name=responder_name,json=responderName,proto3" json:"responder_name,omitempty"`
	UserId             string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId           string                 `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	TargetName         string                 `protobuf:"bytes,4,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	IsParent           bool                   `protobuf:"varint,5,opt,name=is_parent,json=isParent,proto3" json:"is_parent,omitempty"`
	SubmittedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	Answers            []*v1.Answer           `protobuf:"bytes,7,rep,name=answers,proto3" json:"answers,omitempty"`
	UserNotificationId string                 `protobuf:"bytes,8,opt,name=user_notification_id,json=userNotificationId,proto3" json:"user_notification_id,omitempty"`
	IsIndividual       bool                   `protobuf:"varint,9,opt,name=is_individual,json=isIndividual,proto3" json:"is_individual,omitempty"`
}

func (x *GetAnswersByFilterResponse_UserAnswer) Reset() {
	*x = GetAnswersByFilterResponse_UserAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswersByFilterResponse_UserAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswersByFilterResponse_UserAnswer) ProtoMessage() {}

func (x *GetAnswersByFilterResponse_UserAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswersByFilterResponse_UserAnswer.ProtoReflect.Descriptor instead.
func (*GetAnswersByFilterResponse_UserAnswer) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetAnswersByFilterResponse_UserAnswer) GetResponderName() string {
	if x != nil {
		return x.ResponderName
	}
	return ""
}

func (x *GetAnswersByFilterResponse_UserAnswer) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAnswersByFilterResponse_UserAnswer) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *GetAnswersByFilterResponse_UserAnswer) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *GetAnswersByFilterResponse_UserAnswer) GetIsParent() bool {
	if x != nil {
		return x.IsParent
	}
	return false
}

func (x *GetAnswersByFilterResponse_UserAnswer) GetSubmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *GetAnswersByFilterResponse_UserAnswer) GetAnswers() []*v1.Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *GetAnswersByFilterResponse_UserAnswer) GetUserNotificationId() string {
	if x != nil {
		return x.UserNotificationId
	}
	return ""
}

func (x *GetAnswersByFilterResponse_UserAnswer) GetIsIndividual() bool {
	if x != nil {
		return x.IsIndividual
	}
	return false
}

type GetNotificationsByFilterResponse_UserGroupFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroups []v1.UserGroup `protobuf:"varint,1,rep,packed,name=user_groups,json=userGroups,proto3,enum=common.v1.UserGroup" json:"user_groups,omitempty"`
}

func (x *GetNotificationsByFilterResponse_UserGroupFilter) Reset() {
	*x = GetNotificationsByFilterResponse_UserGroupFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsByFilterResponse_UserGroupFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsByFilterResponse_UserGroupFilter) ProtoMessage() {}

func (x *GetNotificationsByFilterResponse_UserGroupFilter) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsByFilterResponse_UserGroupFilter.ProtoReflect.Descriptor instead.
func (*GetNotificationsByFilterResponse_UserGroupFilter) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{29, 0}
}

func (x *GetNotificationsByFilterResponse_UserGroupFilter) GetUserGroups() []v1.UserGroup {
	if x != nil {
		return x.UserGroups
	}
	return nil
}

type GetNotificationsByFilterResponse_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId    string                                            `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	NotificationMgsId string                                            `protobuf:"bytes,2,opt,name=notification_mgs_id,json=notificationMgsId,proto3" json:"notification_mgs_id,omitempty"`
	Title             string                                            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ComposerId        string                                            `protobuf:"bytes,4,opt,name=composer_id,json=composerId,proto3" json:"composer_id,omitempty"`
	TagIds            []string                                          `protobuf:"bytes,5,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	UserGroupFilter   *GetNotificationsByFilterResponse_UserGroupFilter `protobuf:"bytes,6,opt,name=user_group_filter,json=userGroupFilter,proto3" json:"user_group_filter,omitempty"`
	Status            v1.NotificationStatus                             `protobuf:"varint,7,opt,name=status,proto3,enum=common.v1.NotificationStatus" json:"status,omitempty"`
	SentAt            *timestamppb.Timestamp                            `protobuf:"bytes,8,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp                            `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TargetGroup       *v1.NotificationTargetGroup                       `protobuf:"bytes,10,opt,name=target_group,json=targetGroup,proto3" json:"target_group,omitempty"`
}

func (x *GetNotificationsByFilterResponse_Notification) Reset() {
	*x = GetNotificationsByFilterResponse_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsByFilterResponse_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsByFilterResponse_Notification) ProtoMessage() {}

func (x *GetNotificationsByFilterResponse_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsByFilterResponse_Notification.ProtoReflect.Descriptor instead.
func (*GetNotificationsByFilterResponse_Notification) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{29, 1}
}

func (x *GetNotificationsByFilterResponse_Notification) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *GetNotificationsByFilterResponse_Notification) GetNotificationMgsId() string {
	if x != nil {
		return x.NotificationMgsId
	}
	return ""
}

func (x *GetNotificationsByFilterResponse_Notification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetNotificationsByFilterResponse_Notification) GetComposerId() string {
	if x != nil {
		return x.ComposerId
	}
	return ""
}

func (x *GetNotificationsByFilterResponse_Notification) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *GetNotificationsByFilterResponse_Notification) GetUserGroupFilter() *GetNotificationsByFilterResponse_UserGroupFilter {
	if x != nil {
		return x.UserGroupFilter
	}
	return nil
}

func (x *GetNotificationsByFilterResponse_Notification) GetStatus() v1.NotificationStatus {
	if x != nil {
		return x.Status
	}
	return v1.NotificationStatus_NOTIFICATION_STATUS_NONE
}

func (x *GetNotificationsByFilterResponse_Notification) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *GetNotificationsByFilterResponse_Notification) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetNotificationsByFilterResponse_Notification) GetTargetGroup() *v1.NotificationTargetGroup {
	if x != nil {
		return x.TargetGroup
	}
	return nil
}

type GetNotificationsByFilterResponse_TotalNotificationForStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     v1.NotificationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.NotificationStatus" json:"status,omitempty"`
	TotalItems uint32                `protobuf:"varint,2,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
}

func (x *GetNotificationsByFilterResponse_TotalNotificationForStatus) Reset() {
	*x = GetNotificationsByFilterResponse_TotalNotificationForStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsByFilterResponse_TotalNotificationForStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsByFilterResponse_TotalNotificationForStatus) ProtoMessage() {}

func (x *GetNotificationsByFilterResponse_TotalNotificationForStatus) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsByFilterResponse_TotalNotificationForStatus.ProtoReflect.Descriptor instead.
func (*GetNotificationsByFilterResponse_TotalNotificationForStatus) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{29, 2}
}

func (x *GetNotificationsByFilterResponse_TotalNotificationForStatus) GetStatus() v1.NotificationStatus {
	if x != nil {
		return x.Status
	}
	return v1.NotificationStatus_NOTIFICATION_STATUS_NONE
}

func (x *GetNotificationsByFilterResponse_TotalNotificationForStatus) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

type RetrieveGroupAudienceResponse_Audience struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName   string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Email      string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Grade      string   `protobuf:"bytes,4,opt,name=grade,proto3" json:"grade,omitempty"`
	ChildNames []string `protobuf:"bytes,5,rep,name=child_names,json=childNames,proto3" json:"child_names,omitempty"`
}

func (x *RetrieveGroupAudienceResponse_Audience) Reset() {
	*x = RetrieveGroupAudienceResponse_Audience{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveGroupAudienceResponse_Audience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveGroupAudienceResponse_Audience) ProtoMessage() {}

func (x *RetrieveGroupAudienceResponse_Audience) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveGroupAudienceResponse_Audience.ProtoReflect.Descriptor instead.
func (*RetrieveGroupAudienceResponse_Audience) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{31, 0}
}

func (x *RetrieveGroupAudienceResponse_Audience) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RetrieveGroupAudienceResponse_Audience) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RetrieveGroupAudienceResponse_Audience) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RetrieveGroupAudienceResponse_Audience) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *RetrieveGroupAudienceResponse_Audience) GetChildNames() []string {
	if x != nil {
		return x.ChildNames
	}
	return nil
}

type RetrieveDraftAudienceResponse_Audience struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName     string       `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Email        string       `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Grade        string       `protobuf:"bytes,4,opt,name=grade,proto3" json:"grade,omitempty"`
	UserGroup    v1.UserGroup `protobuf:"varint,5,opt,name=user_group,json=userGroup,proto3,enum=common.v1.UserGroup" json:"user_group,omitempty"`
	IsIndividual bool         `protobuf:"varint,6,opt,name=is_individual,json=isIndividual,proto3" json:"is_individual,omitempty"`
	ChildName    string       `protobuf:"bytes,7,opt,name=child_name,json=childName,proto3" json:"child_name,omitempty"`
	ChildId      string       `protobuf:"bytes,8,opt,name=child_id,json=childId,proto3" json:"child_id,omitempty"`
}

func (x *RetrieveDraftAudienceResponse_Audience) Reset() {
	*x = RetrieveDraftAudienceResponse_Audience{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveDraftAudienceResponse_Audience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveDraftAudienceResponse_Audience) ProtoMessage() {}

func (x *RetrieveDraftAudienceResponse_Audience) ProtoReflect() protoreflect.Message {
	mi := &file_notificationmgmt_v1_notifications_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveDraftAudienceResponse_Audience.ProtoReflect.Descriptor instead.
func (*RetrieveDraftAudienceResponse_Audience) Descriptor() ([]byte, []int) {
	return file_notificationmgmt_v1_notifications_proto_rawDescGZIP(), []int{35, 0}
}

func (x *RetrieveDraftAudienceResponse_Audience) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RetrieveDraftAudienceResponse_Audience) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RetrieveDraftAudienceResponse_Audience) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RetrieveDraftAudienceResponse_Audience) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *RetrieveDraftAudienceResponse_Audience) GetUserGroup() v1.UserGroup {
	if x != nil {
		return x.UserGroup
	}
	return v1.UserGroup_USER_GROUP_NONE
}

func (x *RetrieveDraftAudienceResponse_Audience) GetIsIndividual() bool {
	if x != nil {
		return x.IsIndividual
	}
	return false
}

func (x *RetrieveDraftAudienceResponse_Audience) GetChildName() string {
	if x != nil {
		return x.ChildName
	}
	return ""
}

func (x *RetrieveDraftAudienceResponse_Audience) GetChildId() string {
	if x != nil {
		return x.ChildId
	}
	return ""
}

var File_notificationmgmt_v1_notifications_proto protoreflect.FileDescriptor

var file_notificationmgmt_v1_notifications_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67,
	0x6d, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1d,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x30, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x22, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x48, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x4b, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x22, 0x70, 0x0a,
	0x1c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22,
	0xe1, 0x03, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x59, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x43, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xb4, 0x02, 0x0a,
	0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x1c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x59,
	0x0a, 0x1d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x42, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8b, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0xa4, 0x05, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x31,
	0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0xea, 0x02, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x22, 0x88,
	0x01, 0x0a, 0x20, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x39,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1,
	0x01, 0x0a, 0x19, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0d, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x73, 0x22, 0x45, 0x0a, 0x1a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x17, 0x53, 0x65, 0x6e,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1a, 0x0a,
	0x18, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x1a, 0x44, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x42, 0x0a, 0x17, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x82, 0x02, 0x0a, 0x20, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x3a, 0x0a, 0x1a, 0x69, 0x73, 0x5f,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69,
	0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x1a, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x44, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1c, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x24,
	0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x25, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd7, 0x03, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x33, 0x0a, 0x07,
	0x73, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x47, 0x0a, 0x20, 0x69, 0x73,
	0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x66,
	0x75, 0x6c, 0x6c, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x69, 0x73, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x79, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xf8, 0x08, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e,
	0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36,
	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x48, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x1a, 0x98, 0x04, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x67, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x67, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12, 0x71, 0x0a, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x74, 0x0a, 0x1a, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xc5, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x45, 0x0a, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x93, 0x03, 0x0a, 0x1d, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x75, 0x64, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x09, 0x61,
	0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x61, 0x75, 0x64,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x1a,
	0x8d, 0x01, 0x0a, 0x08, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22,
	0x86, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x43, 0x53, 0x56, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x43, 0x53, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x72, 0x0a, 0x1c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x86, 0x04, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x41,
	0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x80, 0x02, 0x0a,
	0x08, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x75, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22,
	0x87, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x16, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x15, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x61, 0x0a, 0x23, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x19, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x32, 0xbc, 0x08, 0x0a,
	0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1a, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x36, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x31, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x2e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x87, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x75, 0x64, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x75, 0x64, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x43, 0x53, 0x56, 0x12, 0x36, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x43, 0x53, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x43, 0x53, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x41, 0x75, 0x64, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x41, 0x75, 0x64, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9a, 0x0a, 0x0a, 0x1b,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x12, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6f, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a,
	0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a,
	0x01, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x13, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x12, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x37, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7e, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x31, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x75, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63,
	0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notificationmgmt_v1_notifications_proto_rawDescOnce sync.Once
	file_notificationmgmt_v1_notifications_proto_rawDescData = file_notificationmgmt_v1_notifications_proto_rawDesc
)

func file_notificationmgmt_v1_notifications_proto_rawDescGZIP() []byte {
	file_notificationmgmt_v1_notifications_proto_rawDescOnce.Do(func() {
		file_notificationmgmt_v1_notifications_proto_rawDescData = protoimpl.X.CompressGZIP(file_notificationmgmt_v1_notifications_proto_rawDescData)
	})
	return file_notificationmgmt_v1_notifications_proto_rawDescData
}

var file_notificationmgmt_v1_notifications_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_notificationmgmt_v1_notifications_proto_goTypes = []interface{}{
	(*RetrieveNotificationDetailRequest)(nil),                           // 0: notificationmgmt.v1.RetrieveNotificationDetailRequest
	(*RetrieveNotificationDetailResponse)(nil),                          // 1: notificationmgmt.v1.RetrieveNotificationDetailResponse
	(*RetrieveNotificationsRequest)(nil),                                // 2: notificationmgmt.v1.RetrieveNotificationsRequest
	(*RetrieveNotificationsResponse)(nil),                               // 3: notificationmgmt.v1.RetrieveNotificationsResponse
	(*CountUserNotificationRequest)(nil),                                // 4: notificationmgmt.v1.CountUserNotificationRequest
	(*CountUserNotificationResponse)(nil),                               // 5: notificationmgmt.v1.CountUserNotificationResponse
	(*GetAnswersByFilterRequest)(nil),                                   // 6: notificationmgmt.v1.GetAnswersByFilterRequest
	(*GetAnswersByFilterResponse)(nil),                                  // 7: notificationmgmt.v1.GetAnswersByFilterResponse
	(*SetUserNotificationStatusRequest)(nil),                            // 8: notificationmgmt.v1.SetUserNotificationStatusRequest
	(*SetUserNotificationStatusResponse)(nil),                           // 9: notificationmgmt.v1.SetUserNotificationStatusResponse
	(*UpsertNotificationRequest)(nil),                                   // 10: notificationmgmt.v1.UpsertNotificationRequest
	(*UpsertNotificationResponse)(nil),                                  // 11: notificationmgmt.v1.UpsertNotificationResponse
	(*SendNotificationRequest)(nil),                                     // 12: notificationmgmt.v1.SendNotificationRequest
	(*SendNotificationResponse)(nil),                                    // 13: notificationmgmt.v1.SendNotificationResponse
	(*DiscardNotificationRequest)(nil),                                  // 14: notificationmgmt.v1.DiscardNotificationRequest
	(*DiscardNotificationResponse)(nil),                                 // 15: notificationmgmt.v1.DiscardNotificationResponse
	(*NotifyUnreadUserRequest)(nil),                                     // 16: notificationmgmt.v1.NotifyUnreadUserRequest
	(*NotifyUnreadUserResponse)(nil),                                    // 17: notificationmgmt.v1.NotifyUnreadUserResponse
	(*SendScheduledNotificationRequest)(nil),                            // 18: notificationmgmt.v1.SendScheduledNotificationRequest
	(*SendScheduledNotificationResponse)(nil),                           // 19: notificationmgmt.v1.SendScheduledNotificationResponse
	(*SubmitQuestionnaireRequest)(nil),                                  // 20: notificationmgmt.v1.SubmitQuestionnaireRequest
	(*SubmitQuestionnaireResponse)(nil),                                 // 21: notificationmgmt.v1.SubmitQuestionnaireResponse
	(*UpdateUserDeviceTokenRequest)(nil),                                // 22: notificationmgmt.v1.UpdateUserDeviceTokenRequest
	(*UpdateUserDeviceTokenResponse)(nil),                               // 23: notificationmgmt.v1.UpdateUserDeviceTokenResponse
	(*DeleteNotificationRequest)(nil),                                   // 24: notificationmgmt.v1.DeleteNotificationRequest
	(*DeleteNotificationResponse)(nil),                                  // 25: notificationmgmt.v1.DeleteNotificationResponse
	(*SetStatusForUserNotificationsRequest)(nil),                        // 26: notificationmgmt.v1.SetStatusForUserNotificationsRequest
	(*SetStatusForUserNotificationsResponse)(nil),                       // 27: notificationmgmt.v1.SetStatusForUserNotificationsResponse
	(*GetNotificationsByFilterRequest)(nil),                             // 28: notificationmgmt.v1.GetNotificationsByFilterRequest
	(*GetNotificationsByFilterResponse)(nil),                            // 29: notificationmgmt.v1.GetNotificationsByFilterResponse
	(*RetrieveGroupAudienceRequest)(nil),                                // 30: notificationmgmt.v1.RetrieveGroupAudienceRequest
	(*RetrieveGroupAudienceResponse)(nil),                               // 31: notificationmgmt.v1.RetrieveGroupAudienceResponse
	(*GetQuestionnaireAnswersCSVRequest)(nil),                           // 32: notificationmgmt.v1.GetQuestionnaireAnswersCSVRequest
	(*GetQuestionnaireAnswersCSVResponse)(nil),                          // 33: notificationmgmt.v1.GetQuestionnaireAnswersCSVResponse
	(*RetrieveDraftAudienceRequest)(nil),                                // 34: notificationmgmt.v1.RetrieveDraftAudienceRequest
	(*RetrieveDraftAudienceResponse)(nil),                               // 35: notificationmgmt.v1.RetrieveDraftAudienceResponse
	(*UpsertQuestionnaireTemplateRequest)(nil),                          // 36: notificationmgmt.v1.UpsertQuestionnaireTemplateRequest
	(*UpsertQuestionnaireTemplateResponse)(nil),                         // 37: notificationmgmt.v1.UpsertQuestionnaireTemplateResponse
	(*RetrieveNotificationsResponse_NotificationInfo)(nil),              // 38: notificationmgmt.v1.RetrieveNotificationsResponse.NotificationInfo
	(*GetAnswersByFilterResponse_UserAnswer)(nil),                       // 39: notificationmgmt.v1.GetAnswersByFilterResponse.UserAnswer
	(*GetNotificationsByFilterResponse_UserGroupFilter)(nil),            // 40: notificationmgmt.v1.GetNotificationsByFilterResponse.UserGroupFilter
	(*GetNotificationsByFilterResponse_Notification)(nil),               // 41: notificationmgmt.v1.GetNotificationsByFilterResponse.Notification
	(*GetNotificationsByFilterResponse_TotalNotificationForStatus)(nil), // 42: notificationmgmt.v1.GetNotificationsByFilterResponse.TotalNotificationForStatus
	(*RetrieveGroupAudienceResponse_Audience)(nil),                      // 43: notificationmgmt.v1.RetrieveGroupAudienceResponse.Audience
	(*RetrieveDraftAudienceResponse_Audience)(nil),                      // 44: notificationmgmt.v1.RetrieveDraftAudienceResponse.Audience
	(*v1.Notification)(nil),                                             // 45: common.v1.Notification
	(*v1.UserNotification)(nil),                                         // 46: common.v1.UserNotification
	(*v1.UserQuestionnaire)(nil),                                        // 47: common.v1.UserQuestionnaire
	(*v1.Paging)(nil),                                                   // 48: common.v1.Paging
	(v1.UserNotificationStatus)(0),                                      // 49: common.v1.UserNotificationStatus
	(*v1.Question)(nil),                                                 // 50: common.v1.Question
	(*v1.Questionnaire)(nil),                                            // 51: common.v1.Questionnaire
	(*timestamppb.Timestamp)(nil),                                       // 52: google.protobuf.Timestamp
	(*v1.Answer)(nil),                                                   // 53: common.v1.Answer
	(v1.NotificationStatus)(0),                                          // 54: common.v1.NotificationStatus
	(*v1.NotificationTargetGroup)(nil),                                  // 55: common.v1.NotificationTargetGroup
	(*QuestionnaireTemplate)(nil),                                       // 56: notificationmgmt.v1.QuestionnaireTemplate
	(v1.UserGroup)(0),                                                   // 57: common.v1.UserGroup
}
var file_notificationmgmt_v1_notifications_proto_depIdxs = []int32{
	45, // 0: notificationmgmt.v1.RetrieveNotificationDetailResponse.item:type_name -> common.v1.Notification
	46, // 1: notificationmgmt.v1.RetrieveNotificationDetailResponse.user_notification:type_name -> common.v1.UserNotification
	47, // 2: notificationmgmt.v1.RetrieveNotificationDetailResponse.user_questionnaire:type_name -> common.v1.UserQuestionnaire
	48, // 3: notificationmgmt.v1.RetrieveNotificationsRequest.paging:type_name -> common.v1.Paging
	48, // 4: notificationmgmt.v1.RetrieveNotificationsResponse.next_page:type_name -> common.v1.Paging
	38, // 5: notificationmgmt.v1.RetrieveNotificationsResponse.items:type_name -> notificationmgmt.v1.RetrieveNotificationsResponse.NotificationInfo
	49, // 6: notificationmgmt.v1.CountUserNotificationRequest.status:type_name -> common.v1.UserNotificationStatus
	48, // 7: notificationmgmt.v1.GetAnswersByFilterRequest.paging:type_name -> common.v1.Paging
	39, // 8: notificationmgmt.v1.GetAnswersByFilterResponse.user_answers:type_name -> notificationmgmt.v1.GetAnswersByFilterResponse.UserAnswer
	48, // 9: notificationmgmt.v1.GetAnswersByFilterResponse.next_page:type_name -> common.v1.Paging
	48, // 10: notificationmgmt.v1.GetAnswersByFilterResponse.previous_page:type_name -> common.v1.Paging
	50, // 11: notificationmgmt.v1.GetAnswersByFilterResponse.questions:type_name -> common.v1.Question
	49, // 12: notificationmgmt.v1.SetUserNotificationStatusRequest.status:type_name -> common.v1.UserNotificationStatus
	45, // 13: notificationmgmt.v1.UpsertNotificationRequest.notification:type_name -> common.v1.Notification
	51, // 14: notificationmgmt.v1.UpsertNotificationRequest.questionnaire:type_name -> common.v1.Questionnaire
	52, // 15: notificationmgmt.v1.SendScheduledNotificationRequest.from:type_name -> google.protobuf.Timestamp
	52, // 16: notificationmgmt.v1.SendScheduledNotificationRequest.to:type_name -> google.protobuf.Timestamp
	53, // 17: notificationmgmt.v1.SubmitQuestionnaireRequest.answers:type_name -> common.v1.Answer
	49, // 18: notificationmgmt.v1.SetStatusForUserNotificationsRequest.status:type_name -> common.v1.UserNotificationStatus
	52, // 19: notificationmgmt.v1.GetNotificationsByFilterRequest.sent_from:type_name -> google.protobuf.Timestamp
	52, // 20: notificationmgmt.v1.GetNotificationsByFilterRequest.sent_to:type_name -> google.protobuf.Timestamp
	54, // 21: notificationmgmt.v1.GetNotificationsByFilterRequest.status:type_name -> common.v1.NotificationStatus
	48, // 22: notificationmgmt.v1.GetNotificationsByFilterRequest.paging:type_name -> common.v1.Paging
	55, // 23: notificationmgmt.v1.GetNotificationsByFilterRequest.target_group:type_name -> common.v1.NotificationTargetGroup
	41, // 24: notificationmgmt.v1.GetNotificationsByFilterResponse.notifications:type_name -> notificationmgmt.v1.GetNotificationsByFilterResponse.Notification
	42, // 25: notificationmgmt.v1.GetNotificationsByFilterResponse.total_items_for_status:type_name -> notificationmgmt.v1.GetNotificationsByFilterResponse.TotalNotificationForStatus
	48, // 26: notificationmgmt.v1.GetNotificationsByFilterResponse.next_page:type_name -> common.v1.Paging
	48, // 27: notificationmgmt.v1.GetNotificationsByFilterResponse.previous_page:type_name -> common.v1.Paging
	55, // 28: notificationmgmt.v1.RetrieveGroupAudienceRequest.target_group:type_name -> common.v1.NotificationTargetGroup
	48, // 29: notificationmgmt.v1.RetrieveGroupAudienceRequest.paging:type_name -> common.v1.Paging
	43, // 30: notificationmgmt.v1.RetrieveGroupAudienceResponse.audiences:type_name -> notificationmgmt.v1.RetrieveGroupAudienceResponse.Audience
	48, // 31: notificationmgmt.v1.RetrieveGroupAudienceResponse.next_page:type_name -> common.v1.Paging
	48, // 32: notificationmgmt.v1.RetrieveGroupAudienceResponse.previous_page:type_name -> common.v1.Paging
	48, // 33: notificationmgmt.v1.RetrieveDraftAudienceRequest.paging:type_name -> common.v1.Paging
	44, // 34: notificationmgmt.v1.RetrieveDraftAudienceResponse.audiences:type_name -> notificationmgmt.v1.RetrieveDraftAudienceResponse.Audience
	48, // 35: notificationmgmt.v1.RetrieveDraftAudienceResponse.next_page:type_name -> common.v1.Paging
	48, // 36: notificationmgmt.v1.RetrieveDraftAudienceResponse.previous_page:type_name -> common.v1.Paging
	56, // 37: notificationmgmt.v1.UpsertQuestionnaireTemplateRequest.questionnaire_template:type_name -> notificationmgmt.v1.QuestionnaireTemplate
	46, // 38: notificationmgmt.v1.RetrieveNotificationsResponse.NotificationInfo.user_notification:type_name -> common.v1.UserNotification
	52, // 39: notificationmgmt.v1.RetrieveNotificationsResponse.NotificationInfo.sent_at:type_name -> google.protobuf.Timestamp
	52, // 40: notificationmgmt.v1.GetAnswersByFilterResponse.UserAnswer.submitted_at:type_name -> google.protobuf.Timestamp
	53, // 41: notificationmgmt.v1.GetAnswersByFilterResponse.UserAnswer.answers:type_name -> common.v1.Answer
	57, // 42: notificationmgmt.v1.GetNotificationsByFilterResponse.UserGroupFilter.user_groups:type_name -> common.v1.UserGroup
	40, // 43: notificationmgmt.v1.GetNotificationsByFilterResponse.Notification.user_group_filter:type_name -> notificationmgmt.v1.GetNotificationsByFilterResponse.UserGroupFilter
	54, // 44: notificationmgmt.v1.GetNotificationsByFilterResponse.Notification.status:type_name -> common.v1.NotificationStatus
	52, // 45: notificationmgmt.v1.GetNotificationsByFilterResponse.Notification.sent_at:type_name -> google.protobuf.Timestamp
	52, // 46: notificationmgmt.v1.GetNotificationsByFilterResponse.Notification.updated_at:type_name -> google.protobuf.Timestamp
	55, // 47: notificationmgmt.v1.GetNotificationsByFilterResponse.Notification.target_group:type_name -> common.v1.NotificationTargetGroup
	54, // 48: notificationmgmt.v1.GetNotificationsByFilterResponse.TotalNotificationForStatus.status:type_name -> common.v1.NotificationStatus
	57, // 49: notificationmgmt.v1.RetrieveDraftAudienceResponse.Audience.user_group:type_name -> common.v1.UserGroup
	0,  // 50: notificationmgmt.v1.NotificationReaderService.RetrieveNotificationDetail:input_type -> notificationmgmt.v1.RetrieveNotificationDetailRequest
	2,  // 51: notificationmgmt.v1.NotificationReaderService.RetrieveNotifications:input_type -> notificationmgmt.v1.RetrieveNotificationsRequest
	4,  // 52: notificationmgmt.v1.NotificationReaderService.CountUserNotification:input_type -> notificationmgmt.v1.CountUserNotificationRequest
	6,  // 53: notificationmgmt.v1.NotificationReaderService.GetAnswersByFilter:input_type -> notificationmgmt.v1.GetAnswersByFilterRequest
	28, // 54: notificationmgmt.v1.NotificationReaderService.GetNotificationsByFilter:input_type -> notificationmgmt.v1.GetNotificationsByFilterRequest
	30, // 55: notificationmgmt.v1.NotificationReaderService.RetrieveGroupAudience:input_type -> notificationmgmt.v1.RetrieveGroupAudienceRequest
	32, // 56: notificationmgmt.v1.NotificationReaderService.GetQuestionnaireAnswersCSV:input_type -> notificationmgmt.v1.GetQuestionnaireAnswersCSVRequest
	34, // 57: notificationmgmt.v1.NotificationReaderService.RetrieveDraftAudience:input_type -> notificationmgmt.v1.RetrieveDraftAudienceRequest
	10, // 58: notificationmgmt.v1.NotificationModifierService.UpsertNotification:input_type -> notificationmgmt.v1.UpsertNotificationRequest
	12, // 59: notificationmgmt.v1.NotificationModifierService.SendNotification:input_type -> notificationmgmt.v1.SendNotificationRequest
	14, // 60: notificationmgmt.v1.NotificationModifierService.DiscardNotification:input_type -> notificationmgmt.v1.DiscardNotificationRequest
	16, // 61: notificationmgmt.v1.NotificationModifierService.NotifyUnreadUser:input_type -> notificationmgmt.v1.NotifyUnreadUserRequest
	18, // 62: notificationmgmt.v1.NotificationModifierService.SendScheduledNotification:input_type -> notificationmgmt.v1.SendScheduledNotificationRequest
	20, // 63: notificationmgmt.v1.NotificationModifierService.SubmitQuestionnaire:input_type -> notificationmgmt.v1.SubmitQuestionnaireRequest
	36, // 64: notificationmgmt.v1.NotificationModifierService.UpsertQuestionnaireTemplate:input_type -> notificationmgmt.v1.UpsertQuestionnaireTemplateRequest
	26, // 65: notificationmgmt.v1.NotificationModifierService.SetStatusForUserNotifications:input_type -> notificationmgmt.v1.SetStatusForUserNotificationsRequest
	22, // 66: notificationmgmt.v1.NotificationModifierService.UpdateUserDeviceToken:input_type -> notificationmgmt.v1.UpdateUserDeviceTokenRequest
	24, // 67: notificationmgmt.v1.NotificationModifierService.DeleteNotification:input_type -> notificationmgmt.v1.DeleteNotificationRequest
	1,  // 68: notificationmgmt.v1.NotificationReaderService.RetrieveNotificationDetail:output_type -> notificationmgmt.v1.RetrieveNotificationDetailResponse
	3,  // 69: notificationmgmt.v1.NotificationReaderService.RetrieveNotifications:output_type -> notificationmgmt.v1.RetrieveNotificationsResponse
	5,  // 70: notificationmgmt.v1.NotificationReaderService.CountUserNotification:output_type -> notificationmgmt.v1.CountUserNotificationResponse
	7,  // 71: notificationmgmt.v1.NotificationReaderService.GetAnswersByFilter:output_type -> notificationmgmt.v1.GetAnswersByFilterResponse
	29, // 72: notificationmgmt.v1.NotificationReaderService.GetNotificationsByFilter:output_type -> notificationmgmt.v1.GetNotificationsByFilterResponse
	31, // 73: notificationmgmt.v1.NotificationReaderService.RetrieveGroupAudience:output_type -> notificationmgmt.v1.RetrieveGroupAudienceResponse
	33, // 74: notificationmgmt.v1.NotificationReaderService.GetQuestionnaireAnswersCSV:output_type -> notificationmgmt.v1.GetQuestionnaireAnswersCSVResponse
	35, // 75: notificationmgmt.v1.NotificationReaderService.RetrieveDraftAudience:output_type -> notificationmgmt.v1.RetrieveDraftAudienceResponse
	11, // 76: notificationmgmt.v1.NotificationModifierService.UpsertNotification:output_type -> notificationmgmt.v1.UpsertNotificationResponse
	13, // 77: notificationmgmt.v1.NotificationModifierService.SendNotification:output_type -> notificationmgmt.v1.SendNotificationResponse
	15, // 78: notificationmgmt.v1.NotificationModifierService.DiscardNotification:output_type -> notificationmgmt.v1.DiscardNotificationResponse
	17, // 79: notificationmgmt.v1.NotificationModifierService.NotifyUnreadUser:output_type -> notificationmgmt.v1.NotifyUnreadUserResponse
	19, // 80: notificationmgmt.v1.NotificationModifierService.SendScheduledNotification:output_type -> notificationmgmt.v1.SendScheduledNotificationResponse
	21, // 81: notificationmgmt.v1.NotificationModifierService.SubmitQuestionnaire:output_type -> notificationmgmt.v1.SubmitQuestionnaireResponse
	37, // 82: notificationmgmt.v1.NotificationModifierService.UpsertQuestionnaireTemplate:output_type -> notificationmgmt.v1.UpsertQuestionnaireTemplateResponse
	27, // 83: notificationmgmt.v1.NotificationModifierService.SetStatusForUserNotifications:output_type -> notificationmgmt.v1.SetStatusForUserNotificationsResponse
	23, // 84: notificationmgmt.v1.NotificationModifierService.UpdateUserDeviceToken:output_type -> notificationmgmt.v1.UpdateUserDeviceTokenResponse
	25, // 85: notificationmgmt.v1.NotificationModifierService.DeleteNotification:output_type -> notificationmgmt.v1.DeleteNotificationResponse
	68, // [68:86] is the sub-list for method output_type
	50, // [50:68] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_notificationmgmt_v1_notifications_proto_init() }
func file_notificationmgmt_v1_notifications_proto_init() {
	if File_notificationmgmt_v1_notifications_proto != nil {
		return
	}
	file_notificationmgmt_v1_questionnaire_template_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_notificationmgmt_v1_notifications_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveNotificationDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveNotificationDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnswersByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnswersByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserNotificationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserNotificationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscardNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscardNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyUnreadUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyUnreadUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendScheduledNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendScheduledNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitQuestionnaireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitQuestionnaireResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDeviceTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDeviceTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStatusForUserNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStatusForUserNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsByFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsByFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveGroupAudienceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveGroupAudienceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionnaireAnswersCSVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionnaireAnswersCSVResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveDraftAudienceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveDraftAudienceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertQuestionnaireTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertQuestionnaireTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveNotificationsResponse_NotificationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnswersByFilterResponse_UserAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsByFilterResponse_UserGroupFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsByFilterResponse_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsByFilterResponse_TotalNotificationForStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveGroupAudienceResponse_Audience); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notificationmgmt_v1_notifications_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveDraftAudienceResponse_Audience); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notificationmgmt_v1_notifications_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_notificationmgmt_v1_notifications_proto_goTypes,
		DependencyIndexes: file_notificationmgmt_v1_notifications_proto_depIdxs,
		MessageInfos:      file_notificationmgmt_v1_notifications_proto_msgTypes,
	}.Build()
	File_notificationmgmt_v1_notifications_proto = out.File
	file_notificationmgmt_v1_notifications_proto_rawDesc = nil
	file_notificationmgmt_v1_notifications_proto_goTypes = nil
	file_notificationmgmt_v1_notifications_proto_depIdxs = nil
}
