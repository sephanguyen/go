// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: virtualclassroom/v1/liveroom.proto

package vpb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type JoinLiveRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	RtmUserId   string `protobuf:"bytes,2,opt,name=rtm_user_id,json=rtmUserId,proto3" json:"rtm_user_id,omitempty"`
}

func (x *JoinLiveRoomRequest) Reset() {
	*x = JoinLiveRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinLiveRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinLiveRoomRequest) ProtoMessage() {}

func (x *JoinLiveRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinLiveRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinLiveRoomRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{0}
}

func (x *JoinLiveRoomRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *JoinLiveRoomRequest) GetRtmUserId() string {
	if x != nil {
		return x.RtmUserId
	}
	return ""
}

type JoinLiveRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId            string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	RoomId               string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	StreamToken          string `protobuf:"bytes,3,opt,name=stream_token,json=streamToken,proto3" json:"stream_token,omitempty"`
	WhiteboardToken      string `protobuf:"bytes,4,opt,name=whiteboard_token,json=whiteboardToken,proto3" json:"whiteboard_token,omitempty"`
	StmToken             string `protobuf:"bytes,5,opt,name=stm_token,json=stmToken,proto3" json:"stm_token,omitempty"`
	VideoToken           string `protobuf:"bytes,6,opt,name=video_token,json=videoToken,proto3" json:"video_token,omitempty"`
	AgoraAppId           string `protobuf:"bytes,7,opt,name=agora_app_id,json=agoraAppId,proto3" json:"agora_app_id,omitempty"`
	WhiteboardAppId      string `protobuf:"bytes,8,opt,name=whiteboard_app_id,json=whiteboardAppId,proto3" json:"whiteboard_app_id,omitempty"`
	ScreenRecordingToken string `protobuf:"bytes,9,opt,name=screen_recording_token,json=screenRecordingToken,proto3" json:"screen_recording_token,omitempty"`
}

func (x *JoinLiveRoomResponse) Reset() {
	*x = JoinLiveRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinLiveRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinLiveRoomResponse) ProtoMessage() {}

func (x *JoinLiveRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinLiveRoomResponse.ProtoReflect.Descriptor instead.
func (*JoinLiveRoomResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{1}
}

func (x *JoinLiveRoomResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *JoinLiveRoomResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinLiveRoomResponse) GetStreamToken() string {
	if x != nil {
		return x.StreamToken
	}
	return ""
}

func (x *JoinLiveRoomResponse) GetWhiteboardToken() string {
	if x != nil {
		return x.WhiteboardToken
	}
	return ""
}

func (x *JoinLiveRoomResponse) GetStmToken() string {
	if x != nil {
		return x.StmToken
	}
	return ""
}

func (x *JoinLiveRoomResponse) GetVideoToken() string {
	if x != nil {
		return x.VideoToken
	}
	return ""
}

func (x *JoinLiveRoomResponse) GetAgoraAppId() string {
	if x != nil {
		return x.AgoraAppId
	}
	return ""
}

func (x *JoinLiveRoomResponse) GetWhiteboardAppId() string {
	if x != nil {
		return x.WhiteboardAppId
	}
	return ""
}

func (x *JoinLiveRoomResponse) GetScreenRecordingToken() string {
	if x != nil {
		return x.ScreenRecordingToken
	}
	return ""
}

type ModifyLiveRoomStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// Types that are assignable to Command:
	//
	//	*ModifyLiveRoomStateRequest_AnnotationEnable
	//	*ModifyLiveRoomStateRequest_AnnotationDisable
	//	*ModifyLiveRoomStateRequest_ChatEnable
	//	*ModifyLiveRoomStateRequest_ChatDisable
	//	*ModifyLiveRoomStateRequest_StartPolling
	//	*ModifyLiveRoomStateRequest_StopPolling
	//	*ModifyLiveRoomStateRequest_EndPolling
	//	*ModifyLiveRoomStateRequest_SubmitPollingAnswer
	//	*ModifyLiveRoomStateRequest_SharePolling
	//	*ModifyLiveRoomStateRequest_FoldHandAll
	//	*ModifyLiveRoomStateRequest_FoldUserHand
	//	*ModifyLiveRoomStateRequest_RaiseHand
	//	*ModifyLiveRoomStateRequest_HandOff
	//	*ModifyLiveRoomStateRequest_Spotlight_
	//	*ModifyLiveRoomStateRequest_WhiteboardZoomState_
	//	*ModifyLiveRoomStateRequest_ShareAMaterial
	//	*ModifyLiveRoomStateRequest_StopSharingMaterial
	//	*ModifyLiveRoomStateRequest_AnnotationDisableAll
	//	*ModifyLiveRoomStateRequest_UpsertSessionTime
	Command isModifyLiveRoomStateRequest_Command `protobuf_oneof:"command"`
}

func (x *ModifyLiveRoomStateRequest) Reset() {
	*x = ModifyLiveRoomStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveRoomStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveRoomStateRequest) ProtoMessage() {}

func (x *ModifyLiveRoomStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveRoomStateRequest.ProtoReflect.Descriptor instead.
func (*ModifyLiveRoomStateRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{2}
}

func (x *ModifyLiveRoomStateRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (m *ModifyLiveRoomStateRequest) GetCommand() isModifyLiveRoomStateRequest_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetAnnotationEnable() *ModifyLiveRoomStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_AnnotationEnable); ok {
		return x.AnnotationEnable
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetAnnotationDisable() *ModifyLiveRoomStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_AnnotationDisable); ok {
		return x.AnnotationDisable
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetChatEnable() *ModifyLiveRoomStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_ChatEnable); ok {
		return x.ChatEnable
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetChatDisable() *ModifyLiveRoomStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_ChatDisable); ok {
		return x.ChatDisable
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetStartPolling() *ModifyLiveRoomStateRequest_PollingOptions {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_StartPolling); ok {
		return x.StartPolling
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetStopPolling() bool {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_StopPolling); ok {
		return x.StopPolling
	}
	return false
}

func (x *ModifyLiveRoomStateRequest) GetEndPolling() bool {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_EndPolling); ok {
		return x.EndPolling
	}
	return false
}

func (x *ModifyLiveRoomStateRequest) GetSubmitPollingAnswer() *ModifyLiveRoomStateRequest_PollingAnswer {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_SubmitPollingAnswer); ok {
		return x.SubmitPollingAnswer
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetSharePolling() bool {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_SharePolling); ok {
		return x.SharePolling
	}
	return false
}

func (x *ModifyLiveRoomStateRequest) GetFoldHandAll() bool {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_FoldHandAll); ok {
		return x.FoldHandAll
	}
	return false
}

func (x *ModifyLiveRoomStateRequest) GetFoldUserHand() string {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_FoldUserHand); ok {
		return x.FoldUserHand
	}
	return ""
}

func (x *ModifyLiveRoomStateRequest) GetRaiseHand() bool {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_RaiseHand); ok {
		return x.RaiseHand
	}
	return false
}

func (x *ModifyLiveRoomStateRequest) GetHandOff() bool {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_HandOff); ok {
		return x.HandOff
	}
	return false
}

func (x *ModifyLiveRoomStateRequest) GetSpotlight() *ModifyLiveRoomStateRequest_Spotlight {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_Spotlight_); ok {
		return x.Spotlight
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetWhiteboardZoomState() *ModifyLiveRoomStateRequest_WhiteboardZoomState {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_WhiteboardZoomState_); ok {
		return x.WhiteboardZoomState
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetShareAMaterial() *ModifyLiveRoomStateRequest_CurrentMaterialCommand {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_ShareAMaterial); ok {
		return x.ShareAMaterial
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest) GetStopSharingMaterial() bool {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_StopSharingMaterial); ok {
		return x.StopSharingMaterial
	}
	return false
}

func (x *ModifyLiveRoomStateRequest) GetAnnotationDisableAll() bool {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_AnnotationDisableAll); ok {
		return x.AnnotationDisableAll
	}
	return false
}

func (x *ModifyLiveRoomStateRequest) GetUpsertSessionTime() bool {
	if x, ok := x.GetCommand().(*ModifyLiveRoomStateRequest_UpsertSessionTime); ok {
		return x.UpsertSessionTime
	}
	return false
}

type isModifyLiveRoomStateRequest_Command interface {
	isModifyLiveRoomStateRequest_Command()
}

type ModifyLiveRoomStateRequest_AnnotationEnable struct {
	AnnotationEnable *ModifyLiveRoomStateRequest_Learners `protobuf:"bytes,2,opt,name=annotation_enable,json=annotationEnable,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_AnnotationDisable struct {
	AnnotationDisable *ModifyLiveRoomStateRequest_Learners `protobuf:"bytes,3,opt,name=annotation_disable,json=annotationDisable,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_ChatEnable struct {
	ChatEnable *ModifyLiveRoomStateRequest_Learners `protobuf:"bytes,4,opt,name=chat_enable,json=chatEnable,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_ChatDisable struct {
	ChatDisable *ModifyLiveRoomStateRequest_Learners `protobuf:"bytes,5,opt,name=chat_disable,json=chatDisable,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_StartPolling struct {
	StartPolling *ModifyLiveRoomStateRequest_PollingOptions `protobuf:"bytes,6,opt,name=start_polling,json=startPolling,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_StopPolling struct {
	StopPolling bool `protobuf:"varint,7,opt,name=stop_polling,json=stopPolling,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_EndPolling struct {
	EndPolling bool `protobuf:"varint,8,opt,name=end_polling,json=endPolling,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_SubmitPollingAnswer struct {
	SubmitPollingAnswer *ModifyLiveRoomStateRequest_PollingAnswer `protobuf:"bytes,9,opt,name=submit_polling_answer,json=submitPollingAnswer,proto3,oneof"` // only for learner
}

type ModifyLiveRoomStateRequest_SharePolling struct {
	SharePolling bool `protobuf:"varint,10,opt,name=share_polling,json=sharePolling,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_FoldHandAll struct {
	FoldHandAll bool `protobuf:"varint,11,opt,name=fold_hand_all,json=foldHandAll,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_FoldUserHand struct {
	FoldUserHand string `protobuf:"bytes,12,opt,name=fold_user_hand,json=foldUserHand,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_RaiseHand struct {
	RaiseHand bool `protobuf:"varint,13,opt,name=raise_hand,json=raiseHand,proto3,oneof"` // only for student
}

type ModifyLiveRoomStateRequest_HandOff struct {
	HandOff bool `protobuf:"varint,14,opt,name=hand_off,json=handOff,proto3,oneof"` // only for student
}

type ModifyLiveRoomStateRequest_Spotlight_ struct {
	Spotlight *ModifyLiveRoomStateRequest_Spotlight `protobuf:"bytes,15,opt,name=spotlight,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_WhiteboardZoomState_ struct {
	WhiteboardZoomState *ModifyLiveRoomStateRequest_WhiteboardZoomState `protobuf:"bytes,16,opt,name=whiteboard_zoom_state,json=whiteboardZoomState,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_ShareAMaterial struct {
	ShareAMaterial *ModifyLiveRoomStateRequest_CurrentMaterialCommand `protobuf:"bytes,17,opt,name=share_a_material,json=shareAMaterial,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_StopSharingMaterial struct {
	StopSharingMaterial bool `protobuf:"varint,18,opt,name=stop_sharing_material,json=stopSharingMaterial,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_AnnotationDisableAll struct {
	AnnotationDisableAll bool `protobuf:"varint,19,opt,name=annotation_disable_all,json=annotationDisableAll,proto3,oneof"` // only for teacher
}

type ModifyLiveRoomStateRequest_UpsertSessionTime struct {
	UpsertSessionTime bool `protobuf:"varint,20,opt,name=upsert_session_time,json=upsertSessionTime,proto3,oneof"` // only for teacher
}

func (*ModifyLiveRoomStateRequest_AnnotationEnable) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_AnnotationDisable) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_ChatEnable) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_ChatDisable) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_StartPolling) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_StopPolling) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_EndPolling) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_SubmitPollingAnswer) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_SharePolling) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_FoldHandAll) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_FoldUserHand) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_RaiseHand) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_HandOff) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_Spotlight_) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_WhiteboardZoomState_) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_ShareAMaterial) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_StopSharingMaterial) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_AnnotationDisableAll) isModifyLiveRoomStateRequest_Command() {}

func (*ModifyLiveRoomStateRequest_UpsertSessionTime) isModifyLiveRoomStateRequest_Command() {}

type ModifyLiveRoomStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyLiveRoomStateResponse) Reset() {
	*x = ModifyLiveRoomStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveRoomStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveRoomStateResponse) ProtoMessage() {}

func (x *ModifyLiveRoomStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveRoomStateResponse.ProtoReflect.Descriptor instead.
func (*ModifyLiveRoomStateResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{3}
}

type LeaveLiveRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *LeaveLiveRoomRequest) Reset() {
	*x = LeaveLiveRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveLiveRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveLiveRoomRequest) ProtoMessage() {}

func (x *LeaveLiveRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveLiveRoomRequest.ProtoReflect.Descriptor instead.
func (*LeaveLiveRoomRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{4}
}

func (x *LeaveLiveRoomRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LeaveLiveRoomRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type LeaveLiveRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveLiveRoomResponse) Reset() {
	*x = LeaveLiveRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveLiveRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveLiveRoomResponse) ProtoMessage() {}

func (x *LeaveLiveRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveLiveRoomResponse.ProtoReflect.Descriptor instead.
func (*LeaveLiveRoomResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{5}
}

type EndLiveRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	LessonId  string `protobuf:"bytes,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *EndLiveRoomRequest) Reset() {
	*x = EndLiveRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndLiveRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndLiveRoomRequest) ProtoMessage() {}

func (x *EndLiveRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndLiveRoomRequest.ProtoReflect.Descriptor instead.
func (*EndLiveRoomRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{6}
}

func (x *EndLiveRoomRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *EndLiveRoomRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type EndLiveRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndLiveRoomResponse) Reset() {
	*x = EndLiveRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndLiveRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndLiveRoomResponse) ProtoMessage() {}

func (x *EndLiveRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndLiveRoomResponse.ProtoReflect.Descriptor instead.
func (*EndLiveRoomResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{7}
}

type PreparePublishLiveRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	LearnerId string `protobuf:"bytes,2,opt,name=learner_id,json=learnerId,proto3" json:"learner_id,omitempty"`
}

func (x *PreparePublishLiveRoomRequest) Reset() {
	*x = PreparePublishLiveRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparePublishLiveRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparePublishLiveRoomRequest) ProtoMessage() {}

func (x *PreparePublishLiveRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparePublishLiveRoomRequest.ProtoReflect.Descriptor instead.
func (*PreparePublishLiveRoomRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{8}
}

func (x *PreparePublishLiveRoomRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PreparePublishLiveRoomRequest) GetLearnerId() string {
	if x != nil {
		return x.LearnerId
	}
	return ""
}

type PreparePublishLiveRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status PrepareToPublishStatus `protobuf:"varint,1,opt,name=status,proto3,enum=virtualclassroom.v1.PrepareToPublishStatus" json:"status,omitempty"`
}

func (x *PreparePublishLiveRoomResponse) Reset() {
	*x = PreparePublishLiveRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparePublishLiveRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparePublishLiveRoomResponse) ProtoMessage() {}

func (x *PreparePublishLiveRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparePublishLiveRoomResponse.ProtoReflect.Descriptor instead.
func (*PreparePublishLiveRoomResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{9}
}

func (x *PreparePublishLiveRoomResponse) GetStatus() PrepareToPublishStatus {
	if x != nil {
		return x.Status
	}
	return PrepareToPublishStatus_PREPARE_TO_PUBLISH_STATUS_NONE
}

type UnpublishLiveRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	LearnerId string `protobuf:"bytes,2,opt,name=learner_id,json=learnerId,proto3" json:"learner_id,omitempty"`
}

func (x *UnpublishLiveRoomRequest) Reset() {
	*x = UnpublishLiveRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishLiveRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishLiveRoomRequest) ProtoMessage() {}

func (x *UnpublishLiveRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishLiveRoomRequest.ProtoReflect.Descriptor instead.
func (*UnpublishLiveRoomRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{10}
}

func (x *UnpublishLiveRoomRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UnpublishLiveRoomRequest) GetLearnerId() string {
	if x != nil {
		return x.LearnerId
	}
	return ""
}

type UnpublishLiveRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status UnpublishStatus `protobuf:"varint,1,opt,name=status,proto3,enum=virtualclassroom.v1.UnpublishStatus" json:"status,omitempty"`
}

func (x *UnpublishLiveRoomResponse) Reset() {
	*x = UnpublishLiveRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishLiveRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishLiveRoomResponse) ProtoMessage() {}

func (x *UnpublishLiveRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishLiveRoomResponse.ProtoReflect.Descriptor instead.
func (*UnpublishLiveRoomResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{11}
}

func (x *UnpublishLiveRoomResponse) GetStatus() UnpublishStatus {
	if x != nil {
		return x.Status
	}
	return UnpublishStatus_UNPUBLISH_STATUS_UNPUBLISHED_NONE
}

type GetLiveRoomStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *GetLiveRoomStateRequest) Reset() {
	*x = GetLiveRoomStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomStateRequest) ProtoMessage() {}

func (x *GetLiveRoomStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomStateRequest.ProtoReflect.Descriptor instead.
func (*GetLiveRoomStateRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{12}
}

func (x *GetLiveRoomStateRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetLiveRoomStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId           string                                     `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CurrentTime         *timestamppb.Timestamp                     `protobuf:"bytes,2,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
	CurrentMaterial     *VirtualClassroomState_CurrentMaterial     `protobuf:"bytes,3,opt,name=current_material,json=currentMaterial,proto3" json:"current_material,omitempty"`
	CurrentPolling      *VirtualClassroomState_CurrentPolling      `protobuf:"bytes,4,opt,name=current_polling,json=currentPolling,proto3" json:"current_polling,omitempty"`
	Recording           *VirtualClassroomState_Recording           `protobuf:"bytes,5,opt,name=recording,proto3" json:"recording,omitempty"`
	Spotlight           *VirtualClassroomState_Spotlight           `protobuf:"bytes,6,opt,name=spotlight,proto3" json:"spotlight,omitempty"`
	WhiteboardZoomState *VirtualClassroomState_WhiteboardZoomState `protobuf:"bytes,7,opt,name=whiteboard_zoom_state,json=whiteboardZoomState,proto3" json:"whiteboard_zoom_state,omitempty"`
	UsersState          *GetLiveLessonStateResponse_UsersState     `protobuf:"bytes,8,opt,name=users_state,json=usersState,proto3" json:"users_state,omitempty"`
	SessionTime         *timestamppb.Timestamp                     `protobuf:"bytes,9,opt,name=session_time,json=sessionTime,proto3" json:"session_time,omitempty"`
}

func (x *GetLiveRoomStateResponse) Reset() {
	*x = GetLiveRoomStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveRoomStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveRoomStateResponse) ProtoMessage() {}

func (x *GetLiveRoomStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveRoomStateResponse.ProtoReflect.Descriptor instead.
func (*GetLiveRoomStateResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{13}
}

func (x *GetLiveRoomStateResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GetLiveRoomStateResponse) GetCurrentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

func (x *GetLiveRoomStateResponse) GetCurrentMaterial() *VirtualClassroomState_CurrentMaterial {
	if x != nil {
		return x.CurrentMaterial
	}
	return nil
}

func (x *GetLiveRoomStateResponse) GetCurrentPolling() *VirtualClassroomState_CurrentPolling {
	if x != nil {
		return x.CurrentPolling
	}
	return nil
}

func (x *GetLiveRoomStateResponse) GetRecording() *VirtualClassroomState_Recording {
	if x != nil {
		return x.Recording
	}
	return nil
}

func (x *GetLiveRoomStateResponse) GetSpotlight() *VirtualClassroomState_Spotlight {
	if x != nil {
		return x.Spotlight
	}
	return nil
}

func (x *GetLiveRoomStateResponse) GetWhiteboardZoomState() *VirtualClassroomState_WhiteboardZoomState {
	if x != nil {
		return x.WhiteboardZoomState
	}
	return nil
}

func (x *GetLiveRoomStateResponse) GetUsersState() *GetLiveLessonStateResponse_UsersState {
	if x != nil {
		return x.UsersState
	}
	return nil
}

func (x *GetLiveRoomStateResponse) GetSessionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SessionTime
	}
	return nil
}

type LiveRoomEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*LiveRoomEvent_JoinLiveRoom_
	//	*LiveRoomEvent_LeaveLiveRoom_
	//	*LiveRoomEvent_EndLiveRoom_
	Message isLiveRoomEvent_Message `protobuf_oneof:"message"`
}

func (x *LiveRoomEvent) Reset() {
	*x = LiveRoomEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveRoomEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveRoomEvent) ProtoMessage() {}

func (x *LiveRoomEvent) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveRoomEvent.ProtoReflect.Descriptor instead.
func (*LiveRoomEvent) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{14}
}

func (m *LiveRoomEvent) GetMessage() isLiveRoomEvent_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *LiveRoomEvent) GetJoinLiveRoom() *LiveRoomEvent_JoinLiveRoom {
	if x, ok := x.GetMessage().(*LiveRoomEvent_JoinLiveRoom_); ok {
		return x.JoinLiveRoom
	}
	return nil
}

func (x *LiveRoomEvent) GetLeaveLiveRoom() *LiveRoomEvent_LeaveLiveRoom {
	if x, ok := x.GetMessage().(*LiveRoomEvent_LeaveLiveRoom_); ok {
		return x.LeaveLiveRoom
	}
	return nil
}

func (x *LiveRoomEvent) GetEndLiveRoom() *LiveRoomEvent_EndLiveRoom {
	if x, ok := x.GetMessage().(*LiveRoomEvent_EndLiveRoom_); ok {
		return x.EndLiveRoom
	}
	return nil
}

type isLiveRoomEvent_Message interface {
	isLiveRoomEvent_Message()
}

type LiveRoomEvent_JoinLiveRoom_ struct {
	JoinLiveRoom *LiveRoomEvent_JoinLiveRoom `protobuf:"bytes,1,opt,name=join_live_room,json=joinLiveRoom,proto3,oneof"`
}

type LiveRoomEvent_LeaveLiveRoom_ struct {
	LeaveLiveRoom *LiveRoomEvent_LeaveLiveRoom `protobuf:"bytes,2,opt,name=leave_live_room,json=leaveLiveRoom,proto3,oneof"`
}

type LiveRoomEvent_EndLiveRoom_ struct {
	EndLiveRoom *LiveRoomEvent_EndLiveRoom `protobuf:"bytes,3,opt,name=end_live_room,json=endLiveRoom,proto3,oneof"`
}

func (*LiveRoomEvent_JoinLiveRoom_) isLiveRoomEvent_Message() {}

func (*LiveRoomEvent_LeaveLiveRoom_) isLiveRoomEvent_Message() {}

func (*LiveRoomEvent_EndLiveRoom_) isLiveRoomEvent_Message() {}

type GetWhiteboardTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
}

func (x *GetWhiteboardTokenRequest) Reset() {
	*x = GetWhiteboardTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWhiteboardTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWhiteboardTokenRequest) ProtoMessage() {}

func (x *GetWhiteboardTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWhiteboardTokenRequest.ProtoReflect.Descriptor instead.
func (*GetWhiteboardTokenRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{15}
}

func (x *GetWhiteboardTokenRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

type GetWhiteboardTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId       string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	RoomId          string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	WhiteboardAppId string `protobuf:"bytes,3,opt,name=whiteboard_app_id,json=whiteboardAppId,proto3" json:"whiteboard_app_id,omitempty"`
	WhiteboardToken string `protobuf:"bytes,4,opt,name=whiteboard_token,json=whiteboardToken,proto3" json:"whiteboard_token,omitempty"`
}

func (x *GetWhiteboardTokenResponse) Reset() {
	*x = GetWhiteboardTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWhiteboardTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWhiteboardTokenResponse) ProtoMessage() {}

func (x *GetWhiteboardTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWhiteboardTokenResponse.ProtoReflect.Descriptor instead.
func (*GetWhiteboardTokenResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{16}
}

func (x *GetWhiteboardTokenResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GetWhiteboardTokenResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GetWhiteboardTokenResponse) GetWhiteboardAppId() string {
	if x != nil {
		return x.WhiteboardAppId
	}
	return ""
}

func (x *GetWhiteboardTokenResponse) GetWhiteboardToken() string {
	if x != nil {
		return x.WhiteboardToken
	}
	return ""
}

type ModifyLiveRoomStateRequest_Learners struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Learners []string `protobuf:"bytes,1,rep,name=learners,proto3" json:"learners,omitempty"`
}

func (x *ModifyLiveRoomStateRequest_Learners) Reset() {
	*x = ModifyLiveRoomStateRequest_Learners{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveRoomStateRequest_Learners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveRoomStateRequest_Learners) ProtoMessage() {}

func (x *ModifyLiveRoomStateRequest_Learners) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveRoomStateRequest_Learners.ProtoReflect.Descriptor instead.
func (*ModifyLiveRoomStateRequest_Learners) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ModifyLiveRoomStateRequest_Learners) GetLearners() []string {
	if x != nil {
		return x.Learners
	}
	return nil
}

type ModifyLiveRoomStateRequest_PollingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer    string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	IsCorrect bool   `protobuf:"varint,2,opt,name=is_correct,json=isCorrect,proto3" json:"is_correct,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ModifyLiveRoomStateRequest_PollingOption) Reset() {
	*x = ModifyLiveRoomStateRequest_PollingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveRoomStateRequest_PollingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveRoomStateRequest_PollingOption) ProtoMessage() {}

func (x *ModifyLiveRoomStateRequest_PollingOption) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveRoomStateRequest_PollingOption.ProtoReflect.Descriptor instead.
func (*ModifyLiveRoomStateRequest_PollingOption) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ModifyLiveRoomStateRequest_PollingOption) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *ModifyLiveRoomStateRequest_PollingOption) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

func (x *ModifyLiveRoomStateRequest_PollingOption) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ModifyLiveRoomStateRequest_PollingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options  []*ModifyLiveRoomStateRequest_PollingOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	Question string                                      `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *ModifyLiveRoomStateRequest_PollingOptions) Reset() {
	*x = ModifyLiveRoomStateRequest_PollingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveRoomStateRequest_PollingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveRoomStateRequest_PollingOptions) ProtoMessage() {}

func (x *ModifyLiveRoomStateRequest_PollingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveRoomStateRequest_PollingOptions.ProtoReflect.Descriptor instead.
func (*ModifyLiveRoomStateRequest_PollingOptions) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ModifyLiveRoomStateRequest_PollingOptions) GetOptions() []*ModifyLiveRoomStateRequest_PollingOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest_PollingOptions) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type ModifyLiveRoomStateRequest_PollingAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringArrayValue []string `protobuf:"bytes,1,rep,name=string_array_value,json=stringArrayValue,proto3" json:"string_array_value,omitempty"`
}

func (x *ModifyLiveRoomStateRequest_PollingAnswer) Reset() {
	*x = ModifyLiveRoomStateRequest_PollingAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveRoomStateRequest_PollingAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveRoomStateRequest_PollingAnswer) ProtoMessage() {}

func (x *ModifyLiveRoomStateRequest_PollingAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveRoomStateRequest_PollingAnswer.ProtoReflect.Descriptor instead.
func (*ModifyLiveRoomStateRequest_PollingAnswer) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ModifyLiveRoomStateRequest_PollingAnswer) GetStringArrayValue() []string {
	if x != nil {
		return x.StringArrayValue
	}
	return nil
}

type ModifyLiveRoomStateRequest_Spotlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsSpotlight bool   `protobuf:"varint,2,opt,name=is_spotlight,json=isSpotlight,proto3" json:"is_spotlight,omitempty"`
}

func (x *ModifyLiveRoomStateRequest_Spotlight) Reset() {
	*x = ModifyLiveRoomStateRequest_Spotlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveRoomStateRequest_Spotlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveRoomStateRequest_Spotlight) ProtoMessage() {}

func (x *ModifyLiveRoomStateRequest_Spotlight) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveRoomStateRequest_Spotlight.ProtoReflect.Descriptor instead.
func (*ModifyLiveRoomStateRequest_Spotlight) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{2, 4}
}

func (x *ModifyLiveRoomStateRequest_Spotlight) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ModifyLiveRoomStateRequest_Spotlight) GetIsSpotlight() bool {
	if x != nil {
		return x.IsSpotlight
	}
	return false
}

type ModifyLiveRoomStateRequest_WhiteboardZoomState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdfScaleRatio float64 `protobuf:"fixed64,1,opt,name=pdf_scale_ratio,json=pdfScaleRatio,proto3" json:"pdf_scale_ratio,omitempty"`
	CenterX       float64 `protobuf:"fixed64,2,opt,name=center_x,json=centerX,proto3" json:"center_x,omitempty"`
	CenterY       float64 `protobuf:"fixed64,3,opt,name=center_y,json=centerY,proto3" json:"center_y,omitempty"`
	PdfWidth      float64 `protobuf:"fixed64,4,opt,name=pdf_width,json=pdfWidth,proto3" json:"pdf_width,omitempty"`
	PdfHeight     float64 `protobuf:"fixed64,5,opt,name=pdf_height,json=pdfHeight,proto3" json:"pdf_height,omitempty"`
}

func (x *ModifyLiveRoomStateRequest_WhiteboardZoomState) Reset() {
	*x = ModifyLiveRoomStateRequest_WhiteboardZoomState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveRoomStateRequest_WhiteboardZoomState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveRoomStateRequest_WhiteboardZoomState) ProtoMessage() {}

func (x *ModifyLiveRoomStateRequest_WhiteboardZoomState) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveRoomStateRequest_WhiteboardZoomState.ProtoReflect.Descriptor instead.
func (*ModifyLiveRoomStateRequest_WhiteboardZoomState) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{2, 5}
}

func (x *ModifyLiveRoomStateRequest_WhiteboardZoomState) GetPdfScaleRatio() float64 {
	if x != nil {
		return x.PdfScaleRatio
	}
	return 0
}

func (x *ModifyLiveRoomStateRequest_WhiteboardZoomState) GetCenterX() float64 {
	if x != nil {
		return x.CenterX
	}
	return 0
}

func (x *ModifyLiveRoomStateRequest_WhiteboardZoomState) GetCenterY() float64 {
	if x != nil {
		return x.CenterY
	}
	return 0
}

func (x *ModifyLiveRoomStateRequest_WhiteboardZoomState) GetPdfWidth() float64 {
	if x != nil {
		return x.PdfWidth
	}
	return 0
}

func (x *ModifyLiveRoomStateRequest_WhiteboardZoomState) GetPdfHeight() float64 {
	if x != nil {
		return x.PdfHeight
	}
	return 0
}

type ModifyLiveRoomStateRequest_CurrentMaterialCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// Types that are assignable to State:
	//
	//	*ModifyLiveRoomStateRequest_CurrentMaterialCommand_VideoState
	//	*ModifyLiveRoomStateRequest_CurrentMaterialCommand_PdfState
	//	*ModifyLiveRoomStateRequest_CurrentMaterialCommand_AudioState
	State isModifyLiveRoomStateRequest_CurrentMaterialCommand_State `protobuf_oneof:"state"`
}

func (x *ModifyLiveRoomStateRequest_CurrentMaterialCommand) Reset() {
	*x = ModifyLiveRoomStateRequest_CurrentMaterialCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveRoomStateRequest_CurrentMaterialCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveRoomStateRequest_CurrentMaterialCommand) ProtoMessage() {}

func (x *ModifyLiveRoomStateRequest_CurrentMaterialCommand) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveRoomStateRequest_CurrentMaterialCommand.ProtoReflect.Descriptor instead.
func (*ModifyLiveRoomStateRequest_CurrentMaterialCommand) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{2, 6}
}

func (x *ModifyLiveRoomStateRequest_CurrentMaterialCommand) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (m *ModifyLiveRoomStateRequest_CurrentMaterialCommand) GetState() isModifyLiveRoomStateRequest_CurrentMaterialCommand_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest_CurrentMaterialCommand) GetVideoState() *VirtualClassroomState_CurrentMaterial_VideoState {
	if x, ok := x.GetState().(*ModifyLiveRoomStateRequest_CurrentMaterialCommand_VideoState); ok {
		return x.VideoState
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest_CurrentMaterialCommand) GetPdfState() *VirtualClassroomState_CurrentMaterial_PDFState {
	if x, ok := x.GetState().(*ModifyLiveRoomStateRequest_CurrentMaterialCommand_PdfState); ok {
		return x.PdfState
	}
	return nil
}

func (x *ModifyLiveRoomStateRequest_CurrentMaterialCommand) GetAudioState() *VirtualClassroomState_CurrentMaterial_AudioState {
	if x, ok := x.GetState().(*ModifyLiveRoomStateRequest_CurrentMaterialCommand_AudioState); ok {
		return x.AudioState
	}
	return nil
}

type isModifyLiveRoomStateRequest_CurrentMaterialCommand_State interface {
	isModifyLiveRoomStateRequest_CurrentMaterialCommand_State()
}

type ModifyLiveRoomStateRequest_CurrentMaterialCommand_VideoState struct {
	VideoState *VirtualClassroomState_CurrentMaterial_VideoState `protobuf:"bytes,2,opt,name=video_state,json=videoState,proto3,oneof"`
}

type ModifyLiveRoomStateRequest_CurrentMaterialCommand_PdfState struct {
	PdfState *VirtualClassroomState_CurrentMaterial_PDFState `protobuf:"bytes,3,opt,name=pdf_state,json=pdfState,proto3,oneof"`
}

type ModifyLiveRoomStateRequest_CurrentMaterialCommand_AudioState struct {
	AudioState *VirtualClassroomState_CurrentMaterial_AudioState `protobuf:"bytes,4,opt,name=audio_state,json=audioState,proto3,oneof"`
}

func (*ModifyLiveRoomStateRequest_CurrentMaterialCommand_VideoState) isModifyLiveRoomStateRequest_CurrentMaterialCommand_State() {
}

func (*ModifyLiveRoomStateRequest_CurrentMaterialCommand_PdfState) isModifyLiveRoomStateRequest_CurrentMaterialCommand_State() {
}

func (*ModifyLiveRoomStateRequest_CurrentMaterialCommand_AudioState) isModifyLiveRoomStateRequest_CurrentMaterialCommand_State() {
}

type LiveRoomEvent_JoinLiveRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string       `protobuf:"bytes,1,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelId   string       `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId      string       `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserGroup   v1.UserGroup `protobuf:"varint,4,opt,name=user_group,json=userGroup,proto3,enum=common.v1.UserGroup" json:"user_group,omitempty"`
}

func (x *LiveRoomEvent_JoinLiveRoom) Reset() {
	*x = LiveRoomEvent_JoinLiveRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveRoomEvent_JoinLiveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveRoomEvent_JoinLiveRoom) ProtoMessage() {}

func (x *LiveRoomEvent_JoinLiveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveRoomEvent_JoinLiveRoom.ProtoReflect.Descriptor instead.
func (*LiveRoomEvent_JoinLiveRoom) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{14, 0}
}

func (x *LiveRoomEvent_JoinLiveRoom) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *LiveRoomEvent_JoinLiveRoom) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *LiveRoomEvent_JoinLiveRoom) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LiveRoomEvent_JoinLiveRoom) GetUserGroup() v1.UserGroup {
	if x != nil {
		return x.UserGroup
	}
	return v1.UserGroup_USER_GROUP_NONE
}

type LiveRoomEvent_LeaveLiveRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelId   string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *LiveRoomEvent_LeaveLiveRoom) Reset() {
	*x = LiveRoomEvent_LeaveLiveRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveRoomEvent_LeaveLiveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveRoomEvent_LeaveLiveRoom) ProtoMessage() {}

func (x *LiveRoomEvent_LeaveLiveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveRoomEvent_LeaveLiveRoom.ProtoReflect.Descriptor instead.
func (*LiveRoomEvent_LeaveLiveRoom) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{14, 1}
}

func (x *LiveRoomEvent_LeaveLiveRoom) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *LiveRoomEvent_LeaveLiveRoom) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *LiveRoomEvent_LeaveLiveRoom) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LiveRoomEvent_EndLiveRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelId   string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *LiveRoomEvent_EndLiveRoom) Reset() {
	*x = LiveRoomEvent_EndLiveRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveRoomEvent_EndLiveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveRoomEvent_EndLiveRoom) ProtoMessage() {}

func (x *LiveRoomEvent_EndLiveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_liveroom_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveRoomEvent_EndLiveRoom.ProtoReflect.Descriptor instead.
func (*LiveRoomEvent_EndLiveRoom) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_liveroom_proto_rawDescGZIP(), []int{14, 2}
}

func (x *LiveRoomEvent_EndLiveRoom) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *LiveRoomEvent_EndLiveRoom) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *LiveRoomEvent_EndLiveRoom) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_virtualclassroom_v1_liveroom_proto protoreflect.FileDescriptor

var file_virtualclassroom_v1_liveroom_proto_rawDesc = []byte{
	0x0a, 0x22, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x58, 0x0a, 0x13, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x72,
	0x74, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x74, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xde, 0x02, 0x0a, 0x14,
	0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x29, 0x0a, 0x10, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x74, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x67, 0x6f, 0x72,
	0x61, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x67, 0x6f, 0x72, 0x61, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xda, 0x12, 0x0a,
	0x1a, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x67, 0x0a, 0x11, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x48,
	0x00, 0x52, 0x10, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5b,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x65, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x50,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x65,
	0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x73, 0x0a, 0x15, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b,
	0x66, 0x6f, 0x6c, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x66,
	0x6f, 0x6c, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x72, 0x61, 0x69, 0x73, 0x65, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x72, 0x61, 0x69, 0x73, 0x65,
	0x48, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x4f, 0x66,
	0x66, 0x12, 0x59, 0x0a, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x79, 0x0a, 0x15,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x7a, 0x6f, 0x6f, 0x6d, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x13, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x72, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x61, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x46, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x41, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x73,
	0x74, 0x6f, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x13, 0x73, 0x74,
	0x6f, 0x70, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x36, 0x0a, 0x16, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x14, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x11, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x26, 0x0a, 0x08, 0x4c,
	0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x73, 0x1a, 0x60, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x85, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x57, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3d, 0x0a,
	0x0d, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x47, 0x0a, 0x09,
	0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x70, 0x6f, 0x74,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x1a, 0xaf, 0x01, 0x0a, 0x13, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x70, 0x64, 0x66, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x64, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x58,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x59, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x64, 0x66, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x70, 0x64, 0x66, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x64, 0x66, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x64,
	0x66, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0xf4, 0x02, 0x0a, 0x16, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x68, 0x0a,
	0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x70, 0x64, 0x66, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x44, 0x46, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x64, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x14, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x50, 0x0a, 0x12, 0x45, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x45, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x1d, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x1e, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x58, 0x0a, 0x18, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x19, 0x55, 0x6e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22,
	0xfb, 0x05, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x62, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x09, 0x73, 0x70, 0x6f,
	0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x72, 0x0a,
	0x15, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x7a, 0x6f, 0x6f, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x13, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x5b, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9c, 0x05,
	0x0a, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x57, 0x0a, 0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x6a, 0x6f, 0x69, 0x6e,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x5a, 0x0a, 0x0f, 0x6c, 0x65, 0x61, 0x76,
	0x65, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x54, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x0b, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x9e, 0x01, 0x0a, 0x0c, 0x4a,
	0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x6a, 0x0a, 0x0d, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x68, 0x0a, 0x0b, 0x45, 0x6e, 0x64, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xab, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xba, 0x05, 0x0a, 0x17, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x28, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x13, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x2f, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x29, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a,
	0x0b, 0x45, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x27, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x81, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x32, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x11, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x2d, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xff, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x75, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_virtualclassroom_v1_liveroom_proto_rawDescOnce sync.Once
	file_virtualclassroom_v1_liveroom_proto_rawDescData = file_virtualclassroom_v1_liveroom_proto_rawDesc
)

func file_virtualclassroom_v1_liveroom_proto_rawDescGZIP() []byte {
	file_virtualclassroom_v1_liveroom_proto_rawDescOnce.Do(func() {
		file_virtualclassroom_v1_liveroom_proto_rawDescData = protoimpl.X.CompressGZIP(file_virtualclassroom_v1_liveroom_proto_rawDescData)
	})
	return file_virtualclassroom_v1_liveroom_proto_rawDescData
}

var file_virtualclassroom_v1_liveroom_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_virtualclassroom_v1_liveroom_proto_goTypes = []interface{}{
	(*JoinLiveRoomRequest)(nil),                               // 0: virtualclassroom.v1.JoinLiveRoomRequest
	(*JoinLiveRoomResponse)(nil),                              // 1: virtualclassroom.v1.JoinLiveRoomResponse
	(*ModifyLiveRoomStateRequest)(nil),                        // 2: virtualclassroom.v1.ModifyLiveRoomStateRequest
	(*ModifyLiveRoomStateResponse)(nil),                       // 3: virtualclassroom.v1.ModifyLiveRoomStateResponse
	(*LeaveLiveRoomRequest)(nil),                              // 4: virtualclassroom.v1.LeaveLiveRoomRequest
	(*LeaveLiveRoomResponse)(nil),                             // 5: virtualclassroom.v1.LeaveLiveRoomResponse
	(*EndLiveRoomRequest)(nil),                                // 6: virtualclassroom.v1.EndLiveRoomRequest
	(*EndLiveRoomResponse)(nil),                               // 7: virtualclassroom.v1.EndLiveRoomResponse
	(*PreparePublishLiveRoomRequest)(nil),                     // 8: virtualclassroom.v1.PreparePublishLiveRoomRequest
	(*PreparePublishLiveRoomResponse)(nil),                    // 9: virtualclassroom.v1.PreparePublishLiveRoomResponse
	(*UnpublishLiveRoomRequest)(nil),                          // 10: virtualclassroom.v1.UnpublishLiveRoomRequest
	(*UnpublishLiveRoomResponse)(nil),                         // 11: virtualclassroom.v1.UnpublishLiveRoomResponse
	(*GetLiveRoomStateRequest)(nil),                           // 12: virtualclassroom.v1.GetLiveRoomStateRequest
	(*GetLiveRoomStateResponse)(nil),                          // 13: virtualclassroom.v1.GetLiveRoomStateResponse
	(*LiveRoomEvent)(nil),                                     // 14: virtualclassroom.v1.LiveRoomEvent
	(*GetWhiteboardTokenRequest)(nil),                         // 15: virtualclassroom.v1.GetWhiteboardTokenRequest
	(*GetWhiteboardTokenResponse)(nil),                        // 16: virtualclassroom.v1.GetWhiteboardTokenResponse
	(*ModifyLiveRoomStateRequest_Learners)(nil),               // 17: virtualclassroom.v1.ModifyLiveRoomStateRequest.Learners
	(*ModifyLiveRoomStateRequest_PollingOption)(nil),          // 18: virtualclassroom.v1.ModifyLiveRoomStateRequest.PollingOption
	(*ModifyLiveRoomStateRequest_PollingOptions)(nil),         // 19: virtualclassroom.v1.ModifyLiveRoomStateRequest.PollingOptions
	(*ModifyLiveRoomStateRequest_PollingAnswer)(nil),          // 20: virtualclassroom.v1.ModifyLiveRoomStateRequest.PollingAnswer
	(*ModifyLiveRoomStateRequest_Spotlight)(nil),              // 21: virtualclassroom.v1.ModifyLiveRoomStateRequest.Spotlight
	(*ModifyLiveRoomStateRequest_WhiteboardZoomState)(nil),    // 22: virtualclassroom.v1.ModifyLiveRoomStateRequest.WhiteboardZoomState
	(*ModifyLiveRoomStateRequest_CurrentMaterialCommand)(nil), // 23: virtualclassroom.v1.ModifyLiveRoomStateRequest.CurrentMaterialCommand
	(*LiveRoomEvent_JoinLiveRoom)(nil),                        // 24: virtualclassroom.v1.LiveRoomEvent.JoinLiveRoom
	(*LiveRoomEvent_LeaveLiveRoom)(nil),                       // 25: virtualclassroom.v1.LiveRoomEvent.LeaveLiveRoom
	(*LiveRoomEvent_EndLiveRoom)(nil),                         // 26: virtualclassroom.v1.LiveRoomEvent.EndLiveRoom
	(PrepareToPublishStatus)(0),                               // 27: virtualclassroom.v1.PrepareToPublishStatus
	(UnpublishStatus)(0),                                      // 28: virtualclassroom.v1.UnpublishStatus
	(*timestamppb.Timestamp)(nil),                             // 29: google.protobuf.Timestamp
	(*VirtualClassroomState_CurrentMaterial)(nil),             // 30: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial
	(*VirtualClassroomState_CurrentPolling)(nil),              // 31: virtualclassroom.v1.VirtualClassroomState.CurrentPolling
	(*VirtualClassroomState_Recording)(nil),                   // 32: virtualclassroom.v1.VirtualClassroomState.Recording
	(*VirtualClassroomState_Spotlight)(nil),                   // 33: virtualclassroom.v1.VirtualClassroomState.Spotlight
	(*VirtualClassroomState_WhiteboardZoomState)(nil),         // 34: virtualclassroom.v1.VirtualClassroomState.WhiteboardZoomState
	(*GetLiveLessonStateResponse_UsersState)(nil),             // 35: virtualclassroom.v1.GetLiveLessonStateResponse.UsersState
	(*VirtualClassroomState_CurrentMaterial_VideoState)(nil),  // 36: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.VideoState
	(*VirtualClassroomState_CurrentMaterial_PDFState)(nil),    // 37: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.PDFState
	(*VirtualClassroomState_CurrentMaterial_AudioState)(nil),  // 38: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.AudioState
	(v1.UserGroup)(0),                                         // 39: common.v1.UserGroup
}
var file_virtualclassroom_v1_liveroom_proto_depIdxs = []int32{
	17, // 0: virtualclassroom.v1.ModifyLiveRoomStateRequest.annotation_enable:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.Learners
	17, // 1: virtualclassroom.v1.ModifyLiveRoomStateRequest.annotation_disable:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.Learners
	17, // 2: virtualclassroom.v1.ModifyLiveRoomStateRequest.chat_enable:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.Learners
	17, // 3: virtualclassroom.v1.ModifyLiveRoomStateRequest.chat_disable:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.Learners
	19, // 4: virtualclassroom.v1.ModifyLiveRoomStateRequest.start_polling:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.PollingOptions
	20, // 5: virtualclassroom.v1.ModifyLiveRoomStateRequest.submit_polling_answer:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.PollingAnswer
	21, // 6: virtualclassroom.v1.ModifyLiveRoomStateRequest.spotlight:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.Spotlight
	22, // 7: virtualclassroom.v1.ModifyLiveRoomStateRequest.whiteboard_zoom_state:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.WhiteboardZoomState
	23, // 8: virtualclassroom.v1.ModifyLiveRoomStateRequest.share_a_material:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.CurrentMaterialCommand
	27, // 9: virtualclassroom.v1.PreparePublishLiveRoomResponse.status:type_name -> virtualclassroom.v1.PrepareToPublishStatus
	28, // 10: virtualclassroom.v1.UnpublishLiveRoomResponse.status:type_name -> virtualclassroom.v1.UnpublishStatus
	29, // 11: virtualclassroom.v1.GetLiveRoomStateResponse.current_time:type_name -> google.protobuf.Timestamp
	30, // 12: virtualclassroom.v1.GetLiveRoomStateResponse.current_material:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial
	31, // 13: virtualclassroom.v1.GetLiveRoomStateResponse.current_polling:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentPolling
	32, // 14: virtualclassroom.v1.GetLiveRoomStateResponse.recording:type_name -> virtualclassroom.v1.VirtualClassroomState.Recording
	33, // 15: virtualclassroom.v1.GetLiveRoomStateResponse.spotlight:type_name -> virtualclassroom.v1.VirtualClassroomState.Spotlight
	34, // 16: virtualclassroom.v1.GetLiveRoomStateResponse.whiteboard_zoom_state:type_name -> virtualclassroom.v1.VirtualClassroomState.WhiteboardZoomState
	35, // 17: virtualclassroom.v1.GetLiveRoomStateResponse.users_state:type_name -> virtualclassroom.v1.GetLiveLessonStateResponse.UsersState
	29, // 18: virtualclassroom.v1.GetLiveRoomStateResponse.session_time:type_name -> google.protobuf.Timestamp
	24, // 19: virtualclassroom.v1.LiveRoomEvent.join_live_room:type_name -> virtualclassroom.v1.LiveRoomEvent.JoinLiveRoom
	25, // 20: virtualclassroom.v1.LiveRoomEvent.leave_live_room:type_name -> virtualclassroom.v1.LiveRoomEvent.LeaveLiveRoom
	26, // 21: virtualclassroom.v1.LiveRoomEvent.end_live_room:type_name -> virtualclassroom.v1.LiveRoomEvent.EndLiveRoom
	18, // 22: virtualclassroom.v1.ModifyLiveRoomStateRequest.PollingOptions.options:type_name -> virtualclassroom.v1.ModifyLiveRoomStateRequest.PollingOption
	36, // 23: virtualclassroom.v1.ModifyLiveRoomStateRequest.CurrentMaterialCommand.video_state:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.VideoState
	37, // 24: virtualclassroom.v1.ModifyLiveRoomStateRequest.CurrentMaterialCommand.pdf_state:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.PDFState
	38, // 25: virtualclassroom.v1.ModifyLiveRoomStateRequest.CurrentMaterialCommand.audio_state:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.AudioState
	39, // 26: virtualclassroom.v1.LiveRoomEvent.JoinLiveRoom.user_group:type_name -> common.v1.UserGroup
	0,  // 27: virtualclassroom.v1.LiveRoomModifierService.JoinLiveRoom:input_type -> virtualclassroom.v1.JoinLiveRoomRequest
	2,  // 28: virtualclassroom.v1.LiveRoomModifierService.ModifyLiveRoomState:input_type -> virtualclassroom.v1.ModifyLiveRoomStateRequest
	4,  // 29: virtualclassroom.v1.LiveRoomModifierService.LeaveLiveRoom:input_type -> virtualclassroom.v1.LeaveLiveRoomRequest
	6,  // 30: virtualclassroom.v1.LiveRoomModifierService.EndLiveRoom:input_type -> virtualclassroom.v1.EndLiveRoomRequest
	8,  // 31: virtualclassroom.v1.LiveRoomModifierService.PreparePublishLiveRoom:input_type -> virtualclassroom.v1.PreparePublishLiveRoomRequest
	10, // 32: virtualclassroom.v1.LiveRoomModifierService.UnpublishLiveRoom:input_type -> virtualclassroom.v1.UnpublishLiveRoomRequest
	12, // 33: virtualclassroom.v1.LiveRoomReaderService.GetLiveRoomState:input_type -> virtualclassroom.v1.GetLiveRoomStateRequest
	15, // 34: virtualclassroom.v1.LiveRoomReaderService.GetWhiteboardToken:input_type -> virtualclassroom.v1.GetWhiteboardTokenRequest
	1,  // 35: virtualclassroom.v1.LiveRoomModifierService.JoinLiveRoom:output_type -> virtualclassroom.v1.JoinLiveRoomResponse
	3,  // 36: virtualclassroom.v1.LiveRoomModifierService.ModifyLiveRoomState:output_type -> virtualclassroom.v1.ModifyLiveRoomStateResponse
	5,  // 37: virtualclassroom.v1.LiveRoomModifierService.LeaveLiveRoom:output_type -> virtualclassroom.v1.LeaveLiveRoomResponse
	7,  // 38: virtualclassroom.v1.LiveRoomModifierService.EndLiveRoom:output_type -> virtualclassroom.v1.EndLiveRoomResponse
	9,  // 39: virtualclassroom.v1.LiveRoomModifierService.PreparePublishLiveRoom:output_type -> virtualclassroom.v1.PreparePublishLiveRoomResponse
	11, // 40: virtualclassroom.v1.LiveRoomModifierService.UnpublishLiveRoom:output_type -> virtualclassroom.v1.UnpublishLiveRoomResponse
	13, // 41: virtualclassroom.v1.LiveRoomReaderService.GetLiveRoomState:output_type -> virtualclassroom.v1.GetLiveRoomStateResponse
	16, // 42: virtualclassroom.v1.LiveRoomReaderService.GetWhiteboardToken:output_type -> virtualclassroom.v1.GetWhiteboardTokenResponse
	35, // [35:43] is the sub-list for method output_type
	27, // [27:35] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_virtualclassroom_v1_liveroom_proto_init() }
func file_virtualclassroom_v1_liveroom_proto_init() {
	if File_virtualclassroom_v1_liveroom_proto != nil {
		return
	}
	file_virtualclassroom_v1_enums_proto_init()
	file_virtualclassroom_v1_virtualclassroom_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_virtualclassroom_v1_liveroom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinLiveRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinLiveRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveRoomStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveRoomStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveLiveRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveLiveRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndLiveRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndLiveRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreparePublishLiveRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreparePublishLiveRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishLiveRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishLiveRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveRoomStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveRoomEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWhiteboardTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWhiteboardTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveRoomStateRequest_Learners); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveRoomStateRequest_PollingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveRoomStateRequest_PollingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveRoomStateRequest_PollingAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveRoomStateRequest_Spotlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveRoomStateRequest_WhiteboardZoomState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveRoomStateRequest_CurrentMaterialCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveRoomEvent_JoinLiveRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveRoomEvent_LeaveLiveRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_liveroom_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveRoomEvent_EndLiveRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_virtualclassroom_v1_liveroom_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ModifyLiveRoomStateRequest_AnnotationEnable)(nil),
		(*ModifyLiveRoomStateRequest_AnnotationDisable)(nil),
		(*ModifyLiveRoomStateRequest_ChatEnable)(nil),
		(*ModifyLiveRoomStateRequest_ChatDisable)(nil),
		(*ModifyLiveRoomStateRequest_StartPolling)(nil),
		(*ModifyLiveRoomStateRequest_StopPolling)(nil),
		(*ModifyLiveRoomStateRequest_EndPolling)(nil),
		(*ModifyLiveRoomStateRequest_SubmitPollingAnswer)(nil),
		(*ModifyLiveRoomStateRequest_SharePolling)(nil),
		(*ModifyLiveRoomStateRequest_FoldHandAll)(nil),
		(*ModifyLiveRoomStateRequest_FoldUserHand)(nil),
		(*ModifyLiveRoomStateRequest_RaiseHand)(nil),
		(*ModifyLiveRoomStateRequest_HandOff)(nil),
		(*ModifyLiveRoomStateRequest_Spotlight_)(nil),
		(*ModifyLiveRoomStateRequest_WhiteboardZoomState_)(nil),
		(*ModifyLiveRoomStateRequest_ShareAMaterial)(nil),
		(*ModifyLiveRoomStateRequest_StopSharingMaterial)(nil),
		(*ModifyLiveRoomStateRequest_AnnotationDisableAll)(nil),
		(*ModifyLiveRoomStateRequest_UpsertSessionTime)(nil),
	}
	file_virtualclassroom_v1_liveroom_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*LiveRoomEvent_JoinLiveRoom_)(nil),
		(*LiveRoomEvent_LeaveLiveRoom_)(nil),
		(*LiveRoomEvent_EndLiveRoom_)(nil),
	}
	file_virtualclassroom_v1_liveroom_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*ModifyLiveRoomStateRequest_CurrentMaterialCommand_VideoState)(nil),
		(*ModifyLiveRoomStateRequest_CurrentMaterialCommand_PdfState)(nil),
		(*ModifyLiveRoomStateRequest_CurrentMaterialCommand_AudioState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_virtualclassroom_v1_liveroom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_virtualclassroom_v1_liveroom_proto_goTypes,
		DependencyIndexes: file_virtualclassroom_v1_liveroom_proto_depIdxs,
		MessageInfos:      file_virtualclassroom_v1_liveroom_proto_msgTypes,
	}.Build()
	File_virtualclassroom_v1_liveroom_proto = out.File
	file_virtualclassroom_v1_liveroom_proto_rawDesc = nil
	file_virtualclassroom_v1_liveroom_proto_goTypes = nil
	file_virtualclassroom_v1_liveroom_proto_depIdxs = nil
}
