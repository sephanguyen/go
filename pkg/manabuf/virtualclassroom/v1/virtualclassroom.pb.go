// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: virtualclassroom/v1/virtualclassroom.proto

package vpb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RetrieveWhiteboardTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *RetrieveWhiteboardTokenRequest) Reset() {
	*x = RetrieveWhiteboardTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveWhiteboardTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveWhiteboardTokenRequest) ProtoMessage() {}

func (x *RetrieveWhiteboardTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveWhiteboardTokenRequest.ProtoReflect.Descriptor instead.
func (*RetrieveWhiteboardTokenRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{0}
}

func (x *RetrieveWhiteboardTokenRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type RetrieveWhiteboardTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhiteboardToken string `protobuf:"bytes,1,opt,name=whiteboard_token,json=whiteboardToken,proto3" json:"whiteboard_token,omitempty"`
	RoomId          string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	WhiteboardAppId string `protobuf:"bytes,3,opt,name=whiteboard_app_id,json=whiteboardAppId,proto3" json:"whiteboard_app_id,omitempty"`
}

func (x *RetrieveWhiteboardTokenResponse) Reset() {
	*x = RetrieveWhiteboardTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveWhiteboardTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveWhiteboardTokenResponse) ProtoMessage() {}

func (x *RetrieveWhiteboardTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveWhiteboardTokenResponse.ProtoReflect.Descriptor instead.
func (*RetrieveWhiteboardTokenResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{1}
}

func (x *RetrieveWhiteboardTokenResponse) GetWhiteboardToken() string {
	if x != nil {
		return x.WhiteboardToken
	}
	return ""
}

func (x *RetrieveWhiteboardTokenResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RetrieveWhiteboardTokenResponse) GetWhiteboardAppId() string {
	if x != nil {
		return x.WhiteboardAppId
	}
	return ""
}

type GetLiveLessonStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *GetLiveLessonStateRequest) Reset() {
	*x = GetLiveLessonStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveLessonStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveLessonStateRequest) ProtoMessage() {}

func (x *GetLiveLessonStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveLessonStateRequest.ProtoReflect.Descriptor instead.
func (*GetLiveLessonStateRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{2}
}

func (x *GetLiveLessonStateRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type GetLiveLessonStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId            string                                     `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	CurrentMaterial     *VirtualClassroomState_CurrentMaterial     `protobuf:"bytes,2,opt,name=current_material,json=currentMaterial,proto3" json:"current_material,omitempty"`
	UsersState          *GetLiveLessonStateResponse_UsersState     `protobuf:"bytes,3,opt,name=users_state,json=usersState,proto3" json:"users_state,omitempty"`
	CurrentTime         *timestamppb.Timestamp                     `protobuf:"bytes,4,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
	CurrentPolling      *VirtualClassroomState_CurrentPolling      `protobuf:"bytes,5,opt,name=current_polling,json=currentPolling,proto3" json:"current_polling,omitempty"`
	Recording           *VirtualClassroomState_Recording           `protobuf:"bytes,6,opt,name=recording,proto3" json:"recording,omitempty"`
	Spotlight           *VirtualClassroomState_Spotlight           `protobuf:"bytes,7,opt,name=spotlight,proto3" json:"spotlight,omitempty"`
	WhiteboardZoomState *VirtualClassroomState_WhiteboardZoomState `protobuf:"bytes,8,opt,name=whiteboard_zoom_state,json=whiteboardZoomState,proto3" json:"whiteboard_zoom_state,omitempty"`
	SessionTime         *timestamppb.Timestamp                     `protobuf:"bytes,9,opt,name=session_time,json=sessionTime,proto3" json:"session_time,omitempty"`
}

func (x *GetLiveLessonStateResponse) Reset() {
	*x = GetLiveLessonStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveLessonStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveLessonStateResponse) ProtoMessage() {}

func (x *GetLiveLessonStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveLessonStateResponse.ProtoReflect.Descriptor instead.
func (*GetLiveLessonStateResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{3}
}

func (x *GetLiveLessonStateResponse) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *GetLiveLessonStateResponse) GetCurrentMaterial() *VirtualClassroomState_CurrentMaterial {
	if x != nil {
		return x.CurrentMaterial
	}
	return nil
}

func (x *GetLiveLessonStateResponse) GetUsersState() *GetLiveLessonStateResponse_UsersState {
	if x != nil {
		return x.UsersState
	}
	return nil
}

func (x *GetLiveLessonStateResponse) GetCurrentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

func (x *GetLiveLessonStateResponse) GetCurrentPolling() *VirtualClassroomState_CurrentPolling {
	if x != nil {
		return x.CurrentPolling
	}
	return nil
}

func (x *GetLiveLessonStateResponse) GetRecording() *VirtualClassroomState_Recording {
	if x != nil {
		return x.Recording
	}
	return nil
}

func (x *GetLiveLessonStateResponse) GetSpotlight() *VirtualClassroomState_Spotlight {
	if x != nil {
		return x.Spotlight
	}
	return nil
}

func (x *GetLiveLessonStateResponse) GetWhiteboardZoomState() *VirtualClassroomState_WhiteboardZoomState {
	if x != nil {
		return x.WhiteboardZoomState
	}
	return nil
}

func (x *GetLiveLessonStateResponse) GetSessionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SessionTime
	}
	return nil
}

type GetUserInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *GetUserInformationRequest) Reset() {
	*x = GetUserInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInformationRequest) ProtoMessage() {}

func (x *GetUserInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInformationRequest.ProtoReflect.Descriptor instead.
func (*GetUserInformationRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserInformationRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name              string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FirstName         string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FullNamePhonetic  string `protobuf:"bytes,5,opt,name=full_name_phonetic,json=fullNamePhonetic,proto3" json:"full_name_phonetic,omitempty"`
	FirstNamePhonetic string `protobuf:"bytes,6,opt,name=first_name_phonetic,json=firstNamePhonetic,proto3" json:"first_name_phonetic,omitempty"`
	LastNamePhonetic  string `protobuf:"bytes,7,opt,name=last_name_phonetic,json=lastNamePhonetic,proto3" json:"last_name_phonetic,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{5}
}

func (x *UserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserInfo) GetFullNamePhonetic() string {
	if x != nil {
		return x.FullNamePhonetic
	}
	return ""
}

func (x *UserInfo) GetFirstNamePhonetic() string {
	if x != nil {
		return x.FirstNamePhonetic
	}
	return ""
}

func (x *UserInfo) GetLastNamePhonetic() string {
	if x != nil {
		return x.LastNamePhonetic
	}
	return ""
}

type GetUserInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfos []*UserInfo `protobuf:"bytes,1,rep,name=user_infos,json=userInfos,proto3" json:"user_infos,omitempty"`
}

func (x *GetUserInformationResponse) Reset() {
	*x = GetUserInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInformationResponse) ProtoMessage() {}

func (x *GetUserInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInformationResponse.ProtoReflect.Descriptor instead.
func (*GetUserInformationResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserInformationResponse) GetUserInfos() []*UserInfo {
	if x != nil {
		return x.UserInfos
	}
	return nil
}

type VirtualClassroomState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VirtualClassroomState) Reset() {
	*x = VirtualClassroomState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState) ProtoMessage() {}

func (x *VirtualClassroomState) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7}
}

type ModifyVirtualClassroomStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // required
	// Types that are assignable to Command:
	//
	//	*ModifyVirtualClassroomStateRequest_ShareAMaterial
	//	*ModifyVirtualClassroomStateRequest_StopSharingMaterial
	//	*ModifyVirtualClassroomStateRequest_FoldHandAll
	//	*ModifyVirtualClassroomStateRequest_FoldUserHand
	//	*ModifyVirtualClassroomStateRequest_RaiseHand
	//	*ModifyVirtualClassroomStateRequest_HandOff
	//	*ModifyVirtualClassroomStateRequest_AnnotationEnable
	//	*ModifyVirtualClassroomStateRequest_AnnotationDisable
	//	*ModifyVirtualClassroomStateRequest_StartPolling
	//	*ModifyVirtualClassroomStateRequest_StopPolling
	//	*ModifyVirtualClassroomStateRequest_EndPolling
	//	*ModifyVirtualClassroomStateRequest_SubmitPollingAnswer
	//	*ModifyVirtualClassroomStateRequest_RequestRecording
	//	*ModifyVirtualClassroomStateRequest_StopRecording
	//	*ModifyVirtualClassroomStateRequest_Spotlight_
	//	*ModifyVirtualClassroomStateRequest_StartRecording
	//	*ModifyVirtualClassroomStateRequest_SharePolling
	//	*ModifyVirtualClassroomStateRequest_WhiteboardZoomState_
	//	*ModifyVirtualClassroomStateRequest_ChatEnable
	//	*ModifyVirtualClassroomStateRequest_ChatDisable
	//	*ModifyVirtualClassroomStateRequest_AnnotationDisableAll
	//	*ModifyVirtualClassroomStateRequest_UpsertSessionTime
	Command isModifyVirtualClassroomStateRequest_Command `protobuf_oneof:"command"`
}

func (x *ModifyVirtualClassroomStateRequest) Reset() {
	*x = ModifyVirtualClassroomStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVirtualClassroomStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVirtualClassroomStateRequest) ProtoMessage() {}

func (x *ModifyVirtualClassroomStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVirtualClassroomStateRequest.ProtoReflect.Descriptor instead.
func (*ModifyVirtualClassroomStateRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{8}
}

func (x *ModifyVirtualClassroomStateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ModifyVirtualClassroomStateRequest) GetCommand() isModifyVirtualClassroomStateRequest_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetShareAMaterial() *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_ShareAMaterial); ok {
		return x.ShareAMaterial
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetStopSharingMaterial() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_StopSharingMaterial); ok {
		return x.StopSharingMaterial
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetFoldHandAll() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_FoldHandAll); ok {
		return x.FoldHandAll
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetFoldUserHand() string {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_FoldUserHand); ok {
		return x.FoldUserHand
	}
	return ""
}

func (x *ModifyVirtualClassroomStateRequest) GetRaiseHand() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_RaiseHand); ok {
		return x.RaiseHand
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetHandOff() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_HandOff); ok {
		return x.HandOff
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetAnnotationEnable() *ModifyVirtualClassroomStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_AnnotationEnable); ok {
		return x.AnnotationEnable
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetAnnotationDisable() *ModifyVirtualClassroomStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_AnnotationDisable); ok {
		return x.AnnotationDisable
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetStartPolling() *ModifyVirtualClassroomStateRequest_PollingOptions {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_StartPolling); ok {
		return x.StartPolling
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetStopPolling() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_StopPolling); ok {
		return x.StopPolling
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetEndPolling() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_EndPolling); ok {
		return x.EndPolling
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetSubmitPollingAnswer() *ModifyVirtualClassroomStateRequest_PollingAnswer {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_SubmitPollingAnswer); ok {
		return x.SubmitPollingAnswer
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetRequestRecording() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_RequestRecording); ok {
		return x.RequestRecording
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetStopRecording() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_StopRecording); ok {
		return x.StopRecording
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetSpotlight() *ModifyVirtualClassroomStateRequest_Spotlight {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_Spotlight_); ok {
		return x.Spotlight
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetStartRecording() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_StartRecording); ok {
		return x.StartRecording
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetSharePolling() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_SharePolling); ok {
		return x.SharePolling
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetWhiteboardZoomState() *ModifyVirtualClassroomStateRequest_WhiteboardZoomState {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_WhiteboardZoomState_); ok {
		return x.WhiteboardZoomState
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetChatEnable() *ModifyVirtualClassroomStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_ChatEnable); ok {
		return x.ChatEnable
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetChatDisable() *ModifyVirtualClassroomStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_ChatDisable); ok {
		return x.ChatDisable
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest) GetAnnotationDisableAll() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_AnnotationDisableAll); ok {
		return x.AnnotationDisableAll
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest) GetUpsertSessionTime() bool {
	if x, ok := x.GetCommand().(*ModifyVirtualClassroomStateRequest_UpsertSessionTime); ok {
		return x.UpsertSessionTime
	}
	return false
}

type isModifyVirtualClassroomStateRequest_Command interface {
	isModifyVirtualClassroomStateRequest_Command()
}

type ModifyVirtualClassroomStateRequest_ShareAMaterial struct {
	ShareAMaterial *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand `protobuf:"bytes,2,opt,name=share_a_material,json=shareAMaterial,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_StopSharingMaterial struct {
	StopSharingMaterial bool `protobuf:"varint,3,opt,name=stop_sharing_material,json=stopSharingMaterial,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_FoldHandAll struct {
	FoldHandAll bool `protobuf:"varint,4,opt,name=fold_hand_all,json=foldHandAll,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_FoldUserHand struct {
	FoldUserHand string `protobuf:"bytes,5,opt,name=fold_user_hand,json=foldUserHand,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_RaiseHand struct {
	RaiseHand bool `protobuf:"varint,6,opt,name=raise_hand,json=raiseHand,proto3,oneof"` // only for student
}

type ModifyVirtualClassroomStateRequest_HandOff struct {
	HandOff bool `protobuf:"varint,7,opt,name=hand_off,json=handOff,proto3,oneof"` // only for student
}

type ModifyVirtualClassroomStateRequest_AnnotationEnable struct {
	AnnotationEnable *ModifyVirtualClassroomStateRequest_Learners `protobuf:"bytes,8,opt,name=annotation_enable,json=annotationEnable,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_AnnotationDisable struct {
	AnnotationDisable *ModifyVirtualClassroomStateRequest_Learners `protobuf:"bytes,9,opt,name=annotation_disable,json=annotationDisable,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_StartPolling struct {
	StartPolling *ModifyVirtualClassroomStateRequest_PollingOptions `protobuf:"bytes,10,opt,name=start_polling,json=startPolling,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_StopPolling struct {
	StopPolling bool `protobuf:"varint,11,opt,name=stop_polling,json=stopPolling,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_EndPolling struct {
	EndPolling bool `protobuf:"varint,12,opt,name=end_polling,json=endPolling,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_SubmitPollingAnswer struct {
	SubmitPollingAnswer *ModifyVirtualClassroomStateRequest_PollingAnswer `protobuf:"bytes,13,opt,name=submit_polling_answer,json=submitPollingAnswer,proto3,oneof"` // only for learner
}

type ModifyVirtualClassroomStateRequest_RequestRecording struct {
	RequestRecording bool `protobuf:"varint,14,opt,name=request_recording,json=requestRecording,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_StopRecording struct {
	StopRecording bool `protobuf:"varint,15,opt,name=stop_recording,json=stopRecording,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_Spotlight_ struct {
	Spotlight *ModifyVirtualClassroomStateRequest_Spotlight `protobuf:"bytes,16,opt,name=spotlight,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_StartRecording struct {
	StartRecording bool `protobuf:"varint,17,opt,name=start_recording,json=startRecording,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_SharePolling struct {
	SharePolling bool `protobuf:"varint,18,opt,name=share_polling,json=sharePolling,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_WhiteboardZoomState_ struct {
	WhiteboardZoomState *ModifyVirtualClassroomStateRequest_WhiteboardZoomState `protobuf:"bytes,19,opt,name=whiteboard_zoom_state,json=whiteboardZoomState,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_ChatEnable struct {
	ChatEnable *ModifyVirtualClassroomStateRequest_Learners `protobuf:"bytes,20,opt,name=chat_enable,json=chatEnable,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_ChatDisable struct {
	ChatDisable *ModifyVirtualClassroomStateRequest_Learners `protobuf:"bytes,21,opt,name=chat_disable,json=chatDisable,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_AnnotationDisableAll struct {
	AnnotationDisableAll bool `protobuf:"varint,22,opt,name=annotation_disable_all,json=annotationDisableAll,proto3,oneof"` // only for teacher
}

type ModifyVirtualClassroomStateRequest_UpsertSessionTime struct {
	UpsertSessionTime bool `protobuf:"varint,23,opt,name=upsert_session_time,json=upsertSessionTime,proto3,oneof"` // only for teacher
}

func (*ModifyVirtualClassroomStateRequest_ShareAMaterial) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_StopSharingMaterial) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_FoldHandAll) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_FoldUserHand) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_RaiseHand) isModifyVirtualClassroomStateRequest_Command() {}

func (*ModifyVirtualClassroomStateRequest_HandOff) isModifyVirtualClassroomStateRequest_Command() {}

func (*ModifyVirtualClassroomStateRequest_AnnotationEnable) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_AnnotationDisable) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_StartPolling) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_StopPolling) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_EndPolling) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_SubmitPollingAnswer) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_RequestRecording) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_StopRecording) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_Spotlight_) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_StartRecording) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_SharePolling) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_WhiteboardZoomState_) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_ChatEnable) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_ChatDisable) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_AnnotationDisableAll) isModifyVirtualClassroomStateRequest_Command() {
}

func (*ModifyVirtualClassroomStateRequest_UpsertSessionTime) isModifyVirtualClassroomStateRequest_Command() {
}

type ModifyVirtualClassroomStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyVirtualClassroomStateResponse) Reset() {
	*x = ModifyVirtualClassroomStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVirtualClassroomStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVirtualClassroomStateResponse) ProtoMessage() {}

func (x *ModifyVirtualClassroomStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVirtualClassroomStateResponse.ProtoReflect.Descriptor instead.
func (*ModifyVirtualClassroomStateResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{9}
}

type JoinLiveLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *JoinLiveLessonRequest) Reset() {
	*x = JoinLiveLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinLiveLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinLiveLessonRequest) ProtoMessage() {}

func (x *JoinLiveLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinLiveLessonRequest.ProtoReflect.Descriptor instead.
func (*JoinLiveLessonRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{10}
}

func (x *JoinLiveLessonRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type JoinLiveLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamToken          string `protobuf:"bytes,1,opt,name=stream_token,json=streamToken,proto3" json:"stream_token,omitempty"`
	WhiteboardToken      string `protobuf:"bytes,2,opt,name=whiteboard_token,json=whiteboardToken,proto3" json:"whiteboard_token,omitempty"`
	RoomId               string `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	StmToken             string `protobuf:"bytes,4,opt,name=stm_token,json=stmToken,proto3" json:"stm_token,omitempty"`
	VideoToken           string `protobuf:"bytes,5,opt,name=video_token,json=videoToken,proto3" json:"video_token,omitempty"`
	AgoraAppId           string `protobuf:"bytes,6,opt,name=agora_app_id,json=agoraAppId,proto3" json:"agora_app_id,omitempty"`
	WhiteboardAppId      string `protobuf:"bytes,7,opt,name=whiteboard_app_id,json=whiteboardAppId,proto3" json:"whiteboard_app_id,omitempty"`
	ScreenRecordingToken string `protobuf:"bytes,8,opt,name=screen_recording_token,json=screenRecordingToken,proto3" json:"screen_recording_token,omitempty"`
}

func (x *JoinLiveLessonResponse) Reset() {
	*x = JoinLiveLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinLiveLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinLiveLessonResponse) ProtoMessage() {}

func (x *JoinLiveLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinLiveLessonResponse.ProtoReflect.Descriptor instead.
func (*JoinLiveLessonResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{11}
}

func (x *JoinLiveLessonResponse) GetStreamToken() string {
	if x != nil {
		return x.StreamToken
	}
	return ""
}

func (x *JoinLiveLessonResponse) GetWhiteboardToken() string {
	if x != nil {
		return x.WhiteboardToken
	}
	return ""
}

func (x *JoinLiveLessonResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinLiveLessonResponse) GetStmToken() string {
	if x != nil {
		return x.StmToken
	}
	return ""
}

func (x *JoinLiveLessonResponse) GetVideoToken() string {
	if x != nil {
		return x.VideoToken
	}
	return ""
}

func (x *JoinLiveLessonResponse) GetAgoraAppId() string {
	if x != nil {
		return x.AgoraAppId
	}
	return ""
}

func (x *JoinLiveLessonResponse) GetWhiteboardAppId() string {
	if x != nil {
		return x.WhiteboardAppId
	}
	return ""
}

func (x *JoinLiveLessonResponse) GetScreenRecordingToken() string {
	if x != nil {
		return x.ScreenRecordingToken
	}
	return ""
}

type LeaveLiveLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LessonId string `protobuf:"bytes,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *LeaveLiveLessonRequest) Reset() {
	*x = LeaveLiveLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveLiveLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveLiveLessonRequest) ProtoMessage() {}

func (x *LeaveLiveLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveLiveLessonRequest.ProtoReflect.Descriptor instead.
func (*LeaveLiveLessonRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{12}
}

func (x *LeaveLiveLessonRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LeaveLiveLessonRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type LeaveLiveLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveLiveLessonResponse) Reset() {
	*x = LeaveLiveLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveLiveLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveLiveLessonResponse) ProtoMessage() {}

func (x *LeaveLiveLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveLiveLessonResponse.ProtoReflect.Descriptor instead.
func (*LeaveLiveLessonResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{13}
}

type EndLiveLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *EndLiveLessonRequest) Reset() {
	*x = EndLiveLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndLiveLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndLiveLessonRequest) ProtoMessage() {}

func (x *EndLiveLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndLiveLessonRequest.ProtoReflect.Descriptor instead.
func (*EndLiveLessonRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{14}
}

func (x *EndLiveLessonRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type EndLiveLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndLiveLessonResponse) Reset() {
	*x = EndLiveLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndLiveLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndLiveLessonResponse) ProtoMessage() {}

func (x *EndLiveLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndLiveLessonResponse.ProtoReflect.Descriptor instead.
func (*EndLiveLessonResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{15}
}

type PreparePublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId  string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	LearnerId string `protobuf:"bytes,2,opt,name=learner_id,json=learnerId,proto3" json:"learner_id,omitempty"`
}

func (x *PreparePublishRequest) Reset() {
	*x = PreparePublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparePublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparePublishRequest) ProtoMessage() {}

func (x *PreparePublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparePublishRequest.ProtoReflect.Descriptor instead.
func (*PreparePublishRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{16}
}

func (x *PreparePublishRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *PreparePublishRequest) GetLearnerId() string {
	if x != nil {
		return x.LearnerId
	}
	return ""
}

type PreparePublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status PrepareToPublishStatus `protobuf:"varint,1,opt,name=status,proto3,enum=virtualclassroom.v1.PrepareToPublishStatus" json:"status,omitempty"`
}

func (x *PreparePublishResponse) Reset() {
	*x = PreparePublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparePublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparePublishResponse) ProtoMessage() {}

func (x *PreparePublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparePublishResponse.ProtoReflect.Descriptor instead.
func (*PreparePublishResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{17}
}

func (x *PreparePublishResponse) GetStatus() PrepareToPublishStatus {
	if x != nil {
		return x.Status
	}
	return PrepareToPublishStatus_PREPARE_TO_PUBLISH_STATUS_NONE
}

type UnpublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId  string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	LearnerId string `protobuf:"bytes,2,opt,name=learner_id,json=learnerId,proto3" json:"learner_id,omitempty"`
}

func (x *UnpublishRequest) Reset() {
	*x = UnpublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishRequest) ProtoMessage() {}

func (x *UnpublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishRequest.ProtoReflect.Descriptor instead.
func (*UnpublishRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{18}
}

func (x *UnpublishRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *UnpublishRequest) GetLearnerId() string {
	if x != nil {
		return x.LearnerId
	}
	return ""
}

type UnpublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status UnpublishStatus `protobuf:"varint,1,opt,name=status,proto3,enum=virtualclassroom.v1.UnpublishStatus" json:"status,omitempty"`
}

func (x *UnpublishResponse) Reset() {
	*x = UnpublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishResponse) ProtoMessage() {}

func (x *UnpublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishResponse.ProtoReflect.Descriptor instead.
func (*UnpublishResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{19}
}

func (x *UnpublishResponse) GetStatus() UnpublishStatus {
	if x != nil {
		return x.Status
	}
	return UnpublishStatus_UNPUBLISH_STATUS_UNPUBLISHED_NONE
}

type StartRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId           string                                   `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	SubscribeVideoUids []string                                 `protobuf:"bytes,2,rep,name=subscribe_video_uids,json=subscribeVideoUids,proto3" json:"subscribe_video_uids,omitempty"`
	SubscribeAudioUids []string                                 `protobuf:"bytes,3,rep,name=subscribe_audio_uids,json=subscribeAudioUids,proto3" json:"subscribe_audio_uids,omitempty"`
	FileNamePrefix     []string                                 `protobuf:"bytes,4,rep,name=file_name_prefix,json=fileNamePrefix,proto3" json:"file_name_prefix,omitempty"`
	TranscodingConfig  *StartRecordingRequest_TranscodingConfig `protobuf:"bytes,5,opt,name=transcoding_config,json=transcodingConfig,proto3" json:"transcoding_config,omitempty"`
	ChannelId          string                                   `protobuf:"bytes,6,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *StartRecordingRequest) Reset() {
	*x = StartRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecordingRequest) ProtoMessage() {}

func (x *StartRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecordingRequest.ProtoReflect.Descriptor instead.
func (*StartRecordingRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{20}
}

func (x *StartRecordingRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *StartRecordingRequest) GetSubscribeVideoUids() []string {
	if x != nil {
		return x.SubscribeVideoUids
	}
	return nil
}

func (x *StartRecordingRequest) GetSubscribeAudioUids() []string {
	if x != nil {
		return x.SubscribeAudioUids
	}
	return nil
}

func (x *StartRecordingRequest) GetFileNamePrefix() []string {
	if x != nil {
		return x.FileNamePrefix
	}
	return nil
}

func (x *StartRecordingRequest) GetTranscodingConfig() *StartRecordingRequest_TranscodingConfig {
	if x != nil {
		return x.TranscodingConfig
	}
	return nil
}

func (x *StartRecordingRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type StartRecordingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *StartRecordingResponse) Reset() {
	*x = StartRecordingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecordingResponse) ProtoMessage() {}

func (x *StartRecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecordingResponse.ProtoReflect.Descriptor instead.
func (*StartRecordingResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{21}
}

func (x *StartRecordingResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetRecordingByLessonIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string     `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"` // required
	Paging   *v1.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`                     // required
}

func (x *GetRecordingByLessonIDRequest) Reset() {
	*x = GetRecordingByLessonIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingByLessonIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingByLessonIDRequest) ProtoMessage() {}

func (x *GetRecordingByLessonIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingByLessonIDRequest.ProtoReflect.Descriptor instead.
func (*GetRecordingByLessonIDRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{22}
}

func (x *GetRecordingByLessonIDRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *GetRecordingByLessonIDRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type GetRecordingByLessonIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items        []*GetRecordingByLessonIDResponse_RecordingItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPage     *v1.Paging                                      `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage *v1.Paging                                      `protobuf:"bytes,3,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	TotalItems   uint32                                          `protobuf:"varint,4,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
}

func (x *GetRecordingByLessonIDResponse) Reset() {
	*x = GetRecordingByLessonIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingByLessonIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingByLessonIDResponse) ProtoMessage() {}

func (x *GetRecordingByLessonIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingByLessonIDResponse.ProtoReflect.Descriptor instead.
func (*GetRecordingByLessonIDResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{23}
}

func (x *GetRecordingByLessonIDResponse) GetItems() []*GetRecordingByLessonIDResponse_RecordingItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetRecordingByLessonIDResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *GetRecordingByLessonIDResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

func (x *GetRecordingByLessonIDResponse) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

type GetRecordingDownloadLinkByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordingId string               `protobuf:"bytes,1,opt,name=recording_id,json=recordingId,proto3" json:"recording_id,omitempty"` // required
	Expiry      *durationpb.Duration `protobuf:"bytes,2,opt,name=expiry,proto3" json:"expiry,omitempty"`
	FileName    string               `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *GetRecordingDownloadLinkByIDRequest) Reset() {
	*x = GetRecordingDownloadLinkByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingDownloadLinkByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingDownloadLinkByIDRequest) ProtoMessage() {}

func (x *GetRecordingDownloadLinkByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingDownloadLinkByIDRequest.ProtoReflect.Descriptor instead.
func (*GetRecordingDownloadLinkByIDRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{24}
}

func (x *GetRecordingDownloadLinkByIDRequest) GetRecordingId() string {
	if x != nil {
		return x.RecordingId
	}
	return ""
}

func (x *GetRecordingDownloadLinkByIDRequest) GetExpiry() *durationpb.Duration {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *GetRecordingDownloadLinkByIDRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type GetRecordingDownloadLinkByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetRecordingDownloadLinkByIDResponse) Reset() {
	*x = GetRecordingDownloadLinkByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingDownloadLinkByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingDownloadLinkByIDResponse) ProtoMessage() {}

func (x *GetRecordingDownloadLinkByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingDownloadLinkByIDResponse.ProtoReflect.Descriptor instead.
func (*GetRecordingDownloadLinkByIDResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{25}
}

func (x *GetRecordingDownloadLinkByIDResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type StopRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId  string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *StopRecordingRequest) Reset() {
	*x = StopRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRecordingRequest) ProtoMessage() {}

func (x *StopRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRecordingRequest.ProtoReflect.Descriptor instead.
func (*StopRecordingRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{26}
}

func (x *StopRecordingRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *StopRecordingRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type StopRecordingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopRecordingResponse) Reset() {
	*x = StopRecordingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRecordingResponse) ProtoMessage() {}

func (x *StopRecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRecordingResponse.ProtoReflect.Descriptor instead.
func (*StopRecordingResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{27}
}

type UpcomingLiveLessonNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonIds []string `protobuf:"bytes,1,rep,name=lesson_ids,json=lessonIds,proto3" json:"lesson_ids,omitempty"`
}

func (x *UpcomingLiveLessonNotificationRequest) Reset() {
	*x = UpcomingLiveLessonNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpcomingLiveLessonNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpcomingLiveLessonNotificationRequest) ProtoMessage() {}

func (x *UpcomingLiveLessonNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpcomingLiveLessonNotificationRequest.ProtoReflect.Descriptor instead.
func (*UpcomingLiveLessonNotificationRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{28}
}

func (x *UpcomingLiveLessonNotificationRequest) GetLessonIds() []string {
	if x != nil {
		return x.LessonIds
	}
	return nil
}

type GetConversationIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId         string                     `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	ParticipantList  []string                   `protobuf:"bytes,2,rep,name=participant_list,json=participantList,proto3" json:"participant_list,omitempty"`
	ConversationType LiveLessonConversationType `protobuf:"varint,3,opt,name=conversation_type,json=conversationType,proto3,enum=virtualclassroom.v1.LiveLessonConversationType" json:"conversation_type,omitempty"`
}

func (x *GetConversationIDRequest) Reset() {
	*x = GetConversationIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationIDRequest) ProtoMessage() {}

func (x *GetConversationIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationIDRequest.ProtoReflect.Descriptor instead.
func (*GetConversationIDRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{29}
}

func (x *GetConversationIDRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *GetConversationIDRequest) GetParticipantList() []string {
	if x != nil {
		return x.ParticipantList
	}
	return nil
}

func (x *GetConversationIDRequest) GetConversationType() LiveLessonConversationType {
	if x != nil {
		return x.ConversationType
	}
	return LiveLessonConversationType_LIVE_LESSON_CONVERSATION_TYPE_PUBLIC
}

type GetConversationIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
}

func (x *GetConversationIDResponse) Reset() {
	*x = GetConversationIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationIDResponse) ProtoMessage() {}

func (x *GetConversationIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationIDResponse.ProtoReflect.Descriptor instead.
func (*GetConversationIDResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{30}
}

func (x *GetConversationIDResponse) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type GetPrivateConversationIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId       string   `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	ParticipantIds []string `protobuf:"bytes,2,rep,name=participant_ids,json=participantIds,proto3" json:"participant_ids,omitempty"`
}

func (x *GetPrivateConversationIDsRequest) Reset() {
	*x = GetPrivateConversationIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateConversationIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateConversationIDsRequest) ProtoMessage() {}

func (x *GetPrivateConversationIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateConversationIDsRequest.ProtoReflect.Descriptor instead.
func (*GetPrivateConversationIDsRequest) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{31}
}

func (x *GetPrivateConversationIDsRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *GetPrivateConversationIDsRequest) GetParticipantIds() []string {
	if x != nil {
		return x.ParticipantIds
	}
	return nil
}

type GetPrivateConversationIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationIds            []string                                                     `protobuf:"bytes,1,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"` // deprecated
	FailedPrivConv             *GetPrivateConversationIDsResponse_FailedPrivateConversation `protobuf:"bytes,2,opt,name=failed_priv_conv,json=failedPrivConv,proto3" json:"failed_priv_conv,omitempty"`
	ParticipantConversationMap map[string]string                                            `protobuf:"bytes,3,rep,name=participant_conversation_map,json=participantConversationMap,proto3" json:"participant_conversation_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // key: participant ID; val: conversation ID
}

func (x *GetPrivateConversationIDsResponse) Reset() {
	*x = GetPrivateConversationIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateConversationIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateConversationIDsResponse) ProtoMessage() {}

func (x *GetPrivateConversationIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateConversationIDsResponse.ProtoReflect.Descriptor instead.
func (*GetPrivateConversationIDsResponse) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{32}
}

func (x *GetPrivateConversationIDsResponse) GetConversationIds() []string {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

func (x *GetPrivateConversationIDsResponse) GetFailedPrivConv() *GetPrivateConversationIDsResponse_FailedPrivateConversation {
	if x != nil {
		return x.FailedPrivConv
	}
	return nil
}

func (x *GetPrivateConversationIDsResponse) GetParticipantConversationMap() map[string]string {
	if x != nil {
		return x.ParticipantConversationMap
	}
	return nil
}

type GetLiveLessonStateResponse_UsersState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Learners []*GetLiveLessonStateResponse_UsersState_LearnerState `protobuf:"bytes,1,rep,name=learners,proto3" json:"learners,omitempty"`
}

func (x *GetLiveLessonStateResponse_UsersState) Reset() {
	*x = GetLiveLessonStateResponse_UsersState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveLessonStateResponse_UsersState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveLessonStateResponse_UsersState) ProtoMessage() {}

func (x *GetLiveLessonStateResponse_UsersState) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveLessonStateResponse_UsersState.ProtoReflect.Descriptor instead.
func (*GetLiveLessonStateResponse_UsersState) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetLiveLessonStateResponse_UsersState) GetLearners() []*GetLiveLessonStateResponse_UsersState_LearnerState {
	if x != nil {
		return x.Learners
	}
	return nil
}

type GetLiveLessonStateResponse_UsersState_LearnerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string                               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HandsUp       *VirtualClassroomState_HandsUp       `protobuf:"bytes,2,opt,name=hands_up,json=handsUp,proto3" json:"hands_up,omitempty"`
	Annotation    *VirtualClassroomState_Annotation    `protobuf:"bytes,3,opt,name=annotation,proto3" json:"annotation,omitempty"`
	PollingAnswer *VirtualClassroomState_PollingAnswer `protobuf:"bytes,4,opt,name=polling_answer,json=pollingAnswer,proto3" json:"polling_answer,omitempty"`
	Chat          *VirtualClassroomState_Chat          `protobuf:"bytes,5,opt,name=chat,proto3" json:"chat,omitempty"`
}

func (x *GetLiveLessonStateResponse_UsersState_LearnerState) Reset() {
	*x = GetLiveLessonStateResponse_UsersState_LearnerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveLessonStateResponse_UsersState_LearnerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveLessonStateResponse_UsersState_LearnerState) ProtoMessage() {}

func (x *GetLiveLessonStateResponse_UsersState_LearnerState) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveLessonStateResponse_UsersState_LearnerState.ProtoReflect.Descriptor instead.
func (*GetLiveLessonStateResponse_UsersState_LearnerState) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *GetLiveLessonStateResponse_UsersState_LearnerState) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLiveLessonStateResponse_UsersState_LearnerState) GetHandsUp() *VirtualClassroomState_HandsUp {
	if x != nil {
		return x.HandsUp
	}
	return nil
}

func (x *GetLiveLessonStateResponse_UsersState_LearnerState) GetAnnotation() *VirtualClassroomState_Annotation {
	if x != nil {
		return x.Annotation
	}
	return nil
}

func (x *GetLiveLessonStateResponse_UsersState_LearnerState) GetPollingAnswer() *VirtualClassroomState_PollingAnswer {
	if x != nil {
		return x.PollingAnswer
	}
	return nil
}

func (x *GetLiveLessonStateResponse_UsersState_LearnerState) GetChat() *VirtualClassroomState_Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

type VirtualClassroomState_CurrentMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId   string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`       // required
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // required
	// Types that are assignable to State:
	//
	//	*VirtualClassroomState_CurrentMaterial_VideoState_
	//	*VirtualClassroomState_CurrentMaterial_PdfState
	//	*VirtualClassroomState_CurrentMaterial_AudioState_
	State isVirtualClassroomState_CurrentMaterial_State `protobuf_oneof:"state"`
	Data  *Media                                        `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"` // required
}

func (x *VirtualClassroomState_CurrentMaterial) Reset() {
	*x = VirtualClassroomState_CurrentMaterial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_CurrentMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_CurrentMaterial) ProtoMessage() {}

func (x *VirtualClassroomState_CurrentMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_CurrentMaterial.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_CurrentMaterial) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 0}
}

func (x *VirtualClassroomState_CurrentMaterial) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *VirtualClassroomState_CurrentMaterial) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (m *VirtualClassroomState_CurrentMaterial) GetState() isVirtualClassroomState_CurrentMaterial_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *VirtualClassroomState_CurrentMaterial) GetVideoState() *VirtualClassroomState_CurrentMaterial_VideoState {
	if x, ok := x.GetState().(*VirtualClassroomState_CurrentMaterial_VideoState_); ok {
		return x.VideoState
	}
	return nil
}

func (x *VirtualClassroomState_CurrentMaterial) GetPdfState() *VirtualClassroomState_CurrentMaterial_PDFState {
	if x, ok := x.GetState().(*VirtualClassroomState_CurrentMaterial_PdfState); ok {
		return x.PdfState
	}
	return nil
}

func (x *VirtualClassroomState_CurrentMaterial) GetAudioState() *VirtualClassroomState_CurrentMaterial_AudioState {
	if x, ok := x.GetState().(*VirtualClassroomState_CurrentMaterial_AudioState_); ok {
		return x.AudioState
	}
	return nil
}

func (x *VirtualClassroomState_CurrentMaterial) GetData() *Media {
	if x != nil {
		return x.Data
	}
	return nil
}

type isVirtualClassroomState_CurrentMaterial_State interface {
	isVirtualClassroomState_CurrentMaterial_State()
}

type VirtualClassroomState_CurrentMaterial_VideoState_ struct {
	VideoState *VirtualClassroomState_CurrentMaterial_VideoState `protobuf:"bytes,3,opt,name=video_state,json=videoState,proto3,oneof"`
}

type VirtualClassroomState_CurrentMaterial_PdfState struct {
	PdfState *VirtualClassroomState_CurrentMaterial_PDFState `protobuf:"bytes,4,opt,name=pdf_state,json=pdfState,proto3,oneof"`
}

type VirtualClassroomState_CurrentMaterial_AudioState_ struct {
	AudioState *VirtualClassroomState_CurrentMaterial_AudioState `protobuf:"bytes,6,opt,name=audio_state,json=audioState,proto3,oneof"` // 5 is used by Media already
}

func (*VirtualClassroomState_CurrentMaterial_VideoState_) isVirtualClassroomState_CurrentMaterial_State() {
}

func (*VirtualClassroomState_CurrentMaterial_PdfState) isVirtualClassroomState_CurrentMaterial_State() {
}

func (*VirtualClassroomState_CurrentMaterial_AudioState_) isVirtualClassroomState_CurrentMaterial_State() {
}

type VirtualClassroomState_HandsUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *VirtualClassroomState_HandsUp) Reset() {
	*x = VirtualClassroomState_HandsUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_HandsUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_HandsUp) ProtoMessage() {}

func (x *VirtualClassroomState_HandsUp) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_HandsUp.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_HandsUp) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 1}
}

func (x *VirtualClassroomState_HandsUp) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *VirtualClassroomState_HandsUp) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VirtualClassroomState_Annotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *VirtualClassroomState_Annotation) Reset() {
	*x = VirtualClassroomState_Annotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_Annotation) ProtoMessage() {}

func (x *VirtualClassroomState_Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_Annotation.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_Annotation) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 2}
}

func (x *VirtualClassroomState_Annotation) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *VirtualClassroomState_Annotation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VirtualClassroomState_PollingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer    string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	IsCorrect bool   `protobuf:"varint,2,opt,name=is_correct,json=isCorrect,proto3" json:"is_correct,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *VirtualClassroomState_PollingOption) Reset() {
	*x = VirtualClassroomState_PollingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_PollingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_PollingOption) ProtoMessage() {}

func (x *VirtualClassroomState_PollingOption) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_PollingOption.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_PollingOption) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 3}
}

func (x *VirtualClassroomState_PollingOption) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *VirtualClassroomState_PollingOption) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

func (x *VirtualClassroomState_PollingOption) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type VirtualClassroomState_PollingSharing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsShared bool `protobuf:"varint,1,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
}

func (x *VirtualClassroomState_PollingSharing) Reset() {
	*x = VirtualClassroomState_PollingSharing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_PollingSharing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_PollingSharing) ProtoMessage() {}

func (x *VirtualClassroomState_PollingSharing) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_PollingSharing.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_PollingSharing) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 4}
}

func (x *VirtualClassroomState_PollingSharing) GetIsShared() bool {
	if x != nil {
		return x.IsShared
	}
	return false
}

type VirtualClassroomState_CurrentPolling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options   []*VirtualClassroomState_PollingOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	Status    PollingState                           `protobuf:"varint,2,opt,name=status,proto3,enum=virtualclassroom.v1.PollingState" json:"status,omitempty"`
	CreatedAt *timestamppb.Timestamp                 `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StoppedAt *timestamppb.Timestamp                 `protobuf:"bytes,4,opt,name=stopped_at,json=stoppedAt,proto3" json:"stopped_at,omitempty"`
	IsShared  *VirtualClassroomState_PollingSharing  `protobuf:"bytes,5,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
	Question  string                                 `protobuf:"bytes,6,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *VirtualClassroomState_CurrentPolling) Reset() {
	*x = VirtualClassroomState_CurrentPolling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_CurrentPolling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_CurrentPolling) ProtoMessage() {}

func (x *VirtualClassroomState_CurrentPolling) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_CurrentPolling.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_CurrentPolling) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 5}
}

func (x *VirtualClassroomState_CurrentPolling) GetOptions() []*VirtualClassroomState_PollingOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *VirtualClassroomState_CurrentPolling) GetStatus() PollingState {
	if x != nil {
		return x.Status
	}
	return PollingState_POLLING_STATE_STARTED
}

func (x *VirtualClassroomState_CurrentPolling) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VirtualClassroomState_CurrentPolling) GetStoppedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StoppedAt
	}
	return nil
}

func (x *VirtualClassroomState_CurrentPolling) GetIsShared() *VirtualClassroomState_PollingSharing {
	if x != nil {
		return x.IsShared
	}
	return nil
}

func (x *VirtualClassroomState_CurrentPolling) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type VirtualClassroomState_PollingAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringArrayValue []string               `protobuf:"bytes,1,rep,name=string_array_value,json=stringArrayValue,proto3" json:"string_array_value,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *VirtualClassroomState_PollingAnswer) Reset() {
	*x = VirtualClassroomState_PollingAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_PollingAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_PollingAnswer) ProtoMessage() {}

func (x *VirtualClassroomState_PollingAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_PollingAnswer.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_PollingAnswer) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 6}
}

func (x *VirtualClassroomState_PollingAnswer) GetStringArrayValue() []string {
	if x != nil {
		return x.StringArrayValue
	}
	return nil
}

func (x *VirtualClassroomState_PollingAnswer) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VirtualClassroomState_Recording struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRecording bool   `protobuf:"varint,1,opt,name=is_recording,json=isRecording,proto3" json:"is_recording,omitempty"`
	Creator     string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *VirtualClassroomState_Recording) Reset() {
	*x = VirtualClassroomState_Recording{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_Recording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_Recording) ProtoMessage() {}

func (x *VirtualClassroomState_Recording) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_Recording.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_Recording) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 7}
}

func (x *VirtualClassroomState_Recording) GetIsRecording() bool {
	if x != nil {
		return x.IsRecording
	}
	return false
}

func (x *VirtualClassroomState_Recording) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type VirtualClassroomState_Spotlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSpotlight bool   `protobuf:"varint,2,opt,name=is_spotlight,json=isSpotlight,proto3" json:"is_spotlight,omitempty"`
	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *VirtualClassroomState_Spotlight) Reset() {
	*x = VirtualClassroomState_Spotlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_Spotlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_Spotlight) ProtoMessage() {}

func (x *VirtualClassroomState_Spotlight) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_Spotlight.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_Spotlight) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 8}
}

func (x *VirtualClassroomState_Spotlight) GetIsSpotlight() bool {
	if x != nil {
		return x.IsSpotlight
	}
	return false
}

func (x *VirtualClassroomState_Spotlight) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type VirtualClassroomState_WhiteboardZoomState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdfScaleRatio float64 `protobuf:"fixed64,1,opt,name=pdf_scale_ratio,json=pdfScaleRatio,proto3" json:"pdf_scale_ratio,omitempty"`
	CenterX       float64 `protobuf:"fixed64,2,opt,name=center_x,json=centerX,proto3" json:"center_x,omitempty"`
	CenterY       float64 `protobuf:"fixed64,3,opt,name=center_y,json=centerY,proto3" json:"center_y,omitempty"`
	PdfWidth      float64 `protobuf:"fixed64,4,opt,name=pdf_width,json=pdfWidth,proto3" json:"pdf_width,omitempty"`
	PdfHeight     float64 `protobuf:"fixed64,5,opt,name=pdf_height,json=pdfHeight,proto3" json:"pdf_height,omitempty"`
}

func (x *VirtualClassroomState_WhiteboardZoomState) Reset() {
	*x = VirtualClassroomState_WhiteboardZoomState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_WhiteboardZoomState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_WhiteboardZoomState) ProtoMessage() {}

func (x *VirtualClassroomState_WhiteboardZoomState) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_WhiteboardZoomState.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_WhiteboardZoomState) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 9}
}

func (x *VirtualClassroomState_WhiteboardZoomState) GetPdfScaleRatio() float64 {
	if x != nil {
		return x.PdfScaleRatio
	}
	return 0
}

func (x *VirtualClassroomState_WhiteboardZoomState) GetCenterX() float64 {
	if x != nil {
		return x.CenterX
	}
	return 0
}

func (x *VirtualClassroomState_WhiteboardZoomState) GetCenterY() float64 {
	if x != nil {
		return x.CenterY
	}
	return 0
}

func (x *VirtualClassroomState_WhiteboardZoomState) GetPdfWidth() float64 {
	if x != nil {
		return x.PdfWidth
	}
	return 0
}

func (x *VirtualClassroomState_WhiteboardZoomState) GetPdfHeight() float64 {
	if x != nil {
		return x.PdfHeight
	}
	return 0
}

type VirtualClassroomState_Chat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *VirtualClassroomState_Chat) Reset() {
	*x = VirtualClassroomState_Chat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_Chat) ProtoMessage() {}

func (x *VirtualClassroomState_Chat) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_Chat.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_Chat) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 10}
}

func (x *VirtualClassroomState_Chat) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *VirtualClassroomState_Chat) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VirtualClassroomState_CurrentMaterial_VideoState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime *durationpb.Duration `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"` // the elapsed time since the video started playing.
	PlayerState PlayerState          `protobuf:"varint,2,opt,name=player_state,json=playerState,proto3,enum=virtualclassroom.v1.PlayerState" json:"player_state,omitempty"`
}

func (x *VirtualClassroomState_CurrentMaterial_VideoState) Reset() {
	*x = VirtualClassroomState_CurrentMaterial_VideoState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_CurrentMaterial_VideoState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_CurrentMaterial_VideoState) ProtoMessage() {}

func (x *VirtualClassroomState_CurrentMaterial_VideoState) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_CurrentMaterial_VideoState.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_CurrentMaterial_VideoState) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *VirtualClassroomState_CurrentMaterial_VideoState) GetCurrentTime() *durationpb.Duration {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

func (x *VirtualClassroomState_CurrentMaterial_VideoState) GetPlayerState() PlayerState {
	if x != nil {
		return x.PlayerState
	}
	return PlayerState_PLAYER_STATE_PAUSE
}

type VirtualClassroomState_CurrentMaterial_PDFState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VirtualClassroomState_CurrentMaterial_PDFState) Reset() {
	*x = VirtualClassroomState_CurrentMaterial_PDFState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_CurrentMaterial_PDFState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_CurrentMaterial_PDFState) ProtoMessage() {}

func (x *VirtualClassroomState_CurrentMaterial_PDFState) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_CurrentMaterial_PDFState.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_CurrentMaterial_PDFState) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 0, 1}
}

type VirtualClassroomState_CurrentMaterial_AudioState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime *durationpb.Duration `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"` // the elapsed time since the audio started playing.
	PlayerState PlayerState          `protobuf:"varint,2,opt,name=player_state,json=playerState,proto3,enum=virtualclassroom.v1.PlayerState" json:"player_state,omitempty"`
}

func (x *VirtualClassroomState_CurrentMaterial_AudioState) Reset() {
	*x = VirtualClassroomState_CurrentMaterial_AudioState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualClassroomState_CurrentMaterial_AudioState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualClassroomState_CurrentMaterial_AudioState) ProtoMessage() {}

func (x *VirtualClassroomState_CurrentMaterial_AudioState) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualClassroomState_CurrentMaterial_AudioState.ProtoReflect.Descriptor instead.
func (*VirtualClassroomState_CurrentMaterial_AudioState) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{7, 0, 2}
}

func (x *VirtualClassroomState_CurrentMaterial_AudioState) GetCurrentTime() *durationpb.Duration {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

func (x *VirtualClassroomState_CurrentMaterial_AudioState) GetPlayerState() PlayerState {
	if x != nil {
		return x.PlayerState
	}
	return PlayerState_PLAYER_STATE_PAUSE
}

type ModifyVirtualClassroomStateRequest_CurrentMaterialCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// Types that are assignable to State:
	//
	//	*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_VideoState
	//	*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_PdfState
	//	*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_AudioState
	State isModifyVirtualClassroomStateRequest_CurrentMaterialCommand_State `protobuf_oneof:"state"`
}

func (x *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) Reset() {
	*x = ModifyVirtualClassroomStateRequest_CurrentMaterialCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) ProtoMessage() {}

func (x *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVirtualClassroomStateRequest_CurrentMaterialCommand.ProtoReflect.Descriptor instead.
func (*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (m *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) GetState() isModifyVirtualClassroomStateRequest_CurrentMaterialCommand_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) GetVideoState() *VirtualClassroomState_CurrentMaterial_VideoState {
	if x, ok := x.GetState().(*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_VideoState); ok {
		return x.VideoState
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) GetPdfState() *VirtualClassroomState_CurrentMaterial_PDFState {
	if x, ok := x.GetState().(*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_PdfState); ok {
		return x.PdfState
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest_CurrentMaterialCommand) GetAudioState() *VirtualClassroomState_CurrentMaterial_AudioState {
	if x, ok := x.GetState().(*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_AudioState); ok {
		return x.AudioState
	}
	return nil
}

type isModifyVirtualClassroomStateRequest_CurrentMaterialCommand_State interface {
	isModifyVirtualClassroomStateRequest_CurrentMaterialCommand_State()
}

type ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_VideoState struct {
	VideoState *VirtualClassroomState_CurrentMaterial_VideoState `protobuf:"bytes,2,opt,name=video_state,json=videoState,proto3,oneof"`
}

type ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_PdfState struct {
	PdfState *VirtualClassroomState_CurrentMaterial_PDFState `protobuf:"bytes,3,opt,name=pdf_state,json=pdfState,proto3,oneof"`
}

type ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_AudioState struct {
	AudioState *VirtualClassroomState_CurrentMaterial_AudioState `protobuf:"bytes,4,opt,name=audio_state,json=audioState,proto3,oneof"`
}

func (*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_VideoState) isModifyVirtualClassroomStateRequest_CurrentMaterialCommand_State() {
}

func (*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_PdfState) isModifyVirtualClassroomStateRequest_CurrentMaterialCommand_State() {
}

func (*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_AudioState) isModifyVirtualClassroomStateRequest_CurrentMaterialCommand_State() {
}

type ModifyVirtualClassroomStateRequest_Learners struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Learners []string `protobuf:"bytes,1,rep,name=learners,proto3" json:"learners,omitempty"`
}

func (x *ModifyVirtualClassroomStateRequest_Learners) Reset() {
	*x = ModifyVirtualClassroomStateRequest_Learners{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVirtualClassroomStateRequest_Learners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVirtualClassroomStateRequest_Learners) ProtoMessage() {}

func (x *ModifyVirtualClassroomStateRequest_Learners) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVirtualClassroomStateRequest_Learners.ProtoReflect.Descriptor instead.
func (*ModifyVirtualClassroomStateRequest_Learners) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{8, 1}
}

func (x *ModifyVirtualClassroomStateRequest_Learners) GetLearners() []string {
	if x != nil {
		return x.Learners
	}
	return nil
}

type ModifyVirtualClassroomStateRequest_PollingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer    string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	IsCorrect bool   `protobuf:"varint,2,opt,name=is_correct,json=isCorrect,proto3" json:"is_correct,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ModifyVirtualClassroomStateRequest_PollingOption) Reset() {
	*x = ModifyVirtualClassroomStateRequest_PollingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVirtualClassroomStateRequest_PollingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVirtualClassroomStateRequest_PollingOption) ProtoMessage() {}

func (x *ModifyVirtualClassroomStateRequest_PollingOption) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVirtualClassroomStateRequest_PollingOption.ProtoReflect.Descriptor instead.
func (*ModifyVirtualClassroomStateRequest_PollingOption) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{8, 2}
}

func (x *ModifyVirtualClassroomStateRequest_PollingOption) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *ModifyVirtualClassroomStateRequest_PollingOption) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

func (x *ModifyVirtualClassroomStateRequest_PollingOption) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ModifyVirtualClassroomStateRequest_PollingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options  []*ModifyVirtualClassroomStateRequest_PollingOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	Question string                                              `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *ModifyVirtualClassroomStateRequest_PollingOptions) Reset() {
	*x = ModifyVirtualClassroomStateRequest_PollingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVirtualClassroomStateRequest_PollingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVirtualClassroomStateRequest_PollingOptions) ProtoMessage() {}

func (x *ModifyVirtualClassroomStateRequest_PollingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVirtualClassroomStateRequest_PollingOptions.ProtoReflect.Descriptor instead.
func (*ModifyVirtualClassroomStateRequest_PollingOptions) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{8, 3}
}

func (x *ModifyVirtualClassroomStateRequest_PollingOptions) GetOptions() []*ModifyVirtualClassroomStateRequest_PollingOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ModifyVirtualClassroomStateRequest_PollingOptions) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type ModifyVirtualClassroomStateRequest_PollingAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringArrayValue []string `protobuf:"bytes,1,rep,name=string_array_value,json=stringArrayValue,proto3" json:"string_array_value,omitempty"`
}

func (x *ModifyVirtualClassroomStateRequest_PollingAnswer) Reset() {
	*x = ModifyVirtualClassroomStateRequest_PollingAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVirtualClassroomStateRequest_PollingAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVirtualClassroomStateRequest_PollingAnswer) ProtoMessage() {}

func (x *ModifyVirtualClassroomStateRequest_PollingAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVirtualClassroomStateRequest_PollingAnswer.ProtoReflect.Descriptor instead.
func (*ModifyVirtualClassroomStateRequest_PollingAnswer) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{8, 4}
}

func (x *ModifyVirtualClassroomStateRequest_PollingAnswer) GetStringArrayValue() []string {
	if x != nil {
		return x.StringArrayValue
	}
	return nil
}

type ModifyVirtualClassroomStateRequest_Spotlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsSpotlight bool   `protobuf:"varint,2,opt,name=is_spotlight,json=isSpotlight,proto3" json:"is_spotlight,omitempty"`
}

func (x *ModifyVirtualClassroomStateRequest_Spotlight) Reset() {
	*x = ModifyVirtualClassroomStateRequest_Spotlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVirtualClassroomStateRequest_Spotlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVirtualClassroomStateRequest_Spotlight) ProtoMessage() {}

func (x *ModifyVirtualClassroomStateRequest_Spotlight) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVirtualClassroomStateRequest_Spotlight.ProtoReflect.Descriptor instead.
func (*ModifyVirtualClassroomStateRequest_Spotlight) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{8, 5}
}

func (x *ModifyVirtualClassroomStateRequest_Spotlight) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ModifyVirtualClassroomStateRequest_Spotlight) GetIsSpotlight() bool {
	if x != nil {
		return x.IsSpotlight
	}
	return false
}

type ModifyVirtualClassroomStateRequest_WhiteboardZoomState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdfScaleRatio float64 `protobuf:"fixed64,1,opt,name=pdf_scale_ratio,json=pdfScaleRatio,proto3" json:"pdf_scale_ratio,omitempty"`
	CenterX       float64 `protobuf:"fixed64,2,opt,name=center_x,json=centerX,proto3" json:"center_x,omitempty"`
	CenterY       float64 `protobuf:"fixed64,3,opt,name=center_y,json=centerY,proto3" json:"center_y,omitempty"`
	PdfWidth      float64 `protobuf:"fixed64,4,opt,name=pdf_width,json=pdfWidth,proto3" json:"pdf_width,omitempty"`
	PdfHeight     float64 `protobuf:"fixed64,5,opt,name=pdf_height,json=pdfHeight,proto3" json:"pdf_height,omitempty"`
}

func (x *ModifyVirtualClassroomStateRequest_WhiteboardZoomState) Reset() {
	*x = ModifyVirtualClassroomStateRequest_WhiteboardZoomState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVirtualClassroomStateRequest_WhiteboardZoomState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVirtualClassroomStateRequest_WhiteboardZoomState) ProtoMessage() {}

func (x *ModifyVirtualClassroomStateRequest_WhiteboardZoomState) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVirtualClassroomStateRequest_WhiteboardZoomState.ProtoReflect.Descriptor instead.
func (*ModifyVirtualClassroomStateRequest_WhiteboardZoomState) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{8, 6}
}

func (x *ModifyVirtualClassroomStateRequest_WhiteboardZoomState) GetPdfScaleRatio() float64 {
	if x != nil {
		return x.PdfScaleRatio
	}
	return 0
}

func (x *ModifyVirtualClassroomStateRequest_WhiteboardZoomState) GetCenterX() float64 {
	if x != nil {
		return x.CenterX
	}
	return 0
}

func (x *ModifyVirtualClassroomStateRequest_WhiteboardZoomState) GetCenterY() float64 {
	if x != nil {
		return x.CenterY
	}
	return 0
}

func (x *ModifyVirtualClassroomStateRequest_WhiteboardZoomState) GetPdfWidth() float64 {
	if x != nil {
		return x.PdfWidth
	}
	return 0
}

func (x *ModifyVirtualClassroomStateRequest_WhiteboardZoomState) GetPdfHeight() float64 {
	if x != nil {
		return x.PdfHeight
	}
	return 0
}

type StartRecordingRequest_TranscodingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height           int32  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Width            int32  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Bitrate          int32  `protobuf:"varint,3,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	Fps              int32  `protobuf:"varint,4,opt,name=fps,proto3" json:"fps,omitempty"`
	MixedVideoLayout int32  `protobuf:"varint,5,opt,name=mixed_video_layout,json=mixedVideoLayout,proto3" json:"mixed_video_layout,omitempty"`
	BackgroundColor  string `protobuf:"bytes,6,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
}

func (x *StartRecordingRequest_TranscodingConfig) Reset() {
	*x = StartRecordingRequest_TranscodingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecordingRequest_TranscodingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecordingRequest_TranscodingConfig) ProtoMessage() {}

func (x *StartRecordingRequest_TranscodingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecordingRequest_TranscodingConfig.ProtoReflect.Descriptor instead.
func (*StartRecordingRequest_TranscodingConfig) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{20, 0}
}

func (x *StartRecordingRequest_TranscodingConfig) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *StartRecordingRequest_TranscodingConfig) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *StartRecordingRequest_TranscodingConfig) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *StartRecordingRequest_TranscodingConfig) GetFps() int32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *StartRecordingRequest_TranscodingConfig) GetMixedVideoLayout() int32 {
	if x != nil {
		return x.MixedVideoLayout
	}
	return 0
}

func (x *StartRecordingRequest_TranscodingConfig) GetBackgroundColor() string {
	if x != nil {
		return x.BackgroundColor
	}
	return ""
}

type GetRecordingByLessonIDResponse_RecordingItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration  *durationpb.Duration   `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	FileSize  float32                `protobuf:"fixed32,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
}

func (x *GetRecordingByLessonIDResponse_RecordingItem) Reset() {
	*x = GetRecordingByLessonIDResponse_RecordingItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordingByLessonIDResponse_RecordingItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordingByLessonIDResponse_RecordingItem) ProtoMessage() {}

func (x *GetRecordingByLessonIDResponse_RecordingItem) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordingByLessonIDResponse_RecordingItem.ProtoReflect.Descriptor instead.
func (*GetRecordingByLessonIDResponse_RecordingItem) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GetRecordingByLessonIDResponse_RecordingItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetRecordingByLessonIDResponse_RecordingItem) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetRecordingByLessonIDResponse_RecordingItem) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *GetRecordingByLessonIDResponse_RecordingItem) GetFileSize() float32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type GetPrivateConversationIDsResponse_FailedPrivateConversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId       string   `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	ParticipantIds []string `protobuf:"bytes,2,rep,name=participant_ids,json=participantIds,proto3" json:"participant_ids,omitempty"`
	ErrorMsg       string   `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
}

func (x *GetPrivateConversationIDsResponse_FailedPrivateConversation) Reset() {
	*x = GetPrivateConversationIDsResponse_FailedPrivateConversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateConversationIDsResponse_FailedPrivateConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateConversationIDsResponse_FailedPrivateConversation) ProtoMessage() {}

func (x *GetPrivateConversationIDsResponse_FailedPrivateConversation) ProtoReflect() protoreflect.Message {
	mi := &file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateConversationIDsResponse_FailedPrivateConversation.ProtoReflect.Descriptor instead.
func (*GetPrivateConversationIDsResponse_FailedPrivateConversation) Descriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP(), []int{32, 0}
}

func (x *GetPrivateConversationIDsResponse_FailedPrivateConversation) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *GetPrivateConversationIDsResponse_FailedPrivateConversation) GetParticipantIds() []string {
	if x != nil {
		return x.ParticipantIds
	}
	return nil
}

func (x *GetPrivateConversationIDsResponse_FailedPrivateConversation) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

var File_virtualclassroom_v1_virtualclassroom_proto protoreflect.FileDescriptor

var file_virtualclassroom_v1_virtualclassroom_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d,
	0x0a, 0x1e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x91, 0x01,
	0x0a, 0x1f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x70, 0x70, 0x49,
	0x64, 0x22, 0x38, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xe5, 0x09, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x65, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x5b,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x52,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x52, 0x0a, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x09, 0x73, 0x70, 0x6f,
	0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x72, 0x0a, 0x15, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x7a, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x13, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xe7, 0x03, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x63, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x1a, 0xf3, 0x02,
	0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x73,
	0x5f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x55, 0x70, 0x52, 0x07, 0x68,
	0x61, 0x6e, 0x64, 0x73, 0x55, 0x70, 0x12, 0x55, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a,
	0x0e, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x0d, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x43,
	0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x63,
	0x68, 0x61, 0x74, 0x22, 0x36, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12,
	0x2e, 0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12,
	0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x22, 0x5a, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x92, 0x10, 0x0a, 0x15, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x1a, 0x88, 0x06, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x68, 0x0a,
	0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x70, 0x64, 0x66, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x44, 0x46, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x64, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x8f, 0x01, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x50, 0x44, 0x46, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x1a, 0x8f, 0x01, 0x0a, 0x0a, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x43, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x5a,
	0x0a, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x55, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x5d, 0x0a, 0x0a, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x60, 0x0a, 0x0d, 0x50, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x2d, 0x0a, 0x0e, 0x50,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x1a, 0x89, 0x03, 0x0a, 0x0e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x56, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x08, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x78, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x1a, 0x48, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x47, 0x0a, 0x09, 0x53, 0x70,
	0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x70,
	0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0xaf, 0x01, 0x0a, 0x13, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70,
	0x64, 0x66, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x64, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x58, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x59, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x64, 0x66,
	0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x64,
	0x66, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x64, 0x66, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x64, 0x66, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x57, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa7,
	0x14, 0x0a, 0x22, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x7a, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x61,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4e, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48,
	0x00, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x64, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x12, 0x26, 0x0a,
	0x0e, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x72, 0x61, 0x69, 0x73, 0x65, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x72, 0x61, 0x69,
	0x73, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x6f,
	0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64,
	0x4f, 0x66, 0x66, 0x12, 0x6f, 0x0a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73,
	0x48, 0x00, 0x52, 0x10, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x72, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x6d, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0b, 0x65,
	0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x7b,
	0x0a, 0x15, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x11, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0e, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x61, 0x0a, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x70, 0x6f,
	0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x29, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x25, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x81, 0x01, 0x0a, 0x15, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x7a, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x13, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x63, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x65, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61,
	0x6c, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x14, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c,
	0x12, 0x30, 0x0a, 0x13, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x11, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x1a, 0xf4, 0x02, 0x0a, 0x16, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x68, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x70, 0x64, 0x66, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x2e, 0x50, 0x44, 0x46, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x70, 0x64,
	0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x26, 0x0a, 0x08, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x73, 0x1a, 0x60, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x1a, 0x8d, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x3d, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x47, 0x0a, 0x09, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73,
	0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x1a, 0xaf, 0x01, 0x0a, 0x13,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x64, 0x66, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x64,
	0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x58, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x59, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x64, 0x66, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x64, 0x66, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x64, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x70, 0x64, 0x66, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x25, 0x0a, 0x23, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x34, 0x0a, 0x15, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc1, 0x02, 0x0a, 0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69,
	0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6d, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x67, 0x6f, 0x72, 0x61, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x6f,
	0x72, 0x61, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4e, 0x0a, 0x16, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x14, 0x45, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x6e, 0x64,
	0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x53, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54,
	0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4e, 0x0a, 0x10, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x11, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x97, 0x04, 0x0a, 0x15, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x69,
	0x64, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x55, 0x69, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x6b,
	0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0xc6, 0x01, 0x0a, 0x11, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x70, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x70, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69,
	0x78, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x22, 0x31, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22,
	0xb3, 0x03, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0xae, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69,
	0x6e, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x38, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x52, 0x0a, 0x14, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x17,
	0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x25, 0x55, 0x70, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22,
	0xc0, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2f, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x44, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x73, 0x22, 0xb4, 0x04, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x12, 0x7a, 0x0a, 0x10, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x43, 0x6f, 0x6e, 0x76, 0x12,
	0x98, 0x01, 0x0a, 0x1c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x1a,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x1a, 0x7e, 0x0a, 0x19, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x1a, 0x4d, 0x0a, 0x1f, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x94, 0x03, 0x0a, 0x1d, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x17,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x33, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x75, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xbc, 0x05, 0x0a, 0x1f, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x0e, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x76, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6c, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x0d, 0x45, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x29,
	0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x1b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x37, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38,
	0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x2a, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x09, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x12, 0x25, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x85, 0x04, 0x0a, 0x16, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x0e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x93, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x38, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e,
	0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9e, 0x02, 0x0a, 0x1b, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2d, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x12, 0x35, 0x2e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63,
	0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_virtualclassroom_v1_virtualclassroom_proto_rawDescOnce sync.Once
	file_virtualclassroom_v1_virtualclassroom_proto_rawDescData = file_virtualclassroom_v1_virtualclassroom_proto_rawDesc
)

func file_virtualclassroom_v1_virtualclassroom_proto_rawDescGZIP() []byte {
	file_virtualclassroom_v1_virtualclassroom_proto_rawDescOnce.Do(func() {
		file_virtualclassroom_v1_virtualclassroom_proto_rawDescData = protoimpl.X.CompressGZIP(file_virtualclassroom_v1_virtualclassroom_proto_rawDescData)
	})
	return file_virtualclassroom_v1_virtualclassroom_proto_rawDescData
}

var file_virtualclassroom_v1_virtualclassroom_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_virtualclassroom_v1_virtualclassroom_proto_goTypes = []interface{}{
	(*RetrieveWhiteboardTokenRequest)(nil),                              // 0: virtualclassroom.v1.RetrieveWhiteboardTokenRequest
	(*RetrieveWhiteboardTokenResponse)(nil),                             // 1: virtualclassroom.v1.RetrieveWhiteboardTokenResponse
	(*GetLiveLessonStateRequest)(nil),                                   // 2: virtualclassroom.v1.GetLiveLessonStateRequest
	(*GetLiveLessonStateResponse)(nil),                                  // 3: virtualclassroom.v1.GetLiveLessonStateResponse
	(*GetUserInformationRequest)(nil),                                   // 4: virtualclassroom.v1.GetUserInformationRequest
	(*UserInfo)(nil),                                                    // 5: virtualclassroom.v1.UserInfo
	(*GetUserInformationResponse)(nil),                                  // 6: virtualclassroom.v1.GetUserInformationResponse
	(*VirtualClassroomState)(nil),                                       // 7: virtualclassroom.v1.VirtualClassroomState
	(*ModifyVirtualClassroomStateRequest)(nil),                          // 8: virtualclassroom.v1.ModifyVirtualClassroomStateRequest
	(*ModifyVirtualClassroomStateResponse)(nil),                         // 9: virtualclassroom.v1.ModifyVirtualClassroomStateResponse
	(*JoinLiveLessonRequest)(nil),                                       // 10: virtualclassroom.v1.JoinLiveLessonRequest
	(*JoinLiveLessonResponse)(nil),                                      // 11: virtualclassroom.v1.JoinLiveLessonResponse
	(*LeaveLiveLessonRequest)(nil),                                      // 12: virtualclassroom.v1.LeaveLiveLessonRequest
	(*LeaveLiveLessonResponse)(nil),                                     // 13: virtualclassroom.v1.LeaveLiveLessonResponse
	(*EndLiveLessonRequest)(nil),                                        // 14: virtualclassroom.v1.EndLiveLessonRequest
	(*EndLiveLessonResponse)(nil),                                       // 15: virtualclassroom.v1.EndLiveLessonResponse
	(*PreparePublishRequest)(nil),                                       // 16: virtualclassroom.v1.PreparePublishRequest
	(*PreparePublishResponse)(nil),                                      // 17: virtualclassroom.v1.PreparePublishResponse
	(*UnpublishRequest)(nil),                                            // 18: virtualclassroom.v1.UnpublishRequest
	(*UnpublishResponse)(nil),                                           // 19: virtualclassroom.v1.UnpublishResponse
	(*StartRecordingRequest)(nil),                                       // 20: virtualclassroom.v1.StartRecordingRequest
	(*StartRecordingResponse)(nil),                                      // 21: virtualclassroom.v1.StartRecordingResponse
	(*GetRecordingByLessonIDRequest)(nil),                               // 22: virtualclassroom.v1.GetRecordingByLessonIDRequest
	(*GetRecordingByLessonIDResponse)(nil),                              // 23: virtualclassroom.v1.GetRecordingByLessonIDResponse
	(*GetRecordingDownloadLinkByIDRequest)(nil),                         // 24: virtualclassroom.v1.GetRecordingDownloadLinkByIDRequest
	(*GetRecordingDownloadLinkByIDResponse)(nil),                        // 25: virtualclassroom.v1.GetRecordingDownloadLinkByIDResponse
	(*StopRecordingRequest)(nil),                                        // 26: virtualclassroom.v1.StopRecordingRequest
	(*StopRecordingResponse)(nil),                                       // 27: virtualclassroom.v1.StopRecordingResponse
	(*UpcomingLiveLessonNotificationRequest)(nil),                       // 28: virtualclassroom.v1.UpcomingLiveLessonNotificationRequest
	(*GetConversationIDRequest)(nil),                                    // 29: virtualclassroom.v1.GetConversationIDRequest
	(*GetConversationIDResponse)(nil),                                   // 30: virtualclassroom.v1.GetConversationIDResponse
	(*GetPrivateConversationIDsRequest)(nil),                            // 31: virtualclassroom.v1.GetPrivateConversationIDsRequest
	(*GetPrivateConversationIDsResponse)(nil),                           // 32: virtualclassroom.v1.GetPrivateConversationIDsResponse
	(*GetLiveLessonStateResponse_UsersState)(nil),                       // 33: virtualclassroom.v1.GetLiveLessonStateResponse.UsersState
	(*GetLiveLessonStateResponse_UsersState_LearnerState)(nil),          // 34: virtualclassroom.v1.GetLiveLessonStateResponse.UsersState.LearnerState
	(*VirtualClassroomState_CurrentMaterial)(nil),                       // 35: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial
	(*VirtualClassroomState_HandsUp)(nil),                               // 36: virtualclassroom.v1.VirtualClassroomState.HandsUp
	(*VirtualClassroomState_Annotation)(nil),                            // 37: virtualclassroom.v1.VirtualClassroomState.Annotation
	(*VirtualClassroomState_PollingOption)(nil),                         // 38: virtualclassroom.v1.VirtualClassroomState.PollingOption
	(*VirtualClassroomState_PollingSharing)(nil),                        // 39: virtualclassroom.v1.VirtualClassroomState.PollingSharing
	(*VirtualClassroomState_CurrentPolling)(nil),                        // 40: virtualclassroom.v1.VirtualClassroomState.CurrentPolling
	(*VirtualClassroomState_PollingAnswer)(nil),                         // 41: virtualclassroom.v1.VirtualClassroomState.PollingAnswer
	(*VirtualClassroomState_Recording)(nil),                             // 42: virtualclassroom.v1.VirtualClassroomState.Recording
	(*VirtualClassroomState_Spotlight)(nil),                             // 43: virtualclassroom.v1.VirtualClassroomState.Spotlight
	(*VirtualClassroomState_WhiteboardZoomState)(nil),                   // 44: virtualclassroom.v1.VirtualClassroomState.WhiteboardZoomState
	(*VirtualClassroomState_Chat)(nil),                                  // 45: virtualclassroom.v1.VirtualClassroomState.Chat
	(*VirtualClassroomState_CurrentMaterial_VideoState)(nil),            // 46: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.VideoState
	(*VirtualClassroomState_CurrentMaterial_PDFState)(nil),              // 47: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.PDFState
	(*VirtualClassroomState_CurrentMaterial_AudioState)(nil),            // 48: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.AudioState
	(*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand)(nil),   // 49: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.CurrentMaterialCommand
	(*ModifyVirtualClassroomStateRequest_Learners)(nil),                 // 50: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.Learners
	(*ModifyVirtualClassroomStateRequest_PollingOption)(nil),            // 51: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.PollingOption
	(*ModifyVirtualClassroomStateRequest_PollingOptions)(nil),           // 52: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.PollingOptions
	(*ModifyVirtualClassroomStateRequest_PollingAnswer)(nil),            // 53: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.PollingAnswer
	(*ModifyVirtualClassroomStateRequest_Spotlight)(nil),                // 54: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.Spotlight
	(*ModifyVirtualClassroomStateRequest_WhiteboardZoomState)(nil),      // 55: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.WhiteboardZoomState
	(*StartRecordingRequest_TranscodingConfig)(nil),                     // 56: virtualclassroom.v1.StartRecordingRequest.TranscodingConfig
	(*GetRecordingByLessonIDResponse_RecordingItem)(nil),                // 57: virtualclassroom.v1.GetRecordingByLessonIDResponse.RecordingItem
	(*GetPrivateConversationIDsResponse_FailedPrivateConversation)(nil), // 58: virtualclassroom.v1.GetPrivateConversationIDsResponse.FailedPrivateConversation
	nil,                             // 59: virtualclassroom.v1.GetPrivateConversationIDsResponse.ParticipantConversationMapEntry
	(*timestamppb.Timestamp)(nil),   // 60: google.protobuf.Timestamp
	(PrepareToPublishStatus)(0),     // 61: virtualclassroom.v1.PrepareToPublishStatus
	(UnpublishStatus)(0),            // 62: virtualclassroom.v1.UnpublishStatus
	(*v1.Paging)(nil),               // 63: common.v1.Paging
	(*durationpb.Duration)(nil),     // 64: google.protobuf.Duration
	(LiveLessonConversationType)(0), // 65: virtualclassroom.v1.LiveLessonConversationType
	(*Media)(nil),                   // 66: virtualclassroom.v1.Media
	(PollingState)(0),               // 67: virtualclassroom.v1.PollingState
	(PlayerState)(0),                // 68: virtualclassroom.v1.PlayerState
}
var file_virtualclassroom_v1_virtualclassroom_proto_depIdxs = []int32{
	35, // 0: virtualclassroom.v1.GetLiveLessonStateResponse.current_material:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial
	33, // 1: virtualclassroom.v1.GetLiveLessonStateResponse.users_state:type_name -> virtualclassroom.v1.GetLiveLessonStateResponse.UsersState
	60, // 2: virtualclassroom.v1.GetLiveLessonStateResponse.current_time:type_name -> google.protobuf.Timestamp
	40, // 3: virtualclassroom.v1.GetLiveLessonStateResponse.current_polling:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentPolling
	42, // 4: virtualclassroom.v1.GetLiveLessonStateResponse.recording:type_name -> virtualclassroom.v1.VirtualClassroomState.Recording
	43, // 5: virtualclassroom.v1.GetLiveLessonStateResponse.spotlight:type_name -> virtualclassroom.v1.VirtualClassroomState.Spotlight
	44, // 6: virtualclassroom.v1.GetLiveLessonStateResponse.whiteboard_zoom_state:type_name -> virtualclassroom.v1.VirtualClassroomState.WhiteboardZoomState
	60, // 7: virtualclassroom.v1.GetLiveLessonStateResponse.session_time:type_name -> google.protobuf.Timestamp
	5,  // 8: virtualclassroom.v1.GetUserInformationResponse.user_infos:type_name -> virtualclassroom.v1.UserInfo
	49, // 9: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.share_a_material:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.CurrentMaterialCommand
	50, // 10: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.annotation_enable:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.Learners
	50, // 11: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.annotation_disable:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.Learners
	52, // 12: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.start_polling:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.PollingOptions
	53, // 13: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.submit_polling_answer:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.PollingAnswer
	54, // 14: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.spotlight:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.Spotlight
	55, // 15: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.whiteboard_zoom_state:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.WhiteboardZoomState
	50, // 16: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.chat_enable:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.Learners
	50, // 17: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.chat_disable:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.Learners
	61, // 18: virtualclassroom.v1.PreparePublishResponse.status:type_name -> virtualclassroom.v1.PrepareToPublishStatus
	62, // 19: virtualclassroom.v1.UnpublishResponse.status:type_name -> virtualclassroom.v1.UnpublishStatus
	56, // 20: virtualclassroom.v1.StartRecordingRequest.transcoding_config:type_name -> virtualclassroom.v1.StartRecordingRequest.TranscodingConfig
	63, // 21: virtualclassroom.v1.GetRecordingByLessonIDRequest.paging:type_name -> common.v1.Paging
	57, // 22: virtualclassroom.v1.GetRecordingByLessonIDResponse.items:type_name -> virtualclassroom.v1.GetRecordingByLessonIDResponse.RecordingItem
	63, // 23: virtualclassroom.v1.GetRecordingByLessonIDResponse.next_page:type_name -> common.v1.Paging
	63, // 24: virtualclassroom.v1.GetRecordingByLessonIDResponse.previous_page:type_name -> common.v1.Paging
	64, // 25: virtualclassroom.v1.GetRecordingDownloadLinkByIDRequest.expiry:type_name -> google.protobuf.Duration
	65, // 26: virtualclassroom.v1.GetConversationIDRequest.conversation_type:type_name -> virtualclassroom.v1.LiveLessonConversationType
	58, // 27: virtualclassroom.v1.GetPrivateConversationIDsResponse.failed_priv_conv:type_name -> virtualclassroom.v1.GetPrivateConversationIDsResponse.FailedPrivateConversation
	59, // 28: virtualclassroom.v1.GetPrivateConversationIDsResponse.participant_conversation_map:type_name -> virtualclassroom.v1.GetPrivateConversationIDsResponse.ParticipantConversationMapEntry
	34, // 29: virtualclassroom.v1.GetLiveLessonStateResponse.UsersState.learners:type_name -> virtualclassroom.v1.GetLiveLessonStateResponse.UsersState.LearnerState
	36, // 30: virtualclassroom.v1.GetLiveLessonStateResponse.UsersState.LearnerState.hands_up:type_name -> virtualclassroom.v1.VirtualClassroomState.HandsUp
	37, // 31: virtualclassroom.v1.GetLiveLessonStateResponse.UsersState.LearnerState.annotation:type_name -> virtualclassroom.v1.VirtualClassroomState.Annotation
	41, // 32: virtualclassroom.v1.GetLiveLessonStateResponse.UsersState.LearnerState.polling_answer:type_name -> virtualclassroom.v1.VirtualClassroomState.PollingAnswer
	45, // 33: virtualclassroom.v1.GetLiveLessonStateResponse.UsersState.LearnerState.chat:type_name -> virtualclassroom.v1.VirtualClassroomState.Chat
	60, // 34: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.updated_at:type_name -> google.protobuf.Timestamp
	46, // 35: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.video_state:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.VideoState
	47, // 36: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.pdf_state:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.PDFState
	48, // 37: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.audio_state:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.AudioState
	66, // 38: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.data:type_name -> virtualclassroom.v1.Media
	60, // 39: virtualclassroom.v1.VirtualClassroomState.HandsUp.updated_at:type_name -> google.protobuf.Timestamp
	60, // 40: virtualclassroom.v1.VirtualClassroomState.Annotation.updated_at:type_name -> google.protobuf.Timestamp
	38, // 41: virtualclassroom.v1.VirtualClassroomState.CurrentPolling.options:type_name -> virtualclassroom.v1.VirtualClassroomState.PollingOption
	67, // 42: virtualclassroom.v1.VirtualClassroomState.CurrentPolling.status:type_name -> virtualclassroom.v1.PollingState
	60, // 43: virtualclassroom.v1.VirtualClassroomState.CurrentPolling.created_at:type_name -> google.protobuf.Timestamp
	60, // 44: virtualclassroom.v1.VirtualClassroomState.CurrentPolling.stopped_at:type_name -> google.protobuf.Timestamp
	39, // 45: virtualclassroom.v1.VirtualClassroomState.CurrentPolling.is_shared:type_name -> virtualclassroom.v1.VirtualClassroomState.PollingSharing
	60, // 46: virtualclassroom.v1.VirtualClassroomState.PollingAnswer.updated_at:type_name -> google.protobuf.Timestamp
	60, // 47: virtualclassroom.v1.VirtualClassroomState.Chat.updated_at:type_name -> google.protobuf.Timestamp
	64, // 48: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.VideoState.current_time:type_name -> google.protobuf.Duration
	68, // 49: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.VideoState.player_state:type_name -> virtualclassroom.v1.PlayerState
	64, // 50: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.AudioState.current_time:type_name -> google.protobuf.Duration
	68, // 51: virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.AudioState.player_state:type_name -> virtualclassroom.v1.PlayerState
	46, // 52: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.CurrentMaterialCommand.video_state:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.VideoState
	47, // 53: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.CurrentMaterialCommand.pdf_state:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.PDFState
	48, // 54: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.CurrentMaterialCommand.audio_state:type_name -> virtualclassroom.v1.VirtualClassroomState.CurrentMaterial.AudioState
	51, // 55: virtualclassroom.v1.ModifyVirtualClassroomStateRequest.PollingOptions.options:type_name -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest.PollingOption
	60, // 56: virtualclassroom.v1.GetRecordingByLessonIDResponse.RecordingItem.start_time:type_name -> google.protobuf.Timestamp
	64, // 57: virtualclassroom.v1.GetRecordingByLessonIDResponse.RecordingItem.duration:type_name -> google.protobuf.Duration
	0,  // 58: virtualclassroom.v1.VirtualClassroomReaderService.RetrieveWhiteboardToken:input_type -> virtualclassroom.v1.RetrieveWhiteboardTokenRequest
	2,  // 59: virtualclassroom.v1.VirtualClassroomReaderService.GetLiveLessonState:input_type -> virtualclassroom.v1.GetLiveLessonStateRequest
	4,  // 60: virtualclassroom.v1.VirtualClassroomReaderService.GetUserInformation:input_type -> virtualclassroom.v1.GetUserInformationRequest
	10, // 61: virtualclassroom.v1.VirtualClassroomModifierService.JoinLiveLesson:input_type -> virtualclassroom.v1.JoinLiveLessonRequest
	12, // 62: virtualclassroom.v1.VirtualClassroomModifierService.LeaveLiveLesson:input_type -> virtualclassroom.v1.LeaveLiveLessonRequest
	14, // 63: virtualclassroom.v1.VirtualClassroomModifierService.EndLiveLesson:input_type -> virtualclassroom.v1.EndLiveLessonRequest
	8,  // 64: virtualclassroom.v1.VirtualClassroomModifierService.ModifyVirtualClassroomState:input_type -> virtualclassroom.v1.ModifyVirtualClassroomStateRequest
	16, // 65: virtualclassroom.v1.VirtualClassroomModifierService.PreparePublish:input_type -> virtualclassroom.v1.PreparePublishRequest
	18, // 66: virtualclassroom.v1.VirtualClassroomModifierService.Unpublish:input_type -> virtualclassroom.v1.UnpublishRequest
	20, // 67: virtualclassroom.v1.LessonRecordingService.StartRecording:input_type -> virtualclassroom.v1.StartRecordingRequest
	26, // 68: virtualclassroom.v1.LessonRecordingService.StopRecording:input_type -> virtualclassroom.v1.StopRecordingRequest
	22, // 69: virtualclassroom.v1.LessonRecordingService.GetRecordingByLessonID:input_type -> virtualclassroom.v1.GetRecordingByLessonIDRequest
	24, // 70: virtualclassroom.v1.LessonRecordingService.GetRecordingDownloadLinkByID:input_type -> virtualclassroom.v1.GetRecordingDownloadLinkByIDRequest
	29, // 71: virtualclassroom.v1.VirtualClassroomChatService.GetConversationID:input_type -> virtualclassroom.v1.GetConversationIDRequest
	31, // 72: virtualclassroom.v1.VirtualClassroomChatService.GetPrivateConversationIDs:input_type -> virtualclassroom.v1.GetPrivateConversationIDsRequest
	1,  // 73: virtualclassroom.v1.VirtualClassroomReaderService.RetrieveWhiteboardToken:output_type -> virtualclassroom.v1.RetrieveWhiteboardTokenResponse
	3,  // 74: virtualclassroom.v1.VirtualClassroomReaderService.GetLiveLessonState:output_type -> virtualclassroom.v1.GetLiveLessonStateResponse
	6,  // 75: virtualclassroom.v1.VirtualClassroomReaderService.GetUserInformation:output_type -> virtualclassroom.v1.GetUserInformationResponse
	11, // 76: virtualclassroom.v1.VirtualClassroomModifierService.JoinLiveLesson:output_type -> virtualclassroom.v1.JoinLiveLessonResponse
	13, // 77: virtualclassroom.v1.VirtualClassroomModifierService.LeaveLiveLesson:output_type -> virtualclassroom.v1.LeaveLiveLessonResponse
	15, // 78: virtualclassroom.v1.VirtualClassroomModifierService.EndLiveLesson:output_type -> virtualclassroom.v1.EndLiveLessonResponse
	9,  // 79: virtualclassroom.v1.VirtualClassroomModifierService.ModifyVirtualClassroomState:output_type -> virtualclassroom.v1.ModifyVirtualClassroomStateResponse
	17, // 80: virtualclassroom.v1.VirtualClassroomModifierService.PreparePublish:output_type -> virtualclassroom.v1.PreparePublishResponse
	19, // 81: virtualclassroom.v1.VirtualClassroomModifierService.Unpublish:output_type -> virtualclassroom.v1.UnpublishResponse
	21, // 82: virtualclassroom.v1.LessonRecordingService.StartRecording:output_type -> virtualclassroom.v1.StartRecordingResponse
	27, // 83: virtualclassroom.v1.LessonRecordingService.StopRecording:output_type -> virtualclassroom.v1.StopRecordingResponse
	23, // 84: virtualclassroom.v1.LessonRecordingService.GetRecordingByLessonID:output_type -> virtualclassroom.v1.GetRecordingByLessonIDResponse
	25, // 85: virtualclassroom.v1.LessonRecordingService.GetRecordingDownloadLinkByID:output_type -> virtualclassroom.v1.GetRecordingDownloadLinkByIDResponse
	30, // 86: virtualclassroom.v1.VirtualClassroomChatService.GetConversationID:output_type -> virtualclassroom.v1.GetConversationIDResponse
	32, // 87: virtualclassroom.v1.VirtualClassroomChatService.GetPrivateConversationIDs:output_type -> virtualclassroom.v1.GetPrivateConversationIDsResponse
	73, // [73:88] is the sub-list for method output_type
	58, // [58:73] is the sub-list for method input_type
	58, // [58:58] is the sub-list for extension type_name
	58, // [58:58] is the sub-list for extension extendee
	0,  // [0:58] is the sub-list for field type_name
}

func init() { file_virtualclassroom_v1_virtualclassroom_proto_init() }
func file_virtualclassroom_v1_virtualclassroom_proto_init() {
	if File_virtualclassroom_v1_virtualclassroom_proto != nil {
		return
	}
	file_virtualclassroom_v1_enums_proto_init()
	file_virtualclassroom_v1_media_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveWhiteboardTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveWhiteboardTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveLessonStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveLessonStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVirtualClassroomStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVirtualClassroomStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinLiveLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinLiveLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveLiveLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveLiveLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndLiveLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndLiveLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreparePublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreparePublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecordingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingByLessonIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingByLessonIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingDownloadLinkByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingDownloadLinkByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRecordingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpcomingLiveLessonNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrivateConversationIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrivateConversationIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveLessonStateResponse_UsersState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveLessonStateResponse_UsersState_LearnerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_CurrentMaterial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_HandsUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_Annotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_PollingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_PollingSharing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_CurrentPolling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_PollingAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_Recording); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_Spotlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_WhiteboardZoomState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_Chat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_CurrentMaterial_VideoState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_CurrentMaterial_PDFState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualClassroomState_CurrentMaterial_AudioState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVirtualClassroomStateRequest_Learners); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVirtualClassroomStateRequest_PollingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVirtualClassroomStateRequest_PollingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVirtualClassroomStateRequest_PollingAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVirtualClassroomStateRequest_Spotlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVirtualClassroomStateRequest_WhiteboardZoomState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecordingRequest_TranscodingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordingByLessonIDResponse_RecordingItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrivateConversationIDsResponse_FailedPrivateConversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ModifyVirtualClassroomStateRequest_ShareAMaterial)(nil),
		(*ModifyVirtualClassroomStateRequest_StopSharingMaterial)(nil),
		(*ModifyVirtualClassroomStateRequest_FoldHandAll)(nil),
		(*ModifyVirtualClassroomStateRequest_FoldUserHand)(nil),
		(*ModifyVirtualClassroomStateRequest_RaiseHand)(nil),
		(*ModifyVirtualClassroomStateRequest_HandOff)(nil),
		(*ModifyVirtualClassroomStateRequest_AnnotationEnable)(nil),
		(*ModifyVirtualClassroomStateRequest_AnnotationDisable)(nil),
		(*ModifyVirtualClassroomStateRequest_StartPolling)(nil),
		(*ModifyVirtualClassroomStateRequest_StopPolling)(nil),
		(*ModifyVirtualClassroomStateRequest_EndPolling)(nil),
		(*ModifyVirtualClassroomStateRequest_SubmitPollingAnswer)(nil),
		(*ModifyVirtualClassroomStateRequest_RequestRecording)(nil),
		(*ModifyVirtualClassroomStateRequest_StopRecording)(nil),
		(*ModifyVirtualClassroomStateRequest_Spotlight_)(nil),
		(*ModifyVirtualClassroomStateRequest_StartRecording)(nil),
		(*ModifyVirtualClassroomStateRequest_SharePolling)(nil),
		(*ModifyVirtualClassroomStateRequest_WhiteboardZoomState_)(nil),
		(*ModifyVirtualClassroomStateRequest_ChatEnable)(nil),
		(*ModifyVirtualClassroomStateRequest_ChatDisable)(nil),
		(*ModifyVirtualClassroomStateRequest_AnnotationDisableAll)(nil),
		(*ModifyVirtualClassroomStateRequest_UpsertSessionTime)(nil),
	}
	file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*VirtualClassroomState_CurrentMaterial_VideoState_)(nil),
		(*VirtualClassroomState_CurrentMaterial_PdfState)(nil),
		(*VirtualClassroomState_CurrentMaterial_AudioState_)(nil),
	}
	file_virtualclassroom_v1_virtualclassroom_proto_msgTypes[49].OneofWrappers = []interface{}{
		(*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_VideoState)(nil),
		(*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_PdfState)(nil),
		(*ModifyVirtualClassroomStateRequest_CurrentMaterialCommand_AudioState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_virtualclassroom_v1_virtualclassroom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_virtualclassroom_v1_virtualclassroom_proto_goTypes,
		DependencyIndexes: file_virtualclassroom_v1_virtualclassroom_proto_depIdxs,
		MessageInfos:      file_virtualclassroom_v1_virtualclassroom_proto_msgTypes,
	}.Build()
	File_virtualclassroom_v1_virtualclassroom_proto = out.File
	file_virtualclassroom_v1_virtualclassroom_proto_rawDesc = nil
	file_virtualclassroom_v1_virtualclassroom_proto_goTypes = nil
	file_virtualclassroom_v1_virtualclassroom_proto_depIdxs = nil
}
