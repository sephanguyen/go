// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: virtualclassroom/v1/enums.proto

package vpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PollingState int32

const (
	PollingState_POLLING_STATE_STARTED PollingState = 0
	PollingState_POLLING_STATE_STOPPED PollingState = 1
	PollingState_POLLING_STATE_ENDED   PollingState = 2
)

// Enum value maps for PollingState.
var (
	PollingState_name = map[int32]string{
		0: "POLLING_STATE_STARTED",
		1: "POLLING_STATE_STOPPED",
		2: "POLLING_STATE_ENDED",
	}
	PollingState_value = map[string]int32{
		"POLLING_STATE_STARTED": 0,
		"POLLING_STATE_STOPPED": 1,
		"POLLING_STATE_ENDED":   2,
	}
)

func (x PollingState) Enum() *PollingState {
	p := new(PollingState)
	*p = x
	return p
}

func (x PollingState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PollingState) Descriptor() protoreflect.EnumDescriptor {
	return file_virtualclassroom_v1_enums_proto_enumTypes[0].Descriptor()
}

func (PollingState) Type() protoreflect.EnumType {
	return &file_virtualclassroom_v1_enums_proto_enumTypes[0]
}

func (x PollingState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PollingState.Descriptor instead.
func (PollingState) EnumDescriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_enums_proto_rawDescGZIP(), []int{0}
}

type PlayerState int32

const (
	PlayerState_PLAYER_STATE_PAUSE   PlayerState = 0
	PlayerState_PLAYER_STATE_PLAYING PlayerState = 1
	PlayerState_PLAYER_STATE_ENDED   PlayerState = 2
)

// Enum value maps for PlayerState.
var (
	PlayerState_name = map[int32]string{
		0: "PLAYER_STATE_PAUSE",
		1: "PLAYER_STATE_PLAYING",
		2: "PLAYER_STATE_ENDED",
	}
	PlayerState_value = map[string]int32{
		"PLAYER_STATE_PAUSE":   0,
		"PLAYER_STATE_PLAYING": 1,
		"PLAYER_STATE_ENDED":   2,
	}
)

func (x PlayerState) Enum() *PlayerState {
	p := new(PlayerState)
	*p = x
	return p
}

func (x PlayerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerState) Descriptor() protoreflect.EnumDescriptor {
	return file_virtualclassroom_v1_enums_proto_enumTypes[1].Descriptor()
}

func (PlayerState) Type() protoreflect.EnumType {
	return &file_virtualclassroom_v1_enums_proto_enumTypes[1]
}

func (x PlayerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerState.Descriptor instead.
func (PlayerState) EnumDescriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_enums_proto_rawDescGZIP(), []int{1}
}

type MediaType int32

const (
	MediaType_MEDIA_TYPE_NONE            MediaType = 0
	MediaType_MEDIA_TYPE_VIDEO           MediaType = 1
	MediaType_MEDIA_TYPE_IMAGE           MediaType = 2
	MediaType_MEDIA_TYPE_PDF             MediaType = 3
	MediaType_MEDIA_TYPE_AUDIO           MediaType = 4
	MediaType_MEDIA_TYPE_RECORDING_VIDEO MediaType = 5
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MEDIA_TYPE_NONE",
		1: "MEDIA_TYPE_VIDEO",
		2: "MEDIA_TYPE_IMAGE",
		3: "MEDIA_TYPE_PDF",
		4: "MEDIA_TYPE_AUDIO",
		5: "MEDIA_TYPE_RECORDING_VIDEO",
	}
	MediaType_value = map[string]int32{
		"MEDIA_TYPE_NONE":            0,
		"MEDIA_TYPE_VIDEO":           1,
		"MEDIA_TYPE_IMAGE":           2,
		"MEDIA_TYPE_PDF":             3,
		"MEDIA_TYPE_AUDIO":           4,
		"MEDIA_TYPE_RECORDING_VIDEO": 5,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_virtualclassroom_v1_enums_proto_enumTypes[2].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_virtualclassroom_v1_enums_proto_enumTypes[2]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_enums_proto_rawDescGZIP(), []int{2}
}

type PrepareToPublishStatus int32

const (
	PrepareToPublishStatus_PREPARE_TO_PUBLISH_STATUS_NONE                       PrepareToPublishStatus = 0
	PrepareToPublishStatus_PREPARE_TO_PUBLISH_STATUS_REACHED_MAX_UPSTREAM_LIMIT PrepareToPublishStatus = 1
	PrepareToPublishStatus_PREPARE_TO_PUBLISH_STATUS_PREPARED_BEFORE            PrepareToPublishStatus = 2
)

// Enum value maps for PrepareToPublishStatus.
var (
	PrepareToPublishStatus_name = map[int32]string{
		0: "PREPARE_TO_PUBLISH_STATUS_NONE",
		1: "PREPARE_TO_PUBLISH_STATUS_REACHED_MAX_UPSTREAM_LIMIT",
		2: "PREPARE_TO_PUBLISH_STATUS_PREPARED_BEFORE",
	}
	PrepareToPublishStatus_value = map[string]int32{
		"PREPARE_TO_PUBLISH_STATUS_NONE":                       0,
		"PREPARE_TO_PUBLISH_STATUS_REACHED_MAX_UPSTREAM_LIMIT": 1,
		"PREPARE_TO_PUBLISH_STATUS_PREPARED_BEFORE":            2,
	}
)

func (x PrepareToPublishStatus) Enum() *PrepareToPublishStatus {
	p := new(PrepareToPublishStatus)
	*p = x
	return p
}

func (x PrepareToPublishStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrepareToPublishStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_virtualclassroom_v1_enums_proto_enumTypes[3].Descriptor()
}

func (PrepareToPublishStatus) Type() protoreflect.EnumType {
	return &file_virtualclassroom_v1_enums_proto_enumTypes[3]
}

func (x PrepareToPublishStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrepareToPublishStatus.Descriptor instead.
func (PrepareToPublishStatus) EnumDescriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_enums_proto_rawDescGZIP(), []int{3}
}

type UnpublishStatus int32

const (
	UnpublishStatus_UNPUBLISH_STATUS_UNPUBLISHED_NONE   UnpublishStatus = 0
	UnpublishStatus_UNPUBLISH_STATUS_UNPUBLISHED_BEFORE UnpublishStatus = 1
)

// Enum value maps for UnpublishStatus.
var (
	UnpublishStatus_name = map[int32]string{
		0: "UNPUBLISH_STATUS_UNPUBLISHED_NONE",
		1: "UNPUBLISH_STATUS_UNPUBLISHED_BEFORE",
	}
	UnpublishStatus_value = map[string]int32{
		"UNPUBLISH_STATUS_UNPUBLISHED_NONE":   0,
		"UNPUBLISH_STATUS_UNPUBLISHED_BEFORE": 1,
	}
)

func (x UnpublishStatus) Enum() *UnpublishStatus {
	p := new(UnpublishStatus)
	*p = x
	return p
}

func (x UnpublishStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnpublishStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_virtualclassroom_v1_enums_proto_enumTypes[4].Descriptor()
}

func (UnpublishStatus) Type() protoreflect.EnumType {
	return &file_virtualclassroom_v1_enums_proto_enumTypes[4]
}

func (x UnpublishStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnpublishStatus.Descriptor instead.
func (UnpublishStatus) EnumDescriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_enums_proto_rawDescGZIP(), []int{4}
}

type LessonTimeCompare int32

const (
	LessonTimeCompare_LESSON_TIME_COMPARE_FUTURE           LessonTimeCompare = 0
	LessonTimeCompare_LESSON_TIME_COMPARE_FUTURE_AND_EQUAL LessonTimeCompare = 1
	LessonTimeCompare_LESSON_TIME_COMPARE_PAST             LessonTimeCompare = 2
	LessonTimeCompare_LESSON_TIME_COMPARE_PAST_AND_EQUAL   LessonTimeCompare = 3
)

// Enum value maps for LessonTimeCompare.
var (
	LessonTimeCompare_name = map[int32]string{
		0: "LESSON_TIME_COMPARE_FUTURE",
		1: "LESSON_TIME_COMPARE_FUTURE_AND_EQUAL",
		2: "LESSON_TIME_COMPARE_PAST",
		3: "LESSON_TIME_COMPARE_PAST_AND_EQUAL",
	}
	LessonTimeCompare_value = map[string]int32{
		"LESSON_TIME_COMPARE_FUTURE":           0,
		"LESSON_TIME_COMPARE_FUTURE_AND_EQUAL": 1,
		"LESSON_TIME_COMPARE_PAST":             2,
		"LESSON_TIME_COMPARE_PAST_AND_EQUAL":   3,
	}
)

func (x LessonTimeCompare) Enum() *LessonTimeCompare {
	p := new(LessonTimeCompare)
	*p = x
	return p
}

func (x LessonTimeCompare) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LessonTimeCompare) Descriptor() protoreflect.EnumDescriptor {
	return file_virtualclassroom_v1_enums_proto_enumTypes[5].Descriptor()
}

func (LessonTimeCompare) Type() protoreflect.EnumType {
	return &file_virtualclassroom_v1_enums_proto_enumTypes[5]
}

func (x LessonTimeCompare) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LessonTimeCompare.Descriptor instead.
func (LessonTimeCompare) EnumDescriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_enums_proto_rawDescGZIP(), []int{5}
}

type TimeLookup int32

const (
	TimeLookup_TIME_LOOKUP_START_TIME                      TimeLookup = 0
	TimeLookup_TIME_LOOKUP_END_TIME                        TimeLookup = 1
	TimeLookup_TIME_LOOKUP_END_TIME_INCLUDE_WITHOUT_END_AT TimeLookup = 2
	TimeLookup_TIME_LOOKUP_END_TIME_INCLUDE_WITH_END_AT    TimeLookup = 3
)

// Enum value maps for TimeLookup.
var (
	TimeLookup_name = map[int32]string{
		0: "TIME_LOOKUP_START_TIME",
		1: "TIME_LOOKUP_END_TIME",
		2: "TIME_LOOKUP_END_TIME_INCLUDE_WITHOUT_END_AT",
		3: "TIME_LOOKUP_END_TIME_INCLUDE_WITH_END_AT",
	}
	TimeLookup_value = map[string]int32{
		"TIME_LOOKUP_START_TIME":                      0,
		"TIME_LOOKUP_END_TIME":                        1,
		"TIME_LOOKUP_END_TIME_INCLUDE_WITHOUT_END_AT": 2,
		"TIME_LOOKUP_END_TIME_INCLUDE_WITH_END_AT":    3,
	}
)

func (x TimeLookup) Enum() *TimeLookup {
	p := new(TimeLookup)
	*p = x
	return p
}

func (x TimeLookup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeLookup) Descriptor() protoreflect.EnumDescriptor {
	return file_virtualclassroom_v1_enums_proto_enumTypes[6].Descriptor()
}

func (TimeLookup) Type() protoreflect.EnumType {
	return &file_virtualclassroom_v1_enums_proto_enumTypes[6]
}

func (x TimeLookup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeLookup.Descriptor instead.
func (TimeLookup) EnumDescriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_enums_proto_rawDescGZIP(), []int{6}
}

// lessons end_at field
type LiveLessonStatus int32

const (
	LiveLessonStatus_LIVE_LESSON_STATUS_NONE      LiveLessonStatus = 0
	LiveLessonStatus_LIVE_LESSON_STATUS_NOT_ENDED LiveLessonStatus = 1
	LiveLessonStatus_LIVE_LESSON_STATUS_ENDED     LiveLessonStatus = 2
)

// Enum value maps for LiveLessonStatus.
var (
	LiveLessonStatus_name = map[int32]string{
		0: "LIVE_LESSON_STATUS_NONE",
		1: "LIVE_LESSON_STATUS_NOT_ENDED",
		2: "LIVE_LESSON_STATUS_ENDED",
	}
	LiveLessonStatus_value = map[string]int32{
		"LIVE_LESSON_STATUS_NONE":      0,
		"LIVE_LESSON_STATUS_NOT_ENDED": 1,
		"LIVE_LESSON_STATUS_ENDED":     2,
	}
)

func (x LiveLessonStatus) Enum() *LiveLessonStatus {
	p := new(LiveLessonStatus)
	*p = x
	return p
}

func (x LiveLessonStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LiveLessonStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_virtualclassroom_v1_enums_proto_enumTypes[7].Descriptor()
}

func (LiveLessonStatus) Type() protoreflect.EnumType {
	return &file_virtualclassroom_v1_enums_proto_enumTypes[7]
}

func (x LiveLessonStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LiveLessonStatus.Descriptor instead.
func (LiveLessonStatus) EnumDescriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_enums_proto_rawDescGZIP(), []int{7}
}

type LiveLessonConversationType int32

const (
	LiveLessonConversationType_LIVE_LESSON_CONVERSATION_TYPE_PUBLIC  LiveLessonConversationType = 0
	LiveLessonConversationType_LIVE_LESSON_CONVERSATION_TYPE_PRIVATE LiveLessonConversationType = 1
)

// Enum value maps for LiveLessonConversationType.
var (
	LiveLessonConversationType_name = map[int32]string{
		0: "LIVE_LESSON_CONVERSATION_TYPE_PUBLIC",
		1: "LIVE_LESSON_CONVERSATION_TYPE_PRIVATE",
	}
	LiveLessonConversationType_value = map[string]int32{
		"LIVE_LESSON_CONVERSATION_TYPE_PUBLIC":  0,
		"LIVE_LESSON_CONVERSATION_TYPE_PRIVATE": 1,
	}
)

func (x LiveLessonConversationType) Enum() *LiveLessonConversationType {
	p := new(LiveLessonConversationType)
	*p = x
	return p
}

func (x LiveLessonConversationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LiveLessonConversationType) Descriptor() protoreflect.EnumDescriptor {
	return file_virtualclassroom_v1_enums_proto_enumTypes[8].Descriptor()
}

func (LiveLessonConversationType) Type() protoreflect.EnumType {
	return &file_virtualclassroom_v1_enums_proto_enumTypes[8]
}

func (x LiveLessonConversationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LiveLessonConversationType.Descriptor instead.
func (LiveLessonConversationType) EnumDescriptor() ([]byte, []int) {
	return file_virtualclassroom_v1_enums_proto_rawDescGZIP(), []int{8}
}

var File_virtualclassroom_v1_enums_proto protoreflect.FileDescriptor

var file_virtualclassroom_v1_enums_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2a, 0x5d, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f, 0x4c, 0x4c, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x50, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4e,
	0x44, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x57, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x96,
	0x01, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f,
	0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49, 0x41,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x44, 0x46, 0x10,
	0x03, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x44, 0x49, 0x41,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x05, 0x2a, 0xa5, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x54, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x5f, 0x54, 0x4f,
	0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x38, 0x0a, 0x34, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52,
	0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x5f, 0x4d, 0x41, 0x58, 0x5f,
	0x55, 0x50, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01,
	0x12, 0x2d, 0x0a, 0x29, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x50,
	0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52,
	0x45, 0x50, 0x41, 0x52, 0x45, 0x44, 0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x10, 0x02, 0x2a,
	0x61, 0x0a, 0x0f, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x25, 0x0a, 0x21, 0x55, 0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48,
	0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x55, 0x4e, 0x50,
	0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45,
	0x10, 0x01, 0x2a, 0xa3, 0x01, 0x0a, 0x11, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x4c, 0x45, 0x53, 0x53,
	0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x45, 0x5f,
	0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x4c, 0x45, 0x53, 0x53,
	0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x45, 0x5f,
	0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c,
	0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x54, 0x10, 0x02,
	0x12, 0x26, 0x0a, 0x22, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x54, 0x5f, 0x41, 0x4e, 0x44,
	0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x03, 0x2a, 0xa1, 0x01, 0x0a, 0x0a, 0x54, 0x69, 0x6d,
	0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x4c, 0x4f, 0x4f, 0x4b, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x4b,
	0x55, 0x50, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x2f, 0x0a,
	0x2b, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x4b, 0x55, 0x50, 0x5f, 0x45, 0x4e, 0x44,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x4f, 0x55, 0x54, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x2c,
	0x0a, 0x28, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x4b, 0x55, 0x50, 0x5f, 0x45, 0x4e,
	0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x5f, 0x57,
	0x49, 0x54, 0x48, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x03, 0x2a, 0x6f, 0x0a, 0x10,
	0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x17, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x20, 0x0a,
	0x1c, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x1c, 0x0a, 0x18, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x71, 0x0a,
	0x1a, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x24, 0x4c,
	0x49, 0x56, 0x45, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45,
	0x52, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x42,
	0x4c, 0x49, 0x43, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x4c, 0x45,
	0x53, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x01,
	0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_virtualclassroom_v1_enums_proto_rawDescOnce sync.Once
	file_virtualclassroom_v1_enums_proto_rawDescData = file_virtualclassroom_v1_enums_proto_rawDesc
)

func file_virtualclassroom_v1_enums_proto_rawDescGZIP() []byte {
	file_virtualclassroom_v1_enums_proto_rawDescOnce.Do(func() {
		file_virtualclassroom_v1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_virtualclassroom_v1_enums_proto_rawDescData)
	})
	return file_virtualclassroom_v1_enums_proto_rawDescData
}

var file_virtualclassroom_v1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_virtualclassroom_v1_enums_proto_goTypes = []interface{}{
	(PollingState)(0),               // 0: virtualclassroom.v1.PollingState
	(PlayerState)(0),                // 1: virtualclassroom.v1.PlayerState
	(MediaType)(0),                  // 2: virtualclassroom.v1.MediaType
	(PrepareToPublishStatus)(0),     // 3: virtualclassroom.v1.PrepareToPublishStatus
	(UnpublishStatus)(0),            // 4: virtualclassroom.v1.UnpublishStatus
	(LessonTimeCompare)(0),          // 5: virtualclassroom.v1.LessonTimeCompare
	(TimeLookup)(0),                 // 6: virtualclassroom.v1.TimeLookup
	(LiveLessonStatus)(0),           // 7: virtualclassroom.v1.LiveLessonStatus
	(LiveLessonConversationType)(0), // 8: virtualclassroom.v1.LiveLessonConversationType
}
var file_virtualclassroom_v1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_virtualclassroom_v1_enums_proto_init() }
func file_virtualclassroom_v1_enums_proto_init() {
	if File_virtualclassroom_v1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_virtualclassroom_v1_enums_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_virtualclassroom_v1_enums_proto_goTypes,
		DependencyIndexes: file_virtualclassroom_v1_enums_proto_depIdxs,
		EnumInfos:         file_virtualclassroom_v1_enums_proto_enumTypes,
	}.Build()
	File_virtualclassroom_v1_enums_proto = out.File
	file_virtualclassroom_v1_enums_proto_rawDesc = nil
	file_virtualclassroom_v1_enums_proto_goTypes = nil
	file_virtualclassroom_v1_enums_proto_depIdxs = nil
}
