// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: common/v1/profiles.proto

package cpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserGroup int32

const (
	UserGroup_USER_GROUP_NONE    UserGroup = 0
	UserGroup_USER_GROUP_STUDENT UserGroup = 1
	// Deprecated: Do not use.
	UserGroup_USER_GROUP_COACH         UserGroup = 2
	UserGroup_USER_GROUP_TUTOR         UserGroup = 3
	UserGroup_USER_GROUP_STAFF         UserGroup = 4
	UserGroup_USER_GROUP_ADMIN         UserGroup = 5
	UserGroup_USER_GROUP_TEACHER       UserGroup = 6
	UserGroup_USER_GROUP_PARENT        UserGroup = 7
	UserGroup_USER_GROUP_CONTENT_ADMIN UserGroup = 8
	UserGroup_USER_GROUP_CONTENT_STAFF UserGroup = 9
	UserGroup_USER_GROUP_SALES_ADMIN   UserGroup = 10
	UserGroup_USER_GROUP_SALES_STAFF   UserGroup = 11
	UserGroup_USER_GROUP_CS_ADMIN      UserGroup = 12
	UserGroup_USER_GROUP_CS_STAFF      UserGroup = 13
	UserGroup_USER_GROUP_SCHOOL_ADMIN  UserGroup = 14
	UserGroup_USER_GROUP_SCHOOL_STAFF  UserGroup = 15
)

// Enum value maps for UserGroup.
var (
	UserGroup_name = map[int32]string{
		0:  "USER_GROUP_NONE",
		1:  "USER_GROUP_STUDENT",
		2:  "USER_GROUP_COACH",
		3:  "USER_GROUP_TUTOR",
		4:  "USER_GROUP_STAFF",
		5:  "USER_GROUP_ADMIN",
		6:  "USER_GROUP_TEACHER",
		7:  "USER_GROUP_PARENT",
		8:  "USER_GROUP_CONTENT_ADMIN",
		9:  "USER_GROUP_CONTENT_STAFF",
		10: "USER_GROUP_SALES_ADMIN",
		11: "USER_GROUP_SALES_STAFF",
		12: "USER_GROUP_CS_ADMIN",
		13: "USER_GROUP_CS_STAFF",
		14: "USER_GROUP_SCHOOL_ADMIN",
		15: "USER_GROUP_SCHOOL_STAFF",
	}
	UserGroup_value = map[string]int32{
		"USER_GROUP_NONE":          0,
		"USER_GROUP_STUDENT":       1,
		"USER_GROUP_COACH":         2,
		"USER_GROUP_TUTOR":         3,
		"USER_GROUP_STAFF":         4,
		"USER_GROUP_ADMIN":         5,
		"USER_GROUP_TEACHER":       6,
		"USER_GROUP_PARENT":        7,
		"USER_GROUP_CONTENT_ADMIN": 8,
		"USER_GROUP_CONTENT_STAFF": 9,
		"USER_GROUP_SALES_ADMIN":   10,
		"USER_GROUP_SALES_STAFF":   11,
		"USER_GROUP_CS_ADMIN":      12,
		"USER_GROUP_CS_STAFF":      13,
		"USER_GROUP_SCHOOL_ADMIN":  14,
		"USER_GROUP_SCHOOL_STAFF":  15,
	}
)

func (x UserGroup) Enum() *UserGroup {
	p := new(UserGroup)
	*p = x
	return p
}

func (x UserGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_profiles_proto_enumTypes[0].Descriptor()
}

func (UserGroup) Type() protoreflect.EnumType {
	return &file_common_v1_profiles_proto_enumTypes[0]
}

func (x UserGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserGroup.Descriptor instead.
func (UserGroup) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_profiles_proto_rawDescGZIP(), []int{0}
}

type BasicProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar           string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Group            UserGroup              `protobuf:"varint,4,opt,name=group,proto3,enum=common.v1.UserGroup" json:"group,omitempty"`
	FacebookId       string                 `protobuf:"bytes,5,opt,name=facebook_id,json=facebookId,proto3" json:"facebook_id,omitempty"`
	AppleUserId      string                 `protobuf:"bytes,6,opt,name=apple_user_id,json=appleUserId,proto3" json:"apple_user_id,omitempty"`
	GivenName        string                 `protobuf:"bytes,7,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"` //create student
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastLoginDate    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_login_date,json=lastLoginDate,proto3" json:"last_login_date,omitempty"`
	Country          Country                `protobuf:"varint,10,opt,name=country,proto3,enum=common.v1.Country" json:"country,omitempty"`
	FullNamePhonetic string                 `protobuf:"bytes,11,opt,name=full_name_phonetic,json=fullNamePhonetic,proto3" json:"full_name_phonetic,omitempty"`
	FirstName        string                 `protobuf:"bytes,12,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName         string                 `protobuf:"bytes,13,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *BasicProfile) Reset() {
	*x = BasicProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_profiles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicProfile) ProtoMessage() {}

func (x *BasicProfile) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_profiles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicProfile.ProtoReflect.Descriptor instead.
func (*BasicProfile) Descriptor() ([]byte, []int) {
	return file_common_v1_profiles_proto_rawDescGZIP(), []int{0}
}

func (x *BasicProfile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BasicProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BasicProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *BasicProfile) GetGroup() UserGroup {
	if x != nil {
		return x.Group
	}
	return UserGroup_USER_GROUP_NONE
}

func (x *BasicProfile) GetFacebookId() string {
	if x != nil {
		return x.FacebookId
	}
	return ""
}

func (x *BasicProfile) GetAppleUserId() string {
	if x != nil {
		return x.AppleUserId
	}
	return ""
}

func (x *BasicProfile) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *BasicProfile) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BasicProfile) GetLastLoginDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginDate
	}
	return nil
}

func (x *BasicProfile) GetCountry() Country {
	if x != nil {
		return x.Country
	}
	return Country_COUNTRY_NONE
}

func (x *BasicProfile) GetFullNamePhonetic() string {
	if x != nil {
		return x.FullNamePhonetic
	}
	return ""
}

func (x *BasicProfile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *BasicProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

var File_common_v1_profiles_proto protoreflect.FileDescriptor

var file_common_v1_profiles_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x03,
	0x0a, 0x0c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x42,
	0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2a, 0xa3, 0x03, 0x0a, 0x09, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x55, 0x44,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x43, 0x4f, 0x41, 0x43, 0x48, 0x10, 0x02, 0x1a, 0x02, 0x08, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x55,
	0x54, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10,
	0x05, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x07,
	0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x08, 0x12, 0x1c,
	0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43, 0x4f, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x41, 0x4c, 0x45, 0x53,
	0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x41, 0x4c, 0x45, 0x53, 0x5f, 0x53, 0x54, 0x41,
	0x46, 0x46, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x43, 0x53, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x0c, 0x12, 0x17, 0x0a,
	0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43, 0x53, 0x5f, 0x53,
	0x54, 0x41, 0x46, 0x46, 0x10, 0x0d, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x43, 0x48, 0x4f, 0x4f, 0x4c, 0x5f, 0x41, 0x44, 0x4d, 0x49,
	0x4e, 0x10, 0x0e, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x53, 0x43, 0x48, 0x4f, 0x4f, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x0f,
	0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_profiles_proto_rawDescOnce sync.Once
	file_common_v1_profiles_proto_rawDescData = file_common_v1_profiles_proto_rawDesc
)

func file_common_v1_profiles_proto_rawDescGZIP() []byte {
	file_common_v1_profiles_proto_rawDescOnce.Do(func() {
		file_common_v1_profiles_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_profiles_proto_rawDescData)
	})
	return file_common_v1_profiles_proto_rawDescData
}

var file_common_v1_profiles_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_v1_profiles_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_common_v1_profiles_proto_goTypes = []interface{}{
	(UserGroup)(0),                // 0: common.v1.UserGroup
	(*BasicProfile)(nil),          // 1: common.v1.BasicProfile
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(Country)(0),                  // 3: common.v1.Country
}
var file_common_v1_profiles_proto_depIdxs = []int32{
	0, // 0: common.v1.BasicProfile.group:type_name -> common.v1.UserGroup
	2, // 1: common.v1.BasicProfile.created_at:type_name -> google.protobuf.Timestamp
	2, // 2: common.v1.BasicProfile.last_login_date:type_name -> google.protobuf.Timestamp
	3, // 3: common.v1.BasicProfile.country:type_name -> common.v1.Country
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_common_v1_profiles_proto_init() }
func file_common_v1_profiles_proto_init() {
	if File_common_v1_profiles_proto != nil {
		return
	}
	file_common_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_v1_profiles_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_profiles_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_profiles_proto_goTypes,
		DependencyIndexes: file_common_v1_profiles_proto_depIdxs,
		EnumInfos:         file_common_v1_profiles_proto_enumTypes,
		MessageInfos:      file_common_v1_profiles_proto_msgTypes,
	}.Build()
	File_common_v1_profiles_proto = out.File
	file_common_v1_profiles_proto_rawDesc = nil
	file_common_v1_profiles_proto_goTypes = nil
	file_common_v1_profiles_proto_depIdxs = nil
}
