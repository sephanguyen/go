// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: common/v1/notifications.proto

package cpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NotificationType int32

const (
	NotificationType_NOTIFICATION_TYPE_NONE       NotificationType = 0
	NotificationType_NOTIFICATION_TYPE_TEXT       NotificationType = 1
	NotificationType_NOTIFICATION_TYPE_PROMO_CODE NotificationType = 2
	NotificationType_NOTIFICATION_TYPE_ASSIGNMENT NotificationType = 3
	NotificationType_NOTIFICATION_TYPE_COMPOSED   NotificationType = 4
	NotificationType_NOTIFICATION_TYPE_NATS_ASYNC NotificationType = 5
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_NONE",
		1: "NOTIFICATION_TYPE_TEXT",
		2: "NOTIFICATION_TYPE_PROMO_CODE",
		3: "NOTIFICATION_TYPE_ASSIGNMENT",
		4: "NOTIFICATION_TYPE_COMPOSED",
		5: "NOTIFICATION_TYPE_NATS_ASYNC",
	}
	NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_NONE":       0,
		"NOTIFICATION_TYPE_TEXT":       1,
		"NOTIFICATION_TYPE_PROMO_CODE": 2,
		"NOTIFICATION_TYPE_ASSIGNMENT": 3,
		"NOTIFICATION_TYPE_COMPOSED":   4,
		"NOTIFICATION_TYPE_NATS_ASYNC": 5,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_notifications_proto_enumTypes[0].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_common_v1_notifications_proto_enumTypes[0]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0}
}

type NotificationStatus int32

const (
	NotificationStatus_NOTIFICATION_STATUS_NONE      NotificationStatus = 0
	NotificationStatus_NOTIFICATION_STATUS_DRAFT     NotificationStatus = 1
	NotificationStatus_NOTIFICATION_STATUS_SCHEDULED NotificationStatus = 2
	NotificationStatus_NOTIFICATION_STATUS_SENT      NotificationStatus = 3
	NotificationStatus_NOTIFICATION_STATUS_DISCARD   NotificationStatus = 4
)

// Enum value maps for NotificationStatus.
var (
	NotificationStatus_name = map[int32]string{
		0: "NOTIFICATION_STATUS_NONE",
		1: "NOTIFICATION_STATUS_DRAFT",
		2: "NOTIFICATION_STATUS_SCHEDULED",
		3: "NOTIFICATION_STATUS_SENT",
		4: "NOTIFICATION_STATUS_DISCARD",
	}
	NotificationStatus_value = map[string]int32{
		"NOTIFICATION_STATUS_NONE":      0,
		"NOTIFICATION_STATUS_DRAFT":     1,
		"NOTIFICATION_STATUS_SCHEDULED": 2,
		"NOTIFICATION_STATUS_SENT":      3,
		"NOTIFICATION_STATUS_DISCARD":   4,
	}
)

func (x NotificationStatus) Enum() *NotificationStatus {
	p := new(NotificationStatus)
	*p = x
	return p
}

func (x NotificationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_notifications_proto_enumTypes[1].Descriptor()
}

func (NotificationStatus) Type() protoreflect.EnumType {
	return &file_common_v1_notifications_proto_enumTypes[1]
}

func (x NotificationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationStatus.Descriptor instead.
func (NotificationStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{1}
}

type NotificationEvent int32

const (
	NotificationEvent_NOTIFICATION_EVENT_NONE                      NotificationEvent = 0
	NotificationEvent_NOTIFICATION_EVENT_X_LO_COMPLETED            NotificationEvent = 1
	NotificationEvent_NOTIFICATION_EVENT_TEACHER_GIVE_ASSIGNMENT   NotificationEvent = 2
	NotificationEvent_NOTIFICATION_EVENT_TEACHER_RETURN_ASSIGNMENT NotificationEvent = 3
	NotificationEvent_NOTIFICATION_EVENT_STUDENT_SUBMIT_ASSIGNMENT NotificationEvent = 4
	NotificationEvent_NOTIFICATION_EVENT_ASSIGNMENT_UPDATED        NotificationEvent = 5
)

// Enum value maps for NotificationEvent.
var (
	NotificationEvent_name = map[int32]string{
		0: "NOTIFICATION_EVENT_NONE",
		1: "NOTIFICATION_EVENT_X_LO_COMPLETED",
		2: "NOTIFICATION_EVENT_TEACHER_GIVE_ASSIGNMENT",
		3: "NOTIFICATION_EVENT_TEACHER_RETURN_ASSIGNMENT",
		4: "NOTIFICATION_EVENT_STUDENT_SUBMIT_ASSIGNMENT",
		5: "NOTIFICATION_EVENT_ASSIGNMENT_UPDATED",
	}
	NotificationEvent_value = map[string]int32{
		"NOTIFICATION_EVENT_NONE":                      0,
		"NOTIFICATION_EVENT_X_LO_COMPLETED":            1,
		"NOTIFICATION_EVENT_TEACHER_GIVE_ASSIGNMENT":   2,
		"NOTIFICATION_EVENT_TEACHER_RETURN_ASSIGNMENT": 3,
		"NOTIFICATION_EVENT_STUDENT_SUBMIT_ASSIGNMENT": 4,
		"NOTIFICATION_EVENT_ASSIGNMENT_UPDATED":        5,
	}
)

func (x NotificationEvent) Enum() *NotificationEvent {
	p := new(NotificationEvent)
	*p = x
	return p
}

func (x NotificationEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_notifications_proto_enumTypes[2].Descriptor()
}

func (NotificationEvent) Type() protoreflect.EnumType {
	return &file_common_v1_notifications_proto_enumTypes[2]
}

func (x NotificationEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationEvent.Descriptor instead.
func (NotificationEvent) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{2}
}

type UserNotificationStatus int32

const (
	UserNotificationStatus_USER_NOTIFICATION_STATUS_NONE   UserNotificationStatus = 0
	UserNotificationStatus_USER_NOTIFICATION_STATUS_NEW    UserNotificationStatus = 1
	UserNotificationStatus_USER_NOTIFICATION_STATUS_SEEN   UserNotificationStatus = 2
	UserNotificationStatus_USER_NOTIFICATION_STATUS_READ   UserNotificationStatus = 3
	UserNotificationStatus_USER_NOTIFICATION_STATUS_FAILED UserNotificationStatus = 4
)

// Enum value maps for UserNotificationStatus.
var (
	UserNotificationStatus_name = map[int32]string{
		0: "USER_NOTIFICATION_STATUS_NONE",
		1: "USER_NOTIFICATION_STATUS_NEW",
		2: "USER_NOTIFICATION_STATUS_SEEN",
		3: "USER_NOTIFICATION_STATUS_READ",
		4: "USER_NOTIFICATION_STATUS_FAILED",
	}
	UserNotificationStatus_value = map[string]int32{
		"USER_NOTIFICATION_STATUS_NONE":   0,
		"USER_NOTIFICATION_STATUS_NEW":    1,
		"USER_NOTIFICATION_STATUS_SEEN":   2,
		"USER_NOTIFICATION_STATUS_READ":   3,
		"USER_NOTIFICATION_STATUS_FAILED": 4,
	}
)

func (x UserNotificationStatus) Enum() *UserNotificationStatus {
	p := new(UserNotificationStatus)
	*p = x
	return p
}

func (x UserNotificationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserNotificationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_notifications_proto_enumTypes[3].Descriptor()
}

func (UserNotificationStatus) Type() protoreflect.EnumType {
	return &file_common_v1_notifications_proto_enumTypes[3]
}

func (x UserNotificationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserNotificationStatus.Descriptor instead.
func (UserNotificationStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{3}
}

type NotificationTargetGroupSelect int32

const (
	NotificationTargetGroupSelect_NOTIFICATION_TARGET_GROUP_SELECT_NONE NotificationTargetGroupSelect = 0
	NotificationTargetGroupSelect_NOTIFICATION_TARGET_GROUP_SELECT_ALL  NotificationTargetGroupSelect = 1
	NotificationTargetGroupSelect_NOTIFICATION_TARGET_GROUP_SELECT_LIST NotificationTargetGroupSelect = 2
)

// Enum value maps for NotificationTargetGroupSelect.
var (
	NotificationTargetGroupSelect_name = map[int32]string{
		0: "NOTIFICATION_TARGET_GROUP_SELECT_NONE",
		1: "NOTIFICATION_TARGET_GROUP_SELECT_ALL",
		2: "NOTIFICATION_TARGET_GROUP_SELECT_LIST",
	}
	NotificationTargetGroupSelect_value = map[string]int32{
		"NOTIFICATION_TARGET_GROUP_SELECT_NONE": 0,
		"NOTIFICATION_TARGET_GROUP_SELECT_ALL":  1,
		"NOTIFICATION_TARGET_GROUP_SELECT_LIST": 2,
	}
)

func (x NotificationTargetGroupSelect) Enum() *NotificationTargetGroupSelect {
	p := new(NotificationTargetGroupSelect)
	*p = x
	return p
}

func (x NotificationTargetGroupSelect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationTargetGroupSelect) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_notifications_proto_enumTypes[4].Descriptor()
}

func (NotificationTargetGroupSelect) Type() protoreflect.EnumType {
	return &file_common_v1_notifications_proto_enumTypes[4]
}

func (x NotificationTargetGroupSelect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationTargetGroupSelect.Descriptor instead.
func (NotificationTargetGroupSelect) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{4}
}

type QuestionType int32

const (
	QuestionType_QUESTION_TYPE_MULTIPLE_CHOICE QuestionType = 0
	QuestionType_QUESTION_TYPE_CHECK_BOX       QuestionType = 1
	QuestionType_QUESTION_TYPE_FREE_TEXT       QuestionType = 2
)

// Enum value maps for QuestionType.
var (
	QuestionType_name = map[int32]string{
		0: "QUESTION_TYPE_MULTIPLE_CHOICE",
		1: "QUESTION_TYPE_CHECK_BOX",
		2: "QUESTION_TYPE_FREE_TEXT",
	}
	QuestionType_value = map[string]int32{
		"QUESTION_TYPE_MULTIPLE_CHOICE": 0,
		"QUESTION_TYPE_CHECK_BOX":       1,
		"QUESTION_TYPE_FREE_TEXT":       2,
	}
)

func (x QuestionType) Enum() *QuestionType {
	p := new(QuestionType)
	*p = x
	return p
}

func (x QuestionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_notifications_proto_enumTypes[5].Descriptor()
}

func (QuestionType) Type() protoreflect.EnumType {
	return &file_common_v1_notifications_proto_enumTypes[5]
}

func (x QuestionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionType.Descriptor instead.
func (QuestionType) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{5}
}

type UserNotificationQuestionnaireStatus int32

const (
	UserNotificationQuestionnaireStatus_USER_NOTIFICATION_QUESTIONNAIRE_STATUS_ANSWERED   UserNotificationQuestionnaireStatus = 0
	UserNotificationQuestionnaireStatus_USER_NOTIFICATION_QUESTIONNAIRE_STATUS_UNANSWERED UserNotificationQuestionnaireStatus = 1
)

// Enum value maps for UserNotificationQuestionnaireStatus.
var (
	UserNotificationQuestionnaireStatus_name = map[int32]string{
		0: "USER_NOTIFICATION_QUESTIONNAIRE_STATUS_ANSWERED",
		1: "USER_NOTIFICATION_QUESTIONNAIRE_STATUS_UNANSWERED",
	}
	UserNotificationQuestionnaireStatus_value = map[string]int32{
		"USER_NOTIFICATION_QUESTIONNAIRE_STATUS_ANSWERED":   0,
		"USER_NOTIFICATION_QUESTIONNAIRE_STATUS_UNANSWERED": 1,
	}
)

func (x UserNotificationQuestionnaireStatus) Enum() *UserNotificationQuestionnaireStatus {
	p := new(UserNotificationQuestionnaireStatus)
	*p = x
	return p
}

func (x UserNotificationQuestionnaireStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserNotificationQuestionnaireStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_notifications_proto_enumTypes[6].Descriptor()
}

func (UserNotificationQuestionnaireStatus) Type() protoreflect.EnumType {
	return &file_common_v1_notifications_proto_enumTypes[6]
}

func (x UserNotificationQuestionnaireStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserNotificationQuestionnaireStatus.Descriptor instead.
func (UserNotificationQuestionnaireStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{6}
}

type NotificationTargetGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseFilter    *NotificationTargetGroup_CourseFilter    `protobuf:"bytes,1,opt,name=course_filter,json=courseFilter,proto3" json:"course_filter,omitempty"`
	GradeFilter     *NotificationTargetGroup_GradeFilter     `protobuf:"bytes,2,opt,name=grade_filter,json=gradeFilter,proto3" json:"grade_filter,omitempty"`
	UserGroupFilter *NotificationTargetGroup_UserGroupFilter `protobuf:"bytes,3,opt,name=user_group_filter,json=userGroupFilter,proto3" json:"user_group_filter,omitempty"`
	LocationFilter  *NotificationTargetGroup_LocationFilter  `protobuf:"bytes,4,opt,name=location_filter,json=locationFilter,proto3" json:"location_filter,omitempty"`
	ClassFilter     *NotificationTargetGroup_ClassFilter     `protobuf:"bytes,5,opt,name=class_filter,json=classFilter,proto3" json:"class_filter,omitempty"`
	SchoolFilter    *NotificationTargetGroup_SchoolFilter    `protobuf:"bytes,6,opt,name=school_filter,json=schoolFilter,proto3" json:"school_filter,omitempty"`
}

func (x *NotificationTargetGroup) Reset() {
	*x = NotificationTargetGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup) ProtoMessage() {}

func (x *NotificationTargetGroup) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0}
}

func (x *NotificationTargetGroup) GetCourseFilter() *NotificationTargetGroup_CourseFilter {
	if x != nil {
		return x.CourseFilter
	}
	return nil
}

func (x *NotificationTargetGroup) GetGradeFilter() *NotificationTargetGroup_GradeFilter {
	if x != nil {
		return x.GradeFilter
	}
	return nil
}

func (x *NotificationTargetGroup) GetUserGroupFilter() *NotificationTargetGroup_UserGroupFilter {
	if x != nil {
		return x.UserGroupFilter
	}
	return nil
}

func (x *NotificationTargetGroup) GetLocationFilter() *NotificationTargetGroup_LocationFilter {
	if x != nil {
		return x.LocationFilter
	}
	return nil
}

func (x *NotificationTargetGroup) GetClassFilter() *NotificationTargetGroup_ClassFilter {
	if x != nil {
		return x.ClassFilter
	}
	return nil
}

func (x *NotificationTargetGroup) GetSchoolFilter() *NotificationTargetGroup_SchoolFilter {
	if x != nil {
		return x.SchoolFilter
	}
	return nil
}

type NotificationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationMsgId string                 `protobuf:"bytes,1,opt,name=notification_msg_id,json=notificationMsgId,proto3" json:"notification_msg_id,omitempty"`
	Title             string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content           *RichText              `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MediaIds          []string               `protobuf:"bytes,4,rep,name=media_ids,json=mediaIds,proto3" json:"media_ids,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Description       string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *NotificationMessage) Reset() {
	*x = NotificationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationMessage) ProtoMessage() {}

func (x *NotificationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationMessage.ProtoReflect.Descriptor instead.
func (*NotificationMessage) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationMessage) GetNotificationMsgId() string {
	if x != nil {
		return x.NotificationMsgId
	}
	return ""
}

func (x *NotificationMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationMessage) GetContent() *RichText {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *NotificationMessage) GetMediaIds() []string {
	if x != nil {
		return x.MediaIds
	}
	return nil
}

func (x *NotificationMessage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NotificationMessage) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NotificationMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId             string                   `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	Data                       string                   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	EditorId                   string                   `protobuf:"bytes,3,opt,name=editor_id,json=editorId,proto3" json:"editor_id,omitempty"`
	ReceiverIds                []string                 `protobuf:"bytes,4,rep,name=receiver_ids,json=receiverIds,proto3" json:"receiver_ids,omitempty"` // note: this is in fact student_id only
	Message                    *NotificationMessage     `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Type                       NotificationType         `protobuf:"varint,6,opt,name=type,proto3,enum=common.v1.NotificationType" json:"type,omitempty"`
	Event                      NotificationEvent        `protobuf:"varint,7,opt,name=event,proto3,enum=common.v1.NotificationEvent" json:"event,omitempty"`
	Status                     NotificationStatus       `protobuf:"varint,8,opt,name=status,proto3,enum=common.v1.NotificationStatus" json:"status,omitempty"`
	TargetGroup                *NotificationTargetGroup `protobuf:"bytes,9,opt,name=target_group,json=targetGroup,proto3" json:"target_group,omitempty"`
	ScheduledAt                *timestamppb.Timestamp   `protobuf:"bytes,10,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	CreatedAt                  *timestamppb.Timestamp   `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                  *timestamppb.Timestamp   `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	SchoolId                   int32                    `protobuf:"varint,13,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	SentAt                     *timestamppb.Timestamp   `protobuf:"bytes,14,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	IsImportant                bool                     `protobuf:"varint,15,opt,name=is_important,json=isImportant,proto3" json:"is_important,omitempty"`
	GenericReceiverIds         []string                 `protobuf:"bytes,16,rep,name=generic_receiver_ids,json=genericReceiverIds,proto3" json:"generic_receiver_ids,omitempty"` // note: currently, for FCM send message and permanent storage notification
	ExcludedGenericReceiverIds []string                 `protobuf:"bytes,17,rep,name=excluded_generic_receiver_ids,json=excludedGenericReceiverIds,proto3" json:"excluded_generic_receiver_ids,omitempty"`
	CreatedUserId              string                   `protobuf:"bytes,18,opt,name=created_user_id,json=createdUserId,proto3" json:"created_user_id,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{2}
}

func (x *Notification) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *Notification) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Notification) GetEditorId() string {
	if x != nil {
		return x.EditorId
	}
	return ""
}

func (x *Notification) GetReceiverIds() []string {
	if x != nil {
		return x.ReceiverIds
	}
	return nil
}

func (x *Notification) GetMessage() *NotificationMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Notification) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_NOTIFICATION_TYPE_NONE
}

func (x *Notification) GetEvent() NotificationEvent {
	if x != nil {
		return x.Event
	}
	return NotificationEvent_NOTIFICATION_EVENT_NONE
}

func (x *Notification) GetStatus() NotificationStatus {
	if x != nil {
		return x.Status
	}
	return NotificationStatus_NOTIFICATION_STATUS_NONE
}

func (x *Notification) GetTargetGroup() *NotificationTargetGroup {
	if x != nil {
		return x.TargetGroup
	}
	return nil
}

func (x *Notification) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *Notification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Notification) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Notification) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *Notification) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *Notification) GetIsImportant() bool {
	if x != nil {
		return x.IsImportant
	}
	return false
}

func (x *Notification) GetGenericReceiverIds() []string {
	if x != nil {
		return x.GenericReceiverIds
	}
	return nil
}

func (x *Notification) GetExcludedGenericReceiverIds() []string {
	if x != nil {
		return x.ExcludedGenericReceiverIds
	}
	return nil
}

func (x *Notification) GetCreatedUserId() string {
	if x != nil {
		return x.CreatedUserId
	}
	return ""
}

type UserNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId           []string               `protobuf:"bytes,2,rep,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Grade              int32                  `protobuf:"varint,3,opt,name=grade,proto3" json:"grade,omitempty"`
	NotificationId     string                 `protobuf:"bytes,4,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	Status             UserNotificationStatus `protobuf:"varint,5,opt,name=status,proto3,enum=common.v1.UserNotificationStatus" json:"status,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Type               NotificationType       `protobuf:"varint,8,opt,name=type,proto3,enum=common.v1.NotificationType" json:"type,omitempty"`
	Data               string                 `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"`
	UserNotificationId string                 `protobuf:"bytes,10,opt,name=user_notification_id,json=userNotificationId,proto3" json:"user_notification_id,omitempty"`
}

func (x *UserNotification) Reset() {
	*x = UserNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotification) ProtoMessage() {}

func (x *UserNotification) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotification.ProtoReflect.Descriptor instead.
func (*UserNotification) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{3}
}

func (x *UserNotification) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserNotification) GetCourseId() []string {
	if x != nil {
		return x.CourseId
	}
	return nil
}

func (x *UserNotification) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *UserNotification) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *UserNotification) GetStatus() UserNotificationStatus {
	if x != nil {
		return x.Status
	}
	return UserNotificationStatus_USER_NOTIFICATION_STATUS_NONE
}

func (x *UserNotification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserNotification) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserNotification) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_NOTIFICATION_TYPE_NONE
}

func (x *UserNotification) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *UserNotification) GetUserNotificationId() string {
	if x != nil {
		return x.UserNotificationId
	}
	return ""
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireQuestionId string       `protobuf:"bytes,1,opt,name=questionnaire_question_id,json=questionnaireQuestionId,proto3" json:"questionnaire_question_id,omitempty"`
	Title                   string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type                    QuestionType `protobuf:"varint,3,opt,name=type,proto3,enum=common.v1.QuestionType" json:"type,omitempty"`
	Choices                 []string     `protobuf:"bytes,4,rep,name=choices,proto3" json:"choices,omitempty"`
	OrderIndex              int64        `protobuf:"varint,5,opt,name=order_index,json=orderIndex,proto3" json:"order_index,omitempty"`
	Required                bool         `protobuf:"varint,6,opt,name=required,proto3" json:"required,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{4}
}

func (x *Question) GetQuestionnaireQuestionId() string {
	if x != nil {
		return x.QuestionnaireQuestionId
	}
	return ""
}

func (x *Question) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Question) GetType() QuestionType {
	if x != nil {
		return x.Type
	}
	return QuestionType_QUESTION_TYPE_MULTIPLE_CHOICE
}

func (x *Question) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *Question) GetOrderIndex() int64 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

func (x *Question) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

type Questionnaire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireId         string                 `protobuf:"bytes,1,opt,name=questionnaire_id,json=questionnaireId,proto3" json:"questionnaire_id,omitempty"`
	ResubmitAllowed         bool                   `protobuf:"varint,2,opt,name=resubmit_allowed,json=resubmitAllowed,proto3" json:"resubmit_allowed,omitempty"`
	Questions               []*Question            `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
	ExpirationDate          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	QuestionnaireTemplateId string                 `protobuf:"bytes,5,opt,name=questionnaire_template_id,json=questionnaireTemplateId,proto3" json:"questionnaire_template_id,omitempty"`
}

func (x *Questionnaire) Reset() {
	*x = Questionnaire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Questionnaire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Questionnaire) ProtoMessage() {}

func (x *Questionnaire) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Questionnaire.ProtoReflect.Descriptor instead.
func (*Questionnaire) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{5}
}

func (x *Questionnaire) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

func (x *Questionnaire) GetResubmitAllowed() bool {
	if x != nil {
		return x.ResubmitAllowed
	}
	return false
}

func (x *Questionnaire) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *Questionnaire) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *Questionnaire) GetQuestionnaireTemplateId() string {
	if x != nil {
		return x.QuestionnaireTemplateId
	}
	return ""
}

type Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireQuestionId string `protobuf:"bytes,1,opt,name=questionnaire_question_id,json=questionnaireQuestionId,proto3" json:"questionnaire_question_id,omitempty"`
	Answer                  string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *Answer) Reset() {
	*x = Answer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{6}
}

func (x *Answer) GetQuestionnaireQuestionId() string {
	if x != nil {
		return x.QuestionnaireQuestionId
	}
	return ""
}

func (x *Answer) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type UserQuestionnaire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questionnaire *Questionnaire `protobuf:"bytes,1,opt,name=questionnaire,proto3" json:"questionnaire,omitempty"`
	Answers       []*Answer      `protobuf:"bytes,2,rep,name=answers,proto3" json:"answers,omitempty"`
	IsSubmitted   bool           `protobuf:"varint,3,opt,name=is_submitted,json=isSubmitted,proto3" json:"is_submitted,omitempty"`
}

func (x *UserQuestionnaire) Reset() {
	*x = UserQuestionnaire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserQuestionnaire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserQuestionnaire) ProtoMessage() {}

func (x *UserQuestionnaire) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserQuestionnaire.ProtoReflect.Descriptor instead.
func (*UserQuestionnaire) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{7}
}

func (x *UserQuestionnaire) GetQuestionnaire() *Questionnaire {
	if x != nil {
		return x.Questionnaire
	}
	return nil
}

func (x *UserQuestionnaire) GetAnswers() []*Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *UserQuestionnaire) GetIsSubmitted() bool {
	if x != nil {
		return x.IsSubmitted
	}
	return false
}

type NotificationTargetGroup_CourseFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      NotificationTargetGroupSelect `protobuf:"varint,1,opt,name=type,proto3,enum=common.v1.NotificationTargetGroupSelect" json:"type,omitempty"`
	CourseIds []string                      `protobuf:"bytes,2,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	// This field only need when upserting a notification from Backoffice
	Courses []*NotificationTargetGroup_CourseFilter_Course `protobuf:"bytes,3,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *NotificationTargetGroup_CourseFilter) Reset() {
	*x = NotificationTargetGroup_CourseFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_CourseFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_CourseFilter) ProtoMessage() {}

func (x *NotificationTargetGroup_CourseFilter) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_CourseFilter.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_CourseFilter) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NotificationTargetGroup_CourseFilter) GetType() NotificationTargetGroupSelect {
	if x != nil {
		return x.Type
	}
	return NotificationTargetGroupSelect_NOTIFICATION_TARGET_GROUP_SELECT_NONE
}

func (x *NotificationTargetGroup_CourseFilter) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *NotificationTargetGroup_CourseFilter) GetCourses() []*NotificationTargetGroup_CourseFilter_Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type NotificationTargetGroup_GradeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type NotificationTargetGroupSelect `protobuf:"varint,1,opt,name=type,proto3,enum=common.v1.NotificationTargetGroupSelect" json:"type,omitempty"`
	// Dereplicate: no longer support, please using Grade Master (switch to GradeIDs)
	Grades   []int32  `protobuf:"varint,2,rep,packed,name=grades,proto3" json:"grades,omitempty"`
	GradeIds []string `protobuf:"bytes,3,rep,name=grade_ids,json=gradeIds,proto3" json:"grade_ids,omitempty"`
}

func (x *NotificationTargetGroup_GradeFilter) Reset() {
	*x = NotificationTargetGroup_GradeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_GradeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_GradeFilter) ProtoMessage() {}

func (x *NotificationTargetGroup_GradeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_GradeFilter.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_GradeFilter) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 1}
}

func (x *NotificationTargetGroup_GradeFilter) GetType() NotificationTargetGroupSelect {
	if x != nil {
		return x.Type
	}
	return NotificationTargetGroupSelect_NOTIFICATION_TARGET_GROUP_SELECT_NONE
}

func (x *NotificationTargetGroup_GradeFilter) GetGrades() []int32 {
	if x != nil {
		return x.Grades
	}
	return nil
}

func (x *NotificationTargetGroup_GradeFilter) GetGradeIds() []string {
	if x != nil {
		return x.GradeIds
	}
	return nil
}

type NotificationTargetGroup_LocationFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        NotificationTargetGroupSelect `protobuf:"varint,1,opt,name=type,proto3,enum=common.v1.NotificationTargetGroupSelect" json:"type,omitempty"`
	LocationIds []string                      `protobuf:"bytes,2,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	// This field only need when upserting a notification from Backoffice
	Locations []*NotificationTargetGroup_LocationFilter_Location `protobuf:"bytes,3,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *NotificationTargetGroup_LocationFilter) Reset() {
	*x = NotificationTargetGroup_LocationFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_LocationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_LocationFilter) ProtoMessage() {}

func (x *NotificationTargetGroup_LocationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_LocationFilter.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_LocationFilter) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 2}
}

func (x *NotificationTargetGroup_LocationFilter) GetType() NotificationTargetGroupSelect {
	if x != nil {
		return x.Type
	}
	return NotificationTargetGroupSelect_NOTIFICATION_TARGET_GROUP_SELECT_NONE
}

func (x *NotificationTargetGroup_LocationFilter) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *NotificationTargetGroup_LocationFilter) GetLocations() []*NotificationTargetGroup_LocationFilter_Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type NotificationTargetGroup_ClassFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     NotificationTargetGroupSelect `protobuf:"varint,1,opt,name=type,proto3,enum=common.v1.NotificationTargetGroupSelect" json:"type,omitempty"`
	ClassIds []string                      `protobuf:"bytes,2,rep,name=class_ids,json=classIds,proto3" json:"class_ids,omitempty"`
	// This field only need when upserting a notification from Backoffice
	Classes []*NotificationTargetGroup_ClassFilter_Class `protobuf:"bytes,3,rep,name=classes,proto3" json:"classes,omitempty"`
}

func (x *NotificationTargetGroup_ClassFilter) Reset() {
	*x = NotificationTargetGroup_ClassFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_ClassFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_ClassFilter) ProtoMessage() {}

func (x *NotificationTargetGroup_ClassFilter) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_ClassFilter.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_ClassFilter) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 3}
}

func (x *NotificationTargetGroup_ClassFilter) GetType() NotificationTargetGroupSelect {
	if x != nil {
		return x.Type
	}
	return NotificationTargetGroupSelect_NOTIFICATION_TARGET_GROUP_SELECT_NONE
}

func (x *NotificationTargetGroup_ClassFilter) GetClassIds() []string {
	if x != nil {
		return x.ClassIds
	}
	return nil
}

func (x *NotificationTargetGroup_ClassFilter) GetClasses() []*NotificationTargetGroup_ClassFilter_Class {
	if x != nil {
		return x.Classes
	}
	return nil
}

type NotificationTargetGroup_UserGroupFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroups []UserGroup `protobuf:"varint,1,rep,packed,name=user_groups,json=userGroups,proto3,enum=common.v1.UserGroup" json:"user_groups,omitempty"`
}

func (x *NotificationTargetGroup_UserGroupFilter) Reset() {
	*x = NotificationTargetGroup_UserGroupFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_UserGroupFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_UserGroupFilter) ProtoMessage() {}

func (x *NotificationTargetGroup_UserGroupFilter) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_UserGroupFilter.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_UserGroupFilter) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 4}
}

func (x *NotificationTargetGroup_UserGroupFilter) GetUserGroups() []UserGroup {
	if x != nil {
		return x.UserGroups
	}
	return nil
}

type NotificationTargetGroup_SchoolFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      NotificationTargetGroupSelect                  `protobuf:"varint,1,opt,name=type,proto3,enum=common.v1.NotificationTargetGroupSelect" json:"type,omitempty"`
	SchoolIds []string                                       `protobuf:"bytes,2,rep,name=school_ids,json=schoolIds,proto3" json:"school_ids,omitempty"`
	Schools   []*NotificationTargetGroup_SchoolFilter_School `protobuf:"bytes,3,rep,name=schools,proto3" json:"schools,omitempty"`
}

func (x *NotificationTargetGroup_SchoolFilter) Reset() {
	*x = NotificationTargetGroup_SchoolFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_SchoolFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_SchoolFilter) ProtoMessage() {}

func (x *NotificationTargetGroup_SchoolFilter) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_SchoolFilter.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_SchoolFilter) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 5}
}

func (x *NotificationTargetGroup_SchoolFilter) GetType() NotificationTargetGroupSelect {
	if x != nil {
		return x.Type
	}
	return NotificationTargetGroupSelect_NOTIFICATION_TARGET_GROUP_SELECT_NONE
}

func (x *NotificationTargetGroup_SchoolFilter) GetSchoolIds() []string {
	if x != nil {
		return x.SchoolIds
	}
	return nil
}

func (x *NotificationTargetGroup_SchoolFilter) GetSchools() []*NotificationTargetGroup_SchoolFilter_School {
	if x != nil {
		return x.Schools
	}
	return nil
}

type NotificationTargetGroup_CourseFilter_Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId   string `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	CourseName string `protobuf:"bytes,2,opt,name=course_name,json=courseName,proto3" json:"course_name,omitempty"`
}

func (x *NotificationTargetGroup_CourseFilter_Course) Reset() {
	*x = NotificationTargetGroup_CourseFilter_Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_CourseFilter_Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_CourseFilter_Course) ProtoMessage() {}

func (x *NotificationTargetGroup_CourseFilter_Course) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_CourseFilter_Course.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_CourseFilter_Course) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *NotificationTargetGroup_CourseFilter_Course) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *NotificationTargetGroup_CourseFilter_Course) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

type NotificationTargetGroup_LocationFilter_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId   string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	LocationName string `protobuf:"bytes,2,opt,name=location_name,json=locationName,proto3" json:"location_name,omitempty"`
}

func (x *NotificationTargetGroup_LocationFilter_Location) Reset() {
	*x = NotificationTargetGroup_LocationFilter_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_LocationFilter_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_LocationFilter_Location) ProtoMessage() {}

func (x *NotificationTargetGroup_LocationFilter_Location) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_LocationFilter_Location.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_LocationFilter_Location) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *NotificationTargetGroup_LocationFilter_Location) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *NotificationTargetGroup_LocationFilter_Location) GetLocationName() string {
	if x != nil {
		return x.LocationName
	}
	return ""
}

type NotificationTargetGroup_ClassFilter_Class struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId   string `protobuf:"bytes,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	ClassName string `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
}

func (x *NotificationTargetGroup_ClassFilter_Class) Reset() {
	*x = NotificationTargetGroup_ClassFilter_Class{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_ClassFilter_Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_ClassFilter_Class) ProtoMessage() {}

func (x *NotificationTargetGroup_ClassFilter_Class) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_ClassFilter_Class.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_ClassFilter_Class) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *NotificationTargetGroup_ClassFilter_Class) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *NotificationTargetGroup_ClassFilter_Class) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

type NotificationTargetGroup_SchoolFilter_School struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolId   string `protobuf:"bytes,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	SchoolName string `protobuf:"bytes,2,opt,name=school_name,json=schoolName,proto3" json:"school_name,omitempty"`
}

func (x *NotificationTargetGroup_SchoolFilter_School) Reset() {
	*x = NotificationTargetGroup_SchoolFilter_School{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_notifications_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationTargetGroup_SchoolFilter_School) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTargetGroup_SchoolFilter_School) ProtoMessage() {}

func (x *NotificationTargetGroup_SchoolFilter_School) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_notifications_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTargetGroup_SchoolFilter_School.ProtoReflect.Descriptor instead.
func (*NotificationTargetGroup_SchoolFilter_School) Descriptor() ([]byte, []int) {
	return file_common_v1_notifications_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *NotificationTargetGroup_SchoolFilter_School) GetSchoolId() string {
	if x != nil {
		return x.SchoolId
	}
	return ""
}

func (x *NotificationTargetGroup_SchoolFilter_School) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

var File_common_v1_notifications_proto protoreflect.FileDescriptor

var file_common_v1_notifications_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa2, 0x0e, 0x0a, 0x17, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x54, 0x0a, 0x0d, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x51, 0x0a, 0x0c, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x51, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x85, 0x02, 0x0a, 0x0c, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x50, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x1a, 0x46, 0x0a, 0x06, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x80, 0x01, 0x0a, 0x0b, 0x47, 0x72, 0x61, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x64, 0x73, 0x1a, 0x9d, 0x02, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x58, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x50, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xfb, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x73, 0x12,
	0x4e, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x1a,
	0x41, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x48, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x85, 0x02, 0x0a,
	0x0c, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x50, 0x0a, 0x07, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x52, 0x07, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x73, 0x1a, 0x46, 0x0a, 0x06,
	0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xef, 0x06, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x32, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x41, 0x0a,
	0x1d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xaf, 0x03, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x08, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x19, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x99, 0x02,
	0x0a, 0x0d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a,
	0x19, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x06, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x19, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x3e, 0x0a,
	0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x0d,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x2b, 0x0a,
	0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x2a, 0xd0, 0x01,
	0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x1e,
	0x0a, 0x1a, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x04, 0x12, 0x20,
	0x0a, 0x1c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x54, 0x53, 0x5f, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x05,
	0x2a, 0xb3, 0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x52, 0x41,
	0x46, 0x54, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x43, 0x48, 0x45,
	0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x49, 0x53,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x04, 0x2a, 0x96, 0x02, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x17,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x58, 0x5f, 0x4c, 0x4f, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x2e, 0x0a, 0x2a, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52, 0x5f, 0x47,
	0x49, 0x56, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02,
	0x12, 0x30, 0x0a, 0x2c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52, 0x5f, 0x52,
	0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x03, 0x12, 0x30, 0x0a, 0x2c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x04, 0x12, 0x29, 0x0a, 0x25, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47,
	0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x05, 0x2a,
	0xc8, 0x01, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x20, 0x0a,
	0x1c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12,
	0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x45, 0x4e,
	0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52,
	0x45, 0x41, 0x44, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x9f, 0x01, 0x0a, 0x1d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x25,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x52,
	0x47, 0x45, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x10,
	0x01, 0x12, 0x29, 0x0a, 0x25, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53,
	0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x2a, 0x6b, 0x0a, 0x0c,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x55,
	0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x4f, 0x49, 0x43, 0x45, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x42, 0x4f, 0x58, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x52,
	0x45, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x02, 0x2a, 0x91, 0x01, 0x0a, 0x23, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x33, 0x0a, 0x2f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x4e,
	0x41, 0x49, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x4e, 0x53, 0x57,
	0x45, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x35, 0x0a, 0x31, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x49, 0x4f, 0x4e, 0x4e, 0x41, 0x49, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01, 0x42, 0x3a, 0x5a,
	0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_common_v1_notifications_proto_rawDescOnce sync.Once
	file_common_v1_notifications_proto_rawDescData = file_common_v1_notifications_proto_rawDesc
)

func file_common_v1_notifications_proto_rawDescGZIP() []byte {
	file_common_v1_notifications_proto_rawDescOnce.Do(func() {
		file_common_v1_notifications_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_notifications_proto_rawDescData)
	})
	return file_common_v1_notifications_proto_rawDescData
}

var file_common_v1_notifications_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_common_v1_notifications_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_common_v1_notifications_proto_goTypes = []interface{}{
	(NotificationType)(0),                                   // 0: common.v1.NotificationType
	(NotificationStatus)(0),                                 // 1: common.v1.NotificationStatus
	(NotificationEvent)(0),                                  // 2: common.v1.NotificationEvent
	(UserNotificationStatus)(0),                             // 3: common.v1.UserNotificationStatus
	(NotificationTargetGroupSelect)(0),                      // 4: common.v1.NotificationTargetGroupSelect
	(QuestionType)(0),                                       // 5: common.v1.QuestionType
	(UserNotificationQuestionnaireStatus)(0),                // 6: common.v1.UserNotificationQuestionnaireStatus
	(*NotificationTargetGroup)(nil),                         // 7: common.v1.NotificationTargetGroup
	(*NotificationMessage)(nil),                             // 8: common.v1.NotificationMessage
	(*Notification)(nil),                                    // 9: common.v1.Notification
	(*UserNotification)(nil),                                // 10: common.v1.UserNotification
	(*Question)(nil),                                        // 11: common.v1.Question
	(*Questionnaire)(nil),                                   // 12: common.v1.Questionnaire
	(*Answer)(nil),                                          // 13: common.v1.Answer
	(*UserQuestionnaire)(nil),                               // 14: common.v1.UserQuestionnaire
	(*NotificationTargetGroup_CourseFilter)(nil),            // 15: common.v1.NotificationTargetGroup.CourseFilter
	(*NotificationTargetGroup_GradeFilter)(nil),             // 16: common.v1.NotificationTargetGroup.GradeFilter
	(*NotificationTargetGroup_LocationFilter)(nil),          // 17: common.v1.NotificationTargetGroup.LocationFilter
	(*NotificationTargetGroup_ClassFilter)(nil),             // 18: common.v1.NotificationTargetGroup.ClassFilter
	(*NotificationTargetGroup_UserGroupFilter)(nil),         // 19: common.v1.NotificationTargetGroup.UserGroupFilter
	(*NotificationTargetGroup_SchoolFilter)(nil),            // 20: common.v1.NotificationTargetGroup.SchoolFilter
	(*NotificationTargetGroup_CourseFilter_Course)(nil),     // 21: common.v1.NotificationTargetGroup.CourseFilter.Course
	(*NotificationTargetGroup_LocationFilter_Location)(nil), // 22: common.v1.NotificationTargetGroup.LocationFilter.Location
	(*NotificationTargetGroup_ClassFilter_Class)(nil),       // 23: common.v1.NotificationTargetGroup.ClassFilter.Class
	(*NotificationTargetGroup_SchoolFilter_School)(nil),     // 24: common.v1.NotificationTargetGroup.SchoolFilter.School
	(*RichText)(nil),                                        // 25: common.v1.RichText
	(*timestamppb.Timestamp)(nil),                           // 26: google.protobuf.Timestamp
	(UserGroup)(0),                                          // 27: common.v1.UserGroup
}
var file_common_v1_notifications_proto_depIdxs = []int32{
	15, // 0: common.v1.NotificationTargetGroup.course_filter:type_name -> common.v1.NotificationTargetGroup.CourseFilter
	16, // 1: common.v1.NotificationTargetGroup.grade_filter:type_name -> common.v1.NotificationTargetGroup.GradeFilter
	19, // 2: common.v1.NotificationTargetGroup.user_group_filter:type_name -> common.v1.NotificationTargetGroup.UserGroupFilter
	17, // 3: common.v1.NotificationTargetGroup.location_filter:type_name -> common.v1.NotificationTargetGroup.LocationFilter
	18, // 4: common.v1.NotificationTargetGroup.class_filter:type_name -> common.v1.NotificationTargetGroup.ClassFilter
	20, // 5: common.v1.NotificationTargetGroup.school_filter:type_name -> common.v1.NotificationTargetGroup.SchoolFilter
	25, // 6: common.v1.NotificationMessage.content:type_name -> common.v1.RichText
	26, // 7: common.v1.NotificationMessage.created_at:type_name -> google.protobuf.Timestamp
	26, // 8: common.v1.NotificationMessage.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 9: common.v1.Notification.message:type_name -> common.v1.NotificationMessage
	0,  // 10: common.v1.Notification.type:type_name -> common.v1.NotificationType
	2,  // 11: common.v1.Notification.event:type_name -> common.v1.NotificationEvent
	1,  // 12: common.v1.Notification.status:type_name -> common.v1.NotificationStatus
	7,  // 13: common.v1.Notification.target_group:type_name -> common.v1.NotificationTargetGroup
	26, // 14: common.v1.Notification.scheduled_at:type_name -> google.protobuf.Timestamp
	26, // 15: common.v1.Notification.created_at:type_name -> google.protobuf.Timestamp
	26, // 16: common.v1.Notification.updated_at:type_name -> google.protobuf.Timestamp
	26, // 17: common.v1.Notification.sent_at:type_name -> google.protobuf.Timestamp
	3,  // 18: common.v1.UserNotification.status:type_name -> common.v1.UserNotificationStatus
	26, // 19: common.v1.UserNotification.created_at:type_name -> google.protobuf.Timestamp
	26, // 20: common.v1.UserNotification.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 21: common.v1.UserNotification.type:type_name -> common.v1.NotificationType
	5,  // 22: common.v1.Question.type:type_name -> common.v1.QuestionType
	11, // 23: common.v1.Questionnaire.questions:type_name -> common.v1.Question
	26, // 24: common.v1.Questionnaire.expiration_date:type_name -> google.protobuf.Timestamp
	12, // 25: common.v1.UserQuestionnaire.questionnaire:type_name -> common.v1.Questionnaire
	13, // 26: common.v1.UserQuestionnaire.answers:type_name -> common.v1.Answer
	4,  // 27: common.v1.NotificationTargetGroup.CourseFilter.type:type_name -> common.v1.NotificationTargetGroupSelect
	21, // 28: common.v1.NotificationTargetGroup.CourseFilter.courses:type_name -> common.v1.NotificationTargetGroup.CourseFilter.Course
	4,  // 29: common.v1.NotificationTargetGroup.GradeFilter.type:type_name -> common.v1.NotificationTargetGroupSelect
	4,  // 30: common.v1.NotificationTargetGroup.LocationFilter.type:type_name -> common.v1.NotificationTargetGroupSelect
	22, // 31: common.v1.NotificationTargetGroup.LocationFilter.locations:type_name -> common.v1.NotificationTargetGroup.LocationFilter.Location
	4,  // 32: common.v1.NotificationTargetGroup.ClassFilter.type:type_name -> common.v1.NotificationTargetGroupSelect
	23, // 33: common.v1.NotificationTargetGroup.ClassFilter.classes:type_name -> common.v1.NotificationTargetGroup.ClassFilter.Class
	27, // 34: common.v1.NotificationTargetGroup.UserGroupFilter.user_groups:type_name -> common.v1.UserGroup
	4,  // 35: common.v1.NotificationTargetGroup.SchoolFilter.type:type_name -> common.v1.NotificationTargetGroupSelect
	24, // 36: common.v1.NotificationTargetGroup.SchoolFilter.schools:type_name -> common.v1.NotificationTargetGroup.SchoolFilter.School
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_common_v1_notifications_proto_init() }
func file_common_v1_notifications_proto_init() {
	if File_common_v1_notifications_proto != nil {
		return
	}
	file_common_v1_contents_proto_init()
	file_common_v1_profiles_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_v1_notifications_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Questionnaire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Answer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserQuestionnaire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_CourseFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_GradeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_LocationFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_ClassFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_UserGroupFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_SchoolFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_CourseFilter_Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_LocationFilter_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_ClassFilter_Class); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_notifications_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationTargetGroup_SchoolFilter_School); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_notifications_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_notifications_proto_goTypes,
		DependencyIndexes: file_common_v1_notifications_proto_depIdxs,
		EnumInfos:         file_common_v1_notifications_proto_enumTypes,
		MessageInfos:      file_common_v1_notifications_proto_msgTypes,
	}.Build()
	File_common_v1_notifications_proto = out.File
	file_common_v1_notifications_proto_rawDesc = nil
	file_common_v1_notifications_proto_goTypes = nil
	file_common_v1_notifications_proto_depIdxs = nil
}
