// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: nats/v1/jpref.proto

package npb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventMasterRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature     string                                  `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	RawPayload    []byte                                  `protobuf:"bytes,2,opt,name=raw_payload,json=rawPayload,proto3" json:"raw_payload,omitempty"`
	Timestamp     *timestamppb.Timestamp                  `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Courses       []*EventMasterRegistration_Course       `protobuf:"bytes,4,rep,name=courses,proto3" json:"courses,omitempty"`
	Classes       []*EventMasterRegistration_Class        `protobuf:"bytes,5,rep,name=classes,proto3" json:"classes,omitempty"`
	Lessons       []*EventMasterRegistration_Lesson       `protobuf:"bytes,6,rep,name=lessons,proto3" json:"lessons,omitempty"`
	AcademicYears []*EventMasterRegistration_AcademicYear `protobuf:"bytes,7,rep,name=academic_years,json=academicYears,proto3" json:"academic_years,omitempty"`
	LogId         string                                  `protobuf:"bytes,8,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
}

func (x *EventMasterRegistration) Reset() {
	*x = EventMasterRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMasterRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMasterRegistration) ProtoMessage() {}

func (x *EventMasterRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMasterRegistration.ProtoReflect.Descriptor instead.
func (*EventMasterRegistration) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{0}
}

func (x *EventMasterRegistration) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *EventMasterRegistration) GetRawPayload() []byte {
	if x != nil {
		return x.RawPayload
	}
	return nil
}

func (x *EventMasterRegistration) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EventMasterRegistration) GetCourses() []*EventMasterRegistration_Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

func (x *EventMasterRegistration) GetClasses() []*EventMasterRegistration_Class {
	if x != nil {
		return x.Classes
	}
	return nil
}

func (x *EventMasterRegistration) GetLessons() []*EventMasterRegistration_Lesson {
	if x != nil {
		return x.Lessons
	}
	return nil
}

func (x *EventMasterRegistration) GetAcademicYears() []*EventMasterRegistration_AcademicYear {
	if x != nil {
		return x.AcademicYears
	}
	return nil
}

func (x *EventMasterRegistration) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

type EventUserRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature  string                           `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	RawPayload []byte                           `protobuf:"bytes,2,opt,name=raw_payload,json=rawPayload,proto3" json:"raw_payload,omitempty"`
	Timestamp  *timestamppb.Timestamp           `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Students   []*EventUserRegistration_Student `protobuf:"bytes,4,rep,name=students,proto3" json:"students,omitempty"`
	Staffs     []*EventUserRegistration_Staff   `protobuf:"bytes,5,rep,name=staffs,proto3" json:"staffs,omitempty"`
	LogId      string                           `protobuf:"bytes,6,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
}

func (x *EventUserRegistration) Reset() {
	*x = EventUserRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUserRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUserRegistration) ProtoMessage() {}

func (x *EventUserRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventUserRegistration.ProtoReflect.Descriptor instead.
func (*EventUserRegistration) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{1}
}

func (x *EventUserRegistration) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *EventUserRegistration) GetRawPayload() []byte {
	if x != nil {
		return x.RawPayload
	}
	return nil
}

func (x *EventUserRegistration) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EventUserRegistration) GetStudents() []*EventUserRegistration_Student {
	if x != nil {
		return x.Students
	}
	return nil
}

func (x *EventUserRegistration) GetStaffs() []*EventUserRegistration_Staff {
	if x != nil {
		return x.Staffs
	}
	return nil
}

func (x *EventUserRegistration) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

type EventSyncUserCourse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature      string                               `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	RawPayload     []byte                               `protobuf:"bytes,2,opt,name=raw_payload,json=rawPayload,proto3" json:"raw_payload,omitempty"`
	Timestamp      *timestamppb.Timestamp               `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	StudentLessons []*EventSyncUserCourse_StudentLesson `protobuf:"bytes,4,rep,name=student_lessons,json=studentLessons,proto3" json:"student_lessons,omitempty"`
	LogId          string                               `protobuf:"bytes,5,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
}

func (x *EventSyncUserCourse) Reset() {
	*x = EventSyncUserCourse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSyncUserCourse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSyncUserCourse) ProtoMessage() {}

func (x *EventSyncUserCourse) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSyncUserCourse.ProtoReflect.Descriptor instead.
func (*EventSyncUserCourse) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{2}
}

func (x *EventSyncUserCourse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *EventSyncUserCourse) GetRawPayload() []byte {
	if x != nil {
		return x.RawPayload
	}
	return nil
}

func (x *EventSyncUserCourse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EventSyncUserCourse) GetStudentLessons() []*EventSyncUserCourse_StudentLesson {
	if x != nil {
		return x.StudentLessons
	}
	return nil
}

func (x *EventSyncUserCourse) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

type EventSyncStudentPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentPackages []*EventSyncStudentPackage_StudentPackage `protobuf:"bytes,1,rep,name=student_packages,json=studentPackages,proto3" json:"student_packages,omitempty"`
}

func (x *EventSyncStudentPackage) Reset() {
	*x = EventSyncStudentPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSyncStudentPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSyncStudentPackage) ProtoMessage() {}

func (x *EventSyncStudentPackage) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSyncStudentPackage.ProtoReflect.Descriptor instead.
func (*EventSyncStudentPackage) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{3}
}

func (x *EventSyncStudentPackage) GetStudentPackages() []*EventSyncStudentPackage_StudentPackage {
	if x != nil {
		return x.StudentPackages
	}
	return nil
}

type EventMasterRegistration_Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionKind ActionKind      `protobuf:"varint,1,opt,name=action_kind,json=actionKind,proto3,enum=nats.v1.ActionKind" json:"action_kind,omitempty"`
	CourseId   string          `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	CourseName string          `protobuf:"bytes,3,opt,name=course_name,json=courseName,proto3" json:"course_name,omitempty"`
	Status     v1.CourseStatus `protobuf:"varint,4,opt,name=status,proto3,enum=common.v1.CourseStatus" json:"status,omitempty"`
}

func (x *EventMasterRegistration_Course) Reset() {
	*x = EventMasterRegistration_Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMasterRegistration_Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMasterRegistration_Course) ProtoMessage() {}

func (x *EventMasterRegistration_Course) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMasterRegistration_Course.ProtoReflect.Descriptor instead.
func (*EventMasterRegistration_Course) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{0, 0}
}

func (x *EventMasterRegistration_Course) GetActionKind() ActionKind {
	if x != nil {
		return x.ActionKind
	}
	return ActionKind_ACTION_KIND_NONE
}

func (x *EventMasterRegistration_Course) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *EventMasterRegistration_Course) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *EventMasterRegistration_Course) GetStatus() v1.CourseStatus {
	if x != nil {
		return x.Status
	}
	return v1.CourseStatus_COURSE_STATUS_NONE
}

type EventMasterRegistration_Class struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionKind     ActionKind             `protobuf:"varint,1,opt,name=action_kind,json=actionKind,proto3,enum=nats.v1.ActionKind" json:"action_kind,omitempty"`
	ClassName      string                 `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ClassId        uint64                 `protobuf:"varint,3,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	CourseId       string                 `protobuf:"bytes,4,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	AcademicYearId string                 `protobuf:"bytes,7,opt,name=academic_year_id,json=academicYearId,proto3" json:"academic_year_id,omitempty"`
}

func (x *EventMasterRegistration_Class) Reset() {
	*x = EventMasterRegistration_Class{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMasterRegistration_Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMasterRegistration_Class) ProtoMessage() {}

func (x *EventMasterRegistration_Class) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMasterRegistration_Class.ProtoReflect.Descriptor instead.
func (*EventMasterRegistration_Class) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{0, 1}
}

func (x *EventMasterRegistration_Class) GetActionKind() ActionKind {
	if x != nil {
		return x.ActionKind
	}
	return ActionKind_ACTION_KIND_NONE
}

func (x *EventMasterRegistration_Class) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *EventMasterRegistration_Class) GetClassId() uint64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *EventMasterRegistration_Class) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *EventMasterRegistration_Class) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *EventMasterRegistration_Class) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *EventMasterRegistration_Class) GetAcademicYearId() string {
	if x != nil {
		return x.AcademicYearId
	}
	return ""
}

type EventMasterRegistration_Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionKind  ActionKind             `protobuf:"varint,1,opt,name=action_kind,json=actionKind,proto3,enum=nats.v1.ActionKind" json:"action_kind,omitempty"`
	LessonId    string                 `protobuf:"bytes,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	CourseId    string                 `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StartDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	LessonGroup string                 `protobuf:"bytes,6,opt,name=lesson_group,json=lessonGroup,proto3" json:"lesson_group,omitempty"`
	ClassName   string                 `protobuf:"bytes,7,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LessonType  v1.LessonType          `protobuf:"varint,8,opt,name=lesson_type,json=lessonType,proto3,enum=common.v1.LessonType" json:"lesson_type,omitempty"`
}

func (x *EventMasterRegistration_Lesson) Reset() {
	*x = EventMasterRegistration_Lesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMasterRegistration_Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMasterRegistration_Lesson) ProtoMessage() {}

func (x *EventMasterRegistration_Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMasterRegistration_Lesson.ProtoReflect.Descriptor instead.
func (*EventMasterRegistration_Lesson) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{0, 2}
}

func (x *EventMasterRegistration_Lesson) GetActionKind() ActionKind {
	if x != nil {
		return x.ActionKind
	}
	return ActionKind_ACTION_KIND_NONE
}

func (x *EventMasterRegistration_Lesson) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *EventMasterRegistration_Lesson) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *EventMasterRegistration_Lesson) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *EventMasterRegistration_Lesson) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *EventMasterRegistration_Lesson) GetLessonGroup() string {
	if x != nil {
		return x.LessonGroup
	}
	return ""
}

func (x *EventMasterRegistration_Lesson) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *EventMasterRegistration_Lesson) GetLessonType() v1.LessonType {
	if x != nil {
		return x.LessonType
	}
	return v1.LessonType_LESSON_TYPE_NONE
}

type EventMasterRegistration_AcademicYear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionKind     ActionKind             `protobuf:"varint,1,opt,name=action_kind,json=actionKind,proto3,enum=nats.v1.ActionKind" json:"action_kind,omitempty"`
	AcademicYearId string                 `protobuf:"bytes,2,opt,name=academic_year_id,json=academicYearId,proto3" json:"academic_year_id,omitempty"`
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StartYearDate  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_year_date,json=startYearDate,proto3" json:"start_year_date,omitempty"`
	EndYearDate    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_year_date,json=endYearDate,proto3" json:"end_year_date,omitempty"`
}

func (x *EventMasterRegistration_AcademicYear) Reset() {
	*x = EventMasterRegistration_AcademicYear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMasterRegistration_AcademicYear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMasterRegistration_AcademicYear) ProtoMessage() {}

func (x *EventMasterRegistration_AcademicYear) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMasterRegistration_AcademicYear.ProtoReflect.Descriptor instead.
func (*EventMasterRegistration_AcademicYear) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{0, 3}
}

func (x *EventMasterRegistration_AcademicYear) GetActionKind() ActionKind {
	if x != nil {
		return x.ActionKind
	}
	return ActionKind_ACTION_KIND_NONE
}

func (x *EventMasterRegistration_AcademicYear) GetAcademicYearId() string {
	if x != nil {
		return x.AcademicYearId
	}
	return ""
}

func (x *EventMasterRegistration_AcademicYear) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventMasterRegistration_AcademicYear) GetStartYearDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartYearDate
	}
	return nil
}

func (x *EventMasterRegistration_AcademicYear) GetEndYearDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndYearDate
	}
	return nil
}

type EventUserRegistration_Student struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionKind  ActionKind                               `protobuf:"varint,1,opt,name=action_kind,json=actionKind,proto3,enum=nats.v1.ActionKind" json:"action_kind,omitempty"`
	StudentId   string                                   `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudentDivs []int64                                  `protobuf:"varint,3,rep,packed,name=student_divs,json=studentDivs,proto3" json:"student_divs,omitempty"`
	LastName    string                                   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	GivenName   string                                   `protobuf:"bytes,5,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	Packages    []*EventUserRegistration_Student_Package `protobuf:"bytes,6,rep,name=packages,proto3" json:"packages,omitempty"`
}

func (x *EventUserRegistration_Student) Reset() {
	*x = EventUserRegistration_Student{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUserRegistration_Student) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUserRegistration_Student) ProtoMessage() {}

func (x *EventUserRegistration_Student) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventUserRegistration_Student.ProtoReflect.Descriptor instead.
func (*EventUserRegistration_Student) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{1, 0}
}

func (x *EventUserRegistration_Student) GetActionKind() ActionKind {
	if x != nil {
		return x.ActionKind
	}
	return ActionKind_ACTION_KIND_NONE
}

func (x *EventUserRegistration_Student) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *EventUserRegistration_Student) GetStudentDivs() []int64 {
	if x != nil {
		return x.StudentDivs
	}
	return nil
}

func (x *EventUserRegistration_Student) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *EventUserRegistration_Student) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *EventUserRegistration_Student) GetPackages() []*EventUserRegistration_Student_Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

type EventUserRegistration_Staff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionKind ActionKind `protobuf:"varint,1,opt,name=action_kind,json=actionKind,proto3,enum=nats.v1.ActionKind" json:"action_kind,omitempty"`
	StaffId    string     `protobuf:"bytes,2,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	Name       string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EventUserRegistration_Staff) Reset() {
	*x = EventUserRegistration_Staff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUserRegistration_Staff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUserRegistration_Staff) ProtoMessage() {}

func (x *EventUserRegistration_Staff) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventUserRegistration_Staff.ProtoReflect.Descriptor instead.
func (*EventUserRegistration_Staff) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{1, 1}
}

func (x *EventUserRegistration_Staff) GetActionKind() ActionKind {
	if x != nil {
		return x.ActionKind
	}
	return ActionKind_ACTION_KIND_NONE
}

func (x *EventUserRegistration_Staff) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *EventUserRegistration_Staff) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EventUserRegistration_Student_Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// class id to find courseID
	ClassId   int64                  `protobuf:"varint,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *EventUserRegistration_Student_Package) Reset() {
	*x = EventUserRegistration_Student_Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUserRegistration_Student_Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUserRegistration_Student_Package) ProtoMessage() {}

func (x *EventUserRegistration_Student_Package) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventUserRegistration_Student_Package.ProtoReflect.Descriptor instead.
func (*EventUserRegistration_Student_Package) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *EventUserRegistration_Student_Package) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *EventUserRegistration_Student_Package) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *EventUserRegistration_Student_Package) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type EventSyncUserCourse_StudentLesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionKind ActionKind `protobuf:"varint,1,opt,name=action_kind,json=actionKind,proto3,enum=nats.v1.ActionKind" json:"action_kind,omitempty"`
	StudentId  string     `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	LessonIds  []string   `protobuf:"bytes,3,rep,name=lesson_ids,json=lessonIds,proto3" json:"lesson_ids,omitempty"`
}

func (x *EventSyncUserCourse_StudentLesson) Reset() {
	*x = EventSyncUserCourse_StudentLesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSyncUserCourse_StudentLesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSyncUserCourse_StudentLesson) ProtoMessage() {}

func (x *EventSyncUserCourse_StudentLesson) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSyncUserCourse_StudentLesson.ProtoReflect.Descriptor instead.
func (*EventSyncUserCourse_StudentLesson) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{2, 0}
}

func (x *EventSyncUserCourse_StudentLesson) GetActionKind() ActionKind {
	if x != nil {
		return x.ActionKind
	}
	return ActionKind_ACTION_KIND_NONE
}

func (x *EventSyncUserCourse_StudentLesson) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *EventSyncUserCourse_StudentLesson) GetLessonIds() []string {
	if x != nil {
		return x.LessonIds
	}
	return nil
}

type EventSyncStudentPackage_Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseIds []string               `protobuf:"bytes,1,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *EventSyncStudentPackage_Package) Reset() {
	*x = EventSyncStudentPackage_Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSyncStudentPackage_Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSyncStudentPackage_Package) ProtoMessage() {}

func (x *EventSyncStudentPackage_Package) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSyncStudentPackage_Package.ProtoReflect.Descriptor instead.
func (*EventSyncStudentPackage_Package) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{3, 0}
}

func (x *EventSyncStudentPackage_Package) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *EventSyncStudentPackage_Package) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *EventSyncStudentPackage_Package) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type EventSyncStudentPackage_StudentPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionKind ActionKind                         `protobuf:"varint,1,opt,name=action_kind,json=actionKind,proto3,enum=nats.v1.ActionKind" json:"action_kind,omitempty"`
	StudentId  string                             `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Packages   []*EventSyncStudentPackage_Package `protobuf:"bytes,3,rep,name=packages,proto3" json:"packages,omitempty"`
}

func (x *EventSyncStudentPackage_StudentPackage) Reset() {
	*x = EventSyncStudentPackage_StudentPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nats_v1_jpref_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSyncStudentPackage_StudentPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSyncStudentPackage_StudentPackage) ProtoMessage() {}

func (x *EventSyncStudentPackage_StudentPackage) ProtoReflect() protoreflect.Message {
	mi := &file_nats_v1_jpref_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSyncStudentPackage_StudentPackage.ProtoReflect.Descriptor instead.
func (*EventSyncStudentPackage_StudentPackage) Descriptor() ([]byte, []int) {
	return file_nats_v1_jpref_proto_rawDescGZIP(), []int{3, 1}
}

func (x *EventSyncStudentPackage_StudentPackage) GetActionKind() ActionKind {
	if x != nil {
		return x.ActionKind
	}
	return ActionKind_ACTION_KIND_NONE
}

func (x *EventSyncStudentPackage_StudentPackage) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *EventSyncStudentPackage_StudentPackage) GetPackages() []*EventSyncStudentPackage_Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

var File_nats_v1_jpref_proto protoreflect.FileDescriptor

var file_nats_v1_jpref_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6e, 0x61, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x70, 0x72, 0x65, 0x66, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x13,
	0x6e, 0x61, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x0c, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x61,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x41, 0x0a, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x73, 0x12, 0x54, 0x0a, 0x0e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x61, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x61,
	0x64, 0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61, 0x72, 0x52, 0x0d, 0x61, 0x63, 0x61, 0x64, 0x65,
	0x6d, 0x69, 0x63, 0x59, 0x65, 0x61, 0x72, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x1a,
	0xad, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0xb0, 0x02, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x61, 0x64,
	0x65, 0x6d, 0x69, 0x63, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61, 0x72,
	0x49, 0x64, 0x1a, 0xe4, 0x02, 0x0a, 0x06, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x34, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x86, 0x02, 0x0a, 0x0c, 0x41, 0x63,
	0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x5f, 0x79, 0x65, 0x61,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x61, 0x64,
	0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42,
	0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x44, 0x61,
	0x74, 0x65, 0x22, 0xbc, 0x06, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61,
	0x77, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x72, 0x61, 0x77, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x61, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x66, 0x66, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x1a, 0xa2,
	0x03, 0x0a, 0x07, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x76, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x44, 0x69,
	0x76, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a,
	0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x96, 0x01, 0x0a, 0x07, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x1a, 0x6c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x34, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x80, 0x03, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x61,
	0x77, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x53, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x61,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x1a, 0x83,
	0x01, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x22, 0xc0, 0x03, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x12, 0x5a, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x61, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x9a, 0x01, 0x0a,
	0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x1a, 0xab, 0x01, 0x0a, 0x0e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x44, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f,
	0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61,
	0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x6e, 0x61, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nats_v1_jpref_proto_rawDescOnce sync.Once
	file_nats_v1_jpref_proto_rawDescData = file_nats_v1_jpref_proto_rawDesc
)

func file_nats_v1_jpref_proto_rawDescGZIP() []byte {
	file_nats_v1_jpref_proto_rawDescOnce.Do(func() {
		file_nats_v1_jpref_proto_rawDescData = protoimpl.X.CompressGZIP(file_nats_v1_jpref_proto_rawDescData)
	})
	return file_nats_v1_jpref_proto_rawDescData
}

var file_nats_v1_jpref_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_nats_v1_jpref_proto_goTypes = []interface{}{
	(*EventMasterRegistration)(nil),                // 0: nats.v1.EventMasterRegistration
	(*EventUserRegistration)(nil),                  // 1: nats.v1.EventUserRegistration
	(*EventSyncUserCourse)(nil),                    // 2: nats.v1.EventSyncUserCourse
	(*EventSyncStudentPackage)(nil),                // 3: nats.v1.EventSyncStudentPackage
	(*EventMasterRegistration_Course)(nil),         // 4: nats.v1.EventMasterRegistration.Course
	(*EventMasterRegistration_Class)(nil),          // 5: nats.v1.EventMasterRegistration.Class
	(*EventMasterRegistration_Lesson)(nil),         // 6: nats.v1.EventMasterRegistration.Lesson
	(*EventMasterRegistration_AcademicYear)(nil),   // 7: nats.v1.EventMasterRegistration.AcademicYear
	(*EventUserRegistration_Student)(nil),          // 8: nats.v1.EventUserRegistration.Student
	(*EventUserRegistration_Staff)(nil),            // 9: nats.v1.EventUserRegistration.Staff
	(*EventUserRegistration_Student_Package)(nil),  // 10: nats.v1.EventUserRegistration.Student.Package
	(*EventSyncUserCourse_StudentLesson)(nil),      // 11: nats.v1.EventSyncUserCourse.StudentLesson
	(*EventSyncStudentPackage_Package)(nil),        // 12: nats.v1.EventSyncStudentPackage.Package
	(*EventSyncStudentPackage_StudentPackage)(nil), // 13: nats.v1.EventSyncStudentPackage.StudentPackage
	(*timestamppb.Timestamp)(nil),                  // 14: google.protobuf.Timestamp
	(ActionKind)(0),                                // 15: nats.v1.ActionKind
	(v1.CourseStatus)(0),                           // 16: common.v1.CourseStatus
	(v1.LessonType)(0),                             // 17: common.v1.LessonType
}
var file_nats_v1_jpref_proto_depIdxs = []int32{
	14, // 0: nats.v1.EventMasterRegistration.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 1: nats.v1.EventMasterRegistration.courses:type_name -> nats.v1.EventMasterRegistration.Course
	5,  // 2: nats.v1.EventMasterRegistration.classes:type_name -> nats.v1.EventMasterRegistration.Class
	6,  // 3: nats.v1.EventMasterRegistration.lessons:type_name -> nats.v1.EventMasterRegistration.Lesson
	7,  // 4: nats.v1.EventMasterRegistration.academic_years:type_name -> nats.v1.EventMasterRegistration.AcademicYear
	14, // 5: nats.v1.EventUserRegistration.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 6: nats.v1.EventUserRegistration.students:type_name -> nats.v1.EventUserRegistration.Student
	9,  // 7: nats.v1.EventUserRegistration.staffs:type_name -> nats.v1.EventUserRegistration.Staff
	14, // 8: nats.v1.EventSyncUserCourse.timestamp:type_name -> google.protobuf.Timestamp
	11, // 9: nats.v1.EventSyncUserCourse.student_lessons:type_name -> nats.v1.EventSyncUserCourse.StudentLesson
	13, // 10: nats.v1.EventSyncStudentPackage.student_packages:type_name -> nats.v1.EventSyncStudentPackage.StudentPackage
	15, // 11: nats.v1.EventMasterRegistration.Course.action_kind:type_name -> nats.v1.ActionKind
	16, // 12: nats.v1.EventMasterRegistration.Course.status:type_name -> common.v1.CourseStatus
	15, // 13: nats.v1.EventMasterRegistration.Class.action_kind:type_name -> nats.v1.ActionKind
	14, // 14: nats.v1.EventMasterRegistration.Class.start_date:type_name -> google.protobuf.Timestamp
	14, // 15: nats.v1.EventMasterRegistration.Class.end_date:type_name -> google.protobuf.Timestamp
	15, // 16: nats.v1.EventMasterRegistration.Lesson.action_kind:type_name -> nats.v1.ActionKind
	14, // 17: nats.v1.EventMasterRegistration.Lesson.start_date:type_name -> google.protobuf.Timestamp
	14, // 18: nats.v1.EventMasterRegistration.Lesson.end_date:type_name -> google.protobuf.Timestamp
	17, // 19: nats.v1.EventMasterRegistration.Lesson.lesson_type:type_name -> common.v1.LessonType
	15, // 20: nats.v1.EventMasterRegistration.AcademicYear.action_kind:type_name -> nats.v1.ActionKind
	14, // 21: nats.v1.EventMasterRegistration.AcademicYear.start_year_date:type_name -> google.protobuf.Timestamp
	14, // 22: nats.v1.EventMasterRegistration.AcademicYear.end_year_date:type_name -> google.protobuf.Timestamp
	15, // 23: nats.v1.EventUserRegistration.Student.action_kind:type_name -> nats.v1.ActionKind
	10, // 24: nats.v1.EventUserRegistration.Student.packages:type_name -> nats.v1.EventUserRegistration.Student.Package
	15, // 25: nats.v1.EventUserRegistration.Staff.action_kind:type_name -> nats.v1.ActionKind
	14, // 26: nats.v1.EventUserRegistration.Student.Package.start_date:type_name -> google.protobuf.Timestamp
	14, // 27: nats.v1.EventUserRegistration.Student.Package.end_date:type_name -> google.protobuf.Timestamp
	15, // 28: nats.v1.EventSyncUserCourse.StudentLesson.action_kind:type_name -> nats.v1.ActionKind
	14, // 29: nats.v1.EventSyncStudentPackage.Package.start_date:type_name -> google.protobuf.Timestamp
	14, // 30: nats.v1.EventSyncStudentPackage.Package.end_date:type_name -> google.protobuf.Timestamp
	15, // 31: nats.v1.EventSyncStudentPackage.StudentPackage.action_kind:type_name -> nats.v1.ActionKind
	12, // 32: nats.v1.EventSyncStudentPackage.StudentPackage.packages:type_name -> nats.v1.EventSyncStudentPackage.Package
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_nats_v1_jpref_proto_init() }
func file_nats_v1_jpref_proto_init() {
	if File_nats_v1_jpref_proto != nil {
		return
	}
	file_nats_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nats_v1_jpref_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMasterRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUserRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSyncUserCourse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSyncStudentPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMasterRegistration_Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMasterRegistration_Class); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMasterRegistration_Lesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMasterRegistration_AcademicYear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUserRegistration_Student); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUserRegistration_Staff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUserRegistration_Student_Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSyncUserCourse_StudentLesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSyncStudentPackage_Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nats_v1_jpref_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSyncStudentPackage_StudentPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nats_v1_jpref_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nats_v1_jpref_proto_goTypes,
		DependencyIndexes: file_nats_v1_jpref_proto_depIdxs,
		MessageInfos:      file_nats_v1_jpref_proto_msgTypes,
	}.Build()
	File_nats_v1_jpref_proto = out.File
	file_nats_v1_jpref_proto_rawDesc = nil
	file_nats_v1_jpref_proto_goTypes = nil
	file_nats_v1_jpref_proto_depIdxs = nil
}
