// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: bob/v1/lessons.proto

package bpb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PlayerState int32

const (
	PlayerState_PLAYER_STATE_PAUSE   PlayerState = 0
	PlayerState_PLAYER_STATE_PLAYING PlayerState = 1
	PlayerState_PLAYER_STATE_ENDED   PlayerState = 2
)

// Enum value maps for PlayerState.
var (
	PlayerState_name = map[int32]string{
		0: "PLAYER_STATE_PAUSE",
		1: "PLAYER_STATE_PLAYING",
		2: "PLAYER_STATE_ENDED",
	}
	PlayerState_value = map[string]int32{
		"PLAYER_STATE_PAUSE":   0,
		"PLAYER_STATE_PLAYING": 1,
		"PLAYER_STATE_ENDED":   2,
	}
)

func (x PlayerState) Enum() *PlayerState {
	p := new(PlayerState)
	*p = x
	return p
}

func (x PlayerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerState) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[0].Descriptor()
}

func (PlayerState) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[0]
}

func (x PlayerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerState.Descriptor instead.
func (PlayerState) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{0}
}

type PollingState int32

const (
	PollingState_POLLING_STATE_STARTED PollingState = 0
	PollingState_POLLING_STATE_STOPPED PollingState = 1
	PollingState_POLLING_STATE_ENDED   PollingState = 2
)

// Enum value maps for PollingState.
var (
	PollingState_name = map[int32]string{
		0: "POLLING_STATE_STARTED",
		1: "POLLING_STATE_STOPPED",
		2: "POLLING_STATE_ENDED",
	}
	PollingState_value = map[string]int32{
		"POLLING_STATE_STARTED": 0,
		"POLLING_STATE_STOPPED": 1,
		"POLLING_STATE_ENDED":   2,
	}
)

func (x PollingState) Enum() *PollingState {
	p := new(PollingState)
	*p = x
	return p
}

func (x PollingState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PollingState) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[1].Descriptor()
}

func (PollingState) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[1]
}

func (x PollingState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PollingState.Descriptor instead.
func (PollingState) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{1}
}

type ValueType int32

const (
	ValueType_VALUE_TYPE_INT          ValueType = 0
	ValueType_VALUE_TYPE_STRING       ValueType = 1
	ValueType_VALUE_TYPE_BOOL         ValueType = 2
	ValueType_VALUE_TYPE_INT_ARRAY    ValueType = 3
	ValueType_VALUE_TYPE_STRING_ARRAY ValueType = 4
	ValueType_VALUE_TYPE_INT_SET      ValueType = 5
	ValueType_VALUE_TYPE_STRING_SET   ValueType = 6
)

// Enum value maps for ValueType.
var (
	ValueType_name = map[int32]string{
		0: "VALUE_TYPE_INT",
		1: "VALUE_TYPE_STRING",
		2: "VALUE_TYPE_BOOL",
		3: "VALUE_TYPE_INT_ARRAY",
		4: "VALUE_TYPE_STRING_ARRAY",
		5: "VALUE_TYPE_INT_SET",
		6: "VALUE_TYPE_STRING_SET",
	}
	ValueType_value = map[string]int32{
		"VALUE_TYPE_INT":          0,
		"VALUE_TYPE_STRING":       1,
		"VALUE_TYPE_BOOL":         2,
		"VALUE_TYPE_INT_ARRAY":    3,
		"VALUE_TYPE_STRING_ARRAY": 4,
		"VALUE_TYPE_INT_SET":      5,
		"VALUE_TYPE_STRING_SET":   6,
	}
)

func (x ValueType) Enum() *ValueType {
	p := new(ValueType)
	*p = x
	return p
}

func (x ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[2].Descriptor()
}

func (ValueType) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[2]
}

func (x ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueType.Descriptor instead.
func (ValueType) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{2}
}

type StudentAttendStatus int32

const (
	StudentAttendStatus_STUDENT_ATTEND_STATUS_EMPTY           StudentAttendStatus = 0
	StudentAttendStatus_STUDENT_ATTEND_STATUS_ATTEND          StudentAttendStatus = 1
	StudentAttendStatus_STUDENT_ATTEND_STATUS_ABSENT          StudentAttendStatus = 2
	StudentAttendStatus_STUDENT_ATTEND_STATUS_LATE            StudentAttendStatus = 3
	StudentAttendStatus_STUDENT_ATTEND_STATUS_LEAVE_EARLY     StudentAttendStatus = 4
	StudentAttendStatus_STUDENT_ATTEND_STATUS_INFORMED_ABSENT StudentAttendStatus = 5
	StudentAttendStatus_STUDENT_ATTEND_STATUS_INFORMED_LATE   StudentAttendStatus = 6
	StudentAttendStatus_STUDENT_ATTEND_STATUS_REALLOCATE      StudentAttendStatus = 7
)

// Enum value maps for StudentAttendStatus.
var (
	StudentAttendStatus_name = map[int32]string{
		0: "STUDENT_ATTEND_STATUS_EMPTY",
		1: "STUDENT_ATTEND_STATUS_ATTEND",
		2: "STUDENT_ATTEND_STATUS_ABSENT",
		3: "STUDENT_ATTEND_STATUS_LATE",
		4: "STUDENT_ATTEND_STATUS_LEAVE_EARLY",
		5: "STUDENT_ATTEND_STATUS_INFORMED_ABSENT",
		6: "STUDENT_ATTEND_STATUS_INFORMED_LATE",
		7: "STUDENT_ATTEND_STATUS_REALLOCATE",
	}
	StudentAttendStatus_value = map[string]int32{
		"STUDENT_ATTEND_STATUS_EMPTY":           0,
		"STUDENT_ATTEND_STATUS_ATTEND":          1,
		"STUDENT_ATTEND_STATUS_ABSENT":          2,
		"STUDENT_ATTEND_STATUS_LATE":            3,
		"STUDENT_ATTEND_STATUS_LEAVE_EARLY":     4,
		"STUDENT_ATTEND_STATUS_INFORMED_ABSENT": 5,
		"STUDENT_ATTEND_STATUS_INFORMED_LATE":   6,
		"STUDENT_ATTEND_STATUS_REALLOCATE":      7,
	}
)

func (x StudentAttendStatus) Enum() *StudentAttendStatus {
	p := new(StudentAttendStatus)
	*p = x
	return p
}

func (x StudentAttendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudentAttendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[3].Descriptor()
}

func (StudentAttendStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[3]
}

func (x StudentAttendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudentAttendStatus.Descriptor instead.
func (StudentAttendStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{3}
}

type StudentAttendanceNotice int32

const (
	StudentAttendanceNotice_NOTICE_EMPTY StudentAttendanceNotice = 0
	StudentAttendanceNotice_IN_ADVANCE   StudentAttendanceNotice = 1
	StudentAttendanceNotice_ON_THE_DAY   StudentAttendanceNotice = 2
	StudentAttendanceNotice_NO_CONTACT   StudentAttendanceNotice = 3
)

// Enum value maps for StudentAttendanceNotice.
var (
	StudentAttendanceNotice_name = map[int32]string{
		0: "NOTICE_EMPTY",
		1: "IN_ADVANCE",
		2: "ON_THE_DAY",
		3: "NO_CONTACT",
	}
	StudentAttendanceNotice_value = map[string]int32{
		"NOTICE_EMPTY": 0,
		"IN_ADVANCE":   1,
		"ON_THE_DAY":   2,
		"NO_CONTACT":   3,
	}
)

func (x StudentAttendanceNotice) Enum() *StudentAttendanceNotice {
	p := new(StudentAttendanceNotice)
	*p = x
	return p
}

func (x StudentAttendanceNotice) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudentAttendanceNotice) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[4].Descriptor()
}

func (StudentAttendanceNotice) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[4]
}

func (x StudentAttendanceNotice) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudentAttendanceNotice.Descriptor instead.
func (StudentAttendanceNotice) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{4}
}

type StudentAttendanceReason int32

const (
	StudentAttendanceReason_REASON_EMPTY       StudentAttendanceReason = 0
	StudentAttendanceReason_PHYSICAL_CONDITION StudentAttendanceReason = 1
	StudentAttendanceReason_SCHOOL_EVENT       StudentAttendanceReason = 2
	StudentAttendanceReason_FAMILY_REASON      StudentAttendanceReason = 3
	StudentAttendanceReason_REASON_OTHER       StudentAttendanceReason = 4
)

// Enum value maps for StudentAttendanceReason.
var (
	StudentAttendanceReason_name = map[int32]string{
		0: "REASON_EMPTY",
		1: "PHYSICAL_CONDITION",
		2: "SCHOOL_EVENT",
		3: "FAMILY_REASON",
		4: "REASON_OTHER",
	}
	StudentAttendanceReason_value = map[string]int32{
		"REASON_EMPTY":       0,
		"PHYSICAL_CONDITION": 1,
		"SCHOOL_EVENT":       2,
		"FAMILY_REASON":      3,
		"REASON_OTHER":       4,
	}
)

func (x StudentAttendanceReason) Enum() *StudentAttendanceReason {
	p := new(StudentAttendanceReason)
	*p = x
	return p
}

func (x StudentAttendanceReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudentAttendanceReason) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[5].Descriptor()
}

func (StudentAttendanceReason) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[5]
}

func (x StudentAttendanceReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudentAttendanceReason.Descriptor instead.
func (StudentAttendanceReason) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{5}
}

type DomainType int32

const (
	DomainType_DOMAIN_TYPE_BO      DomainType = 0
	DomainType_DOMAIN_TYPE_TEACHER DomainType = 1
	DomainType_DOMAIN_TYPE_LEARNER DomainType = 2
)

// Enum value maps for DomainType.
var (
	DomainType_name = map[int32]string{
		0: "DOMAIN_TYPE_BO",
		1: "DOMAIN_TYPE_TEACHER",
		2: "DOMAIN_TYPE_LEARNER",
	}
	DomainType_value = map[string]int32{
		"DOMAIN_TYPE_BO":      0,
		"DOMAIN_TYPE_TEACHER": 1,
		"DOMAIN_TYPE_LEARNER": 2,
	}
)

func (x DomainType) Enum() *DomainType {
	p := new(DomainType)
	*p = x
	return p
}

func (x DomainType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DomainType) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[6].Descriptor()
}

func (DomainType) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[6]
}

func (x DomainType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DomainType.Descriptor instead.
func (DomainType) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{6}
}

type CreateLessonSavingMethod int32

const (
	CreateLessonSavingMethod_CREATE_LESSON_SAVING_METHOD_ONE_TIME   CreateLessonSavingMethod = 0
	CreateLessonSavingMethod_CREATE_LESSON_SAVING_METHOD_RECURRENCE CreateLessonSavingMethod = 1
)

// Enum value maps for CreateLessonSavingMethod.
var (
	CreateLessonSavingMethod_name = map[int32]string{
		0: "CREATE_LESSON_SAVING_METHOD_ONE_TIME",
		1: "CREATE_LESSON_SAVING_METHOD_RECURRENCE",
	}
	CreateLessonSavingMethod_value = map[string]int32{
		"CREATE_LESSON_SAVING_METHOD_ONE_TIME":   0,
		"CREATE_LESSON_SAVING_METHOD_RECURRENCE": 1,
	}
)

func (x CreateLessonSavingMethod) Enum() *CreateLessonSavingMethod {
	p := new(CreateLessonSavingMethod)
	*p = x
	return p
}

func (x CreateLessonSavingMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateLessonSavingMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[7].Descriptor()
}

func (CreateLessonSavingMethod) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[7]
}

func (x CreateLessonSavingMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateLessonSavingMethod.Descriptor instead.
func (CreateLessonSavingMethod) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{7}
}

type LessonStatus int32

const (
	LessonStatus_LESSON_SCHEDULING_STATUS_PUBLISHED LessonStatus = 0
	LessonStatus_LESSON_SCHEDULING_STATUS_DRAFT     LessonStatus = 1
)

// Enum value maps for LessonStatus.
var (
	LessonStatus_name = map[int32]string{
		0: "LESSON_SCHEDULING_STATUS_PUBLISHED",
		1: "LESSON_SCHEDULING_STATUS_DRAFT",
	}
	LessonStatus_value = map[string]int32{
		"LESSON_SCHEDULING_STATUS_PUBLISHED": 0,
		"LESSON_SCHEDULING_STATUS_DRAFT":     1,
	}
)

func (x LessonStatus) Enum() *LessonStatus {
	p := new(LessonStatus)
	*p = x
	return p
}

func (x LessonStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LessonStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[8].Descriptor()
}

func (LessonStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[8]
}

func (x LessonStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LessonStatus.Descriptor instead.
func (LessonStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{8}
}

type LessonTime int32

const (
	LessonTime_LESSON_TIME_FUTURE LessonTime = 0
	LessonTime_LESSON_TIME_PAST   LessonTime = 1
)

// Enum value maps for LessonTime.
var (
	LessonTime_name = map[int32]string{
		0: "LESSON_TIME_FUTURE",
		1: "LESSON_TIME_PAST",
	}
	LessonTime_value = map[string]int32{
		"LESSON_TIME_FUTURE": 0,
		"LESSON_TIME_PAST":   1,
	}
)

func (x LessonTime) Enum() *LessonTime {
	p := new(LessonTime)
	*p = x
	return p
}

func (x LessonTime) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LessonTime) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_lessons_proto_enumTypes[9].Descriptor()
}

func (LessonTime) Type() protoreflect.EnumType {
	return &file_bob_v1_lessons_proto_enumTypes[9]
}

func (x LessonTime) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LessonTime.Descriptor instead.
func (LessonTime) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{9}
}

type PreparePublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId  string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	LearnerId string `protobuf:"bytes,2,opt,name=learner_id,json=learnerId,proto3" json:"learner_id,omitempty"`
}

func (x *PreparePublishRequest) Reset() {
	*x = PreparePublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparePublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparePublishRequest) ProtoMessage() {}

func (x *PreparePublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparePublishRequest.ProtoReflect.Descriptor instead.
func (*PreparePublishRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{0}
}

func (x *PreparePublishRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *PreparePublishRequest) GetLearnerId() string {
	if x != nil {
		return x.LearnerId
	}
	return ""
}

type PreparePublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status PrepareToPublishStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bob.v1.PrepareToPublishStatus" json:"status,omitempty"`
}

func (x *PreparePublishResponse) Reset() {
	*x = PreparePublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparePublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparePublishResponse) ProtoMessage() {}

func (x *PreparePublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparePublishResponse.ProtoReflect.Descriptor instead.
func (*PreparePublishResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{1}
}

func (x *PreparePublishResponse) GetStatus() PrepareToPublishStatus {
	if x != nil {
		return x.Status
	}
	return PrepareToPublishStatus_PREPARE_TO_PUBLISH_STATUS_NONE
}

type UnpublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId  string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	LearnerId string `protobuf:"bytes,2,opt,name=learner_id,json=learnerId,proto3" json:"learner_id,omitempty"`
}

func (x *UnpublishRequest) Reset() {
	*x = UnpublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishRequest) ProtoMessage() {}

func (x *UnpublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishRequest.ProtoReflect.Descriptor instead.
func (*UnpublishRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{2}
}

func (x *UnpublishRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *UnpublishRequest) GetLearnerId() string {
	if x != nil {
		return x.LearnerId
	}
	return ""
}

type UnpublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status UnpublishStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bob.v1.UnpublishStatus" json:"status,omitempty"`
}

func (x *UnpublishResponse) Reset() {
	*x = UnpublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishResponse) ProtoMessage() {}

func (x *UnpublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishResponse.ProtoReflect.Descriptor instead.
func (*UnpublishResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{3}
}

func (x *UnpublishResponse) GetStatus() UnpublishStatus {
	if x != nil {
		return x.Status
	}
	return UnpublishStatus_UNPUBLISH_STATUS_UNPUBLISHED_NONE
}

type GetStreamingLearnersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *GetStreamingLearnersRequest) Reset() {
	*x = GetStreamingLearnersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamingLearnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamingLearnersRequest) ProtoMessage() {}

func (x *GetStreamingLearnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamingLearnersRequest.ProtoReflect.Descriptor instead.
func (*GetStreamingLearnersRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{4}
}

func (x *GetStreamingLearnersRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type GetStreamingLearnersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearnerIds []string `protobuf:"bytes,1,rep,name=learner_ids,json=learnerIds,proto3" json:"learner_ids,omitempty"`
}

func (x *GetStreamingLearnersResponse) Reset() {
	*x = GetStreamingLearnersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamingLearnersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamingLearnersResponse) ProtoMessage() {}

func (x *GetStreamingLearnersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamingLearnersResponse.ProtoReflect.Descriptor instead.
func (*GetStreamingLearnersResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{5}
}

func (x *GetStreamingLearnersResponse) GetLearnerIds() []string {
	if x != nil {
		return x.LearnerIds
	}
	return nil
}

type Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resource:
	//
	//	*Material_BrightcoveVideo_
	//	*Material_MediaId
	Resource isMaterial_Resource `protobuf_oneof:"resource"`
}

func (x *Material) Reset() {
	*x = Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Material) ProtoMessage() {}

func (x *Material) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Material.ProtoReflect.Descriptor instead.
func (*Material) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{6}
}

func (m *Material) GetResource() isMaterial_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *Material) GetBrightcoveVideo() *Material_BrightcoveVideo {
	if x, ok := x.GetResource().(*Material_BrightcoveVideo_); ok {
		return x.BrightcoveVideo
	}
	return nil
}

func (x *Material) GetMediaId() string {
	if x, ok := x.GetResource().(*Material_MediaId); ok {
		return x.MediaId
	}
	return ""
}

type isMaterial_Resource interface {
	isMaterial_Resource()
}

type Material_BrightcoveVideo_ struct {
	BrightcoveVideo *Material_BrightcoveVideo `protobuf:"bytes,1,opt,name=brightcove_video,json=brightcoveVideo,proto3,oneof"` // brightcove video (MEDIA_TYPE_VIDEO)
}

type Material_MediaId struct {
	MediaId string `protobuf:"bytes,2,opt,name=media_id,json=mediaId,proto3,oneof"`
}

func (*Material_BrightcoveVideo_) isMaterial_Resource() {}

func (*Material_MediaId) isMaterial_Resource() {}

type CreateLiveLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                               // required
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`    // required
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`          // required
	TeacherIds []string               `protobuf:"bytes,4,rep,name=teacher_ids,json=teacherIds,proto3" json:"teacher_ids,omitempty"` // required
	CourseIds  []string               `protobuf:"bytes,5,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`    // required
	LearnerIds []string               `protobuf:"bytes,6,rep,name=learner_ids,json=learnerIds,proto3" json:"learner_ids,omitempty"` // required
	Materials  []*Material            `protobuf:"bytes,7,rep,name=materials,proto3" json:"materials,omitempty"`
}

func (x *CreateLiveLessonRequest) Reset() {
	*x = CreateLiveLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLiveLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLiveLessonRequest) ProtoMessage() {}

func (x *CreateLiveLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLiveLessonRequest.ProtoReflect.Descriptor instead.
func (*CreateLiveLessonRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{7}
}

func (x *CreateLiveLessonRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLiveLessonRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateLiveLessonRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateLiveLessonRequest) GetTeacherIds() []string {
	if x != nil {
		return x.TeacherIds
	}
	return nil
}

func (x *CreateLiveLessonRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *CreateLiveLessonRequest) GetLearnerIds() []string {
	if x != nil {
		return x.LearnerIds
	}
	return nil
}

func (x *CreateLiveLessonRequest) GetMaterials() []*Material {
	if x != nil {
		return x.Materials
	}
	return nil
}

type CreateLiveLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateLiveLessonResponse) Reset() {
	*x = CreateLiveLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLiveLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLiveLessonResponse) ProtoMessage() {}

func (x *CreateLiveLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLiveLessonResponse.ProtoReflect.Descriptor instead.
func (*CreateLiveLessonResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{8}
}

func (x *CreateLiveLessonResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RetrieveLessonsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseIds    []string               `protobuf:"bytes,1,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	LessonStatus []v1.LessonStatus      `protobuf:"varint,2,rep,packed,name=lesson_status,json=lessonStatus,proto3,enum=common.v1.LessonStatus" json:"lesson_status,omitempty"`
	StartTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *RetrieveLessonsFilter) Reset() {
	*x = RetrieveLessonsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLessonsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLessonsFilter) ProtoMessage() {}

func (x *RetrieveLessonsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLessonsFilter.ProtoReflect.Descriptor instead.
func (*RetrieveLessonsFilter) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{9}
}

func (x *RetrieveLessonsFilter) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *RetrieveLessonsFilter) GetLessonStatus() []v1.LessonStatus {
	if x != nil {
		return x.LessonStatus
	}
	return nil
}

func (x *RetrieveLessonsFilter) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RetrieveLessonsFilter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type RetrieveLessonsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging  *v1.Paging             `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Keyword string                 `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Filter  *RetrieveLessonsFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *RetrieveLessonsRequest) Reset() {
	*x = RetrieveLessonsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLessonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLessonsRequest) ProtoMessage() {}

func (x *RetrieveLessonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLessonsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveLessonsRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{10}
}

func (x *RetrieveLessonsRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RetrieveLessonsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *RetrieveLessonsRequest) GetFilter() *RetrieveLessonsFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type RetrieveLessonsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items        []*RetrieveLessonsResponse_Lesson `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPage     *v1.Paging                        `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage *v1.Paging                        `protobuf:"bytes,3,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	TotalLesson  uint32                            `protobuf:"varint,4,opt,name=total_lesson,json=totalLesson,proto3" json:"total_lesson,omitempty"`
}

func (x *RetrieveLessonsResponse) Reset() {
	*x = RetrieveLessonsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLessonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLessonsResponse) ProtoMessage() {}

func (x *RetrieveLessonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLessonsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveLessonsResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{11}
}

func (x *RetrieveLessonsResponse) GetItems() []*RetrieveLessonsResponse_Lesson {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RetrieveLessonsResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveLessonsResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

func (x *RetrieveLessonsResponse) GetTotalLesson() uint32 {
	if x != nil {
		return x.TotalLesson
	}
	return 0
}

type RetrieveLiveLessonByLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseIds   []string               `protobuf:"bytes,1,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	Pagination  *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	From        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	LocationIds []string               `protobuf:"bytes,5,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *RetrieveLiveLessonByLocationsRequest) Reset() {
	*x = RetrieveLiveLessonByLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLiveLessonByLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLiveLessonByLocationsRequest) ProtoMessage() {}

func (x *RetrieveLiveLessonByLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLiveLessonByLocationsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveLiveLessonByLocationsRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{12}
}

func (x *RetrieveLiveLessonByLocationsRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *RetrieveLiveLessonByLocationsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *RetrieveLiveLessonByLocationsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *RetrieveLiveLessonByLocationsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *RetrieveLiveLessonByLocationsRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{13}
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type RetrieveLiveLessonByLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lessons []*Lesson `protobuf:"bytes,1,rep,name=lessons,proto3" json:"lessons,omitempty"`
	Total   int32     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RetrieveLiveLessonByLocationsResponse) Reset() {
	*x = RetrieveLiveLessonByLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLiveLessonByLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLiveLessonByLocationsResponse) ProtoMessage() {}

func (x *RetrieveLiveLessonByLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLiveLessonByLocationsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveLiveLessonByLocationsResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{14}
}

func (x *RetrieveLiveLessonByLocationsResponse) GetLessons() []*Lesson {
	if x != nil {
		return x.Lessons
	}
	return nil
}

func (x *RetrieveLiveLessonByLocationsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId                 string                 `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Topic                    *v1.Topic              `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	StartTime                *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime                  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	PresetStudyPlanWeeklyIds string                 `protobuf:"bytes,5,opt,name=preset_study_plan_weekly_ids,json=presetStudyPlanWeeklyIds,proto3" json:"preset_study_plan_weekly_ids,omitempty"`
	Status                   v1.LessonStatus        `protobuf:"varint,6,opt,name=status,proto3,enum=common.v1.LessonStatus" json:"status,omitempty"`
	Teacher                  []*v1.BasicProfile     `protobuf:"bytes,7,rep,name=teacher,proto3" json:"teacher,omitempty"`
	TotalLearner             int32                  `protobuf:"varint,8,opt,name=total_learner,json=totalLearner,proto3" json:"total_learner,omitempty"`
	CourseId                 string                 `protobuf:"bytes,9,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ZoomLink                 string                 `protobuf:"bytes,10,opt,name=zoom_link,json=zoomLink,proto3" json:"zoom_link,omitempty"`
}

func (x *Lesson) Reset() {
	*x = Lesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lesson) ProtoMessage() {}

func (x *Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lesson.ProtoReflect.Descriptor instead.
func (*Lesson) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{15}
}

func (x *Lesson) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *Lesson) GetTopic() *v1.Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *Lesson) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Lesson) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Lesson) GetPresetStudyPlanWeeklyIds() string {
	if x != nil {
		return x.PresetStudyPlanWeeklyIds
	}
	return ""
}

func (x *Lesson) GetStatus() v1.LessonStatus {
	if x != nil {
		return x.Status
	}
	return v1.LessonStatus_LESSON_STATUS_NONE
}

func (x *Lesson) GetTeacher() []*v1.BasicProfile {
	if x != nil {
		return x.Teacher
	}
	return nil
}

func (x *Lesson) GetTotalLearner() int32 {
	if x != nil {
		return x.TotalLearner
	}
	return 0
}

func (x *Lesson) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *Lesson) GetZoomLink() string {
	if x != nil {
		return x.ZoomLink
	}
	return ""
}

type UpdateLiveLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // required
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                               // required
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`    // required
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`          // required
	TeacherIds []string               `protobuf:"bytes,5,rep,name=teacher_ids,json=teacherIds,proto3" json:"teacher_ids,omitempty"` // required
	CourseIds  []string               `protobuf:"bytes,6,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`    // required
	LearnerIds []string               `protobuf:"bytes,7,rep,name=learner_ids,json=learnerIds,proto3" json:"learner_ids,omitempty"` // required
	Materials  []*Material            `protobuf:"bytes,8,rep,name=materials,proto3" json:"materials,omitempty"`                     // required
}

func (x *UpdateLiveLessonRequest) Reset() {
	*x = UpdateLiveLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLiveLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLiveLessonRequest) ProtoMessage() {}

func (x *UpdateLiveLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLiveLessonRequest.ProtoReflect.Descriptor instead.
func (*UpdateLiveLessonRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateLiveLessonRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateLiveLessonRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLiveLessonRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateLiveLessonRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UpdateLiveLessonRequest) GetTeacherIds() []string {
	if x != nil {
		return x.TeacherIds
	}
	return nil
}

func (x *UpdateLiveLessonRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *UpdateLiveLessonRequest) GetLearnerIds() []string {
	if x != nil {
		return x.LearnerIds
	}
	return nil
}

func (x *UpdateLiveLessonRequest) GetMaterials() []*Material {
	if x != nil {
		return x.Materials
	}
	return nil
}

type UpdateLiveLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLiveLessonResponse) Reset() {
	*x = UpdateLiveLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLiveLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLiveLessonResponse) ProtoMessage() {}

func (x *UpdateLiveLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLiveLessonResponse.ProtoReflect.Descriptor instead.
func (*UpdateLiveLessonResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{17}
}

type DeleteLiveLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLiveLessonRequest) Reset() {
	*x = DeleteLiveLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiveLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiveLessonRequest) ProtoMessage() {}

func (x *DeleteLiveLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiveLessonRequest.ProtoReflect.Descriptor instead.
func (*DeleteLiveLessonRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteLiveLessonRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteLiveLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLiveLessonResponse) Reset() {
	*x = DeleteLiveLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiveLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiveLessonResponse) ProtoMessage() {}

func (x *DeleteLiveLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiveLessonResponse.ProtoReflect.Descriptor instead.
func (*DeleteLiveLessonResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{19}
}

type LiveLessonState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LiveLessonState) Reset() {
	*x = LiveLessonState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState) ProtoMessage() {}

func (x *LiveLessonState) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState.ProtoReflect.Descriptor instead.
func (*LiveLessonState) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20}
}

type ModifyLiveLessonStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // required
	// Types that are assignable to Command:
	//
	//	*ModifyLiveLessonStateRequest_ShareAMaterial
	//	*ModifyLiveLessonStateRequest_StopSharingMaterial
	//	*ModifyLiveLessonStateRequest_FoldHandAll
	//	*ModifyLiveLessonStateRequest_FoldUserHand
	//	*ModifyLiveLessonStateRequest_RaiseHand
	//	*ModifyLiveLessonStateRequest_HandOff
	//	*ModifyLiveLessonStateRequest_AnnotationEnable
	//	*ModifyLiveLessonStateRequest_AnnotationDisable
	//	*ModifyLiveLessonStateRequest_StartPolling
	//	*ModifyLiveLessonStateRequest_StopPolling
	//	*ModifyLiveLessonStateRequest_EndPolling
	//	*ModifyLiveLessonStateRequest_SubmitPollingAnswer
	//	*ModifyLiveLessonStateRequest_RequestRecording
	//	*ModifyLiveLessonStateRequest_StopRecording
	//	*ModifyLiveLessonStateRequest_Spotlight_
	//	*ModifyLiveLessonStateRequest_WhiteboardZoomState_
	//	*ModifyLiveLessonStateRequest_AnnotationDisableAll
	//	*ModifyLiveLessonStateRequest_ChatEnable
	//	*ModifyLiveLessonStateRequest_ChatDisable
	Command isModifyLiveLessonStateRequest_Command `protobuf_oneof:"command"`
}

func (x *ModifyLiveLessonStateRequest) Reset() {
	*x = ModifyLiveLessonStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveLessonStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveLessonStateRequest) ProtoMessage() {}

func (x *ModifyLiveLessonStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveLessonStateRequest.ProtoReflect.Descriptor instead.
func (*ModifyLiveLessonStateRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{21}
}

func (x *ModifyLiveLessonStateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ModifyLiveLessonStateRequest) GetCommand() isModifyLiveLessonStateRequest_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest) GetShareAMaterial() *ModifyLiveLessonStateRequest_CurrentMaterialCommand {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_ShareAMaterial); ok {
		return x.ShareAMaterial
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest) GetStopSharingMaterial() bool {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_StopSharingMaterial); ok {
		return x.StopSharingMaterial
	}
	return false
}

func (x *ModifyLiveLessonStateRequest) GetFoldHandAll() bool {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_FoldHandAll); ok {
		return x.FoldHandAll
	}
	return false
}

func (x *ModifyLiveLessonStateRequest) GetFoldUserHand() string {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_FoldUserHand); ok {
		return x.FoldUserHand
	}
	return ""
}

func (x *ModifyLiveLessonStateRequest) GetRaiseHand() bool {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_RaiseHand); ok {
		return x.RaiseHand
	}
	return false
}

func (x *ModifyLiveLessonStateRequest) GetHandOff() bool {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_HandOff); ok {
		return x.HandOff
	}
	return false
}

func (x *ModifyLiveLessonStateRequest) GetAnnotationEnable() *ModifyLiveLessonStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_AnnotationEnable); ok {
		return x.AnnotationEnable
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest) GetAnnotationDisable() *ModifyLiveLessonStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_AnnotationDisable); ok {
		return x.AnnotationDisable
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest) GetStartPolling() *ModifyLiveLessonStateRequest_PollingOptions {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_StartPolling); ok {
		return x.StartPolling
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest) GetStopPolling() bool {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_StopPolling); ok {
		return x.StopPolling
	}
	return false
}

func (x *ModifyLiveLessonStateRequest) GetEndPolling() bool {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_EndPolling); ok {
		return x.EndPolling
	}
	return false
}

func (x *ModifyLiveLessonStateRequest) GetSubmitPollingAnswer() *ModifyLiveLessonStateRequest_PollingAnswer {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_SubmitPollingAnswer); ok {
		return x.SubmitPollingAnswer
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest) GetRequestRecording() bool {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_RequestRecording); ok {
		return x.RequestRecording
	}
	return false
}

func (x *ModifyLiveLessonStateRequest) GetStopRecording() bool {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_StopRecording); ok {
		return x.StopRecording
	}
	return false
}

func (x *ModifyLiveLessonStateRequest) GetSpotlight() *ModifyLiveLessonStateRequest_Spotlight {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_Spotlight_); ok {
		return x.Spotlight
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest) GetWhiteboardZoomState() *ModifyLiveLessonStateRequest_WhiteboardZoomState {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_WhiteboardZoomState_); ok {
		return x.WhiteboardZoomState
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest) GetAnnotationDisableAll() bool {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_AnnotationDisableAll); ok {
		return x.AnnotationDisableAll
	}
	return false
}

func (x *ModifyLiveLessonStateRequest) GetChatEnable() *ModifyLiveLessonStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_ChatEnable); ok {
		return x.ChatEnable
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest) GetChatDisable() *ModifyLiveLessonStateRequest_Learners {
	if x, ok := x.GetCommand().(*ModifyLiveLessonStateRequest_ChatDisable); ok {
		return x.ChatDisable
	}
	return nil
}

type isModifyLiveLessonStateRequest_Command interface {
	isModifyLiveLessonStateRequest_Command()
}

type ModifyLiveLessonStateRequest_ShareAMaterial struct {
	ShareAMaterial *ModifyLiveLessonStateRequest_CurrentMaterialCommand `protobuf:"bytes,2,opt,name=share_a_material,json=shareAMaterial,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_StopSharingMaterial struct {
	StopSharingMaterial bool `protobuf:"varint,3,opt,name=stop_sharing_material,json=stopSharingMaterial,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_FoldHandAll struct {
	FoldHandAll bool `protobuf:"varint,4,opt,name=fold_hand_all,json=foldHandAll,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_FoldUserHand struct {
	FoldUserHand string `protobuf:"bytes,5,opt,name=fold_user_hand,json=foldUserHand,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_RaiseHand struct {
	RaiseHand bool `protobuf:"varint,6,opt,name=raise_hand,json=raiseHand,proto3,oneof"` // only for student
}

type ModifyLiveLessonStateRequest_HandOff struct {
	HandOff bool `protobuf:"varint,7,opt,name=hand_off,json=handOff,proto3,oneof"` // only for student
}

type ModifyLiveLessonStateRequest_AnnotationEnable struct {
	AnnotationEnable *ModifyLiveLessonStateRequest_Learners `protobuf:"bytes,8,opt,name=annotation_enable,json=annotationEnable,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_AnnotationDisable struct {
	AnnotationDisable *ModifyLiveLessonStateRequest_Learners `protobuf:"bytes,9,opt,name=annotation_disable,json=annotationDisable,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_StartPolling struct {
	StartPolling *ModifyLiveLessonStateRequest_PollingOptions `protobuf:"bytes,10,opt,name=start_polling,json=startPolling,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_StopPolling struct {
	StopPolling bool `protobuf:"varint,11,opt,name=stop_polling,json=stopPolling,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_EndPolling struct {
	EndPolling bool `protobuf:"varint,12,opt,name=end_polling,json=endPolling,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_SubmitPollingAnswer struct {
	SubmitPollingAnswer *ModifyLiveLessonStateRequest_PollingAnswer `protobuf:"bytes,13,opt,name=submit_polling_answer,json=submitPollingAnswer,proto3,oneof"` // only for learner
}

type ModifyLiveLessonStateRequest_RequestRecording struct {
	RequestRecording bool `protobuf:"varint,14,opt,name=request_recording,json=requestRecording,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_StopRecording struct {
	StopRecording bool `protobuf:"varint,15,opt,name=stop_recording,json=stopRecording,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_Spotlight_ struct {
	Spotlight *ModifyLiveLessonStateRequest_Spotlight `protobuf:"bytes,16,opt,name=spotlight,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_WhiteboardZoomState_ struct {
	WhiteboardZoomState *ModifyLiveLessonStateRequest_WhiteboardZoomState `protobuf:"bytes,17,opt,name=whiteboard_zoom_state,json=whiteboardZoomState,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_AnnotationDisableAll struct {
	AnnotationDisableAll bool `protobuf:"varint,18,opt,name=annotation_disable_all,json=annotationDisableAll,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_ChatEnable struct {
	ChatEnable *ModifyLiveLessonStateRequest_Learners `protobuf:"bytes,19,opt,name=chat_enable,json=chatEnable,proto3,oneof"` // only for teacher
}

type ModifyLiveLessonStateRequest_ChatDisable struct {
	ChatDisable *ModifyLiveLessonStateRequest_Learners `protobuf:"bytes,20,opt,name=chat_disable,json=chatDisable,proto3,oneof"` // only for teacher
}

func (*ModifyLiveLessonStateRequest_ShareAMaterial) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_StopSharingMaterial) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_FoldHandAll) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_FoldUserHand) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_RaiseHand) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_HandOff) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_AnnotationEnable) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_AnnotationDisable) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_StartPolling) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_StopPolling) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_EndPolling) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_SubmitPollingAnswer) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_RequestRecording) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_StopRecording) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_Spotlight_) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_WhiteboardZoomState_) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_AnnotationDisableAll) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_ChatEnable) isModifyLiveLessonStateRequest_Command() {}

func (*ModifyLiveLessonStateRequest_ChatDisable) isModifyLiveLessonStateRequest_Command() {}

type ModifyLiveLessonStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyLiveLessonStateResponse) Reset() {
	*x = ModifyLiveLessonStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveLessonStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveLessonStateResponse) ProtoMessage() {}

func (x *ModifyLiveLessonStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveLessonStateResponse.ProtoReflect.Descriptor instead.
func (*ModifyLiveLessonStateResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{22}
}

type LiveLessonStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LiveLessonStateRequest) Reset() {
	*x = LiveLessonStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonStateRequest) ProtoMessage() {}

func (x *LiveLessonStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonStateRequest.ProtoReflect.Descriptor instead.
func (*LiveLessonStateRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{23}
}

func (x *LiveLessonStateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LiveLessonStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CurrentMaterial     *LiveLessonState_CurrentMaterial     `protobuf:"bytes,2,opt,name=current_material,json=currentMaterial,proto3" json:"current_material,omitempty"`
	UsersState          *LiveLessonStateResponse_UsersState  `protobuf:"bytes,3,opt,name=users_state,json=usersState,proto3" json:"users_state,omitempty"` // student can only see each person's state
	CurrentTime         *timestamppb.Timestamp               `protobuf:"bytes,4,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
	CurrentPolling      *LiveLessonState_CurrentPolling      `protobuf:"bytes,5,opt,name=current_polling,json=currentPolling,proto3" json:"current_polling,omitempty"`
	Recording           *LiveLessonState_Recording           `protobuf:"bytes,6,opt,name=recording,proto3" json:"recording,omitempty"`
	Spotlight           *LiveLessonState_Spotlight           `protobuf:"bytes,7,opt,name=spotlight,proto3" json:"spotlight,omitempty"`
	WhiteboardZoomState *LiveLessonState_WhiteboardZoomState `protobuf:"bytes,8,opt,name=whiteboard_zoom_state,json=whiteboardZoomState,proto3" json:"whiteboard_zoom_state,omitempty"`
}

func (x *LiveLessonStateResponse) Reset() {
	*x = LiveLessonStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonStateResponse) ProtoMessage() {}

func (x *LiveLessonStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonStateResponse.ProtoReflect.Descriptor instead.
func (*LiveLessonStateResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{24}
}

func (x *LiveLessonStateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LiveLessonStateResponse) GetCurrentMaterial() *LiveLessonState_CurrentMaterial {
	if x != nil {
		return x.CurrentMaterial
	}
	return nil
}

func (x *LiveLessonStateResponse) GetUsersState() *LiveLessonStateResponse_UsersState {
	if x != nil {
		return x.UsersState
	}
	return nil
}

func (x *LiveLessonStateResponse) GetCurrentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

func (x *LiveLessonStateResponse) GetCurrentPolling() *LiveLessonState_CurrentPolling {
	if x != nil {
		return x.CurrentPolling
	}
	return nil
}

func (x *LiveLessonStateResponse) GetRecording() *LiveLessonState_Recording {
	if x != nil {
		return x.Recording
	}
	return nil
}

func (x *LiveLessonStateResponse) GetSpotlight() *LiveLessonState_Spotlight {
	if x != nil {
		return x.Spotlight
	}
	return nil
}

func (x *LiveLessonStateResponse) GetWhiteboardZoomState() *LiveLessonState_WhiteboardZoomState {
	if x != nil {
		return x.WhiteboardZoomState
	}
	return nil
}

type DynamicFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicFieldId string    `protobuf:"bytes,1,opt,name=dynamic_field_id,json=dynamicFieldId,proto3" json:"dynamic_field_id,omitempty"`
	ValueType      ValueType `protobuf:"varint,2,opt,name=value_type,json=valueType,proto3,enum=bob.v1.ValueType" json:"value_type,omitempty"`
	// Types that are assignable to Value:
	//
	//	*DynamicFieldValue_IntValue
	//	*DynamicFieldValue_StringValue
	//	*DynamicFieldValue_BoolValue
	//	*DynamicFieldValue_IntArrayValue_
	//	*DynamicFieldValue_StringArrayValue_
	//	*DynamicFieldValue_IntSetValue_
	//	*DynamicFieldValue_StringSetValue_
	Value            isDynamicFieldValue_Value `protobuf_oneof:"value"`
	FieldRenderGuide []byte                    `protobuf:"bytes,10,opt,name=field_render_guide,json=fieldRenderGuide,proto3" json:"field_render_guide,omitempty"`
}

func (x *DynamicFieldValue) Reset() {
	*x = DynamicFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicFieldValue) ProtoMessage() {}

func (x *DynamicFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicFieldValue.ProtoReflect.Descriptor instead.
func (*DynamicFieldValue) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{25}
}

func (x *DynamicFieldValue) GetDynamicFieldId() string {
	if x != nil {
		return x.DynamicFieldId
	}
	return ""
}

func (x *DynamicFieldValue) GetValueType() ValueType {
	if x != nil {
		return x.ValueType
	}
	return ValueType_VALUE_TYPE_INT
}

func (m *DynamicFieldValue) GetValue() isDynamicFieldValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DynamicFieldValue) GetIntValue() int32 {
	if x, ok := x.GetValue().(*DynamicFieldValue_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *DynamicFieldValue) GetStringValue() string {
	if x, ok := x.GetValue().(*DynamicFieldValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *DynamicFieldValue) GetBoolValue() bool {
	if x, ok := x.GetValue().(*DynamicFieldValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *DynamicFieldValue) GetIntArrayValue() *DynamicFieldValue_IntArrayValue {
	if x, ok := x.GetValue().(*DynamicFieldValue_IntArrayValue_); ok {
		return x.IntArrayValue
	}
	return nil
}

func (x *DynamicFieldValue) GetStringArrayValue() *DynamicFieldValue_StringArrayValue {
	if x, ok := x.GetValue().(*DynamicFieldValue_StringArrayValue_); ok {
		return x.StringArrayValue
	}
	return nil
}

func (x *DynamicFieldValue) GetIntSetValue() *DynamicFieldValue_IntSetValue {
	if x, ok := x.GetValue().(*DynamicFieldValue_IntSetValue_); ok {
		return x.IntSetValue
	}
	return nil
}

func (x *DynamicFieldValue) GetStringSetValue() *DynamicFieldValue_StringSetValue {
	if x, ok := x.GetValue().(*DynamicFieldValue_StringSetValue_); ok {
		return x.StringSetValue
	}
	return nil
}

func (x *DynamicFieldValue) GetFieldRenderGuide() []byte {
	if x != nil {
		return x.FieldRenderGuide
	}
	return nil
}

type isDynamicFieldValue_Value interface {
	isDynamicFieldValue_Value()
}

type DynamicFieldValue_IntValue struct {
	IntValue int32 `protobuf:"varint,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

type DynamicFieldValue_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type DynamicFieldValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,5,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type DynamicFieldValue_IntArrayValue_ struct {
	IntArrayValue *DynamicFieldValue_IntArrayValue `protobuf:"bytes,6,opt,name=int_array_value,json=intArrayValue,proto3,oneof"`
}

type DynamicFieldValue_StringArrayValue_ struct {
	StringArrayValue *DynamicFieldValue_StringArrayValue `protobuf:"bytes,7,opt,name=string_array_value,json=stringArrayValue,proto3,oneof"`
}

type DynamicFieldValue_IntSetValue_ struct {
	IntSetValue *DynamicFieldValue_IntSetValue `protobuf:"bytes,8,opt,name=int_set_value,json=intSetValue,proto3,oneof"`
}

type DynamicFieldValue_StringSetValue_ struct {
	StringSetValue *DynamicFieldValue_StringSetValue `protobuf:"bytes,9,opt,name=string_set_value,json=stringSetValue,proto3,oneof"`
}

func (*DynamicFieldValue_IntValue) isDynamicFieldValue_Value() {}

func (*DynamicFieldValue_StringValue) isDynamicFieldValue_Value() {}

func (*DynamicFieldValue_BoolValue) isDynamicFieldValue_Value() {}

func (*DynamicFieldValue_IntArrayValue_) isDynamicFieldValue_Value() {}

func (*DynamicFieldValue_StringArrayValue_) isDynamicFieldValue_Value() {}

func (*DynamicFieldValue_IntSetValue_) isDynamicFieldValue_Value() {}

func (*DynamicFieldValue_StringSetValue_) isDynamicFieldValue_Value() {}

type IndividualLessonReportDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string               `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId         string               `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	AttendanceStatus StudentAttendStatus  `protobuf:"varint,3,opt,name=attendance_status,json=attendanceStatus,proto3,enum=bob.v1.StudentAttendStatus" json:"attendance_status,omitempty"`
	AttendanceRemark string               `protobuf:"bytes,4,opt,name=attendance_remark,json=attendanceRemark,proto3" json:"attendance_remark,omitempty"`
	FieldValues      []*DynamicFieldValue `protobuf:"bytes,5,rep,name=field_values,json=fieldValues,proto3" json:"field_values,omitempty"`
}

func (x *IndividualLessonReportDetail) Reset() {
	*x = IndividualLessonReportDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndividualLessonReportDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndividualLessonReportDetail) ProtoMessage() {}

func (x *IndividualLessonReportDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndividualLessonReportDetail.ProtoReflect.Descriptor instead.
func (*IndividualLessonReportDetail) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{26}
}

func (x *IndividualLessonReportDetail) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *IndividualLessonReportDetail) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *IndividualLessonReportDetail) GetAttendanceStatus() StudentAttendStatus {
	if x != nil {
		return x.AttendanceStatus
	}
	return StudentAttendStatus_STUDENT_ATTEND_STATUS_EMPTY
}

func (x *IndividualLessonReportDetail) GetAttendanceRemark() string {
	if x != nil {
		return x.AttendanceRemark
	}
	return ""
}

func (x *IndividualLessonReportDetail) GetFieldValues() []*DynamicFieldValue {
	if x != nil {
		return x.FieldValues
	}
	return nil
}

type CreateIndividualLessonReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime    *timestamppb.Timestamp          `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime      *timestamppb.Timestamp          `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	TeacherIds   []string                        `protobuf:"bytes,3,rep,name=teacher_ids,json=teacherIds,proto3" json:"teacher_ids,omitempty"`
	ReportDetail []*IndividualLessonReportDetail `protobuf:"bytes,4,rep,name=report_detail,json=reportDetail,proto3" json:"report_detail,omitempty"`
}

func (x *CreateIndividualLessonReportRequest) Reset() {
	*x = CreateIndividualLessonReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIndividualLessonReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndividualLessonReportRequest) ProtoMessage() {}

func (x *CreateIndividualLessonReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndividualLessonReportRequest.ProtoReflect.Descriptor instead.
func (*CreateIndividualLessonReportRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{27}
}

func (x *CreateIndividualLessonReportRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateIndividualLessonReportRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateIndividualLessonReportRequest) GetTeacherIds() []string {
	if x != nil {
		return x.TeacherIds
	}
	return nil
}

func (x *CreateIndividualLessonReportRequest) GetReportDetail() []*IndividualLessonReportDetail {
	if x != nil {
		return x.ReportDetail
	}
	return nil
}

type CreateIndividualLessonReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateIndividualLessonReportResponse) Reset() {
	*x = CreateIndividualLessonReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIndividualLessonReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndividualLessonReportResponse) ProtoMessage() {}

func (x *CreateIndividualLessonReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndividualLessonReportResponse.ProtoReflect.Descriptor instead.
func (*CreateIndividualLessonReportResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{28}
}

func (x *CreateIndividualLessonReportResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type WriteLessonReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonReportId string                                         `protobuf:"bytes,1,opt,name=lesson_report_id,json=lessonReportId,proto3" json:"lesson_report_id,omitempty"`
	LessonId       string                                         `protobuf:"bytes,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"` // required
	Details        []*WriteLessonReportRequest_LessonReportDetail `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	FeatureName    string                                         `protobuf:"bytes,4,opt,name=feature_name,json=featureName,proto3" json:"feature_name,omitempty"`
}

func (x *WriteLessonReportRequest) Reset() {
	*x = WriteLessonReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteLessonReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteLessonReportRequest) ProtoMessage() {}

func (x *WriteLessonReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteLessonReportRequest.ProtoReflect.Descriptor instead.
func (*WriteLessonReportRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{29}
}

func (x *WriteLessonReportRequest) GetLessonReportId() string {
	if x != nil {
		return x.LessonReportId
	}
	return ""
}

func (x *WriteLessonReportRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *WriteLessonReportRequest) GetDetails() []*WriteLessonReportRequest_LessonReportDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *WriteLessonReportRequest) GetFeatureName() string {
	if x != nil {
		return x.FeatureName
	}
	return ""
}

type SubmitLessonReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonReportId string `protobuf:"bytes,1,opt,name=lesson_report_id,json=lessonReportId,proto3" json:"lesson_report_id,omitempty"`
}

func (x *SubmitLessonReportResponse) Reset() {
	*x = SubmitLessonReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitLessonReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitLessonReportResponse) ProtoMessage() {}

func (x *SubmitLessonReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitLessonReportResponse.ProtoReflect.Descriptor instead.
func (*SubmitLessonReportResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{30}
}

func (x *SubmitLessonReportResponse) GetLessonReportId() string {
	if x != nil {
		return x.LessonReportId
	}
	return ""
}

type SaveDraftLessonReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonReportId string `protobuf:"bytes,1,opt,name=lesson_report_id,json=lessonReportId,proto3" json:"lesson_report_id,omitempty"`
}

func (x *SaveDraftLessonReportResponse) Reset() {
	*x = SaveDraftLessonReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDraftLessonReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDraftLessonReportResponse) ProtoMessage() {}

func (x *SaveDraftLessonReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDraftLessonReportResponse.ProtoReflect.Descriptor instead.
func (*SaveDraftLessonReportResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{31}
}

func (x *SaveDraftLessonReportResponse) GetLessonReportId() string {
	if x != nil {
		return x.LessonReportId
	}
	return ""
}

type GetPartnerDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type DomainType `protobuf:"varint,1,opt,name=type,proto3,enum=bob.v1.DomainType" json:"type,omitempty"` //requird
}

func (x *GetPartnerDomainRequest) Reset() {
	*x = GetPartnerDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnerDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnerDomainRequest) ProtoMessage() {}

func (x *GetPartnerDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnerDomainRequest.ProtoReflect.Descriptor instead.
func (*GetPartnerDomainRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{32}
}

func (x *GetPartnerDomainRequest) GetType() DomainType {
	if x != nil {
		return x.Type
	}
	return DomainType_DOMAIN_TYPE_BO
}

type GetPartnerDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *GetPartnerDomainResponse) Reset() {
	*x = GetPartnerDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnerDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnerDomainResponse) ProtoMessage() {}

func (x *GetPartnerDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnerDomainResponse.ProtoReflect.Descriptor instead.
func (*GetPartnerDomainResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{33}
}

func (x *GetPartnerDomainResponse) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type Recurrence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *Recurrence) Reset() {
	*x = Recurrence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recurrence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recurrence) ProtoMessage() {}

func (x *Recurrence) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recurrence.ProtoReflect.Descriptor instead.
func (*Recurrence) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{34}
}

func (x *Recurrence) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type Reallocate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalLessonId string `protobuf:"bytes,1,opt,name=original_lesson_id,json=originalLessonId,proto3" json:"original_lesson_id,omitempty"`
}

func (x *Reallocate) Reset() {
	*x = Reallocate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reallocate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reallocate) ProtoMessage() {}

func (x *Reallocate) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reallocate.ProtoReflect.Descriptor instead.
func (*Reallocate) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{35}
}

func (x *Reallocate) GetOriginalLessonId() string {
	if x != nil {
		return x.OriginalLessonId
	}
	return ""
}

type ZoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoomLink         string                     `protobuf:"bytes,1,opt,name=zoom_link,json=zoomLink,proto3" json:"zoom_link,omitempty"`
	ZoomAccountOwner string                     `protobuf:"bytes,2,opt,name=zoom_account_owner,json=zoomAccountOwner,proto3" json:"zoom_account_owner,omitempty"`
	ZoomId           string                     `protobuf:"bytes,3,opt,name=zoom_id,json=zoomId,proto3" json:"zoom_id,omitempty"`
	Occurrences      []*ZoomInfo_OccurrenceZoom `protobuf:"bytes,4,rep,name=occurrences,proto3" json:"occurrences,omitempty"`
}

func (x *ZoomInfo) Reset() {
	*x = ZoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomInfo) ProtoMessage() {}

func (x *ZoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomInfo.ProtoReflect.Descriptor instead.
func (*ZoomInfo) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{36}
}

func (x *ZoomInfo) GetZoomLink() string {
	if x != nil {
		return x.ZoomLink
	}
	return ""
}

func (x *ZoomInfo) GetZoomAccountOwner() string {
	if x != nil {
		return x.ZoomAccountOwner
	}
	return ""
}

func (x *ZoomInfo) GetZoomId() string {
	if x != nil {
		return x.ZoomId
	}
	return ""
}

func (x *ZoomInfo) GetOccurrences() []*ZoomInfo_OccurrenceZoom {
	if x != nil {
		return x.Occurrences
	}
	return nil
}

type CreateLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime        *timestamppb.Timestamp             `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // required
	EndTime          *timestamppb.Timestamp             `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // required
	TeachingMedium   v1.LessonTeachingMedium            `protobuf:"varint,3,opt,name=teaching_medium,json=teachingMedium,proto3,enum=common.v1.LessonTeachingMedium" json:"teaching_medium,omitempty"`
	TeachingMethod   v1.LessonTeachingMethod            `protobuf:"varint,4,opt,name=teaching_method,json=teachingMethod,proto3,enum=common.v1.LessonTeachingMethod" json:"teaching_method,omitempty"`
	TeacherIds       []string                           `protobuf:"bytes,5,rep,name=teacher_ids,json=teacherIds,proto3" json:"teacher_ids,omitempty"` // required
	CenterId         string                             `protobuf:"bytes,6,opt,name=center_id,json=centerId,proto3" json:"center_id,omitempty"`       // required
	StudentInfoList  []*CreateLessonRequest_StudentInfo `protobuf:"bytes,7,rep,name=student_info_list,json=studentInfoList,proto3" json:"student_info_list,omitempty"`
	Materials        []*Material                        `protobuf:"bytes,8,rep,name=materials,proto3" json:"materials,omitempty"`
	SavingOption     *CreateLessonRequest_SavingOption  `protobuf:"bytes,9,opt,name=saving_option,json=savingOption,proto3" json:"saving_option,omitempty"` // required
	ClassId          string                             `protobuf:"bytes,10,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	CourseId         string                             `protobuf:"bytes,11,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	SchedulingStatus LessonStatus                       `protobuf:"varint,12,opt,name=scheduling_status,json=schedulingStatus,proto3,enum=bob.v1.LessonStatus" json:"scheduling_status,omitempty"`
	TimeZone         string                             `protobuf:"bytes,13,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	ClassroomIds     []string                           `protobuf:"bytes,14,rep,name=classroom_ids,json=classroomIds,proto3" json:"classroom_ids,omitempty"`
	ZoomInfo         *ZoomInfo                          `protobuf:"bytes,15,opt,name=zoom_info,json=zoomInfo,proto3" json:"zoom_info,omitempty"`
}

func (x *CreateLessonRequest) Reset() {
	*x = CreateLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonRequest) ProtoMessage() {}

func (x *CreateLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonRequest.ProtoReflect.Descriptor instead.
func (*CreateLessonRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{37}
}

func (x *CreateLessonRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateLessonRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateLessonRequest) GetTeachingMedium() v1.LessonTeachingMedium {
	if x != nil {
		return x.TeachingMedium
	}
	return v1.LessonTeachingMedium_LESSON_TEACHING_MEDIUM_OFFLINE
}

func (x *CreateLessonRequest) GetTeachingMethod() v1.LessonTeachingMethod {
	if x != nil {
		return x.TeachingMethod
	}
	return v1.LessonTeachingMethod_LESSON_TEACHING_METHOD_INDIVIDUAL
}

func (x *CreateLessonRequest) GetTeacherIds() []string {
	if x != nil {
		return x.TeacherIds
	}
	return nil
}

func (x *CreateLessonRequest) GetCenterId() string {
	if x != nil {
		return x.CenterId
	}
	return ""
}

func (x *CreateLessonRequest) GetStudentInfoList() []*CreateLessonRequest_StudentInfo {
	if x != nil {
		return x.StudentInfoList
	}
	return nil
}

func (x *CreateLessonRequest) GetMaterials() []*Material {
	if x != nil {
		return x.Materials
	}
	return nil
}

func (x *CreateLessonRequest) GetSavingOption() *CreateLessonRequest_SavingOption {
	if x != nil {
		return x.SavingOption
	}
	return nil
}

func (x *CreateLessonRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *CreateLessonRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *CreateLessonRequest) GetSchedulingStatus() LessonStatus {
	if x != nil {
		return x.SchedulingStatus
	}
	return LessonStatus_LESSON_SCHEDULING_STATUS_PUBLISHED
}

func (x *CreateLessonRequest) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

func (x *CreateLessonRequest) GetClassroomIds() []string {
	if x != nil {
		return x.ClassroomIds
	}
	return nil
}

func (x *CreateLessonRequest) GetZoomInfo() *ZoomInfo {
	if x != nil {
		return x.ZoomInfo
	}
	return nil
}

type CreateLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateLessonResponse) Reset() {
	*x = CreateLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonResponse) ProtoMessage() {}

func (x *CreateLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonResponse.ProtoReflect.Descriptor instead.
func (*CreateLessonResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{38}
}

func (x *CreateLessonResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RetrieveLessonsFilterV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Deprecated: Do not use.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Deprecated: Do not use.
	DateOfWeek int32    `protobuf:"varint,3,opt,name=date_of_week,json=dateOfWeek,proto3" json:"date_of_week,omitempty"`
	TimeZone   string   `protobuf:"bytes,4,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	TeacherIds []string `protobuf:"bytes,5,rep,name=teacher_ids,json=teacherIds,proto3" json:"teacher_ids,omitempty"`
	// Deprecated: Do not use.
	CenterId   string   `protobuf:"bytes,6,opt,name=center_id,json=centerId,proto3" json:"center_id,omitempty"`
	StudentIds []string `protobuf:"bytes,7,rep,name=student_ids,json=studentIds,proto3" json:"student_ids,omitempty"`
	CourseIds  []string `protobuf:"bytes,8,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	// Deprecated: Do not use.
	Grade            int32                       `protobuf:"varint,9,opt,name=grade,proto3" json:"grade,omitempty"`
	FromDate         *timestamppb.Timestamp      `protobuf:"bytes,10,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate           *timestamppb.Timestamp      `protobuf:"bytes,11,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
	DateOfWeeks      []v1.DateOfWeek             `protobuf:"varint,12,rep,packed,name=date_of_weeks,json=dateOfWeeks,proto3,enum=common.v1.DateOfWeek" json:"date_of_weeks,omitempty"`
	CenterIds        []string                    `protobuf:"bytes,13,rep,name=center_ids,json=centerIds,proto3" json:"center_ids,omitempty"`
	Grades           []int32                     `protobuf:"varint,14,rep,packed,name=grades,proto3" json:"grades,omitempty"`
	FromTime         *durationpb.Duration        `protobuf:"bytes,15,opt,name=from_time,json=fromTime,proto3" json:"from_time,omitempty"` // time in day UTC
	ToTime           *durationpb.Duration        `protobuf:"bytes,16,opt,name=to_time,json=toTime,proto3" json:"to_time,omitempty"`       // time in day UTC
	SchedulingStatus []v1.LessonSchedulingStatus `protobuf:"varint,17,rep,packed,name=scheduling_status,json=schedulingStatus,proto3,enum=common.v1.LessonSchedulingStatus" json:"scheduling_status,omitempty"`
	ClassIds         []string                    `protobuf:"bytes,18,rep,name=class_ids,json=classIds,proto3" json:"class_ids,omitempty"`
	GradesV2         []string                    `protobuf:"bytes,19,rep,name=grades_v2,json=gradesV2,proto3" json:"grades_v2,omitempty"`
}

func (x *RetrieveLessonsFilterV2) Reset() {
	*x = RetrieveLessonsFilterV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLessonsFilterV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLessonsFilterV2) ProtoMessage() {}

func (x *RetrieveLessonsFilterV2) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLessonsFilterV2.ProtoReflect.Descriptor instead.
func (*RetrieveLessonsFilterV2) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{39}
}

// Deprecated: Do not use.
func (x *RetrieveLessonsFilterV2) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

// Deprecated: Do not use.
func (x *RetrieveLessonsFilterV2) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// Deprecated: Do not use.
func (x *RetrieveLessonsFilterV2) GetDateOfWeek() int32 {
	if x != nil {
		return x.DateOfWeek
	}
	return 0
}

func (x *RetrieveLessonsFilterV2) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

func (x *RetrieveLessonsFilterV2) GetTeacherIds() []string {
	if x != nil {
		return x.TeacherIds
	}
	return nil
}

// Deprecated: Do not use.
func (x *RetrieveLessonsFilterV2) GetCenterId() string {
	if x != nil {
		return x.CenterId
	}
	return ""
}

func (x *RetrieveLessonsFilterV2) GetStudentIds() []string {
	if x != nil {
		return x.StudentIds
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

// Deprecated: Do not use.
func (x *RetrieveLessonsFilterV2) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *RetrieveLessonsFilterV2) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetDateOfWeeks() []v1.DateOfWeek {
	if x != nil {
		return x.DateOfWeeks
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetCenterIds() []string {
	if x != nil {
		return x.CenterIds
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetGrades() []int32 {
	if x != nil {
		return x.Grades
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetFromTime() *durationpb.Duration {
	if x != nil {
		return x.FromTime
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetToTime() *durationpb.Duration {
	if x != nil {
		return x.ToTime
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetSchedulingStatus() []v1.LessonSchedulingStatus {
	if x != nil {
		return x.SchedulingStatus
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetClassIds() []string {
	if x != nil {
		return x.ClassIds
	}
	return nil
}

func (x *RetrieveLessonsFilterV2) GetGradesV2() []string {
	if x != nil {
		return x.GradesV2
	}
	return nil
}

type RetrieveLessonsRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging      *v1.Paging               `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Keyword     string                   `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	LessonTime  LessonTime               `protobuf:"varint,3,opt,name=lesson_time,json=lessonTime,proto3,enum=bob.v1.LessonTime" json:"lesson_time,omitempty"`
	CurrentTime *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
	Filter      *RetrieveLessonsFilterV2 `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	LocationIds []string                 `protobuf:"bytes,6,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *RetrieveLessonsRequestV2) Reset() {
	*x = RetrieveLessonsRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLessonsRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLessonsRequestV2) ProtoMessage() {}

func (x *RetrieveLessonsRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLessonsRequestV2.ProtoReflect.Descriptor instead.
func (*RetrieveLessonsRequestV2) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{40}
}

func (x *RetrieveLessonsRequestV2) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RetrieveLessonsRequestV2) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *RetrieveLessonsRequestV2) GetLessonTime() LessonTime {
	if x != nil {
		return x.LessonTime
	}
	return LessonTime_LESSON_TIME_FUTURE
}

func (x *RetrieveLessonsRequestV2) GetCurrentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

func (x *RetrieveLessonsRequestV2) GetFilter() *RetrieveLessonsFilterV2 {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *RetrieveLessonsRequestV2) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type RetrieveLessonsResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items        []*RetrieveLessonsResponseV2_Lesson `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPage     *v1.Paging                          `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage *v1.Paging                          `protobuf:"bytes,3,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	TotalLesson  uint32                              `protobuf:"varint,4,opt,name=total_lesson,json=totalLesson,proto3" json:"total_lesson,omitempty"`
	TotalItems   uint32                              `protobuf:"varint,5,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
}

func (x *RetrieveLessonsResponseV2) Reset() {
	*x = RetrieveLessonsResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLessonsResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLessonsResponseV2) ProtoMessage() {}

func (x *RetrieveLessonsResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLessonsResponseV2.ProtoReflect.Descriptor instead.
func (*RetrieveLessonsResponseV2) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{41}
}

func (x *RetrieveLessonsResponseV2) GetItems() []*RetrieveLessonsResponseV2_Lesson {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RetrieveLessonsResponseV2) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveLessonsResponseV2) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

func (x *RetrieveLessonsResponseV2) GetTotalLesson() uint32 {
	if x != nil {
		return x.TotalLesson
	}
	return 0
}

func (x *RetrieveLessonsResponseV2) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

type UpdateLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId         string                             `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`    // required
	StartTime        *timestamppb.Timestamp             `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // required
	EndTime          *timestamppb.Timestamp             `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // required
	TeachingMedium   v1.LessonTeachingMedium            `protobuf:"varint,4,opt,name=teaching_medium,json=teachingMedium,proto3,enum=common.v1.LessonTeachingMedium" json:"teaching_medium,omitempty"`
	TeachingMethod   v1.LessonTeachingMethod            `protobuf:"varint,5,opt,name=teaching_method,json=teachingMethod,proto3,enum=common.v1.LessonTeachingMethod" json:"teaching_method,omitempty"`
	TeacherIds       []string                           `protobuf:"bytes,6,rep,name=teacher_ids,json=teacherIds,proto3" json:"teacher_ids,omitempty"`                  // required
	CenterId         string                             `protobuf:"bytes,7,opt,name=center_id,json=centerId,proto3" json:"center_id,omitempty"`                        // required
	StudentInfoList  []*UpdateLessonRequest_StudentInfo `protobuf:"bytes,8,rep,name=student_info_list,json=studentInfoList,proto3" json:"student_info_list,omitempty"` // required
	Materials        []*Material                        `protobuf:"bytes,9,rep,name=materials,proto3" json:"materials,omitempty"`
	SavingOption     *UpdateLessonRequest_SavingOption  `protobuf:"bytes,10,opt,name=saving_option,json=savingOption,proto3" json:"saving_option,omitempty"` // required
	ClassId          string                             `protobuf:"bytes,11,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	CourseId         string                             `protobuf:"bytes,12,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	SchedulingStatus LessonStatus                       `protobuf:"varint,13,opt,name=scheduling_status,json=schedulingStatus,proto3,enum=bob.v1.LessonStatus" json:"scheduling_status,omitempty"` // required
	TimeZone         string                             `protobuf:"bytes,14,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	ClassroomIds     []string                           `protobuf:"bytes,15,rep,name=classroom_ids,json=classroomIds,proto3" json:"classroom_ids,omitempty"`
	ZoomInfo         *ZoomInfo                          `protobuf:"bytes,16,opt,name=zoom_info,json=zoomInfo,proto3" json:"zoom_info,omitempty"`
}

func (x *UpdateLessonRequest) Reset() {
	*x = UpdateLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLessonRequest) ProtoMessage() {}

func (x *UpdateLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLessonRequest.ProtoReflect.Descriptor instead.
func (*UpdateLessonRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateLessonRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *UpdateLessonRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateLessonRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UpdateLessonRequest) GetTeachingMedium() v1.LessonTeachingMedium {
	if x != nil {
		return x.TeachingMedium
	}
	return v1.LessonTeachingMedium_LESSON_TEACHING_MEDIUM_OFFLINE
}

func (x *UpdateLessonRequest) GetTeachingMethod() v1.LessonTeachingMethod {
	if x != nil {
		return x.TeachingMethod
	}
	return v1.LessonTeachingMethod_LESSON_TEACHING_METHOD_INDIVIDUAL
}

func (x *UpdateLessonRequest) GetTeacherIds() []string {
	if x != nil {
		return x.TeacherIds
	}
	return nil
}

func (x *UpdateLessonRequest) GetCenterId() string {
	if x != nil {
		return x.CenterId
	}
	return ""
}

func (x *UpdateLessonRequest) GetStudentInfoList() []*UpdateLessonRequest_StudentInfo {
	if x != nil {
		return x.StudentInfoList
	}
	return nil
}

func (x *UpdateLessonRequest) GetMaterials() []*Material {
	if x != nil {
		return x.Materials
	}
	return nil
}

func (x *UpdateLessonRequest) GetSavingOption() *UpdateLessonRequest_SavingOption {
	if x != nil {
		return x.SavingOption
	}
	return nil
}

func (x *UpdateLessonRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *UpdateLessonRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpdateLessonRequest) GetSchedulingStatus() LessonStatus {
	if x != nil {
		return x.SchedulingStatus
	}
	return LessonStatus_LESSON_SCHEDULING_STATUS_PUBLISHED
}

func (x *UpdateLessonRequest) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

func (x *UpdateLessonRequest) GetClassroomIds() []string {
	if x != nil {
		return x.ClassroomIds
	}
	return nil
}

func (x *UpdateLessonRequest) GetZoomInfo() *ZoomInfo {
	if x != nil {
		return x.ZoomInfo
	}
	return nil
}

type UpdateLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLessonResponse) Reset() {
	*x = UpdateLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLessonResponse) ProtoMessage() {}

func (x *UpdateLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLessonResponse.ProtoReflect.Descriptor instead.
func (*UpdateLessonResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{43}
}

type DeleteLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId     string                            `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	SavingOption *DeleteLessonRequest_SavingOption `protobuf:"bytes,2,opt,name=saving_option,json=savingOption,proto3" json:"saving_option,omitempty"`
}

func (x *DeleteLessonRequest) Reset() {
	*x = DeleteLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLessonRequest) ProtoMessage() {}

func (x *DeleteLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLessonRequest.ProtoReflect.Descriptor instead.
func (*DeleteLessonRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteLessonRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *DeleteLessonRequest) GetSavingOption() *DeleteLessonRequest_SavingOption {
	if x != nil {
		return x.SavingOption
	}
	return nil
}

type DeleteLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLessonResponse) Reset() {
	*x = DeleteLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLessonResponse) ProtoMessage() {}

func (x *DeleteLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLessonResponse.ProtoReflect.Descriptor instead.
func (*DeleteLessonResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{45}
}

type RetrieveStudentSubscriptionFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Grade      []string `protobuf:"bytes,1,rep,name=grade,proto3" json:"grade,omitempty"`
	CourseId   []string `protobuf:"bytes,2,rep,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ClassId    []string `protobuf:"bytes,3,rep,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	LocationId []string `protobuf:"bytes,4,rep,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	GradesV2   []string `protobuf:"bytes,5,rep,name=grades_v2,json=gradesV2,proto3" json:"grades_v2,omitempty"`
}

func (x *RetrieveStudentSubscriptionFilter) Reset() {
	*x = RetrieveStudentSubscriptionFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStudentSubscriptionFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStudentSubscriptionFilter) ProtoMessage() {}

func (x *RetrieveStudentSubscriptionFilter) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStudentSubscriptionFilter.ProtoReflect.Descriptor instead.
func (*RetrieveStudentSubscriptionFilter) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{46}
}

func (x *RetrieveStudentSubscriptionFilter) GetGrade() []string {
	if x != nil {
		return x.Grade
	}
	return nil
}

func (x *RetrieveStudentSubscriptionFilter) GetCourseId() []string {
	if x != nil {
		return x.CourseId
	}
	return nil
}

func (x *RetrieveStudentSubscriptionFilter) GetClassId() []string {
	if x != nil {
		return x.ClassId
	}
	return nil
}

func (x *RetrieveStudentSubscriptionFilter) GetLocationId() []string {
	if x != nil {
		return x.LocationId
	}
	return nil
}

func (x *RetrieveStudentSubscriptionFilter) GetGradesV2() []string {
	if x != nil {
		return x.GradesV2
	}
	return nil
}

type RetrieveStudentSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging     *v1.Paging                         `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Keyword    string                             `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Filter     *RetrieveStudentSubscriptionFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	LessonDate *timestamppb.Timestamp             `protobuf:"bytes,4,opt,name=lesson_date,json=lessonDate,proto3" json:"lesson_date,omitempty"`
}

func (x *RetrieveStudentSubscriptionRequest) Reset() {
	*x = RetrieveStudentSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStudentSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStudentSubscriptionRequest) ProtoMessage() {}

func (x *RetrieveStudentSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStudentSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*RetrieveStudentSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{47}
}

func (x *RetrieveStudentSubscriptionRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RetrieveStudentSubscriptionRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *RetrieveStudentSubscriptionRequest) GetFilter() *RetrieveStudentSubscriptionFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *RetrieveStudentSubscriptionRequest) GetLessonDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LessonDate
	}
	return nil
}

type RetrieveStudentSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items        []*RetrieveStudentSubscriptionResponse_StudentSubscription `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPage     *v1.Paging                                                 `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage *v1.Paging                                                 `protobuf:"bytes,3,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	TotalItems   uint32                                                     `protobuf:"varint,4,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
}

func (x *RetrieveStudentSubscriptionResponse) Reset() {
	*x = RetrieveStudentSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStudentSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStudentSubscriptionResponse) ProtoMessage() {}

func (x *RetrieveStudentSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStudentSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*RetrieveStudentSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{48}
}

func (x *RetrieveStudentSubscriptionResponse) GetItems() []*RetrieveStudentSubscriptionResponse_StudentSubscription {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RetrieveStudentSubscriptionResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveStudentSubscriptionResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

func (x *RetrieveStudentSubscriptionResponse) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

type GetStudentCourseSubscriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*GetStudentCourseSubscriptionsRequest_StudentCourseSubscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	LocationId    string                                                            `protobuf:"bytes,4,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
}

func (x *GetStudentCourseSubscriptionsRequest) Reset() {
	*x = GetStudentCourseSubscriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentCourseSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentCourseSubscriptionsRequest) ProtoMessage() {}

func (x *GetStudentCourseSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentCourseSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*GetStudentCourseSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{49}
}

func (x *GetStudentCourseSubscriptionsRequest) GetSubscriptions() []*GetStudentCourseSubscriptionsRequest_StudentCourseSubscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *GetStudentCourseSubscriptionsRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

type GetStudentCourseSubscriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetStudentCourseSubscriptionsResponse_StudentSubscription `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetStudentCourseSubscriptionsResponse) Reset() {
	*x = GetStudentCourseSubscriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentCourseSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentCourseSubscriptionsResponse) ProtoMessage() {}

func (x *GetStudentCourseSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentCourseSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*GetStudentCourseSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{50}
}

func (x *GetStudentCourseSubscriptionsResponse) GetItems() []*GetStudentCourseSubscriptionsResponse_StudentSubscription {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetTeachersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeacherIds []string `protobuf:"bytes,1,rep,name=teacher_ids,json=teacherIds,proto3" json:"teacher_ids,omitempty"`
}

func (x *GetTeachersRequest) Reset() {
	*x = GetTeachersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeachersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeachersRequest) ProtoMessage() {}

func (x *GetTeachersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeachersRequest.ProtoReflect.Descriptor instead.
func (*GetTeachersRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{51}
}

func (x *GetTeachersRequest) GetTeacherIds() []string {
	if x != nil {
		return x.TeacherIds
	}
	return nil
}

type GetTeachersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teachers []*GetTeachersResponse_TeacherInfo `protobuf:"bytes,1,rep,name=teachers,proto3" json:"teachers,omitempty"`
}

func (x *GetTeachersResponse) Reset() {
	*x = GetTeachersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeachersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeachersResponse) ProtoMessage() {}

func (x *GetTeachersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeachersResponse.ProtoReflect.Descriptor instead.
func (*GetTeachersResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{52}
}

func (x *GetTeachersResponse) GetTeachers() []*GetTeachersResponse_TeacherInfo {
	if x != nil {
		return x.Teachers
	}
	return nil
}

type GetUserGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // required
}

func (x *GetUserGroupRequest) Reset() {
	*x = GetUserGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGroupRequest) ProtoMessage() {}

func (x *GetUserGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGroupRequest.ProtoReflect.Descriptor instead.
func (*GetUserGroupRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{53}
}

func (x *GetUserGroupRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroup string `protobuf:"bytes,1,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
}

func (x *GetUserGroupResponse) Reset() {
	*x = GetUserGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGroupResponse) ProtoMessage() {}

func (x *GetUserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGroupResponse.ProtoReflect.Descriptor instead.
func (*GetUserGroupResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{54}
}

func (x *GetUserGroupResponse) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

type Material_BrightcoveVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"` // required
}

func (x *Material_BrightcoveVideo) Reset() {
	*x = Material_BrightcoveVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Material_BrightcoveVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Material_BrightcoveVideo) ProtoMessage() {}

func (x *Material_BrightcoveVideo) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Material_BrightcoveVideo.ProtoReflect.Descriptor instead.
func (*Material_BrightcoveVideo) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Material_BrightcoveVideo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Material_BrightcoveVideo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RetrieveLessonsResponse_Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Status     string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	TeacherIds []string               `protobuf:"bytes,6,rep,name=teacher_ids,json=teacherIds,proto3" json:"teacher_ids,omitempty"`
	CourseIds  []string               `protobuf:"bytes,7,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	ClassId    string                 `protobuf:"bytes,8,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	LessonType v1.LessonType          `protobuf:"varint,9,opt,name=lesson_type,json=lessonType,proto3,enum=common.v1.LessonType" json:"lesson_type,omitempty"`
	ZoomLink   string                 `protobuf:"bytes,10,opt,name=zoom_link,json=zoomLink,proto3" json:"zoom_link,omitempty"`
}

func (x *RetrieveLessonsResponse_Lesson) Reset() {
	*x = RetrieveLessonsResponse_Lesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLessonsResponse_Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLessonsResponse_Lesson) ProtoMessage() {}

func (x *RetrieveLessonsResponse_Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLessonsResponse_Lesson.ProtoReflect.Descriptor instead.
func (*RetrieveLessonsResponse_Lesson) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{11, 0}
}

func (x *RetrieveLessonsResponse_Lesson) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RetrieveLessonsResponse_Lesson) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RetrieveLessonsResponse_Lesson) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RetrieveLessonsResponse_Lesson) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *RetrieveLessonsResponse_Lesson) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RetrieveLessonsResponse_Lesson) GetTeacherIds() []string {
	if x != nil {
		return x.TeacherIds
	}
	return nil
}

func (x *RetrieveLessonsResponse_Lesson) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *RetrieveLessonsResponse_Lesson) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *RetrieveLessonsResponse_Lesson) GetLessonType() v1.LessonType {
	if x != nil {
		return x.LessonType
	}
	return v1.LessonType_LESSON_TYPE_NONE
}

func (x *RetrieveLessonsResponse_Lesson) GetZoomLink() string {
	if x != nil {
		return x.ZoomLink
	}
	return ""
}

type LiveLessonState_CurrentMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId   string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`       // required
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // required
	// Types that are assignable to State:
	//
	//	*LiveLessonState_CurrentMaterial_VideoState_
	//	*LiveLessonState_CurrentMaterial_PdfState
	//	*LiveLessonState_CurrentMaterial_AudioState_
	State isLiveLessonState_CurrentMaterial_State `protobuf_oneof:"state"`
	Data  *Media                                  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"` // required
}

func (x *LiveLessonState_CurrentMaterial) Reset() {
	*x = LiveLessonState_CurrentMaterial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_CurrentMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_CurrentMaterial) ProtoMessage() {}

func (x *LiveLessonState_CurrentMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_CurrentMaterial.ProtoReflect.Descriptor instead.
func (*LiveLessonState_CurrentMaterial) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 0}
}

func (x *LiveLessonState_CurrentMaterial) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *LiveLessonState_CurrentMaterial) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (m *LiveLessonState_CurrentMaterial) GetState() isLiveLessonState_CurrentMaterial_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *LiveLessonState_CurrentMaterial) GetVideoState() *LiveLessonState_CurrentMaterial_VideoState {
	if x, ok := x.GetState().(*LiveLessonState_CurrentMaterial_VideoState_); ok {
		return x.VideoState
	}
	return nil
}

func (x *LiveLessonState_CurrentMaterial) GetPdfState() *LiveLessonState_CurrentMaterial_PDFState {
	if x, ok := x.GetState().(*LiveLessonState_CurrentMaterial_PdfState); ok {
		return x.PdfState
	}
	return nil
}

func (x *LiveLessonState_CurrentMaterial) GetAudioState() *LiveLessonState_CurrentMaterial_AudioState {
	if x, ok := x.GetState().(*LiveLessonState_CurrentMaterial_AudioState_); ok {
		return x.AudioState
	}
	return nil
}

func (x *LiveLessonState_CurrentMaterial) GetData() *Media {
	if x != nil {
		return x.Data
	}
	return nil
}

type isLiveLessonState_CurrentMaterial_State interface {
	isLiveLessonState_CurrentMaterial_State()
}

type LiveLessonState_CurrentMaterial_VideoState_ struct {
	VideoState *LiveLessonState_CurrentMaterial_VideoState `protobuf:"bytes,3,opt,name=video_state,json=videoState,proto3,oneof"`
}

type LiveLessonState_CurrentMaterial_PdfState struct {
	PdfState *LiveLessonState_CurrentMaterial_PDFState `protobuf:"bytes,4,opt,name=pdf_state,json=pdfState,proto3,oneof"`
}

type LiveLessonState_CurrentMaterial_AudioState_ struct {
	AudioState *LiveLessonState_CurrentMaterial_AudioState `protobuf:"bytes,6,opt,name=audio_state,json=audioState,proto3,oneof"` // 5 is used by Media already
}

func (*LiveLessonState_CurrentMaterial_VideoState_) isLiveLessonState_CurrentMaterial_State() {}

func (*LiveLessonState_CurrentMaterial_PdfState) isLiveLessonState_CurrentMaterial_State() {}

func (*LiveLessonState_CurrentMaterial_AudioState_) isLiveLessonState_CurrentMaterial_State() {}

type LiveLessonState_HandsUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LiveLessonState_HandsUp) Reset() {
	*x = LiveLessonState_HandsUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_HandsUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_HandsUp) ProtoMessage() {}

func (x *LiveLessonState_HandsUp) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_HandsUp.ProtoReflect.Descriptor instead.
func (*LiveLessonState_HandsUp) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 1}
}

func (x *LiveLessonState_HandsUp) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *LiveLessonState_HandsUp) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type LiveLessonState_Annotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LiveLessonState_Annotation) Reset() {
	*x = LiveLessonState_Annotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_Annotation) ProtoMessage() {}

func (x *LiveLessonState_Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_Annotation.ProtoReflect.Descriptor instead.
func (*LiveLessonState_Annotation) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 2}
}

func (x *LiveLessonState_Annotation) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *LiveLessonState_Annotation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type LiveLessonState_PollingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer    string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	IsCorrect bool   `protobuf:"varint,2,opt,name=is_correct,json=isCorrect,proto3" json:"is_correct,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *LiveLessonState_PollingOption) Reset() {
	*x = LiveLessonState_PollingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_PollingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_PollingOption) ProtoMessage() {}

func (x *LiveLessonState_PollingOption) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_PollingOption.ProtoReflect.Descriptor instead.
func (*LiveLessonState_PollingOption) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 3}
}

func (x *LiveLessonState_PollingOption) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *LiveLessonState_PollingOption) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

func (x *LiveLessonState_PollingOption) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type LiveLessonState_CurrentPolling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options   []*LiveLessonState_PollingOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	Status    PollingState                     `protobuf:"varint,2,opt,name=status,proto3,enum=bob.v1.PollingState" json:"status,omitempty"`
	CreatedAt *timestamppb.Timestamp           `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StoppedAt *timestamppb.Timestamp           `protobuf:"bytes,4,opt,name=stopped_at,json=stoppedAt,proto3" json:"stopped_at,omitempty"`
	IsShared  bool                             `protobuf:"varint,5,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
	Question  string                           `protobuf:"bytes,6,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *LiveLessonState_CurrentPolling) Reset() {
	*x = LiveLessonState_CurrentPolling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_CurrentPolling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_CurrentPolling) ProtoMessage() {}

func (x *LiveLessonState_CurrentPolling) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_CurrentPolling.ProtoReflect.Descriptor instead.
func (*LiveLessonState_CurrentPolling) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 4}
}

func (x *LiveLessonState_CurrentPolling) GetOptions() []*LiveLessonState_PollingOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LiveLessonState_CurrentPolling) GetStatus() PollingState {
	if x != nil {
		return x.Status
	}
	return PollingState_POLLING_STATE_STARTED
}

func (x *LiveLessonState_CurrentPolling) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LiveLessonState_CurrentPolling) GetStoppedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StoppedAt
	}
	return nil
}

func (x *LiveLessonState_CurrentPolling) GetIsShared() bool {
	if x != nil {
		return x.IsShared
	}
	return false
}

func (x *LiveLessonState_CurrentPolling) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type LiveLessonState_PollingAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringArrayValue []string               `protobuf:"bytes,1,rep,name=string_array_value,json=stringArrayValue,proto3" json:"string_array_value,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LiveLessonState_PollingAnswer) Reset() {
	*x = LiveLessonState_PollingAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_PollingAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_PollingAnswer) ProtoMessage() {}

func (x *LiveLessonState_PollingAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_PollingAnswer.ProtoReflect.Descriptor instead.
func (*LiveLessonState_PollingAnswer) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 5}
}

func (x *LiveLessonState_PollingAnswer) GetStringArrayValue() []string {
	if x != nil {
		return x.StringArrayValue
	}
	return nil
}

func (x *LiveLessonState_PollingAnswer) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type LiveLessonState_Recording struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRecording bool   `protobuf:"varint,1,opt,name=is_recording,json=isRecording,proto3" json:"is_recording,omitempty"`
	Creator     string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *LiveLessonState_Recording) Reset() {
	*x = LiveLessonState_Recording{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_Recording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_Recording) ProtoMessage() {}

func (x *LiveLessonState_Recording) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_Recording.ProtoReflect.Descriptor instead.
func (*LiveLessonState_Recording) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 6}
}

func (x *LiveLessonState_Recording) GetIsRecording() bool {
	if x != nil {
		return x.IsRecording
	}
	return false
}

func (x *LiveLessonState_Recording) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type LiveLessonState_Spotlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSpotlight bool   `protobuf:"varint,2,opt,name=is_spotlight,json=isSpotlight,proto3" json:"is_spotlight,omitempty"`
	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *LiveLessonState_Spotlight) Reset() {
	*x = LiveLessonState_Spotlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_Spotlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_Spotlight) ProtoMessage() {}

func (x *LiveLessonState_Spotlight) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_Spotlight.ProtoReflect.Descriptor instead.
func (*LiveLessonState_Spotlight) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 7}
}

func (x *LiveLessonState_Spotlight) GetIsSpotlight() bool {
	if x != nil {
		return x.IsSpotlight
	}
	return false
}

func (x *LiveLessonState_Spotlight) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LiveLessonState_WhiteboardZoomState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdfScaleRatio float64 `protobuf:"fixed64,1,opt,name=pdf_scale_ratio,json=pdfScaleRatio,proto3" json:"pdf_scale_ratio,omitempty"`
	CenterX       float64 `protobuf:"fixed64,2,opt,name=center_x,json=centerX,proto3" json:"center_x,omitempty"`
	CenterY       float64 `protobuf:"fixed64,3,opt,name=center_y,json=centerY,proto3" json:"center_y,omitempty"`
	PdfWidth      float64 `protobuf:"fixed64,4,opt,name=pdf_width,json=pdfWidth,proto3" json:"pdf_width,omitempty"`
	PdfHeight     float64 `protobuf:"fixed64,5,opt,name=pdf_height,json=pdfHeight,proto3" json:"pdf_height,omitempty"`
}

func (x *LiveLessonState_WhiteboardZoomState) Reset() {
	*x = LiveLessonState_WhiteboardZoomState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_WhiteboardZoomState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_WhiteboardZoomState) ProtoMessage() {}

func (x *LiveLessonState_WhiteboardZoomState) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_WhiteboardZoomState.ProtoReflect.Descriptor instead.
func (*LiveLessonState_WhiteboardZoomState) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 8}
}

func (x *LiveLessonState_WhiteboardZoomState) GetPdfScaleRatio() float64 {
	if x != nil {
		return x.PdfScaleRatio
	}
	return 0
}

func (x *LiveLessonState_WhiteboardZoomState) GetCenterX() float64 {
	if x != nil {
		return x.CenterX
	}
	return 0
}

func (x *LiveLessonState_WhiteboardZoomState) GetCenterY() float64 {
	if x != nil {
		return x.CenterY
	}
	return 0
}

func (x *LiveLessonState_WhiteboardZoomState) GetPdfWidth() float64 {
	if x != nil {
		return x.PdfWidth
	}
	return 0
}

func (x *LiveLessonState_WhiteboardZoomState) GetPdfHeight() float64 {
	if x != nil {
		return x.PdfHeight
	}
	return 0
}

type LiveLessonState_Chat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LiveLessonState_Chat) Reset() {
	*x = LiveLessonState_Chat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_Chat) ProtoMessage() {}

func (x *LiveLessonState_Chat) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_Chat.ProtoReflect.Descriptor instead.
func (*LiveLessonState_Chat) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 9}
}

func (x *LiveLessonState_Chat) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *LiveLessonState_Chat) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type LiveLessonState_CurrentMaterial_VideoState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime *durationpb.Duration `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"` // the elapsed time since the video started playing.
	PlayerState PlayerState          `protobuf:"varint,2,opt,name=player_state,json=playerState,proto3,enum=bob.v1.PlayerState" json:"player_state,omitempty"`
}

func (x *LiveLessonState_CurrentMaterial_VideoState) Reset() {
	*x = LiveLessonState_CurrentMaterial_VideoState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_CurrentMaterial_VideoState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_CurrentMaterial_VideoState) ProtoMessage() {}

func (x *LiveLessonState_CurrentMaterial_VideoState) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_CurrentMaterial_VideoState.ProtoReflect.Descriptor instead.
func (*LiveLessonState_CurrentMaterial_VideoState) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 0, 0}
}

func (x *LiveLessonState_CurrentMaterial_VideoState) GetCurrentTime() *durationpb.Duration {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

func (x *LiveLessonState_CurrentMaterial_VideoState) GetPlayerState() PlayerState {
	if x != nil {
		return x.PlayerState
	}
	return PlayerState_PLAYER_STATE_PAUSE
}

type LiveLessonState_CurrentMaterial_PDFState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LiveLessonState_CurrentMaterial_PDFState) Reset() {
	*x = LiveLessonState_CurrentMaterial_PDFState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_CurrentMaterial_PDFState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_CurrentMaterial_PDFState) ProtoMessage() {}

func (x *LiveLessonState_CurrentMaterial_PDFState) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_CurrentMaterial_PDFState.ProtoReflect.Descriptor instead.
func (*LiveLessonState_CurrentMaterial_PDFState) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 0, 1}
}

type LiveLessonState_CurrentMaterial_AudioState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime *durationpb.Duration `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"` // the elapsed time since the audio started playing.
	PlayerState PlayerState          `protobuf:"varint,2,opt,name=player_state,json=playerState,proto3,enum=bob.v1.PlayerState" json:"player_state,omitempty"`
}

func (x *LiveLessonState_CurrentMaterial_AudioState) Reset() {
	*x = LiveLessonState_CurrentMaterial_AudioState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonState_CurrentMaterial_AudioState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonState_CurrentMaterial_AudioState) ProtoMessage() {}

func (x *LiveLessonState_CurrentMaterial_AudioState) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonState_CurrentMaterial_AudioState.ProtoReflect.Descriptor instead.
func (*LiveLessonState_CurrentMaterial_AudioState) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{20, 0, 2}
}

func (x *LiveLessonState_CurrentMaterial_AudioState) GetCurrentTime() *durationpb.Duration {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

func (x *LiveLessonState_CurrentMaterial_AudioState) GetPlayerState() PlayerState {
	if x != nil {
		return x.PlayerState
	}
	return PlayerState_PLAYER_STATE_PAUSE
}

type ModifyLiveLessonStateRequest_CurrentMaterialCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId string `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// Types that are assignable to State:
	//
	//	*ModifyLiveLessonStateRequest_CurrentMaterialCommand_VideoState
	//	*ModifyLiveLessonStateRequest_CurrentMaterialCommand_PdfState
	//	*ModifyLiveLessonStateRequest_CurrentMaterialCommand_AudioState
	State isModifyLiveLessonStateRequest_CurrentMaterialCommand_State `protobuf_oneof:"state"`
}

func (x *ModifyLiveLessonStateRequest_CurrentMaterialCommand) Reset() {
	*x = ModifyLiveLessonStateRequest_CurrentMaterialCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveLessonStateRequest_CurrentMaterialCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveLessonStateRequest_CurrentMaterialCommand) ProtoMessage() {}

func (x *ModifyLiveLessonStateRequest_CurrentMaterialCommand) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveLessonStateRequest_CurrentMaterialCommand.ProtoReflect.Descriptor instead.
func (*ModifyLiveLessonStateRequest_CurrentMaterialCommand) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ModifyLiveLessonStateRequest_CurrentMaterialCommand) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (m *ModifyLiveLessonStateRequest_CurrentMaterialCommand) GetState() isModifyLiveLessonStateRequest_CurrentMaterialCommand_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest_CurrentMaterialCommand) GetVideoState() *LiveLessonState_CurrentMaterial_VideoState {
	if x, ok := x.GetState().(*ModifyLiveLessonStateRequest_CurrentMaterialCommand_VideoState); ok {
		return x.VideoState
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest_CurrentMaterialCommand) GetPdfState() *LiveLessonState_CurrentMaterial_PDFState {
	if x, ok := x.GetState().(*ModifyLiveLessonStateRequest_CurrentMaterialCommand_PdfState); ok {
		return x.PdfState
	}
	return nil
}

func (x *ModifyLiveLessonStateRequest_CurrentMaterialCommand) GetAudioState() *LiveLessonState_CurrentMaterial_AudioState {
	if x, ok := x.GetState().(*ModifyLiveLessonStateRequest_CurrentMaterialCommand_AudioState); ok {
		return x.AudioState
	}
	return nil
}

type isModifyLiveLessonStateRequest_CurrentMaterialCommand_State interface {
	isModifyLiveLessonStateRequest_CurrentMaterialCommand_State()
}

type ModifyLiveLessonStateRequest_CurrentMaterialCommand_VideoState struct {
	VideoState *LiveLessonState_CurrentMaterial_VideoState `protobuf:"bytes,2,opt,name=video_state,json=videoState,proto3,oneof"`
}

type ModifyLiveLessonStateRequest_CurrentMaterialCommand_PdfState struct {
	PdfState *LiveLessonState_CurrentMaterial_PDFState `protobuf:"bytes,3,opt,name=pdf_state,json=pdfState,proto3,oneof"`
}

type ModifyLiveLessonStateRequest_CurrentMaterialCommand_AudioState struct {
	AudioState *LiveLessonState_CurrentMaterial_AudioState `protobuf:"bytes,4,opt,name=audio_state,json=audioState,proto3,oneof"`
}

func (*ModifyLiveLessonStateRequest_CurrentMaterialCommand_VideoState) isModifyLiveLessonStateRequest_CurrentMaterialCommand_State() {
}

func (*ModifyLiveLessonStateRequest_CurrentMaterialCommand_PdfState) isModifyLiveLessonStateRequest_CurrentMaterialCommand_State() {
}

func (*ModifyLiveLessonStateRequest_CurrentMaterialCommand_AudioState) isModifyLiveLessonStateRequest_CurrentMaterialCommand_State() {
}

type ModifyLiveLessonStateRequest_Learners struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Learners []string `protobuf:"bytes,1,rep,name=learners,proto3" json:"learners,omitempty"`
}

func (x *ModifyLiveLessonStateRequest_Learners) Reset() {
	*x = ModifyLiveLessonStateRequest_Learners{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveLessonStateRequest_Learners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveLessonStateRequest_Learners) ProtoMessage() {}

func (x *ModifyLiveLessonStateRequest_Learners) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveLessonStateRequest_Learners.ProtoReflect.Descriptor instead.
func (*ModifyLiveLessonStateRequest_Learners) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{21, 1}
}

func (x *ModifyLiveLessonStateRequest_Learners) GetLearners() []string {
	if x != nil {
		return x.Learners
	}
	return nil
}

type ModifyLiveLessonStateRequest_PollingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer    string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	IsCorrect bool   `protobuf:"varint,2,opt,name=is_correct,json=isCorrect,proto3" json:"is_correct,omitempty"`
}

func (x *ModifyLiveLessonStateRequest_PollingOption) Reset() {
	*x = ModifyLiveLessonStateRequest_PollingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveLessonStateRequest_PollingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveLessonStateRequest_PollingOption) ProtoMessage() {}

func (x *ModifyLiveLessonStateRequest_PollingOption) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveLessonStateRequest_PollingOption.ProtoReflect.Descriptor instead.
func (*ModifyLiveLessonStateRequest_PollingOption) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{21, 2}
}

func (x *ModifyLiveLessonStateRequest_PollingOption) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *ModifyLiveLessonStateRequest_PollingOption) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type ModifyLiveLessonStateRequest_PollingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*ModifyLiveLessonStateRequest_PollingOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *ModifyLiveLessonStateRequest_PollingOptions) Reset() {
	*x = ModifyLiveLessonStateRequest_PollingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveLessonStateRequest_PollingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveLessonStateRequest_PollingOptions) ProtoMessage() {}

func (x *ModifyLiveLessonStateRequest_PollingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveLessonStateRequest_PollingOptions.ProtoReflect.Descriptor instead.
func (*ModifyLiveLessonStateRequest_PollingOptions) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{21, 3}
}

func (x *ModifyLiveLessonStateRequest_PollingOptions) GetOptions() []*ModifyLiveLessonStateRequest_PollingOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type ModifyLiveLessonStateRequest_PollingAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringArrayValue []string `protobuf:"bytes,1,rep,name=string_array_value,json=stringArrayValue,proto3" json:"string_array_value,omitempty"`
}

func (x *ModifyLiveLessonStateRequest_PollingAnswer) Reset() {
	*x = ModifyLiveLessonStateRequest_PollingAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveLessonStateRequest_PollingAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveLessonStateRequest_PollingAnswer) ProtoMessage() {}

func (x *ModifyLiveLessonStateRequest_PollingAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveLessonStateRequest_PollingAnswer.ProtoReflect.Descriptor instead.
func (*ModifyLiveLessonStateRequest_PollingAnswer) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{21, 4}
}

func (x *ModifyLiveLessonStateRequest_PollingAnswer) GetStringArrayValue() []string {
	if x != nil {
		return x.StringArrayValue
	}
	return nil
}

type ModifyLiveLessonStateRequest_Spotlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsSpotlight bool   `protobuf:"varint,2,opt,name=is_spotlight,json=isSpotlight,proto3" json:"is_spotlight,omitempty"`
}

func (x *ModifyLiveLessonStateRequest_Spotlight) Reset() {
	*x = ModifyLiveLessonStateRequest_Spotlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveLessonStateRequest_Spotlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveLessonStateRequest_Spotlight) ProtoMessage() {}

func (x *ModifyLiveLessonStateRequest_Spotlight) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveLessonStateRequest_Spotlight.ProtoReflect.Descriptor instead.
func (*ModifyLiveLessonStateRequest_Spotlight) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{21, 5}
}

func (x *ModifyLiveLessonStateRequest_Spotlight) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ModifyLiveLessonStateRequest_Spotlight) GetIsSpotlight() bool {
	if x != nil {
		return x.IsSpotlight
	}
	return false
}

type ModifyLiveLessonStateRequest_WhiteboardZoomState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdfScaleRatio float64 `protobuf:"fixed64,1,opt,name=pdf_scale_ratio,json=pdfScaleRatio,proto3" json:"pdf_scale_ratio,omitempty"`
	CenterX       float64 `protobuf:"fixed64,2,opt,name=center_x,json=centerX,proto3" json:"center_x,omitempty"`
	CenterY       float64 `protobuf:"fixed64,3,opt,name=center_y,json=centerY,proto3" json:"center_y,omitempty"`
	PdfWidth      float64 `protobuf:"fixed64,4,opt,name=pdf_width,json=pdfWidth,proto3" json:"pdf_width,omitempty"`
	PdfHeight     float64 `protobuf:"fixed64,5,opt,name=pdf_height,json=pdfHeight,proto3" json:"pdf_height,omitempty"`
}

func (x *ModifyLiveLessonStateRequest_WhiteboardZoomState) Reset() {
	*x = ModifyLiveLessonStateRequest_WhiteboardZoomState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLiveLessonStateRequest_WhiteboardZoomState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLiveLessonStateRequest_WhiteboardZoomState) ProtoMessage() {}

func (x *ModifyLiveLessonStateRequest_WhiteboardZoomState) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLiveLessonStateRequest_WhiteboardZoomState.ProtoReflect.Descriptor instead.
func (*ModifyLiveLessonStateRequest_WhiteboardZoomState) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{21, 6}
}

func (x *ModifyLiveLessonStateRequest_WhiteboardZoomState) GetPdfScaleRatio() float64 {
	if x != nil {
		return x.PdfScaleRatio
	}
	return 0
}

func (x *ModifyLiveLessonStateRequest_WhiteboardZoomState) GetCenterX() float64 {
	if x != nil {
		return x.CenterX
	}
	return 0
}

func (x *ModifyLiveLessonStateRequest_WhiteboardZoomState) GetCenterY() float64 {
	if x != nil {
		return x.CenterY
	}
	return 0
}

func (x *ModifyLiveLessonStateRequest_WhiteboardZoomState) GetPdfWidth() float64 {
	if x != nil {
		return x.PdfWidth
	}
	return 0
}

func (x *ModifyLiveLessonStateRequest_WhiteboardZoomState) GetPdfHeight() float64 {
	if x != nil {
		return x.PdfHeight
	}
	return 0
}

type LiveLessonStateResponse_UsersState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Learners []*LiveLessonStateResponse_UsersState_LearnerState `protobuf:"bytes,1,rep,name=learners,proto3" json:"learners,omitempty"`
}

func (x *LiveLessonStateResponse_UsersState) Reset() {
	*x = LiveLessonStateResponse_UsersState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonStateResponse_UsersState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonStateResponse_UsersState) ProtoMessage() {}

func (x *LiveLessonStateResponse_UsersState) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonStateResponse_UsersState.ProtoReflect.Descriptor instead.
func (*LiveLessonStateResponse_UsersState) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{24, 0}
}

func (x *LiveLessonStateResponse_UsersState) GetLearners() []*LiveLessonStateResponse_UsersState_LearnerState {
	if x != nil {
		return x.Learners
	}
	return nil
}

type LiveLessonStateResponse_UsersState_LearnerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string                         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HandsUp       *LiveLessonState_HandsUp       `protobuf:"bytes,2,opt,name=hands_up,json=handsUp,proto3" json:"hands_up,omitempty"`
	Annotation    *LiveLessonState_Annotation    `protobuf:"bytes,3,opt,name=annotation,proto3" json:"annotation,omitempty"`
	PollingAnswer *LiveLessonState_PollingAnswer `protobuf:"bytes,4,opt,name=polling_answer,json=pollingAnswer,proto3" json:"polling_answer,omitempty"`
	Chat          *LiveLessonState_Chat          `protobuf:"bytes,5,opt,name=chat,proto3" json:"chat,omitempty"`
}

func (x *LiveLessonStateResponse_UsersState_LearnerState) Reset() {
	*x = LiveLessonStateResponse_UsersState_LearnerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLessonStateResponse_UsersState_LearnerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLessonStateResponse_UsersState_LearnerState) ProtoMessage() {}

func (x *LiveLessonStateResponse_UsersState_LearnerState) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLessonStateResponse_UsersState_LearnerState.ProtoReflect.Descriptor instead.
func (*LiveLessonStateResponse_UsersState_LearnerState) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{24, 0, 0}
}

func (x *LiveLessonStateResponse_UsersState_LearnerState) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LiveLessonStateResponse_UsersState_LearnerState) GetHandsUp() *LiveLessonState_HandsUp {
	if x != nil {
		return x.HandsUp
	}
	return nil
}

func (x *LiveLessonStateResponse_UsersState_LearnerState) GetAnnotation() *LiveLessonState_Annotation {
	if x != nil {
		return x.Annotation
	}
	return nil
}

func (x *LiveLessonStateResponse_UsersState_LearnerState) GetPollingAnswer() *LiveLessonState_PollingAnswer {
	if x != nil {
		return x.PollingAnswer
	}
	return nil
}

func (x *LiveLessonStateResponse_UsersState_LearnerState) GetChat() *LiveLessonState_Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

type DynamicFieldValue_IntSetValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArrayValue []int32 `protobuf:"varint,1,rep,packed,name=array_value,json=arrayValue,proto3" json:"array_value,omitempty"`
}

func (x *DynamicFieldValue_IntSetValue) Reset() {
	*x = DynamicFieldValue_IntSetValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicFieldValue_IntSetValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicFieldValue_IntSetValue) ProtoMessage() {}

func (x *DynamicFieldValue_IntSetValue) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicFieldValue_IntSetValue.ProtoReflect.Descriptor instead.
func (*DynamicFieldValue_IntSetValue) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{25, 0}
}

func (x *DynamicFieldValue_IntSetValue) GetArrayValue() []int32 {
	if x != nil {
		return x.ArrayValue
	}
	return nil
}

type DynamicFieldValue_StringSetValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArrayValue []string `protobuf:"bytes,1,rep,name=array_value,json=arrayValue,proto3" json:"array_value,omitempty"`
}

func (x *DynamicFieldValue_StringSetValue) Reset() {
	*x = DynamicFieldValue_StringSetValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicFieldValue_StringSetValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicFieldValue_StringSetValue) ProtoMessage() {}

func (x *DynamicFieldValue_StringSetValue) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicFieldValue_StringSetValue.ProtoReflect.Descriptor instead.
func (*DynamicFieldValue_StringSetValue) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{25, 1}
}

func (x *DynamicFieldValue_StringSetValue) GetArrayValue() []string {
	if x != nil {
		return x.ArrayValue
	}
	return nil
}

type DynamicFieldValue_IntArrayValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArrayValue []int32 `protobuf:"varint,1,rep,packed,name=array_value,json=arrayValue,proto3" json:"array_value,omitempty"`
}

func (x *DynamicFieldValue_IntArrayValue) Reset() {
	*x = DynamicFieldValue_IntArrayValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicFieldValue_IntArrayValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicFieldValue_IntArrayValue) ProtoMessage() {}

func (x *DynamicFieldValue_IntArrayValue) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicFieldValue_IntArrayValue.ProtoReflect.Descriptor instead.
func (*DynamicFieldValue_IntArrayValue) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{25, 2}
}

func (x *DynamicFieldValue_IntArrayValue) GetArrayValue() []int32 {
	if x != nil {
		return x.ArrayValue
	}
	return nil
}

type DynamicFieldValue_StringArrayValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArrayValue []string `protobuf:"bytes,1,rep,name=array_value,json=arrayValue,proto3" json:"array_value,omitempty"`
}

func (x *DynamicFieldValue_StringArrayValue) Reset() {
	*x = DynamicFieldValue_StringArrayValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicFieldValue_StringArrayValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicFieldValue_StringArrayValue) ProtoMessage() {}

func (x *DynamicFieldValue_StringArrayValue) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicFieldValue_StringArrayValue.ProtoReflect.Descriptor instead.
func (*DynamicFieldValue_StringArrayValue) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{25, 3}
}

func (x *DynamicFieldValue_StringArrayValue) GetArrayValue() []string {
	if x != nil {
		return x.ArrayValue
	}
	return nil
}

type WriteLessonReportRequest_LessonReportDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string                  `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"` // required
	CourseId         string                  `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	AttendanceStatus StudentAttendStatus     `protobuf:"varint,3,opt,name=attendance_status,json=attendanceStatus,proto3,enum=bob.v1.StudentAttendStatus" json:"attendance_status,omitempty"`
	AttendanceRemark string                  `protobuf:"bytes,4,opt,name=attendance_remark,json=attendanceRemark,proto3" json:"attendance_remark,omitempty"`
	FieldValues      []*DynamicFieldValue    `protobuf:"bytes,5,rep,name=field_values,json=fieldValues,proto3" json:"field_values,omitempty"`
	AttendanceNotice StudentAttendanceNotice `protobuf:"varint,6,opt,name=attendance_notice,json=attendanceNotice,proto3,enum=bob.v1.StudentAttendanceNotice" json:"attendance_notice,omitempty"`
	AttendanceReason StudentAttendanceReason `protobuf:"varint,7,opt,name=attendance_reason,json=attendanceReason,proto3,enum=bob.v1.StudentAttendanceReason" json:"attendance_reason,omitempty"`
	AttendanceNote   string                  `protobuf:"bytes,8,opt,name=attendance_note,json=attendanceNote,proto3" json:"attendance_note,omitempty"`
}

func (x *WriteLessonReportRequest_LessonReportDetail) Reset() {
	*x = WriteLessonReportRequest_LessonReportDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteLessonReportRequest_LessonReportDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteLessonReportRequest_LessonReportDetail) ProtoMessage() {}

func (x *WriteLessonReportRequest_LessonReportDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteLessonReportRequest_LessonReportDetail.ProtoReflect.Descriptor instead.
func (*WriteLessonReportRequest_LessonReportDetail) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{29, 0}
}

func (x *WriteLessonReportRequest_LessonReportDetail) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *WriteLessonReportRequest_LessonReportDetail) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *WriteLessonReportRequest_LessonReportDetail) GetAttendanceStatus() StudentAttendStatus {
	if x != nil {
		return x.AttendanceStatus
	}
	return StudentAttendStatus_STUDENT_ATTEND_STATUS_EMPTY
}

func (x *WriteLessonReportRequest_LessonReportDetail) GetAttendanceRemark() string {
	if x != nil {
		return x.AttendanceRemark
	}
	return ""
}

func (x *WriteLessonReportRequest_LessonReportDetail) GetFieldValues() []*DynamicFieldValue {
	if x != nil {
		return x.FieldValues
	}
	return nil
}

func (x *WriteLessonReportRequest_LessonReportDetail) GetAttendanceNotice() StudentAttendanceNotice {
	if x != nil {
		return x.AttendanceNotice
	}
	return StudentAttendanceNotice_NOTICE_EMPTY
}

func (x *WriteLessonReportRequest_LessonReportDetail) GetAttendanceReason() StudentAttendanceReason {
	if x != nil {
		return x.AttendanceReason
	}
	return StudentAttendanceReason_REASON_EMPTY
}

func (x *WriteLessonReportRequest_LessonReportDetail) GetAttendanceNote() string {
	if x != nil {
		return x.AttendanceNote
	}
	return ""
}

type ZoomInfo_OccurrenceZoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OccurrenceId string `protobuf:"bytes,1,opt,name=occurrence_id,json=occurrenceId,proto3" json:"occurrence_id,omitempty"`
	StartTime    string `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration     int32  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Status       string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ZoomInfo_OccurrenceZoom) Reset() {
	*x = ZoomInfo_OccurrenceZoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoomInfo_OccurrenceZoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomInfo_OccurrenceZoom) ProtoMessage() {}

func (x *ZoomInfo_OccurrenceZoom) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomInfo_OccurrenceZoom.ProtoReflect.Descriptor instead.
func (*ZoomInfo_OccurrenceZoom) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{36, 0}
}

func (x *ZoomInfo_OccurrenceZoom) GetOccurrenceId() string {
	if x != nil {
		return x.OccurrenceId
	}
	return ""
}

func (x *ZoomInfo_OccurrenceZoom) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ZoomInfo_OccurrenceZoom) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ZoomInfo_OccurrenceZoom) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateLessonRequest_StudentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string                  `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"` // required
	CourseId         string                  `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`    // required
	AttendanceStatus StudentAttendStatus     `protobuf:"varint,3,opt,name=attendance_status,json=attendanceStatus,proto3,enum=bob.v1.StudentAttendStatus" json:"attendance_status,omitempty"`
	LocationId       string                  `protobuf:"bytes,4,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	AttendanceNotice StudentAttendanceNotice `protobuf:"varint,5,opt,name=attendance_notice,json=attendanceNotice,proto3,enum=bob.v1.StudentAttendanceNotice" json:"attendance_notice,omitempty"`
	AttendanceReason StudentAttendanceReason `protobuf:"varint,6,opt,name=attendance_reason,json=attendanceReason,proto3,enum=bob.v1.StudentAttendanceReason" json:"attendance_reason,omitempty"`
	AttendanceNote   string                  `protobuf:"bytes,7,opt,name=attendance_note,json=attendanceNote,proto3" json:"attendance_note,omitempty"`
	Reallocate       *Reallocate             `protobuf:"bytes,8,opt,name=reallocate,proto3" json:"reallocate,omitempty"`
}

func (x *CreateLessonRequest_StudentInfo) Reset() {
	*x = CreateLessonRequest_StudentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLessonRequest_StudentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonRequest_StudentInfo) ProtoMessage() {}

func (x *CreateLessonRequest_StudentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonRequest_StudentInfo.ProtoReflect.Descriptor instead.
func (*CreateLessonRequest_StudentInfo) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{37, 0}
}

func (x *CreateLessonRequest_StudentInfo) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *CreateLessonRequest_StudentInfo) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *CreateLessonRequest_StudentInfo) GetAttendanceStatus() StudentAttendStatus {
	if x != nil {
		return x.AttendanceStatus
	}
	return StudentAttendStatus_STUDENT_ATTEND_STATUS_EMPTY
}

func (x *CreateLessonRequest_StudentInfo) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *CreateLessonRequest_StudentInfo) GetAttendanceNotice() StudentAttendanceNotice {
	if x != nil {
		return x.AttendanceNotice
	}
	return StudentAttendanceNotice_NOTICE_EMPTY
}

func (x *CreateLessonRequest_StudentInfo) GetAttendanceReason() StudentAttendanceReason {
	if x != nil {
		return x.AttendanceReason
	}
	return StudentAttendanceReason_REASON_EMPTY
}

func (x *CreateLessonRequest_StudentInfo) GetAttendanceNote() string {
	if x != nil {
		return x.AttendanceNote
	}
	return ""
}

func (x *CreateLessonRequest_StudentInfo) GetReallocate() *Reallocate {
	if x != nil {
		return x.Reallocate
	}
	return nil
}

type CreateLessonRequest_SavingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method     CreateLessonSavingMethod `protobuf:"varint,1,opt,name=method,proto3,enum=bob.v1.CreateLessonSavingMethod" json:"method,omitempty"`
	Recurrence *Recurrence              `protobuf:"bytes,2,opt,name=recurrence,proto3" json:"recurrence,omitempty"`
}

func (x *CreateLessonRequest_SavingOption) Reset() {
	*x = CreateLessonRequest_SavingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLessonRequest_SavingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonRequest_SavingOption) ProtoMessage() {}

func (x *CreateLessonRequest_SavingOption) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonRequest_SavingOption.ProtoReflect.Descriptor instead.
func (*CreateLessonRequest_SavingOption) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{37, 1}
}

func (x *CreateLessonRequest_SavingOption) GetMethod() CreateLessonSavingMethod {
	if x != nil {
		return x.Method
	}
	return CreateLessonSavingMethod_CREATE_LESSON_SAVING_METHOD_ONE_TIME
}

func (x *CreateLessonRequest_SavingOption) GetRecurrence() *Recurrence {
	if x != nil {
		return x.Recurrence
	}
	return nil
}

type RetrieveLessonsResponseV2_Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartTime        *timestamppb.Timestamp    `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamppb.Timestamp    `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CenterId         string                    `protobuf:"bytes,5,opt,name=center_id,json=centerId,proto3" json:"center_id,omitempty"`
	TeacherIds       []string                  `protobuf:"bytes,6,rep,name=teacher_ids,json=teacherIds,proto3" json:"teacher_ids,omitempty"`
	TeachingMethod   v1.LessonTeachingMethod   `protobuf:"varint,8,opt,name=teaching_method,json=teachingMethod,proto3,enum=common.v1.LessonTeachingMethod" json:"teaching_method,omitempty"`
	TeachingMedium   v1.LessonTeachingMedium   `protobuf:"varint,9,opt,name=teaching_medium,json=teachingMedium,proto3,enum=common.v1.LessonTeachingMedium" json:"teaching_medium,omitempty"`
	CourseId         string                    `protobuf:"bytes,10,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ClassId          string                    `protobuf:"bytes,11,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	SchedulingStatus v1.LessonSchedulingStatus `protobuf:"varint,12,opt,name=scheduling_status,json=schedulingStatus,proto3,enum=common.v1.LessonSchedulingStatus" json:"scheduling_status,omitempty"`
}

func (x *RetrieveLessonsResponseV2_Lesson) Reset() {
	*x = RetrieveLessonsResponseV2_Lesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLessonsResponseV2_Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLessonsResponseV2_Lesson) ProtoMessage() {}

func (x *RetrieveLessonsResponseV2_Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLessonsResponseV2_Lesson.ProtoReflect.Descriptor instead.
func (*RetrieveLessonsResponseV2_Lesson) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{41, 0}
}

func (x *RetrieveLessonsResponseV2_Lesson) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RetrieveLessonsResponseV2_Lesson) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RetrieveLessonsResponseV2_Lesson) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RetrieveLessonsResponseV2_Lesson) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *RetrieveLessonsResponseV2_Lesson) GetCenterId() string {
	if x != nil {
		return x.CenterId
	}
	return ""
}

func (x *RetrieveLessonsResponseV2_Lesson) GetTeacherIds() []string {
	if x != nil {
		return x.TeacherIds
	}
	return nil
}

func (x *RetrieveLessonsResponseV2_Lesson) GetTeachingMethod() v1.LessonTeachingMethod {
	if x != nil {
		return x.TeachingMethod
	}
	return v1.LessonTeachingMethod_LESSON_TEACHING_METHOD_INDIVIDUAL
}

func (x *RetrieveLessonsResponseV2_Lesson) GetTeachingMedium() v1.LessonTeachingMedium {
	if x != nil {
		return x.TeachingMedium
	}
	return v1.LessonTeachingMedium_LESSON_TEACHING_MEDIUM_OFFLINE
}

func (x *RetrieveLessonsResponseV2_Lesson) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *RetrieveLessonsResponseV2_Lesson) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *RetrieveLessonsResponseV2_Lesson) GetSchedulingStatus() v1.LessonSchedulingStatus {
	if x != nil {
		return x.SchedulingStatus
	}
	return v1.LessonSchedulingStatus_LESSON_SCHEDULING_STATUS_DRAFT
}

type UpdateLessonRequest_StudentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string                  `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"` // required
	CourseId         string                  `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`    // required
	AttendanceStatus StudentAttendStatus     `protobuf:"varint,3,opt,name=attendance_status,json=attendanceStatus,proto3,enum=bob.v1.StudentAttendStatus" json:"attendance_status,omitempty"`
	LocationId       string                  `protobuf:"bytes,4,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	AttendanceNotice StudentAttendanceNotice `protobuf:"varint,5,opt,name=attendance_notice,json=attendanceNotice,proto3,enum=bob.v1.StudentAttendanceNotice" json:"attendance_notice,omitempty"`
	AttendanceReason StudentAttendanceReason `protobuf:"varint,6,opt,name=attendance_reason,json=attendanceReason,proto3,enum=bob.v1.StudentAttendanceReason" json:"attendance_reason,omitempty"`
	AttendanceNote   string                  `protobuf:"bytes,7,opt,name=attendance_note,json=attendanceNote,proto3" json:"attendance_note,omitempty"`
	Reallocate       *Reallocate             `protobuf:"bytes,8,opt,name=reallocate,proto3" json:"reallocate,omitempty"`
}

func (x *UpdateLessonRequest_StudentInfo) Reset() {
	*x = UpdateLessonRequest_StudentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLessonRequest_StudentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLessonRequest_StudentInfo) ProtoMessage() {}

func (x *UpdateLessonRequest_StudentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLessonRequest_StudentInfo.ProtoReflect.Descriptor instead.
func (*UpdateLessonRequest_StudentInfo) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{42, 0}
}

func (x *UpdateLessonRequest_StudentInfo) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpdateLessonRequest_StudentInfo) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpdateLessonRequest_StudentInfo) GetAttendanceStatus() StudentAttendStatus {
	if x != nil {
		return x.AttendanceStatus
	}
	return StudentAttendStatus_STUDENT_ATTEND_STATUS_EMPTY
}

func (x *UpdateLessonRequest_StudentInfo) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *UpdateLessonRequest_StudentInfo) GetAttendanceNotice() StudentAttendanceNotice {
	if x != nil {
		return x.AttendanceNotice
	}
	return StudentAttendanceNotice_NOTICE_EMPTY
}

func (x *UpdateLessonRequest_StudentInfo) GetAttendanceReason() StudentAttendanceReason {
	if x != nil {
		return x.AttendanceReason
	}
	return StudentAttendanceReason_REASON_EMPTY
}

func (x *UpdateLessonRequest_StudentInfo) GetAttendanceNote() string {
	if x != nil {
		return x.AttendanceNote
	}
	return ""
}

func (x *UpdateLessonRequest_StudentInfo) GetReallocate() *Reallocate {
	if x != nil {
		return x.Reallocate
	}
	return nil
}

type UpdateLessonRequest_SavingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method     CreateLessonSavingMethod `protobuf:"varint,1,opt,name=method,proto3,enum=bob.v1.CreateLessonSavingMethod" json:"method,omitempty"`
	Recurrence *Recurrence              `protobuf:"bytes,2,opt,name=recurrence,proto3" json:"recurrence,omitempty"`
}

func (x *UpdateLessonRequest_SavingOption) Reset() {
	*x = UpdateLessonRequest_SavingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLessonRequest_SavingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLessonRequest_SavingOption) ProtoMessage() {}

func (x *UpdateLessonRequest_SavingOption) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLessonRequest_SavingOption.ProtoReflect.Descriptor instead.
func (*UpdateLessonRequest_SavingOption) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{42, 1}
}

func (x *UpdateLessonRequest_SavingOption) GetMethod() CreateLessonSavingMethod {
	if x != nil {
		return x.Method
	}
	return CreateLessonSavingMethod_CREATE_LESSON_SAVING_METHOD_ONE_TIME
}

func (x *UpdateLessonRequest_SavingOption) GetRecurrence() *Recurrence {
	if x != nil {
		return x.Recurrence
	}
	return nil
}

type DeleteLessonRequest_SavingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method CreateLessonSavingMethod `protobuf:"varint,1,opt,name=method,proto3,enum=bob.v1.CreateLessonSavingMethod" json:"method,omitempty"`
}

func (x *DeleteLessonRequest_SavingOption) Reset() {
	*x = DeleteLessonRequest_SavingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLessonRequest_SavingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLessonRequest_SavingOption) ProtoMessage() {}

func (x *DeleteLessonRequest_SavingOption) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLessonRequest_SavingOption.ProtoReflect.Descriptor instead.
func (*DeleteLessonRequest_SavingOption) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{44, 0}
}

func (x *DeleteLessonRequest_SavingOption) GetMethod() CreateLessonSavingMethod {
	if x != nil {
		return x.Method
	}
	return CreateLessonSavingMethod_CREATE_LESSON_SAVING_METHOD_ONE_TIME
}

type RetrieveStudentSubscriptionResponse_StudentSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StudentId   string                 `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId    string                 `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Grade       string                 `protobuf:"bytes,4,opt,name=grade,proto3" json:"grade,omitempty"`
	LocationIds []string               `protobuf:"bytes,5,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	ClassId     string                 `protobuf:"bytes,6,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	StartDate   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	GradeV2     string                 `protobuf:"bytes,9,opt,name=grade_v2,json=gradeV2,proto3" json:"grade_v2,omitempty"`
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) Reset() {
	*x = RetrieveStudentSubscriptionResponse_StudentSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStudentSubscriptionResponse_StudentSubscription) ProtoMessage() {}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStudentSubscriptionResponse_StudentSubscription.ProtoReflect.Descriptor instead.
func (*RetrieveStudentSubscriptionResponse_StudentSubscription) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{48, 0}
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *RetrieveStudentSubscriptionResponse_StudentSubscription) GetGradeV2() string {
	if x != nil {
		return x.GradeV2
	}
	return ""
}

type GetStudentCourseSubscriptionsRequest_StudentCourseSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId  string `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *GetStudentCourseSubscriptionsRequest_StudentCourseSubscription) Reset() {
	*x = GetStudentCourseSubscriptionsRequest_StudentCourseSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentCourseSubscriptionsRequest_StudentCourseSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentCourseSubscriptionsRequest_StudentCourseSubscription) ProtoMessage() {}

func (x *GetStudentCourseSubscriptionsRequest_StudentCourseSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentCourseSubscriptionsRequest_StudentCourseSubscription.ProtoReflect.Descriptor instead.
func (*GetStudentCourseSubscriptionsRequest_StudentCourseSubscription) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{49, 0}
}

func (x *GetStudentCourseSubscriptionsRequest_StudentCourseSubscription) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GetStudentCourseSubscriptionsRequest_StudentCourseSubscription) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

type GetStudentCourseSubscriptionsResponse_StudentSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StudentId   string                 `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId    string                 `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Grade       string                 `protobuf:"bytes,4,opt,name=grade,proto3" json:"grade,omitempty"`
	LocationIds []string               `protobuf:"bytes,5,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	StartDate   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	ClassId     string                 `protobuf:"bytes,8,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	GradeV2     string                 `protobuf:"bytes,9,opt,name=grade_v2,json=gradeV2,proto3" json:"grade_v2,omitempty"`
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) Reset() {
	*x = GetStudentCourseSubscriptionsResponse_StudentSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentCourseSubscriptionsResponse_StudentSubscription) ProtoMessage() {}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentCourseSubscriptionsResponse_StudentSubscription.ProtoReflect.Descriptor instead.
func (*GetStudentCourseSubscriptionsResponse_StudentSubscription) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{50, 0}
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *GetStudentCourseSubscriptionsResponse_StudentSubscription) GetGradeV2() string {
	if x != nil {
		return x.GradeV2
	}
	return ""
}

type GetTeachersResponse_TeacherInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetTeachersResponse_TeacherInfo) Reset() {
	*x = GetTeachersResponse_TeacherInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_lessons_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeachersResponse_TeacherInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeachersResponse_TeacherInfo) ProtoMessage() {}

func (x *GetTeachersResponse_TeacherInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_lessons_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeachersResponse_TeacherInfo.ProtoReflect.Descriptor instead.
func (*GetTeachersResponse_TeacherInfo) Descriptor() ([]byte, []int) {
	return file_bob_v1_lessons_proto_rawDescGZIP(), []int{52, 0}
}

func (x *GetTeachersResponse_TeacherInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTeachersResponse_TeacherInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTeachersResponse_TeacherInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetTeachersResponse_TeacherInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_bob_v1_lessons_proto protoreflect.FileDescriptor

var file_bob_v1_lessons_proto_rawDesc = []byte{
	0x0a, 0x14, 0x62, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x12,
	0x62, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x12, 0x62, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x15,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x50, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x6f, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x4e, 0x0a, 0x10, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x4d, 0x0a, 0x10, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6f, 0x76,
	0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e,
	0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6f, 0x76, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x48,
	0x00, 0x52, 0x0f, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6f, 0x76, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x12, 0x1b, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x1a,
	0x37, 0x0a, 0x0f, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6f, 0x76, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0xb0, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x0d,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a,
	0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0xcb, 0x04, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a,
	0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x1a, 0xe6, 0x02, 0x0a, 0x06, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0b,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6f, 0x6d, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x6e,
	0x6b, 0x22, 0xf8, 0x01, 0x0a, 0x24, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x67, 0x0a, 0x25, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x07,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc2, 0x03,
	0x0a, 0x06, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3e, 0x0a, 0x1c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x49, 0x64, 0x73, 0x12,
	0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x31, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6f, 0x6d, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6f, 0x6d, 0x4c, 0x69,
	0x6e, 0x6b, 0x22, 0xc0, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x0e, 0x0a, 0x0f, 0x4c, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xa8, 0x05, 0x0a,
	0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x55, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a,
	0x09, 0x70, 0x64, 0x66, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x44, 0x46, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x70, 0x64, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x55,
	0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x82, 0x01, 0x0a, 0x0a, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x0a, 0x0a,
	0x08, 0x50, 0x44, 0x46, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x82, 0x01, 0x0a, 0x0a, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x5a, 0x0a, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x55, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x1a, 0x5d, 0x0a, 0x0a, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x1a, 0x60, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x1a, 0xae, 0x02, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x78, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a,
	0x48, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x47, 0x0a, 0x09, 0x53, 0x70, 0x6f,
	0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x70, 0x6f,
	0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0xaf, 0x01, 0x0a, 0x13, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x64,
	0x66, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x64, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x58, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x59, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x64, 0x66, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x64, 0x66,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x64, 0x66, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x64, 0x66, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x1a, 0x57, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xee, 0x10,
	0x0a, 0x1c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x67,
	0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x24, 0x0a,
	0x0d, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x48, 0x61, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x66,
	0x6f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x72,
	0x61, 0x69, 0x73, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x09, 0x72, 0x61, 0x69, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x08,
	0x68, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x12, 0x5c, 0x0a, 0x11, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x10, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5e, 0x0a, 0x12, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x72, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69,
	0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x6f,
	0x70, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f,
	0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x0a, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x68, 0x0a, 0x15, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d,
	0x73, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x4e, 0x0a,
	0x09, 0x73, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x6e, 0x0a,
	0x15, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x7a, 0x6f, 0x6f, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x13, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a,
	0x16, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x14, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x50, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0xbb, 0x02, 0x0a, 0x16,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x64, 0x12, 0x55, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x70, 0x64, 0x66, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x44, 0x46, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x70, 0x64, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x26, 0x0a, 0x08, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x73, 0x1a, 0x46, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x1a, 0x5e, 0x0a, 0x0e, 0x50, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3d, 0x0a, 0x0d, 0x50, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x47, 0x0a, 0x09, 0x53, 0x70, 0x6f, 0x74,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x1a, 0xaf, 0x01, 0x0a, 0x13, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x64, 0x66,
	0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x70, 0x64, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x58, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x59, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x64, 0x66, 0x5f, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x64, 0x66, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x64, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x64, 0x66, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x1f,
	0x0a, 0x1d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x28, 0x0a, 0x16, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xcb, 0x07, 0x0a, 0x17, 0x4c, 0x69,
	0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x52, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x4b, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6f, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x09, 0x73,
	0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x5f, 0x0a, 0x15, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x7a, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x13, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x8b, 0x03, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x53, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x1a, 0xa7, 0x02,
	0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x73,
	0x5f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x55, 0x70, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64,
	0x73, 0x55, 0x70, 0x12, 0x42, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0e, 0x70, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x22, 0xa7, 0x06, 0x0a, 0x11, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a,
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x51,
	0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x5a, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4b, 0x0a,
	0x0d, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x65, 0x1a, 0x2e,
	0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x31,
	0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x30, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x33, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72,
	0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x8f, 0x02, 0x0a, 0x1c, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x48,
	0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3c, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x83, 0x02, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x49,
	0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x36, 0x0a, 0x24, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xa0, 0x05, 0x0a, 0x18, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xca, 0x03, 0x0a, 0x12, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x3c, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x4c, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x10, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a,
	0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65,
	0x4e, 0x6f, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x1d,
	0x53, 0x61, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x43,
	0x0a, 0x0a, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xbc, 0x02, 0x0a, 0x08, 0x5a, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x7a, 0x6f, 0x6f, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x7a, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x7a, 0x6f, 0x6f,
	0x6d, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x7a, 0x6f, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x5a,
	0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x0b, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x1a, 0x88, 0x01, 0x0a, 0x0e, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5a, 0x6f, 0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc7,
	0x0a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69,
	0x75, 0x6d, 0x52, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69,
	0x75, 0x6d, 0x12, 0x48, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0e, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x11, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x4d, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x7a,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x7a, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xad, 0x03, 0x0a, 0x0b, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x4c, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x10, 0x61,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x4c, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x10, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x27, 0x0a,
	0x0f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0a,
	0x72, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x1a, 0x7c, 0x0a, 0x0c, 0x53, 0x61,
	0x76, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xc8, 0x06, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x32, 0x12, 0x3d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f,
	0x66, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x09, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x05, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x33,
	0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x74, 0x6f, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x77,
	0x65, 0x65, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x57, 0x65, 0x65,
	0x6b, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a,
	0x07, 0x74, 0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x4e, 0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x12,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x5f, 0x76, 0x32, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x56, 0x32, 0x22, 0xaf, 0x02, 0x0a, 0x18,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x33, 0x0a,
	0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x56, 0x32, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x82, 0x06,
	0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x3e, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xf8, 0x03, 0x0a, 0x06, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x48, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x48, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x64,
	0x69, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x52, 0x0e, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x4e, 0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xe4, 0x0a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64,
	0x69, 0x75, 0x6d, 0x52, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64,
	0x69, 0x75, 0x6d, 0x12, 0x48, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0e, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x11, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73,
	0x12, 0x4d, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x09,
	0x7a, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x7a, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xad, 0x03, 0x0a, 0x0b,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x10, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x4c, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x10,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x12, 0x4c, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x10, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x72, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x1a, 0x7c, 0x0a, 0x0c, 0x53,
	0x61, 0x76, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xcb, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x48, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22,
	0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x5f, 0x76, 0x32, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x56, 0x32, 0x22, 0xe9, 0x01, 0x0a, 0x22, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0xca, 0x04, 0x0a, 0x23, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xc2, 0x02,
	0x0a, 0x13, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x76, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x56, 0x32, 0x22, 0x8e, 0x02, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x57, 0x0a, 0x19, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x22, 0xc5, 0x03, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xc2, 0x02, 0x0a, 0x13, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x76, 0x32, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x56, 0x32, 0x22, 0x35, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x22, 0x84, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x1a,
	0xa7, 0x01, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x2a, 0x57, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x5d, 0x0a, 0x0c, 0x50, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f, 0x4c,
	0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x50, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xb5, 0x01, 0x0a, 0x09, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x03,
	0x12, 0x1b, 0x0a, 0x17, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x04, 0x12, 0x16, 0x0a,
	0x12, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x5f,
	0x53, 0x45, 0x54, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x06,
	0x2a, 0xbb, 0x02, 0x0a, 0x13, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x55, 0x44,
	0x45, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x55,
	0x44, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x53,
	0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x42, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1e, 0x0a,
	0x1a, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4e, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x25, 0x0a,
	0x21, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4e, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x45, 0x41, 0x52,
	0x4c, 0x59, 0x10, 0x04, 0x12, 0x29, 0x0a, 0x25, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f,
	0x41, 0x54, 0x54, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x5f, 0x41, 0x42, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x12,
	0x27, 0x0a, 0x23, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4e,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x45,
	0x44, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x06, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x54, 0x55, 0x44,
	0x45, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x45, 0x10, 0x07, 0x2a, 0x5b,
	0x0a, 0x17, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x54,
	0x49, 0x43, 0x45, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x4e, 0x5f, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4f,
	0x4e, 0x5f, 0x54, 0x48, 0x45, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x4f, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x10, 0x03, 0x2a, 0x7a, 0x0a, 0x17, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x48, 0x59, 0x53,
	0x49, 0x43, 0x41, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x43, 0x48, 0x4f, 0x4f, 0x4c, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x04, 0x2a, 0x52, 0x0a, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x4f, 0x4d,
	0x41, 0x49, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4c, 0x45, 0x41, 0x52, 0x4e, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x70, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x28, 0x0a, 0x24, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10,
	0x00, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x45, 0x53, 0x53,
	0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x52, 0x45, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x2a, 0x5a, 0x0a,
	0x0c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a,
	0x22, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53,
	0x48, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x2a, 0x3a, 0x0a, 0x0a, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x45, 0x53, 0x53, 0x4f,
	0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x4c, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x50,
	0x41, 0x53, 0x54, 0x10, 0x01, 0x32, 0x95, 0x04, 0x0a, 0x15, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4f, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x12, 0x1d, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x09, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x18, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa1, 0x03,
	0x0a, 0x13, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x1d,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x77, 0x0a, 0x19, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a,
	0x0a, 0x15, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd6, 0x02, 0x0a, 0x1b, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x1c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2b, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69,
	0x64, 0x75, 0x61, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61,
	0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x60, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xd2, 0x02, 0x0a, 0x17, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x49, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12,
	0x1b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a,
	0x21, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x56, 0x32, 0x12, 0x49, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x92, 0x02, 0x0a, 0x1a, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2c, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa0, 0x01,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x62,
	0x6f, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_bob_v1_lessons_proto_rawDescOnce sync.Once
	file_bob_v1_lessons_proto_rawDescData = file_bob_v1_lessons_proto_rawDesc
)

func file_bob_v1_lessons_proto_rawDescGZIP() []byte {
	file_bob_v1_lessons_proto_rawDescOnce.Do(func() {
		file_bob_v1_lessons_proto_rawDescData = protoimpl.X.CompressGZIP(file_bob_v1_lessons_proto_rawDescData)
	})
	return file_bob_v1_lessons_proto_rawDescData
}

var file_bob_v1_lessons_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_bob_v1_lessons_proto_msgTypes = make([]protoimpl.MessageInfo, 95)
var file_bob_v1_lessons_proto_goTypes = []interface{}{
	(PlayerState)(0),                                                       // 0: bob.v1.PlayerState
	(PollingState)(0),                                                      // 1: bob.v1.PollingState
	(ValueType)(0),                                                         // 2: bob.v1.ValueType
	(StudentAttendStatus)(0),                                               // 3: bob.v1.StudentAttendStatus
	(StudentAttendanceNotice)(0),                                           // 4: bob.v1.StudentAttendanceNotice
	(StudentAttendanceReason)(0),                                           // 5: bob.v1.StudentAttendanceReason
	(DomainType)(0),                                                        // 6: bob.v1.DomainType
	(CreateLessonSavingMethod)(0),                                          // 7: bob.v1.CreateLessonSavingMethod
	(LessonStatus)(0),                                                      // 8: bob.v1.LessonStatus
	(LessonTime)(0),                                                        // 9: bob.v1.LessonTime
	(*PreparePublishRequest)(nil),                                          // 10: bob.v1.PreparePublishRequest
	(*PreparePublishResponse)(nil),                                         // 11: bob.v1.PreparePublishResponse
	(*UnpublishRequest)(nil),                                               // 12: bob.v1.UnpublishRequest
	(*UnpublishResponse)(nil),                                              // 13: bob.v1.UnpublishResponse
	(*GetStreamingLearnersRequest)(nil),                                    // 14: bob.v1.GetStreamingLearnersRequest
	(*GetStreamingLearnersResponse)(nil),                                   // 15: bob.v1.GetStreamingLearnersResponse
	(*Material)(nil),                                                       // 16: bob.v1.Material
	(*CreateLiveLessonRequest)(nil),                                        // 17: bob.v1.CreateLiveLessonRequest
	(*CreateLiveLessonResponse)(nil),                                       // 18: bob.v1.CreateLiveLessonResponse
	(*RetrieveLessonsFilter)(nil),                                          // 19: bob.v1.RetrieveLessonsFilter
	(*RetrieveLessonsRequest)(nil),                                         // 20: bob.v1.RetrieveLessonsRequest
	(*RetrieveLessonsResponse)(nil),                                        // 21: bob.v1.RetrieveLessonsResponse
	(*RetrieveLiveLessonByLocationsRequest)(nil),                           // 22: bob.v1.RetrieveLiveLessonByLocationsRequest
	(*Pagination)(nil),                                                     // 23: bob.v1.Pagination
	(*RetrieveLiveLessonByLocationsResponse)(nil),                          // 24: bob.v1.RetrieveLiveLessonByLocationsResponse
	(*Lesson)(nil),                                                         // 25: bob.v1.Lesson
	(*UpdateLiveLessonRequest)(nil),                                        // 26: bob.v1.UpdateLiveLessonRequest
	(*UpdateLiveLessonResponse)(nil),                                       // 27: bob.v1.UpdateLiveLessonResponse
	(*DeleteLiveLessonRequest)(nil),                                        // 28: bob.v1.DeleteLiveLessonRequest
	(*DeleteLiveLessonResponse)(nil),                                       // 29: bob.v1.DeleteLiveLessonResponse
	(*LiveLessonState)(nil),                                                // 30: bob.v1.LiveLessonState
	(*ModifyLiveLessonStateRequest)(nil),                                   // 31: bob.v1.ModifyLiveLessonStateRequest
	(*ModifyLiveLessonStateResponse)(nil),                                  // 32: bob.v1.ModifyLiveLessonStateResponse
	(*LiveLessonStateRequest)(nil),                                         // 33: bob.v1.LiveLessonStateRequest
	(*LiveLessonStateResponse)(nil),                                        // 34: bob.v1.LiveLessonStateResponse
	(*DynamicFieldValue)(nil),                                              // 35: bob.v1.DynamicFieldValue
	(*IndividualLessonReportDetail)(nil),                                   // 36: bob.v1.IndividualLessonReportDetail
	(*CreateIndividualLessonReportRequest)(nil),                            // 37: bob.v1.CreateIndividualLessonReportRequest
	(*CreateIndividualLessonReportResponse)(nil),                           // 38: bob.v1.CreateIndividualLessonReportResponse
	(*WriteLessonReportRequest)(nil),                                       // 39: bob.v1.WriteLessonReportRequest
	(*SubmitLessonReportResponse)(nil),                                     // 40: bob.v1.SubmitLessonReportResponse
	(*SaveDraftLessonReportResponse)(nil),                                  // 41: bob.v1.SaveDraftLessonReportResponse
	(*GetPartnerDomainRequest)(nil),                                        // 42: bob.v1.GetPartnerDomainRequest
	(*GetPartnerDomainResponse)(nil),                                       // 43: bob.v1.GetPartnerDomainResponse
	(*Recurrence)(nil),                                                     // 44: bob.v1.Recurrence
	(*Reallocate)(nil),                                                     // 45: bob.v1.Reallocate
	(*ZoomInfo)(nil),                                                       // 46: bob.v1.ZoomInfo
	(*CreateLessonRequest)(nil),                                            // 47: bob.v1.CreateLessonRequest
	(*CreateLessonResponse)(nil),                                           // 48: bob.v1.CreateLessonResponse
	(*RetrieveLessonsFilterV2)(nil),                                        // 49: bob.v1.RetrieveLessonsFilterV2
	(*RetrieveLessonsRequestV2)(nil),                                       // 50: bob.v1.RetrieveLessonsRequestV2
	(*RetrieveLessonsResponseV2)(nil),                                      // 51: bob.v1.RetrieveLessonsResponseV2
	(*UpdateLessonRequest)(nil),                                            // 52: bob.v1.UpdateLessonRequest
	(*UpdateLessonResponse)(nil),                                           // 53: bob.v1.UpdateLessonResponse
	(*DeleteLessonRequest)(nil),                                            // 54: bob.v1.DeleteLessonRequest
	(*DeleteLessonResponse)(nil),                                           // 55: bob.v1.DeleteLessonResponse
	(*RetrieveStudentSubscriptionFilter)(nil),                              // 56: bob.v1.RetrieveStudentSubscriptionFilter
	(*RetrieveStudentSubscriptionRequest)(nil),                             // 57: bob.v1.RetrieveStudentSubscriptionRequest
	(*RetrieveStudentSubscriptionResponse)(nil),                            // 58: bob.v1.RetrieveStudentSubscriptionResponse
	(*GetStudentCourseSubscriptionsRequest)(nil),                           // 59: bob.v1.GetStudentCourseSubscriptionsRequest
	(*GetStudentCourseSubscriptionsResponse)(nil),                          // 60: bob.v1.GetStudentCourseSubscriptionsResponse
	(*GetTeachersRequest)(nil),                                             // 61: bob.v1.GetTeachersRequest
	(*GetTeachersResponse)(nil),                                            // 62: bob.v1.GetTeachersResponse
	(*GetUserGroupRequest)(nil),                                            // 63: bob.v1.GetUserGroupRequest
	(*GetUserGroupResponse)(nil),                                           // 64: bob.v1.GetUserGroupResponse
	(*Material_BrightcoveVideo)(nil),                                       // 65: bob.v1.Material.BrightcoveVideo
	(*RetrieveLessonsResponse_Lesson)(nil),                                 // 66: bob.v1.RetrieveLessonsResponse.Lesson
	(*LiveLessonState_CurrentMaterial)(nil),                                // 67: bob.v1.LiveLessonState.CurrentMaterial
	(*LiveLessonState_HandsUp)(nil),                                        // 68: bob.v1.LiveLessonState.HandsUp
	(*LiveLessonState_Annotation)(nil),                                     // 69: bob.v1.LiveLessonState.Annotation
	(*LiveLessonState_PollingOption)(nil),                                  // 70: bob.v1.LiveLessonState.PollingOption
	(*LiveLessonState_CurrentPolling)(nil),                                 // 71: bob.v1.LiveLessonState.CurrentPolling
	(*LiveLessonState_PollingAnswer)(nil),                                  // 72: bob.v1.LiveLessonState.PollingAnswer
	(*LiveLessonState_Recording)(nil),                                      // 73: bob.v1.LiveLessonState.Recording
	(*LiveLessonState_Spotlight)(nil),                                      // 74: bob.v1.LiveLessonState.Spotlight
	(*LiveLessonState_WhiteboardZoomState)(nil),                            // 75: bob.v1.LiveLessonState.WhiteboardZoomState
	(*LiveLessonState_Chat)(nil),                                           // 76: bob.v1.LiveLessonState.Chat
	(*LiveLessonState_CurrentMaterial_VideoState)(nil),                     // 77: bob.v1.LiveLessonState.CurrentMaterial.VideoState
	(*LiveLessonState_CurrentMaterial_PDFState)(nil),                       // 78: bob.v1.LiveLessonState.CurrentMaterial.PDFState
	(*LiveLessonState_CurrentMaterial_AudioState)(nil),                     // 79: bob.v1.LiveLessonState.CurrentMaterial.AudioState
	(*ModifyLiveLessonStateRequest_CurrentMaterialCommand)(nil),            // 80: bob.v1.ModifyLiveLessonStateRequest.CurrentMaterialCommand
	(*ModifyLiveLessonStateRequest_Learners)(nil),                          // 81: bob.v1.ModifyLiveLessonStateRequest.Learners
	(*ModifyLiveLessonStateRequest_PollingOption)(nil),                     // 82: bob.v1.ModifyLiveLessonStateRequest.PollingOption
	(*ModifyLiveLessonStateRequest_PollingOptions)(nil),                    // 83: bob.v1.ModifyLiveLessonStateRequest.PollingOptions
	(*ModifyLiveLessonStateRequest_PollingAnswer)(nil),                     // 84: bob.v1.ModifyLiveLessonStateRequest.PollingAnswer
	(*ModifyLiveLessonStateRequest_Spotlight)(nil),                         // 85: bob.v1.ModifyLiveLessonStateRequest.Spotlight
	(*ModifyLiveLessonStateRequest_WhiteboardZoomState)(nil),               // 86: bob.v1.ModifyLiveLessonStateRequest.WhiteboardZoomState
	(*LiveLessonStateResponse_UsersState)(nil),                             // 87: bob.v1.LiveLessonStateResponse.UsersState
	(*LiveLessonStateResponse_UsersState_LearnerState)(nil),                // 88: bob.v1.LiveLessonStateResponse.UsersState.LearnerState
	(*DynamicFieldValue_IntSetValue)(nil),                                  // 89: bob.v1.DynamicFieldValue.IntSetValue
	(*DynamicFieldValue_StringSetValue)(nil),                               // 90: bob.v1.DynamicFieldValue.StringSetValue
	(*DynamicFieldValue_IntArrayValue)(nil),                                // 91: bob.v1.DynamicFieldValue.IntArrayValue
	(*DynamicFieldValue_StringArrayValue)(nil),                             // 92: bob.v1.DynamicFieldValue.StringArrayValue
	(*WriteLessonReportRequest_LessonReportDetail)(nil),                    // 93: bob.v1.WriteLessonReportRequest.LessonReportDetail
	(*ZoomInfo_OccurrenceZoom)(nil),                                        // 94: bob.v1.ZoomInfo.OccurrenceZoom
	(*CreateLessonRequest_StudentInfo)(nil),                                // 95: bob.v1.CreateLessonRequest.StudentInfo
	(*CreateLessonRequest_SavingOption)(nil),                               // 96: bob.v1.CreateLessonRequest.SavingOption
	(*RetrieveLessonsResponseV2_Lesson)(nil),                               // 97: bob.v1.RetrieveLessonsResponseV2.Lesson
	(*UpdateLessonRequest_StudentInfo)(nil),                                // 98: bob.v1.UpdateLessonRequest.StudentInfo
	(*UpdateLessonRequest_SavingOption)(nil),                               // 99: bob.v1.UpdateLessonRequest.SavingOption
	(*DeleteLessonRequest_SavingOption)(nil),                               // 100: bob.v1.DeleteLessonRequest.SavingOption
	(*RetrieveStudentSubscriptionResponse_StudentSubscription)(nil),        // 101: bob.v1.RetrieveStudentSubscriptionResponse.StudentSubscription
	(*GetStudentCourseSubscriptionsRequest_StudentCourseSubscription)(nil), // 102: bob.v1.GetStudentCourseSubscriptionsRequest.StudentCourseSubscription
	(*GetStudentCourseSubscriptionsResponse_StudentSubscription)(nil),      // 103: bob.v1.GetStudentCourseSubscriptionsResponse.StudentSubscription
	(*GetTeachersResponse_TeacherInfo)(nil),                                // 104: bob.v1.GetTeachersResponse.TeacherInfo
	(PrepareToPublishStatus)(0),                                            // 105: bob.v1.PrepareToPublishStatus
	(UnpublishStatus)(0),                                                   // 106: bob.v1.UnpublishStatus
	(*timestamppb.Timestamp)(nil),                                          // 107: google.protobuf.Timestamp
	(v1.LessonStatus)(0),                                                   // 108: common.v1.LessonStatus
	(*v1.Paging)(nil),                                                      // 109: common.v1.Paging
	(*v1.Topic)(nil),                                                       // 110: common.v1.Topic
	(*v1.BasicProfile)(nil),                                                // 111: common.v1.BasicProfile
	(v1.LessonTeachingMedium)(0),                                           // 112: common.v1.LessonTeachingMedium
	(v1.LessonTeachingMethod)(0),                                           // 113: common.v1.LessonTeachingMethod
	(v1.DateOfWeek)(0),                                                     // 114: common.v1.DateOfWeek
	(*durationpb.Duration)(nil),                                            // 115: google.protobuf.Duration
	(v1.LessonSchedulingStatus)(0),                                         // 116: common.v1.LessonSchedulingStatus
	(v1.LessonType)(0),                                                     // 117: common.v1.LessonType
	(*Media)(nil),                                                          // 118: bob.v1.Media
}
var file_bob_v1_lessons_proto_depIdxs = []int32{
	105, // 0: bob.v1.PreparePublishResponse.status:type_name -> bob.v1.PrepareToPublishStatus
	106, // 1: bob.v1.UnpublishResponse.status:type_name -> bob.v1.UnpublishStatus
	65,  // 2: bob.v1.Material.brightcove_video:type_name -> bob.v1.Material.BrightcoveVideo
	107, // 3: bob.v1.CreateLiveLessonRequest.start_time:type_name -> google.protobuf.Timestamp
	107, // 4: bob.v1.CreateLiveLessonRequest.end_time:type_name -> google.protobuf.Timestamp
	16,  // 5: bob.v1.CreateLiveLessonRequest.materials:type_name -> bob.v1.Material
	108, // 6: bob.v1.RetrieveLessonsFilter.lesson_status:type_name -> common.v1.LessonStatus
	107, // 7: bob.v1.RetrieveLessonsFilter.start_time:type_name -> google.protobuf.Timestamp
	107, // 8: bob.v1.RetrieveLessonsFilter.end_time:type_name -> google.protobuf.Timestamp
	109, // 9: bob.v1.RetrieveLessonsRequest.paging:type_name -> common.v1.Paging
	19,  // 10: bob.v1.RetrieveLessonsRequest.filter:type_name -> bob.v1.RetrieveLessonsFilter
	66,  // 11: bob.v1.RetrieveLessonsResponse.items:type_name -> bob.v1.RetrieveLessonsResponse.Lesson
	109, // 12: bob.v1.RetrieveLessonsResponse.next_page:type_name -> common.v1.Paging
	109, // 13: bob.v1.RetrieveLessonsResponse.previous_page:type_name -> common.v1.Paging
	23,  // 14: bob.v1.RetrieveLiveLessonByLocationsRequest.pagination:type_name -> bob.v1.Pagination
	107, // 15: bob.v1.RetrieveLiveLessonByLocationsRequest.from:type_name -> google.protobuf.Timestamp
	107, // 16: bob.v1.RetrieveLiveLessonByLocationsRequest.to:type_name -> google.protobuf.Timestamp
	25,  // 17: bob.v1.RetrieveLiveLessonByLocationsResponse.lessons:type_name -> bob.v1.Lesson
	110, // 18: bob.v1.Lesson.topic:type_name -> common.v1.Topic
	107, // 19: bob.v1.Lesson.start_time:type_name -> google.protobuf.Timestamp
	107, // 20: bob.v1.Lesson.end_time:type_name -> google.protobuf.Timestamp
	108, // 21: bob.v1.Lesson.status:type_name -> common.v1.LessonStatus
	111, // 22: bob.v1.Lesson.teacher:type_name -> common.v1.BasicProfile
	107, // 23: bob.v1.UpdateLiveLessonRequest.start_time:type_name -> google.protobuf.Timestamp
	107, // 24: bob.v1.UpdateLiveLessonRequest.end_time:type_name -> google.protobuf.Timestamp
	16,  // 25: bob.v1.UpdateLiveLessonRequest.materials:type_name -> bob.v1.Material
	80,  // 26: bob.v1.ModifyLiveLessonStateRequest.share_a_material:type_name -> bob.v1.ModifyLiveLessonStateRequest.CurrentMaterialCommand
	81,  // 27: bob.v1.ModifyLiveLessonStateRequest.annotation_enable:type_name -> bob.v1.ModifyLiveLessonStateRequest.Learners
	81,  // 28: bob.v1.ModifyLiveLessonStateRequest.annotation_disable:type_name -> bob.v1.ModifyLiveLessonStateRequest.Learners
	83,  // 29: bob.v1.ModifyLiveLessonStateRequest.start_polling:type_name -> bob.v1.ModifyLiveLessonStateRequest.PollingOptions
	84,  // 30: bob.v1.ModifyLiveLessonStateRequest.submit_polling_answer:type_name -> bob.v1.ModifyLiveLessonStateRequest.PollingAnswer
	85,  // 31: bob.v1.ModifyLiveLessonStateRequest.spotlight:type_name -> bob.v1.ModifyLiveLessonStateRequest.Spotlight
	86,  // 32: bob.v1.ModifyLiveLessonStateRequest.whiteboard_zoom_state:type_name -> bob.v1.ModifyLiveLessonStateRequest.WhiteboardZoomState
	81,  // 33: bob.v1.ModifyLiveLessonStateRequest.chat_enable:type_name -> bob.v1.ModifyLiveLessonStateRequest.Learners
	81,  // 34: bob.v1.ModifyLiveLessonStateRequest.chat_disable:type_name -> bob.v1.ModifyLiveLessonStateRequest.Learners
	67,  // 35: bob.v1.LiveLessonStateResponse.current_material:type_name -> bob.v1.LiveLessonState.CurrentMaterial
	87,  // 36: bob.v1.LiveLessonStateResponse.users_state:type_name -> bob.v1.LiveLessonStateResponse.UsersState
	107, // 37: bob.v1.LiveLessonStateResponse.current_time:type_name -> google.protobuf.Timestamp
	71,  // 38: bob.v1.LiveLessonStateResponse.current_polling:type_name -> bob.v1.LiveLessonState.CurrentPolling
	73,  // 39: bob.v1.LiveLessonStateResponse.recording:type_name -> bob.v1.LiveLessonState.Recording
	74,  // 40: bob.v1.LiveLessonStateResponse.spotlight:type_name -> bob.v1.LiveLessonState.Spotlight
	75,  // 41: bob.v1.LiveLessonStateResponse.whiteboard_zoom_state:type_name -> bob.v1.LiveLessonState.WhiteboardZoomState
	2,   // 42: bob.v1.DynamicFieldValue.value_type:type_name -> bob.v1.ValueType
	91,  // 43: bob.v1.DynamicFieldValue.int_array_value:type_name -> bob.v1.DynamicFieldValue.IntArrayValue
	92,  // 44: bob.v1.DynamicFieldValue.string_array_value:type_name -> bob.v1.DynamicFieldValue.StringArrayValue
	89,  // 45: bob.v1.DynamicFieldValue.int_set_value:type_name -> bob.v1.DynamicFieldValue.IntSetValue
	90,  // 46: bob.v1.DynamicFieldValue.string_set_value:type_name -> bob.v1.DynamicFieldValue.StringSetValue
	3,   // 47: bob.v1.IndividualLessonReportDetail.attendance_status:type_name -> bob.v1.StudentAttendStatus
	35,  // 48: bob.v1.IndividualLessonReportDetail.field_values:type_name -> bob.v1.DynamicFieldValue
	107, // 49: bob.v1.CreateIndividualLessonReportRequest.start_time:type_name -> google.protobuf.Timestamp
	107, // 50: bob.v1.CreateIndividualLessonReportRequest.end_time:type_name -> google.protobuf.Timestamp
	36,  // 51: bob.v1.CreateIndividualLessonReportRequest.report_detail:type_name -> bob.v1.IndividualLessonReportDetail
	93,  // 52: bob.v1.WriteLessonReportRequest.details:type_name -> bob.v1.WriteLessonReportRequest.LessonReportDetail
	6,   // 53: bob.v1.GetPartnerDomainRequest.type:type_name -> bob.v1.DomainType
	107, // 54: bob.v1.Recurrence.end_date:type_name -> google.protobuf.Timestamp
	94,  // 55: bob.v1.ZoomInfo.occurrences:type_name -> bob.v1.ZoomInfo.OccurrenceZoom
	107, // 56: bob.v1.CreateLessonRequest.start_time:type_name -> google.protobuf.Timestamp
	107, // 57: bob.v1.CreateLessonRequest.end_time:type_name -> google.protobuf.Timestamp
	112, // 58: bob.v1.CreateLessonRequest.teaching_medium:type_name -> common.v1.LessonTeachingMedium
	113, // 59: bob.v1.CreateLessonRequest.teaching_method:type_name -> common.v1.LessonTeachingMethod
	95,  // 60: bob.v1.CreateLessonRequest.student_info_list:type_name -> bob.v1.CreateLessonRequest.StudentInfo
	16,  // 61: bob.v1.CreateLessonRequest.materials:type_name -> bob.v1.Material
	96,  // 62: bob.v1.CreateLessonRequest.saving_option:type_name -> bob.v1.CreateLessonRequest.SavingOption
	8,   // 63: bob.v1.CreateLessonRequest.scheduling_status:type_name -> bob.v1.LessonStatus
	46,  // 64: bob.v1.CreateLessonRequest.zoom_info:type_name -> bob.v1.ZoomInfo
	107, // 65: bob.v1.RetrieveLessonsFilterV2.start_time:type_name -> google.protobuf.Timestamp
	107, // 66: bob.v1.RetrieveLessonsFilterV2.end_time:type_name -> google.protobuf.Timestamp
	107, // 67: bob.v1.RetrieveLessonsFilterV2.from_date:type_name -> google.protobuf.Timestamp
	107, // 68: bob.v1.RetrieveLessonsFilterV2.to_date:type_name -> google.protobuf.Timestamp
	114, // 69: bob.v1.RetrieveLessonsFilterV2.date_of_weeks:type_name -> common.v1.DateOfWeek
	115, // 70: bob.v1.RetrieveLessonsFilterV2.from_time:type_name -> google.protobuf.Duration
	115, // 71: bob.v1.RetrieveLessonsFilterV2.to_time:type_name -> google.protobuf.Duration
	116, // 72: bob.v1.RetrieveLessonsFilterV2.scheduling_status:type_name -> common.v1.LessonSchedulingStatus
	109, // 73: bob.v1.RetrieveLessonsRequestV2.paging:type_name -> common.v1.Paging
	9,   // 74: bob.v1.RetrieveLessonsRequestV2.lesson_time:type_name -> bob.v1.LessonTime
	107, // 75: bob.v1.RetrieveLessonsRequestV2.current_time:type_name -> google.protobuf.Timestamp
	49,  // 76: bob.v1.RetrieveLessonsRequestV2.filter:type_name -> bob.v1.RetrieveLessonsFilterV2
	97,  // 77: bob.v1.RetrieveLessonsResponseV2.items:type_name -> bob.v1.RetrieveLessonsResponseV2.Lesson
	109, // 78: bob.v1.RetrieveLessonsResponseV2.next_page:type_name -> common.v1.Paging
	109, // 79: bob.v1.RetrieveLessonsResponseV2.previous_page:type_name -> common.v1.Paging
	107, // 80: bob.v1.UpdateLessonRequest.start_time:type_name -> google.protobuf.Timestamp
	107, // 81: bob.v1.UpdateLessonRequest.end_time:type_name -> google.protobuf.Timestamp
	112, // 82: bob.v1.UpdateLessonRequest.teaching_medium:type_name -> common.v1.LessonTeachingMedium
	113, // 83: bob.v1.UpdateLessonRequest.teaching_method:type_name -> common.v1.LessonTeachingMethod
	98,  // 84: bob.v1.UpdateLessonRequest.student_info_list:type_name -> bob.v1.UpdateLessonRequest.StudentInfo
	16,  // 85: bob.v1.UpdateLessonRequest.materials:type_name -> bob.v1.Material
	99,  // 86: bob.v1.UpdateLessonRequest.saving_option:type_name -> bob.v1.UpdateLessonRequest.SavingOption
	8,   // 87: bob.v1.UpdateLessonRequest.scheduling_status:type_name -> bob.v1.LessonStatus
	46,  // 88: bob.v1.UpdateLessonRequest.zoom_info:type_name -> bob.v1.ZoomInfo
	100, // 89: bob.v1.DeleteLessonRequest.saving_option:type_name -> bob.v1.DeleteLessonRequest.SavingOption
	109, // 90: bob.v1.RetrieveStudentSubscriptionRequest.paging:type_name -> common.v1.Paging
	56,  // 91: bob.v1.RetrieveStudentSubscriptionRequest.filter:type_name -> bob.v1.RetrieveStudentSubscriptionFilter
	107, // 92: bob.v1.RetrieveStudentSubscriptionRequest.lesson_date:type_name -> google.protobuf.Timestamp
	101, // 93: bob.v1.RetrieveStudentSubscriptionResponse.items:type_name -> bob.v1.RetrieveStudentSubscriptionResponse.StudentSubscription
	109, // 94: bob.v1.RetrieveStudentSubscriptionResponse.next_page:type_name -> common.v1.Paging
	109, // 95: bob.v1.RetrieveStudentSubscriptionResponse.previous_page:type_name -> common.v1.Paging
	102, // 96: bob.v1.GetStudentCourseSubscriptionsRequest.subscriptions:type_name -> bob.v1.GetStudentCourseSubscriptionsRequest.StudentCourseSubscription
	103, // 97: bob.v1.GetStudentCourseSubscriptionsResponse.items:type_name -> bob.v1.GetStudentCourseSubscriptionsResponse.StudentSubscription
	104, // 98: bob.v1.GetTeachersResponse.teachers:type_name -> bob.v1.GetTeachersResponse.TeacherInfo
	107, // 99: bob.v1.RetrieveLessonsResponse.Lesson.start_time:type_name -> google.protobuf.Timestamp
	107, // 100: bob.v1.RetrieveLessonsResponse.Lesson.end_time:type_name -> google.protobuf.Timestamp
	117, // 101: bob.v1.RetrieveLessonsResponse.Lesson.lesson_type:type_name -> common.v1.LessonType
	107, // 102: bob.v1.LiveLessonState.CurrentMaterial.updated_at:type_name -> google.protobuf.Timestamp
	77,  // 103: bob.v1.LiveLessonState.CurrentMaterial.video_state:type_name -> bob.v1.LiveLessonState.CurrentMaterial.VideoState
	78,  // 104: bob.v1.LiveLessonState.CurrentMaterial.pdf_state:type_name -> bob.v1.LiveLessonState.CurrentMaterial.PDFState
	79,  // 105: bob.v1.LiveLessonState.CurrentMaterial.audio_state:type_name -> bob.v1.LiveLessonState.CurrentMaterial.AudioState
	118, // 106: bob.v1.LiveLessonState.CurrentMaterial.data:type_name -> bob.v1.Media
	107, // 107: bob.v1.LiveLessonState.HandsUp.updated_at:type_name -> google.protobuf.Timestamp
	107, // 108: bob.v1.LiveLessonState.Annotation.updated_at:type_name -> google.protobuf.Timestamp
	70,  // 109: bob.v1.LiveLessonState.CurrentPolling.options:type_name -> bob.v1.LiveLessonState.PollingOption
	1,   // 110: bob.v1.LiveLessonState.CurrentPolling.status:type_name -> bob.v1.PollingState
	107, // 111: bob.v1.LiveLessonState.CurrentPolling.created_at:type_name -> google.protobuf.Timestamp
	107, // 112: bob.v1.LiveLessonState.CurrentPolling.stopped_at:type_name -> google.protobuf.Timestamp
	107, // 113: bob.v1.LiveLessonState.PollingAnswer.updated_at:type_name -> google.protobuf.Timestamp
	107, // 114: bob.v1.LiveLessonState.Chat.updated_at:type_name -> google.protobuf.Timestamp
	115, // 115: bob.v1.LiveLessonState.CurrentMaterial.VideoState.current_time:type_name -> google.protobuf.Duration
	0,   // 116: bob.v1.LiveLessonState.CurrentMaterial.VideoState.player_state:type_name -> bob.v1.PlayerState
	115, // 117: bob.v1.LiveLessonState.CurrentMaterial.AudioState.current_time:type_name -> google.protobuf.Duration
	0,   // 118: bob.v1.LiveLessonState.CurrentMaterial.AudioState.player_state:type_name -> bob.v1.PlayerState
	77,  // 119: bob.v1.ModifyLiveLessonStateRequest.CurrentMaterialCommand.video_state:type_name -> bob.v1.LiveLessonState.CurrentMaterial.VideoState
	78,  // 120: bob.v1.ModifyLiveLessonStateRequest.CurrentMaterialCommand.pdf_state:type_name -> bob.v1.LiveLessonState.CurrentMaterial.PDFState
	79,  // 121: bob.v1.ModifyLiveLessonStateRequest.CurrentMaterialCommand.audio_state:type_name -> bob.v1.LiveLessonState.CurrentMaterial.AudioState
	82,  // 122: bob.v1.ModifyLiveLessonStateRequest.PollingOptions.options:type_name -> bob.v1.ModifyLiveLessonStateRequest.PollingOption
	88,  // 123: bob.v1.LiveLessonStateResponse.UsersState.learners:type_name -> bob.v1.LiveLessonStateResponse.UsersState.LearnerState
	68,  // 124: bob.v1.LiveLessonStateResponse.UsersState.LearnerState.hands_up:type_name -> bob.v1.LiveLessonState.HandsUp
	69,  // 125: bob.v1.LiveLessonStateResponse.UsersState.LearnerState.annotation:type_name -> bob.v1.LiveLessonState.Annotation
	72,  // 126: bob.v1.LiveLessonStateResponse.UsersState.LearnerState.polling_answer:type_name -> bob.v1.LiveLessonState.PollingAnswer
	76,  // 127: bob.v1.LiveLessonStateResponse.UsersState.LearnerState.chat:type_name -> bob.v1.LiveLessonState.Chat
	3,   // 128: bob.v1.WriteLessonReportRequest.LessonReportDetail.attendance_status:type_name -> bob.v1.StudentAttendStatus
	35,  // 129: bob.v1.WriteLessonReportRequest.LessonReportDetail.field_values:type_name -> bob.v1.DynamicFieldValue
	4,   // 130: bob.v1.WriteLessonReportRequest.LessonReportDetail.attendance_notice:type_name -> bob.v1.StudentAttendanceNotice
	5,   // 131: bob.v1.WriteLessonReportRequest.LessonReportDetail.attendance_reason:type_name -> bob.v1.StudentAttendanceReason
	3,   // 132: bob.v1.CreateLessonRequest.StudentInfo.attendance_status:type_name -> bob.v1.StudentAttendStatus
	4,   // 133: bob.v1.CreateLessonRequest.StudentInfo.attendance_notice:type_name -> bob.v1.StudentAttendanceNotice
	5,   // 134: bob.v1.CreateLessonRequest.StudentInfo.attendance_reason:type_name -> bob.v1.StudentAttendanceReason
	45,  // 135: bob.v1.CreateLessonRequest.StudentInfo.reallocate:type_name -> bob.v1.Reallocate
	7,   // 136: bob.v1.CreateLessonRequest.SavingOption.method:type_name -> bob.v1.CreateLessonSavingMethod
	44,  // 137: bob.v1.CreateLessonRequest.SavingOption.recurrence:type_name -> bob.v1.Recurrence
	107, // 138: bob.v1.RetrieveLessonsResponseV2.Lesson.start_time:type_name -> google.protobuf.Timestamp
	107, // 139: bob.v1.RetrieveLessonsResponseV2.Lesson.end_time:type_name -> google.protobuf.Timestamp
	113, // 140: bob.v1.RetrieveLessonsResponseV2.Lesson.teaching_method:type_name -> common.v1.LessonTeachingMethod
	112, // 141: bob.v1.RetrieveLessonsResponseV2.Lesson.teaching_medium:type_name -> common.v1.LessonTeachingMedium
	116, // 142: bob.v1.RetrieveLessonsResponseV2.Lesson.scheduling_status:type_name -> common.v1.LessonSchedulingStatus
	3,   // 143: bob.v1.UpdateLessonRequest.StudentInfo.attendance_status:type_name -> bob.v1.StudentAttendStatus
	4,   // 144: bob.v1.UpdateLessonRequest.StudentInfo.attendance_notice:type_name -> bob.v1.StudentAttendanceNotice
	5,   // 145: bob.v1.UpdateLessonRequest.StudentInfo.attendance_reason:type_name -> bob.v1.StudentAttendanceReason
	45,  // 146: bob.v1.UpdateLessonRequest.StudentInfo.reallocate:type_name -> bob.v1.Reallocate
	7,   // 147: bob.v1.UpdateLessonRequest.SavingOption.method:type_name -> bob.v1.CreateLessonSavingMethod
	44,  // 148: bob.v1.UpdateLessonRequest.SavingOption.recurrence:type_name -> bob.v1.Recurrence
	7,   // 149: bob.v1.DeleteLessonRequest.SavingOption.method:type_name -> bob.v1.CreateLessonSavingMethod
	107, // 150: bob.v1.RetrieveStudentSubscriptionResponse.StudentSubscription.start_date:type_name -> google.protobuf.Timestamp
	107, // 151: bob.v1.RetrieveStudentSubscriptionResponse.StudentSubscription.end_date:type_name -> google.protobuf.Timestamp
	107, // 152: bob.v1.GetStudentCourseSubscriptionsResponse.StudentSubscription.start_date:type_name -> google.protobuf.Timestamp
	107, // 153: bob.v1.GetStudentCourseSubscriptionsResponse.StudentSubscription.end_date:type_name -> google.protobuf.Timestamp
	107, // 154: bob.v1.GetTeachersResponse.TeacherInfo.created_at:type_name -> google.protobuf.Timestamp
	107, // 155: bob.v1.GetTeachersResponse.TeacherInfo.updated_at:type_name -> google.protobuf.Timestamp
	10,  // 156: bob.v1.LessonModifierService.PreparePublish:input_type -> bob.v1.PreparePublishRequest
	12,  // 157: bob.v1.LessonModifierService.Unpublish:input_type -> bob.v1.UnpublishRequest
	17,  // 158: bob.v1.LessonModifierService.CreateLiveLesson:input_type -> bob.v1.CreateLiveLessonRequest
	26,  // 159: bob.v1.LessonModifierService.UpdateLiveLesson:input_type -> bob.v1.UpdateLiveLessonRequest
	28,  // 160: bob.v1.LessonModifierService.DeleteLiveLesson:input_type -> bob.v1.DeleteLiveLessonRequest
	31,  // 161: bob.v1.LessonModifierService.ModifyLiveLessonState:input_type -> bob.v1.ModifyLiveLessonStateRequest
	14,  // 162: bob.v1.LessonReaderService.GetStreamingLearners:input_type -> bob.v1.GetStreamingLearnersRequest
	20,  // 163: bob.v1.LessonReaderService.RetrieveLessons:input_type -> bob.v1.RetrieveLessonsRequest
	22,  // 164: bob.v1.LessonReaderService.RetrieveLiveLessonByLocations:input_type -> bob.v1.RetrieveLiveLessonByLocationsRequest
	33,  // 165: bob.v1.LessonReaderService.GetLiveLessonState:input_type -> bob.v1.LiveLessonStateRequest
	42,  // 166: bob.v1.LessonReportReaderService.RetrievePartnerDomain:input_type -> bob.v1.GetPartnerDomainRequest
	37,  // 167: bob.v1.LessonReportModifierService.CreateIndividualLessonReport:input_type -> bob.v1.CreateIndividualLessonReportRequest
	39,  // 168: bob.v1.LessonReportModifierService.SubmitLessonReport:input_type -> bob.v1.WriteLessonReportRequest
	39,  // 169: bob.v1.LessonReportModifierService.SaveDraftLessonReport:input_type -> bob.v1.WriteLessonReportRequest
	47,  // 170: bob.v1.LessonManagementService.CreateLesson:input_type -> bob.v1.CreateLessonRequest
	50,  // 171: bob.v1.LessonManagementService.RetrieveLessons:input_type -> bob.v1.RetrieveLessonsRequestV2
	52,  // 172: bob.v1.LessonManagementService.UpdateLesson:input_type -> bob.v1.UpdateLessonRequest
	54,  // 173: bob.v1.LessonManagementService.DeleteLesson:input_type -> bob.v1.DeleteLessonRequest
	57,  // 174: bob.v1.StudentSubscriptionService.RetrieveStudentSubscription:input_type -> bob.v1.RetrieveStudentSubscriptionRequest
	59,  // 175: bob.v1.StudentSubscriptionService.GetStudentCourseSubscriptions:input_type -> bob.v1.GetStudentCourseSubscriptionsRequest
	61,  // 176: bob.v1.UserService.GetTeachers:input_type -> bob.v1.GetTeachersRequest
	63,  // 177: bob.v1.UserService.GetUserGroup:input_type -> bob.v1.GetUserGroupRequest
	11,  // 178: bob.v1.LessonModifierService.PreparePublish:output_type -> bob.v1.PreparePublishResponse
	13,  // 179: bob.v1.LessonModifierService.Unpublish:output_type -> bob.v1.UnpublishResponse
	18,  // 180: bob.v1.LessonModifierService.CreateLiveLesson:output_type -> bob.v1.CreateLiveLessonResponse
	27,  // 181: bob.v1.LessonModifierService.UpdateLiveLesson:output_type -> bob.v1.UpdateLiveLessonResponse
	29,  // 182: bob.v1.LessonModifierService.DeleteLiveLesson:output_type -> bob.v1.DeleteLiveLessonResponse
	32,  // 183: bob.v1.LessonModifierService.ModifyLiveLessonState:output_type -> bob.v1.ModifyLiveLessonStateResponse
	15,  // 184: bob.v1.LessonReaderService.GetStreamingLearners:output_type -> bob.v1.GetStreamingLearnersResponse
	21,  // 185: bob.v1.LessonReaderService.RetrieveLessons:output_type -> bob.v1.RetrieveLessonsResponse
	24,  // 186: bob.v1.LessonReaderService.RetrieveLiveLessonByLocations:output_type -> bob.v1.RetrieveLiveLessonByLocationsResponse
	34,  // 187: bob.v1.LessonReaderService.GetLiveLessonState:output_type -> bob.v1.LiveLessonStateResponse
	43,  // 188: bob.v1.LessonReportReaderService.RetrievePartnerDomain:output_type -> bob.v1.GetPartnerDomainResponse
	38,  // 189: bob.v1.LessonReportModifierService.CreateIndividualLessonReport:output_type -> bob.v1.CreateIndividualLessonReportResponse
	40,  // 190: bob.v1.LessonReportModifierService.SubmitLessonReport:output_type -> bob.v1.SubmitLessonReportResponse
	41,  // 191: bob.v1.LessonReportModifierService.SaveDraftLessonReport:output_type -> bob.v1.SaveDraftLessonReportResponse
	48,  // 192: bob.v1.LessonManagementService.CreateLesson:output_type -> bob.v1.CreateLessonResponse
	51,  // 193: bob.v1.LessonManagementService.RetrieveLessons:output_type -> bob.v1.RetrieveLessonsResponseV2
	53,  // 194: bob.v1.LessonManagementService.UpdateLesson:output_type -> bob.v1.UpdateLessonResponse
	55,  // 195: bob.v1.LessonManagementService.DeleteLesson:output_type -> bob.v1.DeleteLessonResponse
	58,  // 196: bob.v1.StudentSubscriptionService.RetrieveStudentSubscription:output_type -> bob.v1.RetrieveStudentSubscriptionResponse
	60,  // 197: bob.v1.StudentSubscriptionService.GetStudentCourseSubscriptions:output_type -> bob.v1.GetStudentCourseSubscriptionsResponse
	62,  // 198: bob.v1.UserService.GetTeachers:output_type -> bob.v1.GetTeachersResponse
	64,  // 199: bob.v1.UserService.GetUserGroup:output_type -> bob.v1.GetUserGroupResponse
	178, // [178:200] is the sub-list for method output_type
	156, // [156:178] is the sub-list for method input_type
	156, // [156:156] is the sub-list for extension type_name
	156, // [156:156] is the sub-list for extension extendee
	0,   // [0:156] is the sub-list for field type_name
}

func init() { file_bob_v1_lessons_proto_init() }
func file_bob_v1_lessons_proto_init() {
	if File_bob_v1_lessons_proto != nil {
		return
	}
	file_bob_v1_enums_proto_init()
	file_bob_v1_media_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bob_v1_lessons_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreparePublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreparePublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamingLearnersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamingLearnersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLiveLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLiveLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLessonsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLessonsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLessonsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLiveLessonByLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLiveLessonByLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLiveLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLiveLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiveLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiveLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveLessonStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveLessonStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndividualLessonReportDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIndividualLessonReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIndividualLessonReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteLessonReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitLessonReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDraftLessonReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnerDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnerDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recurrence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reallocate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLessonsFilterV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLessonsRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLessonsResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStudentSubscriptionFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStudentSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStudentSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentCourseSubscriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentCourseSubscriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeachersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeachersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Material_BrightcoveVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLessonsResponse_Lesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_CurrentMaterial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_HandsUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_Annotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_PollingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_CurrentPolling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_PollingAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_Recording); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_Spotlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_WhiteboardZoomState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_Chat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_CurrentMaterial_VideoState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_CurrentMaterial_PDFState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonState_CurrentMaterial_AudioState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveLessonStateRequest_CurrentMaterialCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveLessonStateRequest_Learners); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveLessonStateRequest_PollingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveLessonStateRequest_PollingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveLessonStateRequest_PollingAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveLessonStateRequest_Spotlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLiveLessonStateRequest_WhiteboardZoomState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonStateResponse_UsersState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLessonStateResponse_UsersState_LearnerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicFieldValue_IntSetValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicFieldValue_StringSetValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicFieldValue_IntArrayValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicFieldValue_StringArrayValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteLessonReportRequest_LessonReportDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoomInfo_OccurrenceZoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLessonRequest_StudentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLessonRequest_SavingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLessonsResponseV2_Lesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLessonRequest_StudentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLessonRequest_SavingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLessonRequest_SavingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStudentSubscriptionResponse_StudentSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentCourseSubscriptionsRequest_StudentCourseSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentCourseSubscriptionsResponse_StudentSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_lessons_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeachersResponse_TeacherInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bob_v1_lessons_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Material_BrightcoveVideo_)(nil),
		(*Material_MediaId)(nil),
	}
	file_bob_v1_lessons_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*ModifyLiveLessonStateRequest_ShareAMaterial)(nil),
		(*ModifyLiveLessonStateRequest_StopSharingMaterial)(nil),
		(*ModifyLiveLessonStateRequest_FoldHandAll)(nil),
		(*ModifyLiveLessonStateRequest_FoldUserHand)(nil),
		(*ModifyLiveLessonStateRequest_RaiseHand)(nil),
		(*ModifyLiveLessonStateRequest_HandOff)(nil),
		(*ModifyLiveLessonStateRequest_AnnotationEnable)(nil),
		(*ModifyLiveLessonStateRequest_AnnotationDisable)(nil),
		(*ModifyLiveLessonStateRequest_StartPolling)(nil),
		(*ModifyLiveLessonStateRequest_StopPolling)(nil),
		(*ModifyLiveLessonStateRequest_EndPolling)(nil),
		(*ModifyLiveLessonStateRequest_SubmitPollingAnswer)(nil),
		(*ModifyLiveLessonStateRequest_RequestRecording)(nil),
		(*ModifyLiveLessonStateRequest_StopRecording)(nil),
		(*ModifyLiveLessonStateRequest_Spotlight_)(nil),
		(*ModifyLiveLessonStateRequest_WhiteboardZoomState_)(nil),
		(*ModifyLiveLessonStateRequest_AnnotationDisableAll)(nil),
		(*ModifyLiveLessonStateRequest_ChatEnable)(nil),
		(*ModifyLiveLessonStateRequest_ChatDisable)(nil),
	}
	file_bob_v1_lessons_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*DynamicFieldValue_IntValue)(nil),
		(*DynamicFieldValue_StringValue)(nil),
		(*DynamicFieldValue_BoolValue)(nil),
		(*DynamicFieldValue_IntArrayValue_)(nil),
		(*DynamicFieldValue_StringArrayValue_)(nil),
		(*DynamicFieldValue_IntSetValue_)(nil),
		(*DynamicFieldValue_StringSetValue_)(nil),
	}
	file_bob_v1_lessons_proto_msgTypes[57].OneofWrappers = []interface{}{
		(*LiveLessonState_CurrentMaterial_VideoState_)(nil),
		(*LiveLessonState_CurrentMaterial_PdfState)(nil),
		(*LiveLessonState_CurrentMaterial_AudioState_)(nil),
	}
	file_bob_v1_lessons_proto_msgTypes[70].OneofWrappers = []interface{}{
		(*ModifyLiveLessonStateRequest_CurrentMaterialCommand_VideoState)(nil),
		(*ModifyLiveLessonStateRequest_CurrentMaterialCommand_PdfState)(nil),
		(*ModifyLiveLessonStateRequest_CurrentMaterialCommand_AudioState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bob_v1_lessons_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   95,
			NumExtensions: 0,
			NumServices:   7,
		},
		GoTypes:           file_bob_v1_lessons_proto_goTypes,
		DependencyIndexes: file_bob_v1_lessons_proto_depIdxs,
		EnumInfos:         file_bob_v1_lessons_proto_enumTypes,
		MessageInfos:      file_bob_v1_lessons_proto_msgTypes,
	}.Build()
	File_bob_v1_lessons_proto = out.File
	file_bob_v1_lessons_proto_rawDesc = nil
	file_bob_v1_lessons_proto_goTypes = nil
	file_bob_v1_lessons_proto_depIdxs = nil
}
