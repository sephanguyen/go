// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: bob/v1/enums.proto

package bpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserNotificationStatus int32

const (
	UserNotificationStatus_USER_NOTIFICATION_STATUS_NONE   UserNotificationStatus = 0
	UserNotificationStatus_USER_NOTIFICATION_STATUS_NEW    UserNotificationStatus = 1
	UserNotificationStatus_USER_NOTIFICATION_STATUS_SEEN   UserNotificationStatus = 2
	UserNotificationStatus_USER_NOTIFICATION_STATUS_READ   UserNotificationStatus = 3
	UserNotificationStatus_USER_NOTIFICATION_STATUS_FAILED UserNotificationStatus = 4
)

// Enum value maps for UserNotificationStatus.
var (
	UserNotificationStatus_name = map[int32]string{
		0: "USER_NOTIFICATION_STATUS_NONE",
		1: "USER_NOTIFICATION_STATUS_NEW",
		2: "USER_NOTIFICATION_STATUS_SEEN",
		3: "USER_NOTIFICATION_STATUS_READ",
		4: "USER_NOTIFICATION_STATUS_FAILED",
	}
	UserNotificationStatus_value = map[string]int32{
		"USER_NOTIFICATION_STATUS_NONE":   0,
		"USER_NOTIFICATION_STATUS_NEW":    1,
		"USER_NOTIFICATION_STATUS_SEEN":   2,
		"USER_NOTIFICATION_STATUS_READ":   3,
		"USER_NOTIFICATION_STATUS_FAILED": 4,
	}
)

func (x UserNotificationStatus) Enum() *UserNotificationStatus {
	p := new(UserNotificationStatus)
	*p = x
	return p
}

func (x UserNotificationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserNotificationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[0].Descriptor()
}

func (UserNotificationStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[0]
}

func (x UserNotificationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserNotificationStatus.Descriptor instead.
func (UserNotificationStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{0}
}

type NotificationType int32

const (
	NotificationType_NOTIFICATION_TYPE_NONE       NotificationType = 0
	NotificationType_NOTIFICATION_TYPE_TEXT       NotificationType = 1
	NotificationType_NOTIFICATION_TYPE_PROMO_CODE NotificationType = 2
	NotificationType_NOTIFICATION_TYPE_ASSIGNMENT NotificationType = 3
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_NONE",
		1: "NOTIFICATION_TYPE_TEXT",
		2: "NOTIFICATION_TYPE_PROMO_CODE",
		3: "NOTIFICATION_TYPE_ASSIGNMENT",
	}
	NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_NONE":       0,
		"NOTIFICATION_TYPE_TEXT":       1,
		"NOTIFICATION_TYPE_PROMO_CODE": 2,
		"NOTIFICATION_TYPE_ASSIGNMENT": 3,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[1].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[1]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{1}
}

type AskDuration int32

const (
	AskDuration_ASK_DURATION_DAY   AskDuration = 0
	AskDuration_ASK_DURATION_WEEK  AskDuration = 1
	AskDuration_ASK_DURATION_MONTH AskDuration = 2
	AskDuration_ASK_DURATION_YEAR  AskDuration = 3
)

// Enum value maps for AskDuration.
var (
	AskDuration_name = map[int32]string{
		0: "ASK_DURATION_DAY",
		1: "ASK_DURATION_WEEK",
		2: "ASK_DURATION_MONTH",
		3: "ASK_DURATION_YEAR",
	}
	AskDuration_value = map[string]int32{
		"ASK_DURATION_DAY":   0,
		"ASK_DURATION_WEEK":  1,
		"ASK_DURATION_MONTH": 2,
		"ASK_DURATION_YEAR":  3,
	}
)

func (x AskDuration) Enum() *AskDuration {
	p := new(AskDuration)
	*p = x
	return p
}

func (x AskDuration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AskDuration) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[2].Descriptor()
}

func (AskDuration) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[2]
}

func (x AskDuration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AskDuration.Descriptor instead.
func (AskDuration) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{2}
}

type QuestionStatus int32

const (
	QuestionStatus_QUESTION_STATUS_WAITING_FOR_ASSIGN QuestionStatus = 0
	QuestionStatus_QUESTION_STATUS_ASSIGNED           QuestionStatus = 1
	QuestionStatus_QUESTION_STATUS_MARKED_AS_RESOLVED QuestionStatus = 2
	QuestionStatus_QUESTION_STATUS_MARKED_AS_INVALID  QuestionStatus = 3
	QuestionStatus_QUESTION_STATUS_INVALID            QuestionStatus = 4
	QuestionStatus_QUESTION_STATUS_SOLVED             QuestionStatus = 5
	QuestionStatus_QUESTION_STATUS_EXPIRED_SOLVED     QuestionStatus = 6
	QuestionStatus_QUESTION_STATUS_RATED              QuestionStatus = 7
	QuestionStatus_QUESTION_STATUS_ARCHIVED           QuestionStatus = 8
)

// Enum value maps for QuestionStatus.
var (
	QuestionStatus_name = map[int32]string{
		0: "QUESTION_STATUS_WAITING_FOR_ASSIGN",
		1: "QUESTION_STATUS_ASSIGNED",
		2: "QUESTION_STATUS_MARKED_AS_RESOLVED",
		3: "QUESTION_STATUS_MARKED_AS_INVALID",
		4: "QUESTION_STATUS_INVALID",
		5: "QUESTION_STATUS_SOLVED",
		6: "QUESTION_STATUS_EXPIRED_SOLVED",
		7: "QUESTION_STATUS_RATED",
		8: "QUESTION_STATUS_ARCHIVED",
	}
	QuestionStatus_value = map[string]int32{
		"QUESTION_STATUS_WAITING_FOR_ASSIGN": 0,
		"QUESTION_STATUS_ASSIGNED":           1,
		"QUESTION_STATUS_MARKED_AS_RESOLVED": 2,
		"QUESTION_STATUS_MARKED_AS_INVALID":  3,
		"QUESTION_STATUS_INVALID":            4,
		"QUESTION_STATUS_SOLVED":             5,
		"QUESTION_STATUS_EXPIRED_SOLVED":     6,
		"QUESTION_STATUS_RATED":              7,
		"QUESTION_STATUS_ARCHIVED":           8,
	}
)

func (x QuestionStatus) Enum() *QuestionStatus {
	p := new(QuestionStatus)
	*p = x
	return p
}

func (x QuestionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[3].Descriptor()
}

func (QuestionStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[3]
}

func (x QuestionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionStatus.Descriptor instead.
func (QuestionStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{3}
}

type TutorStatus int32

const (
	TutorStatus_TUTOR_STATUS_NONE    TutorStatus = 0
	TutorStatus_TUTOR_STATUS_ONLINE  TutorStatus = 1
	TutorStatus_TUTOR_STATUS_OFFLINE TutorStatus = 2
)

// Enum value maps for TutorStatus.
var (
	TutorStatus_name = map[int32]string{
		0: "TUTOR_STATUS_NONE",
		1: "TUTOR_STATUS_ONLINE",
		2: "TUTOR_STATUS_OFFLINE",
	}
	TutorStatus_value = map[string]int32{
		"TUTOR_STATUS_NONE":    0,
		"TUTOR_STATUS_ONLINE":  1,
		"TUTOR_STATUS_OFFLINE": 2,
	}
)

func (x TutorStatus) Enum() *TutorStatus {
	p := new(TutorStatus)
	*p = x
	return p
}

func (x TutorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TutorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[4].Descriptor()
}

func (TutorStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[4]
}

func (x TutorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TutorStatus.Descriptor instead.
func (TutorStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{4}
}

type QuestionTransition int32

const (
	QuestionTransition_QUESTION_TRANSITION_ASSIGN             QuestionTransition = 0
	QuestionTransition_QUESTION_TRANSITION_MARKED_AS_RESOLVED QuestionTransition = 1
	QuestionTransition_QUESTION_TRANSITION_MARKED_AS_INVALID  QuestionTransition = 2
	QuestionTransition_QUESTION_TRANSITION_AGREE_INVALID      QuestionTransition = 3
	QuestionTransition_QUESTION_TRANSITION_DISAGREE_INVALID   QuestionTransition = 4
	QuestionTransition_QUESTION_TRANSITION_AGREE_RESOLVED     QuestionTransition = 5
	QuestionTransition_QUESTION_TRANSITION_DISAGREE_RESOLVED  QuestionTransition = 6
	QuestionTransition_QUESTION_TRANSITION_TIME_OUT_SOLVED    QuestionTransition = 7
	QuestionTransition_QUESTION_TRANSITION_RATE               QuestionTransition = 8
	QuestionTransition_QUESTION_TRANSITION_ARCHIVED           QuestionTransition = 9
)

// Enum value maps for QuestionTransition.
var (
	QuestionTransition_name = map[int32]string{
		0: "QUESTION_TRANSITION_ASSIGN",
		1: "QUESTION_TRANSITION_MARKED_AS_RESOLVED",
		2: "QUESTION_TRANSITION_MARKED_AS_INVALID",
		3: "QUESTION_TRANSITION_AGREE_INVALID",
		4: "QUESTION_TRANSITION_DISAGREE_INVALID",
		5: "QUESTION_TRANSITION_AGREE_RESOLVED",
		6: "QUESTION_TRANSITION_DISAGREE_RESOLVED",
		7: "QUESTION_TRANSITION_TIME_OUT_SOLVED",
		8: "QUESTION_TRANSITION_RATE",
		9: "QUESTION_TRANSITION_ARCHIVED",
	}
	QuestionTransition_value = map[string]int32{
		"QUESTION_TRANSITION_ASSIGN":             0,
		"QUESTION_TRANSITION_MARKED_AS_RESOLVED": 1,
		"QUESTION_TRANSITION_MARKED_AS_INVALID":  2,
		"QUESTION_TRANSITION_AGREE_INVALID":      3,
		"QUESTION_TRANSITION_DISAGREE_INVALID":   4,
		"QUESTION_TRANSITION_AGREE_RESOLVED":     5,
		"QUESTION_TRANSITION_DISAGREE_RESOLVED":  6,
		"QUESTION_TRANSITION_TIME_OUT_SOLVED":    7,
		"QUESTION_TRANSITION_RATE":               8,
		"QUESTION_TRANSITION_ARCHIVED":           9,
	}
)

func (x QuestionTransition) Enum() *QuestionTransition {
	p := new(QuestionTransition)
	*p = x
	return p
}

func (x QuestionTransition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionTransition) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[5].Descriptor()
}

func (QuestionTransition) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[5]
}

func (x QuestionTransition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionTransition.Descriptor instead.
func (QuestionTransition) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{5}
}

type StudentLearningEvent int32

const (
	StudentLearningEvent_STUDENT_LEARNING_EVENT_THREE_LO_EVENT StudentLearningEvent = 0
)

// Enum value maps for StudentLearningEvent.
var (
	StudentLearningEvent_name = map[int32]string{
		0: "STUDENT_LEARNING_EVENT_THREE_LO_EVENT",
	}
	StudentLearningEvent_value = map[string]int32{
		"STUDENT_LEARNING_EVENT_THREE_LO_EVENT": 0,
	}
)

func (x StudentLearningEvent) Enum() *StudentLearningEvent {
	p := new(StudentLearningEvent)
	*p = x
	return p
}

func (x StudentLearningEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudentLearningEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[6].Descriptor()
}

func (StudentLearningEvent) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[6]
}

func (x StudentLearningEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudentLearningEvent.Descriptor instead.
func (StudentLearningEvent) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{6}
}

type AchievementCrown int32

const (
	AchievementCrown_ACHIEVEMENT_CROWN_NONE   AchievementCrown = 0
	AchievementCrown_ACHIEVEMENT_CROWN_BRONZE AchievementCrown = 1
	AchievementCrown_ACHIEVEMENT_CROWN_SILVER AchievementCrown = 2
	AchievementCrown_ACHIEVEMENT_CROWN_GOLD   AchievementCrown = 3
)

// Enum value maps for AchievementCrown.
var (
	AchievementCrown_name = map[int32]string{
		0: "ACHIEVEMENT_CROWN_NONE",
		1: "ACHIEVEMENT_CROWN_BRONZE",
		2: "ACHIEVEMENT_CROWN_SILVER",
		3: "ACHIEVEMENT_CROWN_GOLD",
	}
	AchievementCrown_value = map[string]int32{
		"ACHIEVEMENT_CROWN_NONE":   0,
		"ACHIEVEMENT_CROWN_BRONZE": 1,
		"ACHIEVEMENT_CROWN_SILVER": 2,
		"ACHIEVEMENT_CROWN_GOLD":   3,
	}
)

func (x AchievementCrown) Enum() *AchievementCrown {
	p := new(AchievementCrown)
	*p = x
	return p
}

func (x AchievementCrown) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AchievementCrown) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[7].Descriptor()
}

func (AchievementCrown) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[7]
}

func (x AchievementCrown) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AchievementCrown.Descriptor instead.
func (AchievementCrown) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{7}
}

type NotificationEvent int32

const (
	NotificationEvent_NOTIFICATION_EVENT_NONE                      NotificationEvent = 0
	NotificationEvent_NOTIFICATION_EVENT_X_LO_COMPLETED            NotificationEvent = 1
	NotificationEvent_NOTIFICATION_EVENT_TEACHER_GIVE_ASSIGNMENT   NotificationEvent = 2
	NotificationEvent_NOTIFICATION_EVENT_TEACHER_RETURN_ASSIGNMENT NotificationEvent = 3
	NotificationEvent_NOTIFICATION_EVENT_STUDENT_SUBMIT_ASSIGNMENT NotificationEvent = 4
	NotificationEvent_NOTIFICATION_EVENT_ASSIGNMENT_UPDATED        NotificationEvent = 5
)

// Enum value maps for NotificationEvent.
var (
	NotificationEvent_name = map[int32]string{
		0: "NOTIFICATION_EVENT_NONE",
		1: "NOTIFICATION_EVENT_X_LO_COMPLETED",
		2: "NOTIFICATION_EVENT_TEACHER_GIVE_ASSIGNMENT",
		3: "NOTIFICATION_EVENT_TEACHER_RETURN_ASSIGNMENT",
		4: "NOTIFICATION_EVENT_STUDENT_SUBMIT_ASSIGNMENT",
		5: "NOTIFICATION_EVENT_ASSIGNMENT_UPDATED",
	}
	NotificationEvent_value = map[string]int32{
		"NOTIFICATION_EVENT_NONE":                      0,
		"NOTIFICATION_EVENT_X_LO_COMPLETED":            1,
		"NOTIFICATION_EVENT_TEACHER_GIVE_ASSIGNMENT":   2,
		"NOTIFICATION_EVENT_TEACHER_RETURN_ASSIGNMENT": 3,
		"NOTIFICATION_EVENT_STUDENT_SUBMIT_ASSIGNMENT": 4,
		"NOTIFICATION_EVENT_ASSIGNMENT_UPDATED":        5,
	}
)

func (x NotificationEvent) Enum() *NotificationEvent {
	p := new(NotificationEvent)
	*p = x
	return p
}

func (x NotificationEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[8].Descriptor()
}

func (NotificationEvent) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[8]
}

func (x NotificationEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationEvent.Descriptor instead.
func (NotificationEvent) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{8}
}

type PublishStudentVideoStatus int32

const (
	PublishStudentVideoStatus_PUBLISH_STUDENT_VIDEO_STATUS_NONE PublishStudentVideoStatus = 0
	PublishStudentVideoStatus_PUBLISH_STUDENT_VIDEO_STATUS_ON   PublishStudentVideoStatus = 1
	PublishStudentVideoStatus_PUBLISH_STUDENT_VIDEO_STATUS_OFF  PublishStudentVideoStatus = 2
)

// Enum value maps for PublishStudentVideoStatus.
var (
	PublishStudentVideoStatus_name = map[int32]string{
		0: "PUBLISH_STUDENT_VIDEO_STATUS_NONE",
		1: "PUBLISH_STUDENT_VIDEO_STATUS_ON",
		2: "PUBLISH_STUDENT_VIDEO_STATUS_OFF",
	}
	PublishStudentVideoStatus_value = map[string]int32{
		"PUBLISH_STUDENT_VIDEO_STATUS_NONE": 0,
		"PUBLISH_STUDENT_VIDEO_STATUS_ON":   1,
		"PUBLISH_STUDENT_VIDEO_STATUS_OFF":  2,
	}
)

func (x PublishStudentVideoStatus) Enum() *PublishStudentVideoStatus {
	p := new(PublishStudentVideoStatus)
	*p = x
	return p
}

func (x PublishStudentVideoStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PublishStudentVideoStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[9].Descriptor()
}

func (PublishStudentVideoStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[9]
}

func (x PublishStudentVideoStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PublishStudentVideoStatus.Descriptor instead.
func (PublishStudentVideoStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{9}
}

type UnmuteStudentAudioStatus int32

const (
	UnmuteStudentAudioStatus_UNMUTE_STUDENT_AUDIO_STATUS_NONE UnmuteStudentAudioStatus = 0
	UnmuteStudentAudioStatus_UNMUTE_STUDENT_AUDIO_STATUS_ON   UnmuteStudentAudioStatus = 1
	UnmuteStudentAudioStatus_UNMUTE_STUDENT_AUDIO_STATUS_OFF  UnmuteStudentAudioStatus = 2
)

// Enum value maps for UnmuteStudentAudioStatus.
var (
	UnmuteStudentAudioStatus_name = map[int32]string{
		0: "UNMUTE_STUDENT_AUDIO_STATUS_NONE",
		1: "UNMUTE_STUDENT_AUDIO_STATUS_ON",
		2: "UNMUTE_STUDENT_AUDIO_STATUS_OFF",
	}
	UnmuteStudentAudioStatus_value = map[string]int32{
		"UNMUTE_STUDENT_AUDIO_STATUS_NONE": 0,
		"UNMUTE_STUDENT_AUDIO_STATUS_ON":   1,
		"UNMUTE_STUDENT_AUDIO_STATUS_OFF":  2,
	}
)

func (x UnmuteStudentAudioStatus) Enum() *UnmuteStudentAudioStatus {
	p := new(UnmuteStudentAudioStatus)
	*p = x
	return p
}

func (x UnmuteStudentAudioStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnmuteStudentAudioStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[10].Descriptor()
}

func (UnmuteStudentAudioStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[10]
}

func (x UnmuteStudentAudioStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnmuteStudentAudioStatus.Descriptor instead.
func (UnmuteStudentAudioStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{10}
}

type MediaType int32

const (
	MediaType_MEDIA_TYPE_NONE  MediaType = 0
	MediaType_MEDIA_TYPE_VIDEO MediaType = 1
	MediaType_MEDIA_TYPE_IMAGE MediaType = 2
	MediaType_MEDIA_TYPE_PDF   MediaType = 3
	MediaType_MEDIA_TYPE_AUDIO MediaType = 4
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MEDIA_TYPE_NONE",
		1: "MEDIA_TYPE_VIDEO",
		2: "MEDIA_TYPE_IMAGE",
		3: "MEDIA_TYPE_PDF",
		4: "MEDIA_TYPE_AUDIO",
	}
	MediaType_value = map[string]int32{
		"MEDIA_TYPE_NONE":  0,
		"MEDIA_TYPE_VIDEO": 1,
		"MEDIA_TYPE_IMAGE": 2,
		"MEDIA_TYPE_PDF":   3,
		"MEDIA_TYPE_AUDIO": 4,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[11].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[11]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{11}
}

type PrepareToPublishStatus int32

const (
	PrepareToPublishStatus_PREPARE_TO_PUBLISH_STATUS_NONE                       PrepareToPublishStatus = 0
	PrepareToPublishStatus_PREPARE_TO_PUBLISH_STATUS_REACHED_MAX_UPSTREAM_LIMIT PrepareToPublishStatus = 1
	PrepareToPublishStatus_PREPARE_TO_PUBLISH_STATUS_PREPARED_BEFORE            PrepareToPublishStatus = 2
)

// Enum value maps for PrepareToPublishStatus.
var (
	PrepareToPublishStatus_name = map[int32]string{
		0: "PREPARE_TO_PUBLISH_STATUS_NONE",
		1: "PREPARE_TO_PUBLISH_STATUS_REACHED_MAX_UPSTREAM_LIMIT",
		2: "PREPARE_TO_PUBLISH_STATUS_PREPARED_BEFORE",
	}
	PrepareToPublishStatus_value = map[string]int32{
		"PREPARE_TO_PUBLISH_STATUS_NONE":                       0,
		"PREPARE_TO_PUBLISH_STATUS_REACHED_MAX_UPSTREAM_LIMIT": 1,
		"PREPARE_TO_PUBLISH_STATUS_PREPARED_BEFORE":            2,
	}
)

func (x PrepareToPublishStatus) Enum() *PrepareToPublishStatus {
	p := new(PrepareToPublishStatus)
	*p = x
	return p
}

func (x PrepareToPublishStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrepareToPublishStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[12].Descriptor()
}

func (PrepareToPublishStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[12]
}

func (x PrepareToPublishStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrepareToPublishStatus.Descriptor instead.
func (PrepareToPublishStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{12}
}

type UnpublishStatus int32

const (
	UnpublishStatus_UNPUBLISH_STATUS_UNPUBLISHED_NONE   UnpublishStatus = 0
	UnpublishStatus_UNPUBLISH_STATUS_UNPUBLISHED_BEFORE UnpublishStatus = 1
)

// Enum value maps for UnpublishStatus.
var (
	UnpublishStatus_name = map[int32]string{
		0: "UNPUBLISH_STATUS_UNPUBLISHED_NONE",
		1: "UNPUBLISH_STATUS_UNPUBLISHED_BEFORE",
	}
	UnpublishStatus_value = map[string]int32{
		"UNPUBLISH_STATUS_UNPUBLISHED_NONE":   0,
		"UNPUBLISH_STATUS_UNPUBLISHED_BEFORE": 1,
	}
)

func (x UnpublishStatus) Enum() *UnpublishStatus {
	p := new(UnpublishStatus)
	*p = x
	return p
}

func (x UnpublishStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnpublishStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_enums_proto_enumTypes[13].Descriptor()
}

func (UnpublishStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_enums_proto_enumTypes[13]
}

func (x UnpublishStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnpublishStatus.Descriptor instead.
func (UnpublishStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_enums_proto_rawDescGZIP(), []int{13}
}

var File_bob_v1_enums_proto protoreflect.FileDescriptor

var file_bob_v1_enums_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2a, 0xc8, 0x01, 0x0a,
	0x16, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x45, 0x4e, 0x10, 0x02, 0x12,
	0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x8e, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x4f, 0x54, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45,
	0x58, 0x54, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x49,
	0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x2a, 0x69, 0x0a, 0x0b, 0x41, 0x73, 0x6b, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x53, 0x4b, 0x5f, 0x44,
	0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x41, 0x53, 0x4b, 0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x45,
	0x45, 0x4b, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x53, 0x4b, 0x5f, 0x44, 0x55, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11,
	0x41, 0x53, 0x4b, 0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x59, 0x45, 0x41,
	0x52, 0x10, 0x03, 0x2a, 0xbb, 0x02, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x22, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x00, 0x12, 0x1c,
	0x0a, 0x18, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4d, 0x41, 0x52, 0x4b, 0x45, 0x44, 0x5f, 0x41, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x44, 0x5f, 0x41,
	0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x4c, 0x56,
	0x45, 0x44, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x5f,
	0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x44, 0x10,
	0x08, 0x2a, 0x57, 0x0a, 0x0b, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x15, 0x0a, 0x11, 0x54, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x55, 0x54, 0x4f, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x54, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x2a, 0x98, 0x03, 0x0a, 0x12, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x10,
	0x00, 0x12, 0x2a, 0x0a, 0x26, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x44, 0x5f,
	0x41, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x29, 0x0a,
	0x25, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x44, 0x5f, 0x41, 0x53, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x41, 0x47, 0x52, 0x45, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x12,
	0x28, 0x0a, 0x24, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x47, 0x52, 0x45, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x04, 0x12, 0x26, 0x0a, 0x22, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x47, 0x52, 0x45, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x29, 0x0a, 0x25, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x47, 0x52, 0x45,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x06, 0x12, 0x27, 0x0a, 0x23,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x53, 0x4f, 0x4c,
	0x56, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x54,
	0x45, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49,
	0x56, 0x45, 0x44, 0x10, 0x09, 0x2a, 0x41, 0x0a, 0x14, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x25, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x45, 0x41, 0x52, 0x4e, 0x49, 0x4e,
	0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x4c, 0x4f,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x2a, 0x86, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x12, 0x1a, 0x0a,
	0x16, 0x41, 0x43, 0x48, 0x49, 0x45, 0x56, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x4f,
	0x57, 0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x43, 0x48,
	0x49, 0x45, 0x56, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x42,
	0x52, 0x4f, 0x4e, 0x5a, 0x45, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x43, 0x48, 0x49, 0x45,
	0x56, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x49, 0x4c,
	0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x48, 0x49, 0x45, 0x56, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x4f, 0x57, 0x4e, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x10,
	0x03, 0x2a, 0x96, 0x02, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x58, 0x5f, 0x4c, 0x4f, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x2e, 0x0a, 0x2a, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x5f, 0x41,
	0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x30, 0x0a, 0x2c, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e,
	0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x30, 0x0a,
	0x2c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x4d,
	0x49, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12,
	0x29, 0x0a, 0x25, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x05, 0x2a, 0x8d, 0x01, 0x0a, 0x19, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x23, 0x0a, 0x1f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45,
	0x4e, 0x54, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f,
	0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x2a, 0x89, 0x01, 0x0a, 0x18, 0x55,
	0x6e, 0x6d, 0x75, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x20, 0x55, 0x4e, 0x4d, 0x55, 0x54,
	0x45, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x22, 0x0a,
	0x1e, 0x55, 0x4e, 0x4d, 0x55, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f,
	0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x4e, 0x4d, 0x55, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x55, 0x44,
	0x45, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x2a, 0x76, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x44, 0x46, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x04, 0x2a, 0xa5,
	0x01, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x6f, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x45,
	0x50, 0x41, 0x52, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x38, 0x0a,
	0x34, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48,
	0x45, 0x44, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x55, 0x50, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x50, 0x52, 0x45, 0x50, 0x41,
	0x52, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x44, 0x5f, 0x42, 0x45,
	0x46, 0x4f, 0x52, 0x45, 0x10, 0x02, 0x2a, 0x61, 0x0a, 0x0f, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x21, 0x55, 0x4e, 0x50,
	0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x27, 0x0a, 0x23, 0x55, 0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44,
	0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x62, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x62,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bob_v1_enums_proto_rawDescOnce sync.Once
	file_bob_v1_enums_proto_rawDescData = file_bob_v1_enums_proto_rawDesc
)

func file_bob_v1_enums_proto_rawDescGZIP() []byte {
	file_bob_v1_enums_proto_rawDescOnce.Do(func() {
		file_bob_v1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_bob_v1_enums_proto_rawDescData)
	})
	return file_bob_v1_enums_proto_rawDescData
}

var file_bob_v1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 14)
var file_bob_v1_enums_proto_goTypes = []interface{}{
	(UserNotificationStatus)(0),    // 0: bob.v1.UserNotificationStatus
	(NotificationType)(0),          // 1: bob.v1.NotificationType
	(AskDuration)(0),               // 2: bob.v1.AskDuration
	(QuestionStatus)(0),            // 3: bob.v1.QuestionStatus
	(TutorStatus)(0),               // 4: bob.v1.TutorStatus
	(QuestionTransition)(0),        // 5: bob.v1.QuestionTransition
	(StudentLearningEvent)(0),      // 6: bob.v1.StudentLearningEvent
	(AchievementCrown)(0),          // 7: bob.v1.AchievementCrown
	(NotificationEvent)(0),         // 8: bob.v1.NotificationEvent
	(PublishStudentVideoStatus)(0), // 9: bob.v1.PublishStudentVideoStatus
	(UnmuteStudentAudioStatus)(0),  // 10: bob.v1.UnmuteStudentAudioStatus
	(MediaType)(0),                 // 11: bob.v1.MediaType
	(PrepareToPublishStatus)(0),    // 12: bob.v1.PrepareToPublishStatus
	(UnpublishStatus)(0),           // 13: bob.v1.UnpublishStatus
}
var file_bob_v1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_bob_v1_enums_proto_init() }
func file_bob_v1_enums_proto_init() {
	if File_bob_v1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bob_v1_enums_proto_rawDesc,
			NumEnums:      14,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bob_v1_enums_proto_goTypes,
		DependencyIndexes: file_bob_v1_enums_proto_depIdxs,
		EnumInfos:         file_bob_v1_enums_proto_enumTypes,
	}.Build()
	File_bob_v1_enums_proto = out.File
	file_bob_v1_enums_proto_rawDesc = nil
	file_bob_v1_enums_proto_goTypes = nil
	file_bob_v1_enums_proto_depIdxs = nil
}
