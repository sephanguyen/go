// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package bpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// UploadServiceClient is the client API for UploadService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UploadServiceClient interface {
	GeneratePresignedPutObjectURL(ctx context.Context, in *PresignedPutObjectRequest, opts ...grpc.CallOption) (*PresignedPutObjectResponse, error)
	GenerateResumableUploadURL(ctx context.Context, in *ResumableUploadURLRequest, opts ...grpc.CallOption) (*ResumableUploadURLResponse, error)
	GenerateResumableUploadURLV2(ctx context.Context, in *ResumableUploadURLRequestV2, opts ...grpc.CallOption) (*ResumableUploadURLResponseV2, error)
}

type uploadServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUploadServiceClient(cc grpc.ClientConnInterface) UploadServiceClient {
	return &uploadServiceClient{cc}
}

func (c *uploadServiceClient) GeneratePresignedPutObjectURL(ctx context.Context, in *PresignedPutObjectRequest, opts ...grpc.CallOption) (*PresignedPutObjectResponse, error) {
	out := new(PresignedPutObjectResponse)
	err := c.cc.Invoke(ctx, "/bob.v1.UploadService/GeneratePresignedPutObjectURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uploadServiceClient) GenerateResumableUploadURL(ctx context.Context, in *ResumableUploadURLRequest, opts ...grpc.CallOption) (*ResumableUploadURLResponse, error) {
	out := new(ResumableUploadURLResponse)
	err := c.cc.Invoke(ctx, "/bob.v1.UploadService/GenerateResumableUploadURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uploadServiceClient) GenerateResumableUploadURLV2(ctx context.Context, in *ResumableUploadURLRequestV2, opts ...grpc.CallOption) (*ResumableUploadURLResponseV2, error) {
	out := new(ResumableUploadURLResponseV2)
	err := c.cc.Invoke(ctx, "/bob.v1.UploadService/GenerateResumableUploadURLV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UploadServiceServer is the server API for UploadService service.
// All implementations should embed UnimplementedUploadServiceServer
// for forward compatibility
type UploadServiceServer interface {
	GeneratePresignedPutObjectURL(context.Context, *PresignedPutObjectRequest) (*PresignedPutObjectResponse, error)
	GenerateResumableUploadURL(context.Context, *ResumableUploadURLRequest) (*ResumableUploadURLResponse, error)
	GenerateResumableUploadURLV2(context.Context, *ResumableUploadURLRequestV2) (*ResumableUploadURLResponseV2, error)
}

// UnimplementedUploadServiceServer should be embedded to have forward compatible implementations.
type UnimplementedUploadServiceServer struct {
}

func (UnimplementedUploadServiceServer) GeneratePresignedPutObjectURL(context.Context, *PresignedPutObjectRequest) (*PresignedPutObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeneratePresignedPutObjectURL not implemented")
}
func (UnimplementedUploadServiceServer) GenerateResumableUploadURL(context.Context, *ResumableUploadURLRequest) (*ResumableUploadURLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateResumableUploadURL not implemented")
}
func (UnimplementedUploadServiceServer) GenerateResumableUploadURLV2(context.Context, *ResumableUploadURLRequestV2) (*ResumableUploadURLResponseV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateResumableUploadURLV2 not implemented")
}

// UnsafeUploadServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UploadServiceServer will
// result in compilation errors.
type UnsafeUploadServiceServer interface {
	mustEmbedUnimplementedUploadServiceServer()
}

func RegisterUploadServiceServer(s grpc.ServiceRegistrar, srv UploadServiceServer) {
	s.RegisterService(&_UploadService_serviceDesc, srv)
}

func _UploadService_GeneratePresignedPutObjectURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PresignedPutObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UploadServiceServer).GeneratePresignedPutObjectURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bob.v1.UploadService/GeneratePresignedPutObjectURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UploadServiceServer).GeneratePresignedPutObjectURL(ctx, req.(*PresignedPutObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UploadService_GenerateResumableUploadURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumableUploadURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UploadServiceServer).GenerateResumableUploadURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bob.v1.UploadService/GenerateResumableUploadURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UploadServiceServer).GenerateResumableUploadURL(ctx, req.(*ResumableUploadURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UploadService_GenerateResumableUploadURLV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumableUploadURLRequestV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UploadServiceServer).GenerateResumableUploadURLV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bob.v1.UploadService/GenerateResumableUploadURLV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UploadServiceServer).GenerateResumableUploadURLV2(ctx, req.(*ResumableUploadURLRequestV2))
	}
	return interceptor(ctx, in, info, handler)
}

var _UploadService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bob.v1.UploadService",
	HandlerType: (*UploadServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GeneratePresignedPutObjectURL",
			Handler:    _UploadService_GeneratePresignedPutObjectURL_Handler,
		},
		{
			MethodName: "GenerateResumableUploadURL",
			Handler:    _UploadService_GenerateResumableUploadURL_Handler,
		},
		{
			MethodName: "GenerateResumableUploadURLV2",
			Handler:    _UploadService_GenerateResumableUploadURLV2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bob/v1/uploads.proto",
}
