// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: bob/v1/media.proto

package bpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UploadType int32

const (
	UploadType_UPLOAD_TYPE_AVATAR     UploadType = 0
	UploadType_UPLOAD_TYPE_CHAT       UploadType = 1
	UploadType_UPLOAD_TYPE_ASSIGNMENT UploadType = 2
)

// Enum value maps for UploadType.
var (
	UploadType_name = map[int32]string{
		0: "UPLOAD_TYPE_AVATAR",
		1: "UPLOAD_TYPE_CHAT",
		2: "UPLOAD_TYPE_ASSIGNMENT",
	}
	UploadType_value = map[string]int32{
		"UPLOAD_TYPE_AVATAR":     0,
		"UPLOAD_TYPE_CHAT":       1,
		"UPLOAD_TYPE_ASSIGNMENT": 2,
	}
)

func (x UploadType) Enum() *UploadType {
	p := new(UploadType)
	*p = x
	return p
}

func (x UploadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadType) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_media_proto_enumTypes[0].Descriptor()
}

func (UploadType) Type() protoreflect.EnumType {
	return &file_bob_v1_media_proto_enumTypes[0]
}

func (x UploadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadType.Descriptor instead.
func (UploadType) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{0}
}

type ConversionTaskStatus int32

const (
	ConversionTaskStatus_CONVERSION_TASK_STATUS_INVALID    ConversionTaskStatus = 0
	ConversionTaskStatus_CONVERSION_TASK_STATUS_WAITING    ConversionTaskStatus = 1
	ConversionTaskStatus_CONVERSION_TASK_STATUS_CONVERTING ConversionTaskStatus = 2
	ConversionTaskStatus_CONVERSION_TASK_STATUS_FINISHED   ConversionTaskStatus = 3
	ConversionTaskStatus_CONVERSION_TASK_STATUS_FAILED     ConversionTaskStatus = 4
)

// Enum value maps for ConversionTaskStatus.
var (
	ConversionTaskStatus_name = map[int32]string{
		0: "CONVERSION_TASK_STATUS_INVALID",
		1: "CONVERSION_TASK_STATUS_WAITING",
		2: "CONVERSION_TASK_STATUS_CONVERTING",
		3: "CONVERSION_TASK_STATUS_FINISHED",
		4: "CONVERSION_TASK_STATUS_FAILED",
	}
	ConversionTaskStatus_value = map[string]int32{
		"CONVERSION_TASK_STATUS_INVALID":    0,
		"CONVERSION_TASK_STATUS_WAITING":    1,
		"CONVERSION_TASK_STATUS_CONVERTING": 2,
		"CONVERSION_TASK_STATUS_FINISHED":   3,
		"CONVERSION_TASK_STATUS_FAILED":     4,
	}
)

func (x ConversionTaskStatus) Enum() *ConversionTaskStatus {
	p := new(ConversionTaskStatus)
	*p = x
	return p
}

func (x ConversionTaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversionTaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_media_proto_enumTypes[1].Descriptor()
}

func (ConversionTaskStatus) Type() protoreflect.EnumType {
	return &file_bob_v1_media_proto_enumTypes[1]
}

func (x ConversionTaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversionTaskStatus.Descriptor instead.
func (ConversionTaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{1}
}

type AudioOptionType int32

const (
	AudioOptionType_FLASHCARD_AUDIO_TYPE_NONE       AudioOptionType = 0
	AudioOptionType_FLASHCARD_AUDIO_TYPE_TERM       AudioOptionType = 1
	AudioOptionType_FLASHCARD_AUDIO_TYPE_DEFINITION AudioOptionType = 2
)

// Enum value maps for AudioOptionType.
var (
	AudioOptionType_name = map[int32]string{
		0: "FLASHCARD_AUDIO_TYPE_NONE",
		1: "FLASHCARD_AUDIO_TYPE_TERM",
		2: "FLASHCARD_AUDIO_TYPE_DEFINITION",
	}
	AudioOptionType_value = map[string]int32{
		"FLASHCARD_AUDIO_TYPE_NONE":       0,
		"FLASHCARD_AUDIO_TYPE_TERM":       1,
		"FLASHCARD_AUDIO_TYPE_DEFINITION": 2,
	}
)

func (x AudioOptionType) Enum() *AudioOptionType {
	p := new(AudioOptionType)
	*p = x
	return p
}

func (x AudioOptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioOptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bob_v1_media_proto_enumTypes[2].Descriptor()
}

func (AudioOptionType) Type() protoreflect.EnumType {
	return &file_bob_v1_media_proto_enumTypes[2]
}

func (x AudioOptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AudioOptionType.Descriptor instead.
func (AudioOptionType) EnumDescriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{2}
}

type UploadAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadType UploadType `protobuf:"varint,1,opt,name=upload_type,json=uploadType,proto3,enum=bob.v1.UploadType" json:"upload_type,omitempty"`
	Payload    []byte     `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Extension  string     `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
}

func (x *UploadAssetRequest) Reset() {
	*x = UploadAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetRequest) ProtoMessage() {}

func (x *UploadAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetRequest.ProtoReflect.Descriptor instead.
func (*UploadAssetRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{0}
}

func (x *UploadAssetRequest) GetUploadType() UploadType {
	if x != nil {
		return x.UploadType
	}
	return UploadType_UPLOAD_TYPE_AVATAR
}

func (x *UploadAssetRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UploadAssetRequest) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

type UploadAssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UploadAssetResponse) Reset() {
	*x = UploadAssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetResponse) ProtoMessage() {}

func (x *UploadAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetResponse.ProtoReflect.Descriptor instead.
func (*UploadAssetResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{1}
}

func (x *UploadAssetResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreateBrightCoveUploadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateBrightCoveUploadUrlRequest) Reset() {
	*x = CreateBrightCoveUploadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBrightCoveUploadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrightCoveUploadUrlRequest) ProtoMessage() {}

func (x *CreateBrightCoveUploadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrightCoveUploadUrlRequest.ProtoReflect.Descriptor instead.
func (*CreateBrightCoveUploadUrlRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBrightCoveUploadUrlRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateBrightCoveUploadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedUrl     string `protobuf:"bytes,1,opt,name=signed_url,json=signedUrl,proto3" json:"signed_url,omitempty"`
	ApiRequestUrl string `protobuf:"bytes,2,opt,name=api_request_url,json=apiRequestUrl,proto3" json:"api_request_url,omitempty"`
	VideoId       string `protobuf:"bytes,3,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *CreateBrightCoveUploadUrlResponse) Reset() {
	*x = CreateBrightCoveUploadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBrightCoveUploadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrightCoveUploadUrlResponse) ProtoMessage() {}

func (x *CreateBrightCoveUploadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrightCoveUploadUrlResponse.ProtoReflect.Descriptor instead.
func (*CreateBrightCoveUploadUrlResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{3}
}

func (x *CreateBrightCoveUploadUrlResponse) GetSignedUrl() string {
	if x != nil {
		return x.SignedUrl
	}
	return ""
}

func (x *CreateBrightCoveUploadUrlResponse) GetApiRequestUrl() string {
	if x != nil {
		return x.ApiRequestUrl
	}
	return ""
}

func (x *CreateBrightCoveUploadUrlResponse) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

type FinishUploadBrightCoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiRequestUrl string `protobuf:"bytes,1,opt,name=api_request_url,json=apiRequestUrl,proto3" json:"api_request_url,omitempty"`
	VideoId       string `protobuf:"bytes,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *FinishUploadBrightCoveRequest) Reset() {
	*x = FinishUploadBrightCoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishUploadBrightCoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishUploadBrightCoveRequest) ProtoMessage() {}

func (x *FinishUploadBrightCoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishUploadBrightCoveRequest.ProtoReflect.Descriptor instead.
func (*FinishUploadBrightCoveRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{4}
}

func (x *FinishUploadBrightCoveRequest) GetApiRequestUrl() string {
	if x != nil {
		return x.ApiRequestUrl
	}
	return ""
}

func (x *FinishUploadBrightCoveRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

type FinishUploadBrightCoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinishUploadBrightCoveResponse) Reset() {
	*x = FinishUploadBrightCoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishUploadBrightCoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishUploadBrightCoveResponse) ProtoMessage() {}

func (x *FinishUploadBrightCoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishUploadBrightCoveResponse.ProtoReflect.Descriptor instead.
func (*FinishUploadBrightCoveResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{5}
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment  string               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	Duration *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{6}
}

func (x *Comment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Comment) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type ConvertedImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width    int32  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height   int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *ConvertedImage) Reset() {
	*x = ConvertedImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertedImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertedImage) ProtoMessage() {}

func (x *ConvertedImage) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertedImage.ProtoReflect.Descriptor instead.
func (*ConvertedImage) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{7}
}

func (x *ConvertedImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ConvertedImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ConvertedImage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId   string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Resource  string                 `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Comments  []*Comment             `protobuf:"bytes,4,rep,name=comments,proto3" json:"comments,omitempty"`
	Type      MediaType              `protobuf:"varint,5,opt,name=type,proto3,enum=bob.v1.MediaType" json:"type,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Images    []*ConvertedImage      `protobuf:"bytes,8,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *Media) Reset() {
	*x = Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{8}
}

func (x *Media) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *Media) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Media) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Media) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *Media) GetType() MediaType {
	if x != nil {
		return x.Type
	}
	return MediaType_MEDIA_TYPE_NONE
}

func (x *Media) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Media) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Media) GetImages() []*ConvertedImage {
	if x != nil {
		return x.Images
	}
	return nil
}

type RetrieveMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaIds []string `protobuf:"bytes,1,rep,name=media_ids,json=mediaIds,proto3" json:"media_ids,omitempty"`
}

func (x *RetrieveMediaRequest) Reset() {
	*x = RetrieveMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveMediaRequest) ProtoMessage() {}

func (x *RetrieveMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveMediaRequest.ProtoReflect.Descriptor instead.
func (*RetrieveMediaRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{9}
}

func (x *RetrieveMediaRequest) GetMediaIds() []string {
	if x != nil {
		return x.MediaIds
	}
	return nil
}

type RetrieveMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media []*Media `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`
}

func (x *RetrieveMediaResponse) Reset() {
	*x = RetrieveMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveMediaResponse) ProtoMessage() {}

func (x *RetrieveMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveMediaResponse.ProtoReflect.Descriptor instead.
func (*RetrieveMediaResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{10}
}

func (x *RetrieveMediaResponse) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type UpsertMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media []*Media `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`
}

func (x *UpsertMediaRequest) Reset() {
	*x = UpsertMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertMediaRequest) ProtoMessage() {}

func (x *UpsertMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertMediaRequest.ProtoReflect.Descriptor instead.
func (*UpsertMediaRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{11}
}

func (x *UpsertMediaRequest) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type UpsertMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaIds []string `protobuf:"bytes,1,rep,name=media_ids,json=mediaIds,proto3" json:"media_ids,omitempty"`
}

func (x *UpsertMediaResponse) Reset() {
	*x = UpsertMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertMediaResponse) ProtoMessage() {}

func (x *UpsertMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertMediaResponse.ProtoReflect.Descriptor instead.
func (*UpsertMediaResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{12}
}

func (x *UpsertMediaResponse) GetMediaIds() []string {
	if x != nil {
		return x.MediaIds
	}
	return nil
}

type AudioConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *AudioConfig) Reset() {
	*x = AudioConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioConfig) ProtoMessage() {}

func (x *AudioConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioConfig.ProtoReflect.Descriptor instead.
func (*AudioConfig) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{13}
}

func (x *AudioConfig) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type AudioOptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text    string          `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	QuizId  string          `protobuf:"bytes,3,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	Type    AudioOptionType `protobuf:"varint,4,opt,name=type,proto3,enum=bob.v1.AudioOptionType" json:"type,omitempty"`
	Configs *AudioConfig    `protobuf:"bytes,5,opt,name=configs,proto3" json:"configs,omitempty"`
}

func (x *AudioOptionRequest) Reset() {
	*x = AudioOptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioOptionRequest) ProtoMessage() {}

func (x *AudioOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioOptionRequest.ProtoReflect.Descriptor instead.
func (*AudioOptionRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{14}
}

func (x *AudioOptionRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AudioOptionRequest) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *AudioOptionRequest) GetType() AudioOptionType {
	if x != nil {
		return x.Type
	}
	return AudioOptionType_FLASHCARD_AUDIO_TYPE_NONE
}

func (x *AudioOptionRequest) GetConfigs() *AudioConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type AudioOptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link    string          `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	QuizId  string          `protobuf:"bytes,2,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	Text    string          `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Type    AudioOptionType `protobuf:"varint,4,opt,name=type,proto3,enum=bob.v1.AudioOptionType" json:"type,omitempty"`
	Configs *AudioConfig    `protobuf:"bytes,5,opt,name=configs,proto3" json:"configs,omitempty"`
}

func (x *AudioOptionResponse) Reset() {
	*x = AudioOptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioOptionResponse) ProtoMessage() {}

func (x *AudioOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioOptionResponse.ProtoReflect.Descriptor instead.
func (*AudioOptionResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{15}
}

func (x *AudioOptionResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *AudioOptionResponse) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *AudioOptionResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AudioOptionResponse) GetType() AudioOptionType {
	if x != nil {
		return x.Type
	}
	return AudioOptionType_FLASHCARD_AUDIO_TYPE_NONE
}

func (x *AudioOptionResponse) GetConfigs() *AudioConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type GenerateAudioFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*AudioOptionRequest `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *GenerateAudioFileRequest) Reset() {
	*x = GenerateAudioFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAudioFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAudioFileRequest) ProtoMessage() {}

func (x *GenerateAudioFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAudioFileRequest.ProtoReflect.Descriptor instead.
func (*GenerateAudioFileRequest) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{16}
}

func (x *GenerateAudioFileRequest) GetOptions() []*AudioOptionRequest {
	if x != nil {
		return x.Options
	}
	return nil
}

type GenerateAudioFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*AudioOptionResponse `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *GenerateAudioFileResponse) Reset() {
	*x = GenerateAudioFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bob_v1_media_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAudioFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAudioFileResponse) ProtoMessage() {}

func (x *GenerateAudioFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bob_v1_media_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAudioFileResponse.ProtoReflect.Descriptor instead.
func (*GenerateAudioFileResponse) Descriptor() ([]byte, []int) {
	return file_bob_v1_media_proto_rawDescGZIP(), []int{17}
}

func (x *GenerateAudioFileResponse) GetOptions() []*AudioOptionResponse {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_bob_v1_media_proto protoreflect.FileDescriptor

var file_bob_v1_media_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x12, 0x62, 0x6f,
	0x62, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x81, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x36,
	0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f,
	0x76, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x61,
	0x70, 0x69, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x5b, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xcc, 0x02,
	0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x14,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64,
	0x73, 0x22, 0x3c, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6f, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22,
	0x39, 0x0a, 0x12, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22, 0x32, 0x0a, 0x13, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x73, 0x22, 0x29,
	0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x12, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x13, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x50,
	0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x52, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x56, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x50,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x01,
	0x12, 0x1a, 0x0a, 0x16, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x2a, 0xcd, 0x01, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4e,
	0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x25, 0x0a,
	0x21, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4e,
	0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x74, 0x0a, 0x0f,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x19, 0x46, 0x4c, 0x41, 0x53, 0x48, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x41, 0x55, 0x44,
	0x49, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1d,
	0x0a, 0x19, 0x46, 0x4c, 0x41, 0x53, 0x48, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x41, 0x55, 0x44, 0x49,
	0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x10, 0x01, 0x12, 0x23, 0x0a,
	0x1f, 0x46, 0x4c, 0x41, 0x53, 0x48, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x32, 0xdd, 0x03, 0x0a, 0x14, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x6f, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x70, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x12, 0x28, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x76,
	0x65, 0x12, 0x25, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x0b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12,
	0x1a, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x6f,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x2e,
	0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x62, 0x0a, 0x12, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1c, 0x2e, 0x62, 0x6f, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e,
	0x61, 0x62, 0x75, 0x66, 0x2f, 0x62, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bob_v1_media_proto_rawDescOnce sync.Once
	file_bob_v1_media_proto_rawDescData = file_bob_v1_media_proto_rawDesc
)

func file_bob_v1_media_proto_rawDescGZIP() []byte {
	file_bob_v1_media_proto_rawDescOnce.Do(func() {
		file_bob_v1_media_proto_rawDescData = protoimpl.X.CompressGZIP(file_bob_v1_media_proto_rawDescData)
	})
	return file_bob_v1_media_proto_rawDescData
}

var file_bob_v1_media_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_bob_v1_media_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_bob_v1_media_proto_goTypes = []interface{}{
	(UploadType)(0),                           // 0: bob.v1.UploadType
	(ConversionTaskStatus)(0),                 // 1: bob.v1.ConversionTaskStatus
	(AudioOptionType)(0),                      // 2: bob.v1.AudioOptionType
	(*UploadAssetRequest)(nil),                // 3: bob.v1.UploadAssetRequest
	(*UploadAssetResponse)(nil),               // 4: bob.v1.UploadAssetResponse
	(*CreateBrightCoveUploadUrlRequest)(nil),  // 5: bob.v1.CreateBrightCoveUploadUrlRequest
	(*CreateBrightCoveUploadUrlResponse)(nil), // 6: bob.v1.CreateBrightCoveUploadUrlResponse
	(*FinishUploadBrightCoveRequest)(nil),     // 7: bob.v1.FinishUploadBrightCoveRequest
	(*FinishUploadBrightCoveResponse)(nil),    // 8: bob.v1.FinishUploadBrightCoveResponse
	(*Comment)(nil),                           // 9: bob.v1.Comment
	(*ConvertedImage)(nil),                    // 10: bob.v1.ConvertedImage
	(*Media)(nil),                             // 11: bob.v1.Media
	(*RetrieveMediaRequest)(nil),              // 12: bob.v1.RetrieveMediaRequest
	(*RetrieveMediaResponse)(nil),             // 13: bob.v1.RetrieveMediaResponse
	(*UpsertMediaRequest)(nil),                // 14: bob.v1.UpsertMediaRequest
	(*UpsertMediaResponse)(nil),               // 15: bob.v1.UpsertMediaResponse
	(*AudioConfig)(nil),                       // 16: bob.v1.AudioConfig
	(*AudioOptionRequest)(nil),                // 17: bob.v1.AudioOptionRequest
	(*AudioOptionResponse)(nil),               // 18: bob.v1.AudioOptionResponse
	(*GenerateAudioFileRequest)(nil),          // 19: bob.v1.GenerateAudioFileRequest
	(*GenerateAudioFileResponse)(nil),         // 20: bob.v1.GenerateAudioFileResponse
	(*durationpb.Duration)(nil),               // 21: google.protobuf.Duration
	(MediaType)(0),                            // 22: bob.v1.MediaType
	(*timestamppb.Timestamp)(nil),             // 23: google.protobuf.Timestamp
}
var file_bob_v1_media_proto_depIdxs = []int32{
	0,  // 0: bob.v1.UploadAssetRequest.upload_type:type_name -> bob.v1.UploadType
	21, // 1: bob.v1.Comment.duration:type_name -> google.protobuf.Duration
	9,  // 2: bob.v1.Media.comments:type_name -> bob.v1.Comment
	22, // 3: bob.v1.Media.type:type_name -> bob.v1.MediaType
	23, // 4: bob.v1.Media.created_at:type_name -> google.protobuf.Timestamp
	23, // 5: bob.v1.Media.updated_at:type_name -> google.protobuf.Timestamp
	10, // 6: bob.v1.Media.images:type_name -> bob.v1.ConvertedImage
	11, // 7: bob.v1.RetrieveMediaResponse.media:type_name -> bob.v1.Media
	11, // 8: bob.v1.UpsertMediaRequest.media:type_name -> bob.v1.Media
	2,  // 9: bob.v1.AudioOptionRequest.type:type_name -> bob.v1.AudioOptionType
	16, // 10: bob.v1.AudioOptionRequest.configs:type_name -> bob.v1.AudioConfig
	2,  // 11: bob.v1.AudioOptionResponse.type:type_name -> bob.v1.AudioOptionType
	16, // 12: bob.v1.AudioOptionResponse.configs:type_name -> bob.v1.AudioConfig
	17, // 13: bob.v1.GenerateAudioFileRequest.options:type_name -> bob.v1.AudioOptionRequest
	18, // 14: bob.v1.GenerateAudioFileResponse.options:type_name -> bob.v1.AudioOptionResponse
	3,  // 15: bob.v1.MediaModifierService.UploadAsset:input_type -> bob.v1.UploadAssetRequest
	5,  // 16: bob.v1.MediaModifierService.CreateBrightCoveUploadUrl:input_type -> bob.v1.CreateBrightCoveUploadUrlRequest
	7,  // 17: bob.v1.MediaModifierService.FinishUploadBrightCove:input_type -> bob.v1.FinishUploadBrightCoveRequest
	14, // 18: bob.v1.MediaModifierService.UpsertMedia:input_type -> bob.v1.UpsertMediaRequest
	19, // 19: bob.v1.MediaModifierService.GenerateAudioFile:input_type -> bob.v1.GenerateAudioFileRequest
	12, // 20: bob.v1.MediaReaderService.RetrieveMedia:input_type -> bob.v1.RetrieveMediaRequest
	4,  // 21: bob.v1.MediaModifierService.UploadAsset:output_type -> bob.v1.UploadAssetResponse
	6,  // 22: bob.v1.MediaModifierService.CreateBrightCoveUploadUrl:output_type -> bob.v1.CreateBrightCoveUploadUrlResponse
	8,  // 23: bob.v1.MediaModifierService.FinishUploadBrightCove:output_type -> bob.v1.FinishUploadBrightCoveResponse
	15, // 24: bob.v1.MediaModifierService.UpsertMedia:output_type -> bob.v1.UpsertMediaResponse
	20, // 25: bob.v1.MediaModifierService.GenerateAudioFile:output_type -> bob.v1.GenerateAudioFileResponse
	13, // 26: bob.v1.MediaReaderService.RetrieveMedia:output_type -> bob.v1.RetrieveMediaResponse
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_bob_v1_media_proto_init() }
func file_bob_v1_media_proto_init() {
	if File_bob_v1_media_proto != nil {
		return
	}
	file_bob_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bob_v1_media_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadAssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBrightCoveUploadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBrightCoveUploadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishUploadBrightCoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishUploadBrightCoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertedImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioOptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioOptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAudioFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bob_v1_media_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAudioFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bob_v1_media_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_bob_v1_media_proto_goTypes,
		DependencyIndexes: file_bob_v1_media_proto_depIdxs,
		EnumInfos:         file_bob_v1_media_proto_enumTypes,
		MessageInfos:      file_bob_v1_media_proto_msgTypes,
	}.Build()
	File_bob_v1_media_proto = out.File
	file_bob_v1_media_proto_rawDesc = nil
	file_bob_v1_media_proto_goTypes = nil
	file_bob_v1_media_proto_depIdxs = nil
}
