// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: syllabus/v1/study_plan_service.proto

package sspb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	_ "math/rand"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UpdateStudyPlanItemsStartEndDateFields int32

const (
	UpdateStudyPlanItemsStartEndDateFields_ALL        UpdateStudyPlanItemsStartEndDateFields = 0
	UpdateStudyPlanItemsStartEndDateFields_START_DATE UpdateStudyPlanItemsStartEndDateFields = 1
	UpdateStudyPlanItemsStartEndDateFields_END_DATE   UpdateStudyPlanItemsStartEndDateFields = 2
)

// Enum value maps for UpdateStudyPlanItemsStartEndDateFields.
var (
	UpdateStudyPlanItemsStartEndDateFields_name = map[int32]string{
		0: "ALL",
		1: "START_DATE",
		2: "END_DATE",
	}
	UpdateStudyPlanItemsStartEndDateFields_value = map[string]int32{
		"ALL":        0,
		"START_DATE": 1,
		"END_DATE":   2,
	}
)

func (x UpdateStudyPlanItemsStartEndDateFields) Enum() *UpdateStudyPlanItemsStartEndDateFields {
	p := new(UpdateStudyPlanItemsStartEndDateFields)
	*p = x
	return p
}

func (x UpdateStudyPlanItemsStartEndDateFields) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateStudyPlanItemsStartEndDateFields) Descriptor() protoreflect.EnumDescriptor {
	return file_syllabus_v1_study_plan_service_proto_enumTypes[0].Descriptor()
}

func (UpdateStudyPlanItemsStartEndDateFields) Type() protoreflect.EnumType {
	return &file_syllabus_v1_study_plan_service_proto_enumTypes[0]
}

func (x UpdateStudyPlanItemsStartEndDateFields) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateStudyPlanItemsStartEndDateFields.Descriptor instead.
func (UpdateStudyPlanItemsStartEndDateFields) EnumDescriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{0}
}

// ** BEGIN DEFINE FOR MODIFIER ** //
type UpsertMasterInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterItems []*MasterStudyPlan `protobuf:"bytes,1,rep,name=master_items,json=masterItems,proto3" json:"master_items,omitempty"`
}

func (x *UpsertMasterInfoRequest) Reset() {
	*x = UpsertMasterInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertMasterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertMasterInfoRequest) ProtoMessage() {}

func (x *UpsertMasterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertMasterInfoRequest.ProtoReflect.Descriptor instead.
func (*UpsertMasterInfoRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertMasterInfoRequest) GetMasterItems() []*MasterStudyPlan {
	if x != nil {
		return x.MasterItems
	}
	return nil
}

type UpsertMasterInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpsertMasterInfoResponse) Reset() {
	*x = UpsertMasterInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertMasterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertMasterInfoResponse) ProtoMessage() {}

func (x *UpsertMasterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertMasterInfoResponse.ProtoReflect.Descriptor instead.
func (*UpsertMasterInfoResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{1}
}

type UpsertIndividualInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndividualItems []*StudyPlanItem `protobuf:"bytes,1,rep,name=individual_items,json=individualItems,proto3" json:"individual_items,omitempty"` // field student_id should required in API
}

func (x *UpsertIndividualInfoRequest) Reset() {
	*x = UpsertIndividualInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertIndividualInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertIndividualInfoRequest) ProtoMessage() {}

func (x *UpsertIndividualInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertIndividualInfoRequest.ProtoReflect.Descriptor instead.
func (*UpsertIndividualInfoRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertIndividualInfoRequest) GetIndividualItems() []*StudyPlanItem {
	if x != nil {
		return x.IndividualItems
	}
	return nil
}

type UpsertIndividualInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpsertIndividualInfoResponse) Reset() {
	*x = UpsertIndividualInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertIndividualInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertIndividualInfoResponse) ProtoMessage() {}

func (x *UpsertIndividualInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertIndividualInfoResponse.ProtoReflect.Descriptor instead.
func (*UpsertIndividualInfoResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{3}
}

type UpsertAllocateMarkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submissions     []*UpsertAllocateMarkerRequest_SubmissionItem     `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	AllocateMarkers []*UpsertAllocateMarkerRequest_AllocateMarkerItem `protobuf:"bytes,2,rep,name=allocate_markers,json=allocateMarkers,proto3" json:"allocate_markers,omitempty"`
	CreatedBy       string                                            `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *UpsertAllocateMarkerRequest) Reset() {
	*x = UpsertAllocateMarkerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAllocateMarkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAllocateMarkerRequest) ProtoMessage() {}

func (x *UpsertAllocateMarkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAllocateMarkerRequest.ProtoReflect.Descriptor instead.
func (*UpsertAllocateMarkerRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertAllocateMarkerRequest) GetSubmissions() []*UpsertAllocateMarkerRequest_SubmissionItem {
	if x != nil {
		return x.Submissions
	}
	return nil
}

func (x *UpsertAllocateMarkerRequest) GetAllocateMarkers() []*UpsertAllocateMarkerRequest_AllocateMarkerItem {
	if x != nil {
		return x.AllocateMarkers
	}
	return nil
}

func (x *UpsertAllocateMarkerRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type UpsertAllocateMarkerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpsertAllocateMarkerResponse) Reset() {
	*x = UpsertAllocateMarkerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAllocateMarkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAllocateMarkerResponse) ProtoMessage() {}

func (x *UpsertAllocateMarkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAllocateMarkerResponse.ProtoReflect.Descriptor instead.
func (*UpsertAllocateMarkerResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{5}
}

type UpdateStudentLearningItemTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterItems []*StudyPlanItem       `protobuf:"bytes,1,rep,name=master_items,json=masterItems,proto3" json:"master_items,omitempty"`
	StudentId   string                 `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StartDate   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *UpdateStudentLearningItemTimeRequest) Reset() {
	*x = UpdateStudentLearningItemTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudentLearningItemTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentLearningItemTimeRequest) ProtoMessage() {}

func (x *UpdateStudentLearningItemTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentLearningItemTimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateStudentLearningItemTimeRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateStudentLearningItemTimeRequest) GetMasterItems() []*StudyPlanItem {
	if x != nil {
		return x.MasterItems
	}
	return nil
}

func (x *UpdateStudentLearningItemTimeRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpdateStudentLearningItemTimeRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateStudentLearningItemTimeRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type UpdateStudentLearningItemTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStudentLearningItemTimeResponse) Reset() {
	*x = UpdateStudentLearningItemTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudentLearningItemTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentLearningItemTimeResponse) ProtoMessage() {}

func (x *UpdateStudentLearningItemTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentLearningItemTimeResponse.ProtoReflect.Descriptor instead.
func (*UpdateStudentLearningItemTimeResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{7}
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId string `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRequest) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{9}
}

type BulkUpdateStudyPlanItemSchoolDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentities []*StudyPlanItemIdentity `protobuf:"bytes,1,rep,name=study_plan_item_identities,json=studyPlanItemIdentities,proto3" json:"study_plan_item_identities,omitempty"`
	SchoolDate              *timestamppb.Timestamp   `protobuf:"bytes,2,opt,name=school_date,json=schoolDate,proto3" json:"school_date,omitempty"`
}

func (x *BulkUpdateStudyPlanItemSchoolDateRequest) Reset() {
	*x = BulkUpdateStudyPlanItemSchoolDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkUpdateStudyPlanItemSchoolDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateStudyPlanItemSchoolDateRequest) ProtoMessage() {}

func (x *BulkUpdateStudyPlanItemSchoolDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateStudyPlanItemSchoolDateRequest.ProtoReflect.Descriptor instead.
func (*BulkUpdateStudyPlanItemSchoolDateRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{10}
}

func (x *BulkUpdateStudyPlanItemSchoolDateRequest) GetStudyPlanItemIdentities() []*StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentities
	}
	return nil
}

func (x *BulkUpdateStudyPlanItemSchoolDateRequest) GetSchoolDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SchoolDate
	}
	return nil
}

type BulkUpdateStudyPlanItemSchoolDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BulkUpdateStudyPlanItemSchoolDateResponse) Reset() {
	*x = BulkUpdateStudyPlanItemSchoolDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkUpdateStudyPlanItemSchoolDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateStudyPlanItemSchoolDateResponse) ProtoMessage() {}

func (x *BulkUpdateStudyPlanItemSchoolDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateStudyPlanItemSchoolDateResponse.ProtoReflect.Descriptor instead.
func (*BulkUpdateStudyPlanItemSchoolDateResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{11}
}

type BulkUpdateStudyPlanItemStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentities []*StudyPlanItemIdentity `protobuf:"bytes,1,rep,name=study_plan_item_identities,json=studyPlanItemIdentities,proto3" json:"study_plan_item_identities,omitempty"`
	StudyPlanItemStatus     StudyPlanItemStatus      `protobuf:"varint,2,opt,name=study_plan_item_status,json=studyPlanItemStatus,proto3,enum=syllabus.v1.StudyPlanItemStatus" json:"study_plan_item_status,omitempty"`
}

func (x *BulkUpdateStudyPlanItemStatusRequest) Reset() {
	*x = BulkUpdateStudyPlanItemStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkUpdateStudyPlanItemStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateStudyPlanItemStatusRequest) ProtoMessage() {}

func (x *BulkUpdateStudyPlanItemStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateStudyPlanItemStatusRequest.ProtoReflect.Descriptor instead.
func (*BulkUpdateStudyPlanItemStatusRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{12}
}

func (x *BulkUpdateStudyPlanItemStatusRequest) GetStudyPlanItemIdentities() []*StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentities
	}
	return nil
}

func (x *BulkUpdateStudyPlanItemStatusRequest) GetStudyPlanItemStatus() StudyPlanItemStatus {
	if x != nil {
		return x.StudyPlanItemStatus
	}
	return StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_NONE
}

type BulkUpdateStudyPlanItemStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BulkUpdateStudyPlanItemStatusResponse) Reset() {
	*x = BulkUpdateStudyPlanItemStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkUpdateStudyPlanItemStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateStudyPlanItemStatusResponse) ProtoMessage() {}

func (x *BulkUpdateStudyPlanItemStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateStudyPlanItemStatusResponse.ProtoReflect.Descriptor instead.
func (*BulkUpdateStudyPlanItemStatusResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{13}
}

type InsertStudyPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId string `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	SchoolId    int32  `protobuf:"varint,2,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CourseId    string `protobuf:"bytes,4,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	// New fields
	BookId              string          `protobuf:"bytes,5,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Status              StudyPlanStatus `protobuf:"varint,6,opt,name=status,proto3,enum=syllabus.v1.StudyPlanStatus" json:"status,omitempty"`
	TrackSchoolProgress bool            `protobuf:"varint,7,opt,name=track_school_progress,json=trackSchoolProgress,proto3" json:"track_school_progress,omitempty"`
	Grades              []int32         `protobuf:"varint,8,rep,packed,name=grades,proto3" json:"grades,omitempty"`
}

func (x *InsertStudyPlanRequest) Reset() {
	*x = InsertStudyPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertStudyPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertStudyPlanRequest) ProtoMessage() {}

func (x *InsertStudyPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertStudyPlanRequest.ProtoReflect.Descriptor instead.
func (*InsertStudyPlanRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{14}
}

func (x *InsertStudyPlanRequest) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *InsertStudyPlanRequest) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *InsertStudyPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InsertStudyPlanRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *InsertStudyPlanRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *InsertStudyPlanRequest) GetStatus() StudyPlanStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanStatus_STUDY_PLAN_STATUS_NONE
}

func (x *InsertStudyPlanRequest) GetTrackSchoolProgress() bool {
	if x != nil {
		return x.TrackSchoolProgress
	}
	return false
}

func (x *InsertStudyPlanRequest) GetGrades() []int32 {
	if x != nil {
		return x.Grades
	}
	return nil
}

type InsertStudyPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId string `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
}

func (x *InsertStudyPlanResponse) Reset() {
	*x = InsertStudyPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertStudyPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertStudyPlanResponse) ProtoMessage() {}

func (x *InsertStudyPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertStudyPlanResponse.ProtoReflect.Descriptor instead.
func (*InsertStudyPlanResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{15}
}

func (x *InsertStudyPlanResponse) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

type UpdateStudyPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId string `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	SchoolId    int32  `protobuf:"varint,2,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// New fields
	Status              StudyPlanStatus `protobuf:"varint,6,opt,name=status,proto3,enum=syllabus.v1.StudyPlanStatus" json:"status,omitempty"`
	TrackSchoolProgress bool            `protobuf:"varint,7,opt,name=track_school_progress,json=trackSchoolProgress,proto3" json:"track_school_progress,omitempty"`
	Grades              []int32         `protobuf:"varint,8,rep,packed,name=grades,proto3" json:"grades,omitempty"`
}

func (x *UpdateStudyPlanRequest) Reset() {
	*x = UpdateStudyPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudyPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudyPlanRequest) ProtoMessage() {}

func (x *UpdateStudyPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudyPlanRequest.ProtoReflect.Descriptor instead.
func (*UpdateStudyPlanRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateStudyPlanRequest) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *UpdateStudyPlanRequest) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *UpdateStudyPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateStudyPlanRequest) GetStatus() StudyPlanStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanStatus_STUDY_PLAN_STATUS_NONE
}

func (x *UpdateStudyPlanRequest) GetTrackSchoolProgress() bool {
	if x != nil {
		return x.TrackSchoolProgress
	}
	return false
}

func (x *UpdateStudyPlanRequest) GetGrades() []int32 {
	if x != nil {
		return x.Grades
	}
	return nil
}

type UpdateStudyPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStudyPlanResponse) Reset() {
	*x = UpdateStudyPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudyPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudyPlanResponse) ProtoMessage() {}

func (x *UpdateStudyPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudyPlanResponse.ProtoReflect.Descriptor instead.
func (*UpdateStudyPlanResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{17}
}

type UpdateStudyPlanItemsStartEndDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentities []*StudyPlanItemIdentity               `protobuf:"bytes,1,rep,name=study_plan_item_identities,json=studyPlanItemIdentities,proto3" json:"study_plan_item_identities,omitempty"`
	Fields                  UpdateStudyPlanItemsStartEndDateFields `protobuf:"varint,2,opt,name=fields,proto3,enum=syllabus.v1.UpdateStudyPlanItemsStartEndDateFields" json:"fields,omitempty"`
	StartDate               *timestamppb.Timestamp                 `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate                 *timestamppb.Timestamp                 `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *UpdateStudyPlanItemsStartEndDateRequest) Reset() {
	*x = UpdateStudyPlanItemsStartEndDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudyPlanItemsStartEndDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudyPlanItemsStartEndDateRequest) ProtoMessage() {}

func (x *UpdateStudyPlanItemsStartEndDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudyPlanItemsStartEndDateRequest.ProtoReflect.Descriptor instead.
func (*UpdateStudyPlanItemsStartEndDateRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateStudyPlanItemsStartEndDateRequest) GetStudyPlanItemIdentities() []*StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentities
	}
	return nil
}

func (x *UpdateStudyPlanItemsStartEndDateRequest) GetFields() UpdateStudyPlanItemsStartEndDateFields {
	if x != nil {
		return x.Fields
	}
	return UpdateStudyPlanItemsStartEndDateFields_ALL
}

func (x *UpdateStudyPlanItemsStartEndDateRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateStudyPlanItemsStartEndDateRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type UpdateStudyPlanItemsStartEndDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStudyPlanItemsStartEndDateResponse) Reset() {
	*x = UpdateStudyPlanItemsStartEndDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudyPlanItemsStartEndDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudyPlanItemsStartEndDateResponse) ProtoMessage() {}

func (x *UpdateStudyPlanItemsStartEndDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudyPlanItemsStartEndDateResponse.ProtoReflect.Descriptor instead.
func (*UpdateStudyPlanItemsStartEndDateResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{19}
}

type UpsertSchoolDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentities []*StudyPlanItemIdentity `protobuf:"bytes,1,rep,name=study_plan_item_identities,json=studyPlanItemIdentities,proto3" json:"study_plan_item_identities,omitempty"`
	SchoolDate              *timestamppb.Timestamp   `protobuf:"bytes,2,opt,name=school_date,json=schoolDate,proto3" json:"school_date,omitempty"`
}

func (x *UpsertSchoolDateRequest) Reset() {
	*x = UpsertSchoolDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertSchoolDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertSchoolDateRequest) ProtoMessage() {}

func (x *UpsertSchoolDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertSchoolDateRequest.ProtoReflect.Descriptor instead.
func (*UpsertSchoolDateRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{20}
}

func (x *UpsertSchoolDateRequest) GetStudyPlanItemIdentities() []*StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentities
	}
	return nil
}

func (x *UpsertSchoolDateRequest) GetSchoolDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SchoolDate
	}
	return nil
}

type UpsertSchoolDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpsertSchoolDateResponse) Reset() {
	*x = UpsertSchoolDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertSchoolDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertSchoolDateResponse) ProtoMessage() {}

func (x *UpsertSchoolDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertSchoolDateResponse.ProtoReflect.Descriptor instead.
func (*UpsertSchoolDateResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{21}
}

// ** BEGIN DEFINE FOR READER ** //
type ListStudentStudyPlansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging     *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	StudentIds []string   `protobuf:"bytes,2,rep,name=student_ids,json=studentIds,proto3" json:"student_ids,omitempty"`
	CourseId   string     `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Search     string     `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	Status     string     `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	BookIds    []string   `protobuf:"bytes,6,rep,name=book_ids,json=bookIds,proto3" json:"book_ids,omitempty"`
	Grades     []int32    `protobuf:"varint,7,rep,packed,name=grades,proto3" json:"grades,omitempty"`
}

func (x *ListStudentStudyPlansRequest) Reset() {
	*x = ListStudentStudyPlansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentStudyPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentStudyPlansRequest) ProtoMessage() {}

func (x *ListStudentStudyPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentStudyPlansRequest.ProtoReflect.Descriptor instead.
func (*ListStudentStudyPlansRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListStudentStudyPlansRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListStudentStudyPlansRequest) GetStudentIds() []string {
	if x != nil {
		return x.StudentIds
	}
	return nil
}

func (x *ListStudentStudyPlansRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ListStudentStudyPlansRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListStudentStudyPlansRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListStudentStudyPlansRequest) GetBookIds() []string {
	if x != nil {
		return x.BookIds
	}
	return nil
}

func (x *ListStudentStudyPlansRequest) GetGrades() []int32 {
	if x != nil {
		return x.Grades
	}
	return nil
}

type ListStudentStudyPlansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage   *v1.Paging              `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	StudyPlans []*StudentStudyPlanData `protobuf:"bytes,2,rep,name=study_plans,json=studyPlans,proto3" json:"study_plans,omitempty"`
}

func (x *ListStudentStudyPlansResponse) Reset() {
	*x = ListStudentStudyPlansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentStudyPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentStudyPlansResponse) ProtoMessage() {}

func (x *ListStudentStudyPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentStudyPlansResponse.ProtoReflect.Descriptor instead.
func (*ListStudentStudyPlansResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListStudentStudyPlansResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ListStudentStudyPlansResponse) GetStudyPlans() []*StudentStudyPlanData {
	if x != nil {
		return x.StudyPlans
	}
	return nil
}

type ListToDoItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *v1.Paging              `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	StudentId string                  `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Status    StudyPlanItemToDoStatus `protobuf:"varint,3,opt,name=status,proto3,enum=syllabus.v1.StudyPlanItemToDoStatus" json:"status,omitempty"`
	CourseIds []string                `protobuf:"bytes,4,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
}

func (x *ListToDoItemRequest) Reset() {
	*x = ListToDoItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListToDoItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToDoItemRequest) ProtoMessage() {}

func (x *ListToDoItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToDoItemRequest.ProtoReflect.Descriptor instead.
func (*ListToDoItemRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{24}
}

func (x *ListToDoItemRequest) GetPage() *v1.Paging {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListToDoItemRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ListToDoItemRequest) GetStatus() StudyPlanItemToDoStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_NONE
}

func (x *ListToDoItemRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

type ListToDoItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage  *v1.Paging           `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	TodoItems []*StudyPlanToDoItem `protobuf:"bytes,2,rep,name=todo_items,json=todoItems,proto3" json:"todo_items,omitempty"`
}

func (x *ListToDoItemResponse) Reset() {
	*x = ListToDoItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListToDoItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToDoItemResponse) ProtoMessage() {}

func (x *ListToDoItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToDoItemResponse.ProtoReflect.Descriptor instead.
func (*ListToDoItemResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{25}
}

func (x *ListToDoItemResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ListToDoItemResponse) GetTodoItems() []*StudyPlanToDoItem {
	if x != nil {
		return x.TodoItems
	}
	return nil
}

type ListStudentStudyPlanItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterStudyPlanItem *StudyPlanItem `protobuf:"bytes,1,opt,name=master_study_plan_item,json=masterStudyPlanItem,proto3" json:"master_study_plan_item,omitempty"`
	StudentIds          []string       `protobuf:"bytes,2,rep,name=student_ids,json=studentIds,proto3" json:"student_ids,omitempty"`
}

func (x *ListStudentStudyPlanItemRequest) Reset() {
	*x = ListStudentStudyPlanItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentStudyPlanItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentStudyPlanItemRequest) ProtoMessage() {}

func (x *ListStudentStudyPlanItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentStudyPlanItemRequest.ProtoReflect.Descriptor instead.
func (*ListStudentStudyPlanItemRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{26}
}

func (x *ListStudentStudyPlanItemRequest) GetMasterStudyPlanItem() *StudyPlanItem {
	if x != nil {
		return x.MasterStudyPlanItem
	}
	return nil
}

func (x *ListStudentStudyPlanItemRequest) GetStudentIds() []string {
	if x != nil {
		return x.StudentIds
	}
	return nil
}

type ListStudentStudyPlanItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndividualItems []*StudyPlanItem `protobuf:"bytes,1,rep,name=individual_items,json=individualItems,proto3" json:"individual_items,omitempty"` // field student_id should required
}

func (x *ListStudentStudyPlanItemResponse) Reset() {
	*x = ListStudentStudyPlanItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentStudyPlanItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentStudyPlanItemResponse) ProtoMessage() {}

func (x *ListStudentStudyPlanItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentStudyPlanItemResponse.ProtoReflect.Descriptor instead.
func (*ListStudentStudyPlanItemResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{27}
}

func (x *ListStudentStudyPlanItemResponse) GetIndividualItems() []*StudyPlanItem {
	if x != nil {
		return x.IndividualItems
	}
	return nil
}

type ListByCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging   *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	CourseId string     `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *ListByCourseRequest) Reset() {
	*x = ListByCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListByCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByCourseRequest) ProtoMessage() {}

func (x *ListByCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByCourseRequest.ProtoReflect.Descriptor instead.
func (*ListByCourseRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{28}
}

func (x *ListByCourseRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListByCourseRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

type ListByCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage   *v1.Paging       `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	StudyPlans []*StudyPlanData `protobuf:"bytes,2,rep,name=study_plans,json=studyPlans,proto3" json:"study_plans,omitempty"`
}

func (x *ListByCourseResponse) Reset() {
	*x = ListByCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListByCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByCourseResponse) ProtoMessage() {}

func (x *ListByCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByCourseResponse.ProtoReflect.Descriptor instead.
func (*ListByCourseResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListByCourseResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ListByCourseResponse) GetStudyPlans() []*StudyPlanData {
	if x != nil {
		return x.StudyPlans
	}
	return nil
}

type StudyPlanItemImport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId        string                 `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	LearningMaterialId string                 `protobuf:"bytes,2,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
	AvailableFrom      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=available_from,json=availableFrom,proto3" json:"available_from,omitempty"`
	AvailableTo        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=available_to,json=availableTo,proto3" json:"available_to,omitempty"`
	StartDate          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *StudyPlanItemImport) Reset() {
	*x = StudyPlanItemImport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanItemImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanItemImport) ProtoMessage() {}

func (x *StudyPlanItemImport) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanItemImport.ProtoReflect.Descriptor instead.
func (*StudyPlanItemImport) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{30}
}

func (x *StudyPlanItemImport) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *StudyPlanItemImport) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

func (x *StudyPlanItemImport) GetAvailableFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableFrom
	}
	return nil
}

func (x *StudyPlanItemImport) GetAvailableTo() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableTo
	}
	return nil
}

func (x *StudyPlanItemImport) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *StudyPlanItemImport) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type ImportStudyPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItems []*StudyPlanItemImport `protobuf:"bytes,1,rep,name=study_plan_items,json=studyPlanItems,proto3" json:"study_plan_items,omitempty"`
}

func (x *ImportStudyPlanRequest) Reset() {
	*x = ImportStudyPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportStudyPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportStudyPlanRequest) ProtoMessage() {}

func (x *ImportStudyPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportStudyPlanRequest.ProtoReflect.Descriptor instead.
func (*ImportStudyPlanRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{31}
}

func (x *ImportStudyPlanRequest) GetStudyPlanItems() []*StudyPlanItemImport {
	if x != nil {
		return x.StudyPlanItems
	}
	return nil
}

type RowError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowNumber int32  `protobuf:"varint,1,opt,name=row_number,json=rowNumber,proto3" json:"row_number,omitempty"`
	Err       string `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *RowError) Reset() {
	*x = RowError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RowError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowError) ProtoMessage() {}

func (x *RowError) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowError.ProtoReflect.Descriptor instead.
func (*RowError) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{32}
}

func (x *RowError) GetRowNumber() int32 {
	if x != nil {
		return x.RowNumber
	}
	return 0
}

func (x *RowError) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type ImportStudyPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    string      `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	RowErrors []*RowError `protobuf:"bytes,2,rep,name=row_errors,json=rowErrors,proto3" json:"row_errors,omitempty"`
}

func (x *ImportStudyPlanResponse) Reset() {
	*x = ImportStudyPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportStudyPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportStudyPlanResponse) ProtoMessage() {}

func (x *ImportStudyPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportStudyPlanResponse.ProtoReflect.Descriptor instead.
func (*ImportStudyPlanResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{33}
}

func (x *ImportStudyPlanResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ImportStudyPlanResponse) GetRowErrors() []*RowError {
	if x != nil {
		return x.RowErrors
	}
	return nil
}

type RetrieveStudyPlanIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIds []string `protobuf:"bytes,1,rep,name=study_plan_item_ids,json=studyPlanItemIds,proto3" json:"study_plan_item_ids,omitempty"`
}

func (x *RetrieveStudyPlanIdentityRequest) Reset() {
	*x = RetrieveStudyPlanIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStudyPlanIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStudyPlanIdentityRequest) ProtoMessage() {}

func (x *RetrieveStudyPlanIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStudyPlanIdentityRequest.ProtoReflect.Descriptor instead.
func (*RetrieveStudyPlanIdentityRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{34}
}

func (x *RetrieveStudyPlanIdentityRequest) GetStudyPlanItemIds() []string {
	if x != nil {
		return x.StudyPlanItemIds
	}
	return nil
}

type RetrieveStudyPlanIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanIdentities []*StudyPlanIdentity `protobuf:"bytes,1,rep,name=study_plan_identities,json=studyPlanIdentities,proto3" json:"study_plan_identities,omitempty"`
}

func (x *RetrieveStudyPlanIdentityResponse) Reset() {
	*x = RetrieveStudyPlanIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStudyPlanIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStudyPlanIdentityResponse) ProtoMessage() {}

func (x *RetrieveStudyPlanIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStudyPlanIdentityResponse.ProtoReflect.Descriptor instead.
func (*RetrieveStudyPlanIdentityResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{35}
}

func (x *RetrieveStudyPlanIdentityResponse) GetStudyPlanIdentities() []*StudyPlanIdentity {
	if x != nil {
		return x.StudyPlanIdentities
	}
	return nil
}

type ListAllocateTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationIds []string `protobuf:"bytes,1,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *ListAllocateTeacherRequest) Reset() {
	*x = ListAllocateTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllocateTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllocateTeacherRequest) ProtoMessage() {}

func (x *ListAllocateTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllocateTeacherRequest.ProtoReflect.Descriptor instead.
func (*ListAllocateTeacherRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{36}
}

func (x *ListAllocateTeacherRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type ListAllocateTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllocateTeachers []*ListAllocateTeacherResponse_AllocateTeacherItem `protobuf:"bytes,1,rep,name=allocate_teachers,json=allocateTeachers,proto3" json:"allocate_teachers,omitempty"`
}

func (x *ListAllocateTeacherResponse) Reset() {
	*x = ListAllocateTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllocateTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllocateTeacherResponse) ProtoMessage() {}

func (x *ListAllocateTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllocateTeacherResponse.ProtoReflect.Descriptor instead.
func (*ListAllocateTeacherResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{37}
}

func (x *ListAllocateTeacherResponse) GetAllocateTeachers() []*ListAllocateTeacherResponse_AllocateTeacherItem {
	if x != nil {
		return x.AllocateTeachers
	}
	return nil
}

// ListToDoItemByBookTree will sort the item by chapter_display_order,
// topic_display_order and lm_display_order
type ListToDoItemStructuredBookTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page              *v1.Paging    `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	StudyPlanIdentity *StudyPlanIdt `protobuf:"bytes,2,opt,name=study_plan_identity,json=studyPlanIdentity,proto3" json:"study_plan_identity,omitempty"`
}

func (x *ListToDoItemStructuredBookTreeRequest) Reset() {
	*x = ListToDoItemStructuredBookTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListToDoItemStructuredBookTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToDoItemStructuredBookTreeRequest) ProtoMessage() {}

func (x *ListToDoItemStructuredBookTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToDoItemStructuredBookTreeRequest.ProtoReflect.Descriptor instead.
func (*ListToDoItemStructuredBookTreeRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{38}
}

func (x *ListToDoItemStructuredBookTreeRequest) GetPage() *v1.Paging {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListToDoItemStructuredBookTreeRequest) GetStudyPlanIdentity() *StudyPlanIdt {
	if x != nil {
		return x.StudyPlanIdentity
	}
	return nil
}

// StudentStudyPlanItem wrapper LMbase and the study plan item fields
type StudentStudyPlanItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningMaterial    *LearningMaterialBase  `protobuf:"bytes,1,opt,name=learning_material,json=learningMaterial,proto3" json:"learning_material,omitempty"`
	StartDate           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate             *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	CompletedAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	SchoolDate          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=school_date,json=schoolDate,proto3" json:"school_date,omitempty"`
	StudyPlanItemStatus StudyPlanItemStatus    `protobuf:"varint,6,opt,name=study_plan_item_status,json=studyPlanItemStatus,proto3,enum=syllabus.v1.StudyPlanItemStatus" json:"study_plan_item_status,omitempty"`
	AvailableFrom       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=available_from,json=availableFrom,proto3" json:"available_from,omitempty"`
	AvailableTo         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=available_to,json=availableTo,proto3" json:"available_to,omitempty"`
	BookId              string                 `protobuf:"bytes,9,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *StudentStudyPlanItem) Reset() {
	*x = StudentStudyPlanItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStudyPlanItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStudyPlanItem) ProtoMessage() {}

func (x *StudentStudyPlanItem) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStudyPlanItem.ProtoReflect.Descriptor instead.
func (*StudentStudyPlanItem) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{39}
}

func (x *StudentStudyPlanItem) GetLearningMaterial() *LearningMaterialBase {
	if x != nil {
		return x.LearningMaterial
	}
	return nil
}

func (x *StudentStudyPlanItem) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *StudentStudyPlanItem) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *StudentStudyPlanItem) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *StudentStudyPlanItem) GetSchoolDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SchoolDate
	}
	return nil
}

func (x *StudentStudyPlanItem) GetStudyPlanItemStatus() StudyPlanItemStatus {
	if x != nil {
		return x.StudyPlanItemStatus
	}
	return StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_NONE
}

func (x *StudentStudyPlanItem) GetAvailableFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableFrom
	}
	return nil
}

func (x *StudentStudyPlanItem) GetAvailableTo() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableTo
	}
	return nil
}

func (x *StudentStudyPlanItem) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

// item should be order by chapter_display_order, topic_display_order,
// lm_display_order. Use offset + limit (must: sort) len(todo_items) >=
// len(topic_progresses)
type ListToDoItemStructuredBookTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage        *v1.Paging                   `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	TodoItems       []*StudentStudyPlanItem      `protobuf:"bytes,2,rep,name=todo_items,json=todoItems,proto3" json:"todo_items,omitempty"`
	TopicProgresses []*StudentTopicStudyProgress `protobuf:"bytes,3,rep,name=topic_progresses,json=topicProgresses,proto3" json:"topic_progresses,omitempty"`
}

func (x *ListToDoItemStructuredBookTreeResponse) Reset() {
	*x = ListToDoItemStructuredBookTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListToDoItemStructuredBookTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToDoItemStructuredBookTreeResponse) ProtoMessage() {}

func (x *ListToDoItemStructuredBookTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToDoItemStructuredBookTreeResponse.ProtoReflect.Descriptor instead.
func (*ListToDoItemStructuredBookTreeResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{40}
}

func (x *ListToDoItemStructuredBookTreeResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ListToDoItemStructuredBookTreeResponse) GetTodoItems() []*StudentStudyPlanItem {
	if x != nil {
		return x.TodoItems
	}
	return nil
}

func (x *ListToDoItemStructuredBookTreeResponse) GetTopicProgresses() []*StudentTopicStudyProgress {
	if x != nil {
		return x.TopicProgresses
	}
	return nil
}

type RetrieveAllocateMarkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,1,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
}

func (x *RetrieveAllocateMarkerRequest) Reset() {
	*x = RetrieveAllocateMarkerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveAllocateMarkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveAllocateMarkerRequest) ProtoMessage() {}

func (x *RetrieveAllocateMarkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveAllocateMarkerRequest.ProtoReflect.Descriptor instead.
func (*RetrieveAllocateMarkerRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{41}
}

func (x *RetrieveAllocateMarkerRequest) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

type RetrieveAllocateMarkerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkerId string `protobuf:"bytes,1,opt,name=marker_id,json=markerId,proto3" json:"marker_id,omitempty"`
}

func (x *RetrieveAllocateMarkerResponse) Reset() {
	*x = RetrieveAllocateMarkerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveAllocateMarkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveAllocateMarkerResponse) ProtoMessage() {}

func (x *RetrieveAllocateMarkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveAllocateMarkerResponse.ProtoReflect.Descriptor instead.
func (*RetrieveAllocateMarkerResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{42}
}

func (x *RetrieveAllocateMarkerResponse) GetMarkerId() string {
	if x != nil {
		return x.MarkerId
	}
	return ""
}

type UpsertAllocateMarkerRequest_AllocateMarkerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeacherId       string `protobuf:"bytes,1,opt,name=teacher_id,json=teacherId,proto3" json:"teacher_id,omitempty"`
	NumberAllocated int32  `protobuf:"varint,2,opt,name=number_allocated,json=numberAllocated,proto3" json:"number_allocated,omitempty"`
}

func (x *UpsertAllocateMarkerRequest_AllocateMarkerItem) Reset() {
	*x = UpsertAllocateMarkerRequest_AllocateMarkerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAllocateMarkerRequest_AllocateMarkerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAllocateMarkerRequest_AllocateMarkerItem) ProtoMessage() {}

func (x *UpsertAllocateMarkerRequest_AllocateMarkerItem) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAllocateMarkerRequest_AllocateMarkerItem.ProtoReflect.Descriptor instead.
func (*UpsertAllocateMarkerRequest_AllocateMarkerItem) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *UpsertAllocateMarkerRequest_AllocateMarkerItem) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *UpsertAllocateMarkerRequest_AllocateMarkerItem) GetNumberAllocated() int32 {
	if x != nil {
		return x.NumberAllocated
	}
	return 0
}

type UpsertAllocateMarkerRequest_SubmissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId          string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,2,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
}

func (x *UpsertAllocateMarkerRequest_SubmissionItem) Reset() {
	*x = UpsertAllocateMarkerRequest_SubmissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAllocateMarkerRequest_SubmissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAllocateMarkerRequest_SubmissionItem) ProtoMessage() {}

func (x *UpsertAllocateMarkerRequest_SubmissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAllocateMarkerRequest_SubmissionItem.ProtoReflect.Descriptor instead.
func (*UpsertAllocateMarkerRequest_SubmissionItem) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{4, 1}
}

func (x *UpsertAllocateMarkerRequest_SubmissionItem) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *UpsertAllocateMarkerRequest_SubmissionItem) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

type ListAllocateTeacherResponse_AllocateTeacherItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeacherId                string `protobuf:"bytes,1,opt,name=teacher_id,json=teacherId,proto3" json:"teacher_id,omitempty"`
	TeacherName              string `protobuf:"bytes,2,opt,name=teacher_name,json=teacherName,proto3" json:"teacher_name,omitempty"`
	NumberAssignedSubmission int32  `protobuf:"varint,3,opt,name=number_assigned_submission,json=numberAssignedSubmission,proto3" json:"number_assigned_submission,omitempty"`
}

func (x *ListAllocateTeacherResponse_AllocateTeacherItem) Reset() {
	*x = ListAllocateTeacherResponse_AllocateTeacherItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllocateTeacherResponse_AllocateTeacherItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllocateTeacherResponse_AllocateTeacherItem) ProtoMessage() {}

func (x *ListAllocateTeacherResponse_AllocateTeacherItem) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllocateTeacherResponse_AllocateTeacherItem.ProtoReflect.Descriptor instead.
func (*ListAllocateTeacherResponse_AllocateTeacherItem) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_service_proto_rawDescGZIP(), []int{37, 0}
}

func (x *ListAllocateTeacherResponse_AllocateTeacherItem) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *ListAllocateTeacherResponse_AllocateTeacherItem) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *ListAllocateTeacherResponse_AllocateTeacherItem) GetNumberAssignedSubmission() int32 {
	if x != nil {
		return x.NumberAssignedSubmission
	}
	return 0
}

var File_syllabus_v1_study_plan_service_proto protoreflect.FileDescriptor

var file_syllabus_v1_study_plan_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x17, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x1b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69,
	0x64, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf4, 0x03, 0x0a, 0x1b, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x0b, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x66, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x1a, 0x5e, 0x0a, 0x12, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x92, 0x01, 0x0a, 0x0e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xf6, 0x01, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x27, 0x0a, 0x25, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x33, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x28, 0x42, 0x75,
	0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x17,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x2b, 0x0a, 0x29, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xde, 0x01, 0x0a, 0x24, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x1a, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x17, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x16, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x13, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x27, 0x0a, 0x25, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc2, 0x02, 0x0a, 0x16,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0xcb, 0x02, 0x02, 0x49, 0x44, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x04, 0xa8, 0xcb, 0x02, 0x01, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x3a, 0x0d, 0xe2, 0xbe, 0x02, 0x09, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x22, 0x3d, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22,
	0xef, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc9, 0x02, 0x0a,
	0x27, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x1a, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x17, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x2a, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5f, 0x0a, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x17, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x22, 0x1a,
	0x0a, 0x18, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x1c, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0xb8, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x6f, 0x44, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x74, 0x6f, 0x64, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x6f, 0x44,
	0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x74, 0x6f, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x93, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x16, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x69, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x69, 0x6e,
	0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0f, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x5d, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x22, 0x83, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0xdf, 0x02, 0x0a, 0x13, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x64, 0x0a, 0x16, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0e,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3b,
	0x0a, 0x08, 0x52, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f,
	0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x68, 0x0a, 0x17, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x51, 0x0a, 0x20, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x77, 0x0a, 0x21, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x13, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x3f, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x69, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x1a, 0x95, 0x01,
	0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f,
	0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x74, 0x52, 0x11,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0xc6, 0x04, 0x0a, 0x14, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x4e, 0x0a, 0x11, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x10, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61,
	0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x41, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x26, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x74, 0x6f, 0x64, 0x6f, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x74, 0x6f,
	0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x51, 0x0a, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x1d, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x1e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x4f, 0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4e,
	0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x32, 0xb0, 0x11, 0x0a, 0x09, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x5f, 0x0a, 0x10, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x12, 0x28, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69,
	0x64, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x86, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x31, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92, 0x01, 0x0a,
	0x21, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x86, 0x01, 0x0a, 0x1d, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x31, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x23, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x72, 0x12, 0x28, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x29, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x12, 0x20, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x2d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x42, 0x6f, 0x6f,
	0x6b, 0x54, 0x72, 0x65, 0x65, 0x12, 0x32, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x42, 0x6f,
	0x6f, 0x6b, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x72, 0x12, 0x2a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x7e, 0x5a, 0x3b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69,
	0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x75, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x73, 0x70, 0x62, 0x92, 0xc5, 0x02, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x9a, 0xc5, 0x02, 0x04, 0x73, 0x73, 0x70, 0x62, 0x8a, 0xc5,
	0x02, 0x29, 0x2e, 0x2e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_syllabus_v1_study_plan_service_proto_rawDescOnce sync.Once
	file_syllabus_v1_study_plan_service_proto_rawDescData = file_syllabus_v1_study_plan_service_proto_rawDesc
)

func file_syllabus_v1_study_plan_service_proto_rawDescGZIP() []byte {
	file_syllabus_v1_study_plan_service_proto_rawDescOnce.Do(func() {
		file_syllabus_v1_study_plan_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_syllabus_v1_study_plan_service_proto_rawDescData)
	})
	return file_syllabus_v1_study_plan_service_proto_rawDescData
}

var file_syllabus_v1_study_plan_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_syllabus_v1_study_plan_service_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_syllabus_v1_study_plan_service_proto_goTypes = []interface{}{
	(UpdateStudyPlanItemsStartEndDateFields)(0),             // 0: syllabus.v1.UpdateStudyPlanItemsStartEndDateFields
	(*UpsertMasterInfoRequest)(nil),                         // 1: syllabus.v1.UpsertMasterInfoRequest
	(*UpsertMasterInfoResponse)(nil),                        // 2: syllabus.v1.UpsertMasterInfoResponse
	(*UpsertIndividualInfoRequest)(nil),                     // 3: syllabus.v1.UpsertIndividualInfoRequest
	(*UpsertIndividualInfoResponse)(nil),                    // 4: syllabus.v1.UpsertIndividualInfoResponse
	(*UpsertAllocateMarkerRequest)(nil),                     // 5: syllabus.v1.UpsertAllocateMarkerRequest
	(*UpsertAllocateMarkerResponse)(nil),                    // 6: syllabus.v1.UpsertAllocateMarkerResponse
	(*UpdateStudentLearningItemTimeRequest)(nil),            // 7: syllabus.v1.UpdateStudentLearningItemTimeRequest
	(*UpdateStudentLearningItemTimeResponse)(nil),           // 8: syllabus.v1.UpdateStudentLearningItemTimeResponse
	(*DeleteRequest)(nil),                                   // 9: syllabus.v1.DeleteRequest
	(*DeleteResponse)(nil),                                  // 10: syllabus.v1.DeleteResponse
	(*BulkUpdateStudyPlanItemSchoolDateRequest)(nil),        // 11: syllabus.v1.BulkUpdateStudyPlanItemSchoolDateRequest
	(*BulkUpdateStudyPlanItemSchoolDateResponse)(nil),       // 12: syllabus.v1.BulkUpdateStudyPlanItemSchoolDateResponse
	(*BulkUpdateStudyPlanItemStatusRequest)(nil),            // 13: syllabus.v1.BulkUpdateStudyPlanItemStatusRequest
	(*BulkUpdateStudyPlanItemStatusResponse)(nil),           // 14: syllabus.v1.BulkUpdateStudyPlanItemStatusResponse
	(*InsertStudyPlanRequest)(nil),                          // 15: syllabus.v1.InsertStudyPlanRequest
	(*InsertStudyPlanResponse)(nil),                         // 16: syllabus.v1.InsertStudyPlanResponse
	(*UpdateStudyPlanRequest)(nil),                          // 17: syllabus.v1.UpdateStudyPlanRequest
	(*UpdateStudyPlanResponse)(nil),                         // 18: syllabus.v1.UpdateStudyPlanResponse
	(*UpdateStudyPlanItemsStartEndDateRequest)(nil),         // 19: syllabus.v1.UpdateStudyPlanItemsStartEndDateRequest
	(*UpdateStudyPlanItemsStartEndDateResponse)(nil),        // 20: syllabus.v1.UpdateStudyPlanItemsStartEndDateResponse
	(*UpsertSchoolDateRequest)(nil),                         // 21: syllabus.v1.UpsertSchoolDateRequest
	(*UpsertSchoolDateResponse)(nil),                        // 22: syllabus.v1.UpsertSchoolDateResponse
	(*ListStudentStudyPlansRequest)(nil),                    // 23: syllabus.v1.ListStudentStudyPlansRequest
	(*ListStudentStudyPlansResponse)(nil),                   // 24: syllabus.v1.ListStudentStudyPlansResponse
	(*ListToDoItemRequest)(nil),                             // 25: syllabus.v1.ListToDoItemRequest
	(*ListToDoItemResponse)(nil),                            // 26: syllabus.v1.ListToDoItemResponse
	(*ListStudentStudyPlanItemRequest)(nil),                 // 27: syllabus.v1.ListStudentStudyPlanItemRequest
	(*ListStudentStudyPlanItemResponse)(nil),                // 28: syllabus.v1.ListStudentStudyPlanItemResponse
	(*ListByCourseRequest)(nil),                             // 29: syllabus.v1.ListByCourseRequest
	(*ListByCourseResponse)(nil),                            // 30: syllabus.v1.ListByCourseResponse
	(*StudyPlanItemImport)(nil),                             // 31: syllabus.v1.StudyPlanItemImport
	(*ImportStudyPlanRequest)(nil),                          // 32: syllabus.v1.ImportStudyPlanRequest
	(*RowError)(nil),                                        // 33: syllabus.v1.RowError
	(*ImportStudyPlanResponse)(nil),                         // 34: syllabus.v1.ImportStudyPlanResponse
	(*RetrieveStudyPlanIdentityRequest)(nil),                // 35: syllabus.v1.RetrieveStudyPlanIdentityRequest
	(*RetrieveStudyPlanIdentityResponse)(nil),               // 36: syllabus.v1.RetrieveStudyPlanIdentityResponse
	(*ListAllocateTeacherRequest)(nil),                      // 37: syllabus.v1.ListAllocateTeacherRequest
	(*ListAllocateTeacherResponse)(nil),                     // 38: syllabus.v1.ListAllocateTeacherResponse
	(*ListToDoItemStructuredBookTreeRequest)(nil),           // 39: syllabus.v1.ListToDoItemStructuredBookTreeRequest
	(*StudentStudyPlanItem)(nil),                            // 40: syllabus.v1.StudentStudyPlanItem
	(*ListToDoItemStructuredBookTreeResponse)(nil),          // 41: syllabus.v1.ListToDoItemStructuredBookTreeResponse
	(*RetrieveAllocateMarkerRequest)(nil),                   // 42: syllabus.v1.RetrieveAllocateMarkerRequest
	(*RetrieveAllocateMarkerResponse)(nil),                  // 43: syllabus.v1.RetrieveAllocateMarkerResponse
	(*UpsertAllocateMarkerRequest_AllocateMarkerItem)(nil),  // 44: syllabus.v1.UpsertAllocateMarkerRequest.AllocateMarkerItem
	(*UpsertAllocateMarkerRequest_SubmissionItem)(nil),      // 45: syllabus.v1.UpsertAllocateMarkerRequest.SubmissionItem
	(*ListAllocateTeacherResponse_AllocateTeacherItem)(nil), // 46: syllabus.v1.ListAllocateTeacherResponse.AllocateTeacherItem
	(*MasterStudyPlan)(nil),                                 // 47: syllabus.v1.MasterStudyPlan
	(*StudyPlanItem)(nil),                                   // 48: syllabus.v1.StudyPlanItem
	(*timestamppb.Timestamp)(nil),                           // 49: google.protobuf.Timestamp
	(*StudyPlanItemIdentity)(nil),                           // 50: syllabus.v1.StudyPlanItemIdentity
	(StudyPlanItemStatus)(0),                                // 51: syllabus.v1.StudyPlanItemStatus
	(StudyPlanStatus)(0),                                    // 52: syllabus.v1.StudyPlanStatus
	(*v1.Paging)(nil),                                       // 53: common.v1.Paging
	(*StudentStudyPlanData)(nil),                            // 54: syllabus.v1.StudentStudyPlanData
	(StudyPlanItemToDoStatus)(0),                            // 55: syllabus.v1.StudyPlanItemToDoStatus
	(*StudyPlanToDoItem)(nil),                               // 56: syllabus.v1.StudyPlanToDoItem
	(*StudyPlanData)(nil),                                   // 57: syllabus.v1.StudyPlanData
	(*StudyPlanIdentity)(nil),                               // 58: syllabus.v1.StudyPlanIdentity
	(*StudyPlanIdt)(nil),                                    // 59: syllabus.v1.StudyPlanIdt
	(*LearningMaterialBase)(nil),                            // 60: syllabus.v1.LearningMaterialBase
	(*StudentTopicStudyProgress)(nil),                       // 61: syllabus.v1.StudentTopicStudyProgress
}
var file_syllabus_v1_study_plan_service_proto_depIdxs = []int32{
	47, // 0: syllabus.v1.UpsertMasterInfoRequest.master_items:type_name -> syllabus.v1.MasterStudyPlan
	48, // 1: syllabus.v1.UpsertIndividualInfoRequest.individual_items:type_name -> syllabus.v1.StudyPlanItem
	45, // 2: syllabus.v1.UpsertAllocateMarkerRequest.submissions:type_name -> syllabus.v1.UpsertAllocateMarkerRequest.SubmissionItem
	44, // 3: syllabus.v1.UpsertAllocateMarkerRequest.allocate_markers:type_name -> syllabus.v1.UpsertAllocateMarkerRequest.AllocateMarkerItem
	48, // 4: syllabus.v1.UpdateStudentLearningItemTimeRequest.master_items:type_name -> syllabus.v1.StudyPlanItem
	49, // 5: syllabus.v1.UpdateStudentLearningItemTimeRequest.start_date:type_name -> google.protobuf.Timestamp
	49, // 6: syllabus.v1.UpdateStudentLearningItemTimeRequest.end_date:type_name -> google.protobuf.Timestamp
	50, // 7: syllabus.v1.BulkUpdateStudyPlanItemSchoolDateRequest.study_plan_item_identities:type_name -> syllabus.v1.StudyPlanItemIdentity
	49, // 8: syllabus.v1.BulkUpdateStudyPlanItemSchoolDateRequest.school_date:type_name -> google.protobuf.Timestamp
	50, // 9: syllabus.v1.BulkUpdateStudyPlanItemStatusRequest.study_plan_item_identities:type_name -> syllabus.v1.StudyPlanItemIdentity
	51, // 10: syllabus.v1.BulkUpdateStudyPlanItemStatusRequest.study_plan_item_status:type_name -> syllabus.v1.StudyPlanItemStatus
	52, // 11: syllabus.v1.InsertStudyPlanRequest.status:type_name -> syllabus.v1.StudyPlanStatus
	52, // 12: syllabus.v1.UpdateStudyPlanRequest.status:type_name -> syllabus.v1.StudyPlanStatus
	50, // 13: syllabus.v1.UpdateStudyPlanItemsStartEndDateRequest.study_plan_item_identities:type_name -> syllabus.v1.StudyPlanItemIdentity
	0,  // 14: syllabus.v1.UpdateStudyPlanItemsStartEndDateRequest.fields:type_name -> syllabus.v1.UpdateStudyPlanItemsStartEndDateFields
	49, // 15: syllabus.v1.UpdateStudyPlanItemsStartEndDateRequest.start_date:type_name -> google.protobuf.Timestamp
	49, // 16: syllabus.v1.UpdateStudyPlanItemsStartEndDateRequest.end_date:type_name -> google.protobuf.Timestamp
	50, // 17: syllabus.v1.UpsertSchoolDateRequest.study_plan_item_identities:type_name -> syllabus.v1.StudyPlanItemIdentity
	49, // 18: syllabus.v1.UpsertSchoolDateRequest.school_date:type_name -> google.protobuf.Timestamp
	53, // 19: syllabus.v1.ListStudentStudyPlansRequest.paging:type_name -> common.v1.Paging
	53, // 20: syllabus.v1.ListStudentStudyPlansResponse.next_page:type_name -> common.v1.Paging
	54, // 21: syllabus.v1.ListStudentStudyPlansResponse.study_plans:type_name -> syllabus.v1.StudentStudyPlanData
	53, // 22: syllabus.v1.ListToDoItemRequest.page:type_name -> common.v1.Paging
	55, // 23: syllabus.v1.ListToDoItemRequest.status:type_name -> syllabus.v1.StudyPlanItemToDoStatus
	53, // 24: syllabus.v1.ListToDoItemResponse.next_page:type_name -> common.v1.Paging
	56, // 25: syllabus.v1.ListToDoItemResponse.todo_items:type_name -> syllabus.v1.StudyPlanToDoItem
	48, // 26: syllabus.v1.ListStudentStudyPlanItemRequest.master_study_plan_item:type_name -> syllabus.v1.StudyPlanItem
	48, // 27: syllabus.v1.ListStudentStudyPlanItemResponse.individual_items:type_name -> syllabus.v1.StudyPlanItem
	53, // 28: syllabus.v1.ListByCourseRequest.paging:type_name -> common.v1.Paging
	53, // 29: syllabus.v1.ListByCourseResponse.next_page:type_name -> common.v1.Paging
	57, // 30: syllabus.v1.ListByCourseResponse.study_plans:type_name -> syllabus.v1.StudyPlanData
	49, // 31: syllabus.v1.StudyPlanItemImport.available_from:type_name -> google.protobuf.Timestamp
	49, // 32: syllabus.v1.StudyPlanItemImport.available_to:type_name -> google.protobuf.Timestamp
	49, // 33: syllabus.v1.StudyPlanItemImport.start_date:type_name -> google.protobuf.Timestamp
	49, // 34: syllabus.v1.StudyPlanItemImport.end_date:type_name -> google.protobuf.Timestamp
	31, // 35: syllabus.v1.ImportStudyPlanRequest.study_plan_items:type_name -> syllabus.v1.StudyPlanItemImport
	33, // 36: syllabus.v1.ImportStudyPlanResponse.row_errors:type_name -> syllabus.v1.RowError
	58, // 37: syllabus.v1.RetrieveStudyPlanIdentityResponse.study_plan_identities:type_name -> syllabus.v1.StudyPlanIdentity
	46, // 38: syllabus.v1.ListAllocateTeacherResponse.allocate_teachers:type_name -> syllabus.v1.ListAllocateTeacherResponse.AllocateTeacherItem
	53, // 39: syllabus.v1.ListToDoItemStructuredBookTreeRequest.page:type_name -> common.v1.Paging
	59, // 40: syllabus.v1.ListToDoItemStructuredBookTreeRequest.study_plan_identity:type_name -> syllabus.v1.StudyPlanIdt
	60, // 41: syllabus.v1.StudentStudyPlanItem.learning_material:type_name -> syllabus.v1.LearningMaterialBase
	49, // 42: syllabus.v1.StudentStudyPlanItem.start_date:type_name -> google.protobuf.Timestamp
	49, // 43: syllabus.v1.StudentStudyPlanItem.end_date:type_name -> google.protobuf.Timestamp
	49, // 44: syllabus.v1.StudentStudyPlanItem.completed_at:type_name -> google.protobuf.Timestamp
	49, // 45: syllabus.v1.StudentStudyPlanItem.school_date:type_name -> google.protobuf.Timestamp
	51, // 46: syllabus.v1.StudentStudyPlanItem.study_plan_item_status:type_name -> syllabus.v1.StudyPlanItemStatus
	49, // 47: syllabus.v1.StudentStudyPlanItem.available_from:type_name -> google.protobuf.Timestamp
	49, // 48: syllabus.v1.StudentStudyPlanItem.available_to:type_name -> google.protobuf.Timestamp
	53, // 49: syllabus.v1.ListToDoItemStructuredBookTreeResponse.next_page:type_name -> common.v1.Paging
	40, // 50: syllabus.v1.ListToDoItemStructuredBookTreeResponse.todo_items:type_name -> syllabus.v1.StudentStudyPlanItem
	61, // 51: syllabus.v1.ListToDoItemStructuredBookTreeResponse.topic_progresses:type_name -> syllabus.v1.StudentTopicStudyProgress
	50, // 52: syllabus.v1.RetrieveAllocateMarkerRequest.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	50, // 53: syllabus.v1.UpsertAllocateMarkerRequest.SubmissionItem.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	1,  // 54: syllabus.v1.StudyPlan.UpsertMasterInfo:input_type -> syllabus.v1.UpsertMasterInfoRequest
	3,  // 55: syllabus.v1.StudyPlan.UpsertIndividual:input_type -> syllabus.v1.UpsertIndividualInfoRequest
	7,  // 56: syllabus.v1.StudyPlan.UpdateStudentLearningItemTime:input_type -> syllabus.v1.UpdateStudentLearningItemTimeRequest
	9,  // 57: syllabus.v1.StudyPlan.Delete:input_type -> syllabus.v1.DeleteRequest
	11, // 58: syllabus.v1.StudyPlan.BulkUpdateStudyPlanItemSchoolDate:input_type -> syllabus.v1.BulkUpdateStudyPlanItemSchoolDateRequest
	13, // 59: syllabus.v1.StudyPlan.BulkUpdateStudyPlanItemStatus:input_type -> syllabus.v1.BulkUpdateStudyPlanItemStatusRequest
	15, // 60: syllabus.v1.StudyPlan.InsertStudyPlan:input_type -> syllabus.v1.InsertStudyPlanRequest
	17, // 61: syllabus.v1.StudyPlan.UpdateStudyPlan:input_type -> syllabus.v1.UpdateStudyPlanRequest
	19, // 62: syllabus.v1.StudyPlan.UpdateStudyPlanItemsStartEndDate:input_type -> syllabus.v1.UpdateStudyPlanItemsStartEndDateRequest
	21, // 63: syllabus.v1.StudyPlan.UpsertSchoolDate:input_type -> syllabus.v1.UpsertSchoolDateRequest
	5,  // 64: syllabus.v1.StudyPlan.UpsertAllocateMarker:input_type -> syllabus.v1.UpsertAllocateMarkerRequest
	32, // 65: syllabus.v1.StudyPlan.ImportStudyPlan:input_type -> syllabus.v1.ImportStudyPlanRequest
	23, // 66: syllabus.v1.StudyPlan.ListStudentStudyPlan:input_type -> syllabus.v1.ListStudentStudyPlansRequest
	25, // 67: syllabus.v1.StudyPlan.ListToDoItem:input_type -> syllabus.v1.ListToDoItemRequest
	27, // 68: syllabus.v1.StudyPlan.ListStudentStudyPlanItem:input_type -> syllabus.v1.ListStudentStudyPlanItemRequest
	29, // 69: syllabus.v1.StudyPlan.ListByCourse:input_type -> syllabus.v1.ListByCourseRequest
	35, // 70: syllabus.v1.StudyPlan.RetrieveStudyPlanIdentity:input_type -> syllabus.v1.RetrieveStudyPlanIdentityRequest
	39, // 71: syllabus.v1.StudyPlan.ListToDoItemStructuredBookTree:input_type -> syllabus.v1.ListToDoItemStructuredBookTreeRequest
	37, // 72: syllabus.v1.StudyPlan.ListAllocateTeacher:input_type -> syllabus.v1.ListAllocateTeacherRequest
	42, // 73: syllabus.v1.StudyPlan.RetrieveAllocateMarker:input_type -> syllabus.v1.RetrieveAllocateMarkerRequest
	2,  // 74: syllabus.v1.StudyPlan.UpsertMasterInfo:output_type -> syllabus.v1.UpsertMasterInfoResponse
	4,  // 75: syllabus.v1.StudyPlan.UpsertIndividual:output_type -> syllabus.v1.UpsertIndividualInfoResponse
	8,  // 76: syllabus.v1.StudyPlan.UpdateStudentLearningItemTime:output_type -> syllabus.v1.UpdateStudentLearningItemTimeResponse
	10, // 77: syllabus.v1.StudyPlan.Delete:output_type -> syllabus.v1.DeleteResponse
	12, // 78: syllabus.v1.StudyPlan.BulkUpdateStudyPlanItemSchoolDate:output_type -> syllabus.v1.BulkUpdateStudyPlanItemSchoolDateResponse
	14, // 79: syllabus.v1.StudyPlan.BulkUpdateStudyPlanItemStatus:output_type -> syllabus.v1.BulkUpdateStudyPlanItemStatusResponse
	16, // 80: syllabus.v1.StudyPlan.InsertStudyPlan:output_type -> syllabus.v1.InsertStudyPlanResponse
	18, // 81: syllabus.v1.StudyPlan.UpdateStudyPlan:output_type -> syllabus.v1.UpdateStudyPlanResponse
	20, // 82: syllabus.v1.StudyPlan.UpdateStudyPlanItemsStartEndDate:output_type -> syllabus.v1.UpdateStudyPlanItemsStartEndDateResponse
	22, // 83: syllabus.v1.StudyPlan.UpsertSchoolDate:output_type -> syllabus.v1.UpsertSchoolDateResponse
	6,  // 84: syllabus.v1.StudyPlan.UpsertAllocateMarker:output_type -> syllabus.v1.UpsertAllocateMarkerResponse
	34, // 85: syllabus.v1.StudyPlan.ImportStudyPlan:output_type -> syllabus.v1.ImportStudyPlanResponse
	24, // 86: syllabus.v1.StudyPlan.ListStudentStudyPlan:output_type -> syllabus.v1.ListStudentStudyPlansResponse
	26, // 87: syllabus.v1.StudyPlan.ListToDoItem:output_type -> syllabus.v1.ListToDoItemResponse
	28, // 88: syllabus.v1.StudyPlan.ListStudentStudyPlanItem:output_type -> syllabus.v1.ListStudentStudyPlanItemResponse
	30, // 89: syllabus.v1.StudyPlan.ListByCourse:output_type -> syllabus.v1.ListByCourseResponse
	36, // 90: syllabus.v1.StudyPlan.RetrieveStudyPlanIdentity:output_type -> syllabus.v1.RetrieveStudyPlanIdentityResponse
	41, // 91: syllabus.v1.StudyPlan.ListToDoItemStructuredBookTree:output_type -> syllabus.v1.ListToDoItemStructuredBookTreeResponse
	38, // 92: syllabus.v1.StudyPlan.ListAllocateTeacher:output_type -> syllabus.v1.ListAllocateTeacherResponse
	43, // 93: syllabus.v1.StudyPlan.RetrieveAllocateMarker:output_type -> syllabus.v1.RetrieveAllocateMarkerResponse
	74, // [74:94] is the sub-list for method output_type
	54, // [54:74] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_syllabus_v1_study_plan_service_proto_init() }
func file_syllabus_v1_study_plan_service_proto_init() {
	if File_syllabus_v1_study_plan_service_proto != nil {
		return
	}
	file_syllabus_v1_study_plan_proto_init()
	file_syllabus_v1_enums_proto_init()
	file_syllabus_v1_learning_material_proto_init()
	file_syllabus_v1_statistics_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_syllabus_v1_study_plan_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertMasterInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertMasterInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertIndividualInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertIndividualInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAllocateMarkerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAllocateMarkerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudentLearningItemTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudentLearningItemTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkUpdateStudyPlanItemSchoolDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkUpdateStudyPlanItemSchoolDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkUpdateStudyPlanItemStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkUpdateStudyPlanItemStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertStudyPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertStudyPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudyPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudyPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudyPlanItemsStartEndDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudyPlanItemsStartEndDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertSchoolDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertSchoolDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentStudyPlansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentStudyPlansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListToDoItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListToDoItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentStudyPlanItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentStudyPlanItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListByCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListByCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanItemImport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportStudyPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RowError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportStudyPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStudyPlanIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStudyPlanIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllocateTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllocateTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListToDoItemStructuredBookTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStudyPlanItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListToDoItemStructuredBookTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveAllocateMarkerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveAllocateMarkerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAllocateMarkerRequest_AllocateMarkerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAllocateMarkerRequest_SubmissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllocateTeacherResponse_AllocateTeacherItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_syllabus_v1_study_plan_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_syllabus_v1_study_plan_service_proto_goTypes,
		DependencyIndexes: file_syllabus_v1_study_plan_service_proto_depIdxs,
		EnumInfos:         file_syllabus_v1_study_plan_service_proto_enumTypes,
		MessageInfos:      file_syllabus_v1_study_plan_service_proto_msgTypes,
	}.Build()
	File_syllabus_v1_study_plan_service_proto = out.File
	file_syllabus_v1_study_plan_service_proto_rawDesc = nil
	file_syllabus_v1_study_plan_service_proto_goTypes = nil
	file_syllabus_v1_study_plan_service_proto_depIdxs = nil
}
