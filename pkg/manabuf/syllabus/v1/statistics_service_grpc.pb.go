// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package sspb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// StatisticsClient is the client API for Statistics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StatisticsClient interface {
	GetStudentAssignmentProgress(ctx context.Context, in *GetStudentAssignmentProgressRequest, opts ...grpc.CallOption) (*GetStudentAssignmentProgressResponse, error)
	GetCourseProgress(ctx context.Context, in *GetCourseProgressRequest, opts ...grpc.CallOption) (*GetCourseProgressResponse, error)
	GetLearningMaterialProgressInClass(ctx context.Context, in *GetLearningMaterialProgressInClassRequest, opts ...grpc.CallOption) (*GetLearningMaterialProgressInClassResponse, error)
	GetStudentProgress(ctx context.Context, in *GetStudentProgressRequest, opts ...grpc.CallOption) (*GetStudentProgressResponse, error)
	GetStudyPlanItemEventLogs(ctx context.Context, in *GetStudyPlanItemEventLogsRequest, opts ...grpc.CallOption) (*GetStudyPlanItemEventLogsResponse, error)
	ListLOHighestScoresByStudyPlanItemIDs(ctx context.Context, in *ListLOHighestScoresByStudyPlanItemIDsRequest, opts ...grpc.CallOption) (*ListLOHighestScoresByStudyPlanItemIDsResponse, error)
	GetStudentStat(ctx context.Context, in *GetStudentStatRequest, opts ...grpc.CallOption) (*GetStudentStatResponse, error)
	// Grade Book service
	ListGradeBook(ctx context.Context, in *GradeBookRequest, opts ...grpc.CallOption) (*GradeBookResponse, error)
	// rpc InsertStudentEventLogs(InsertStudentEventLogsRequest) returns (InsertStudentEventLogsResponse); //TODO: define it
	GetStudentQuestionSetTests(ctx context.Context, in *GetStudentQuestionSetTestsRequest, opts ...grpc.CallOption) (*GetStudentQuestionSetTestsResponse, error)
	ListSubmissions(ctx context.Context, in *ListSubmissionsRequest, opts ...grpc.CallOption) (*ListSubmissionsResponse, error)
	SearchSubmissions(ctx context.Context, in *SearchSubmissionsRequest, opts ...grpc.CallOption) (*SearchSubmissionsResponse, error)
	SearchSubmissionsV2(ctx context.Context, in *SearchSubmissionsV2Request, opts ...grpc.CallOption) (*SearchSubmissionsV2Response, error)
	RetrieveCourseStatistic(ctx context.Context, in *CourseStatisticRequest, opts ...grpc.CallOption) (*CourseStatisticResponse, error)
	RetrieveCourseStatisticV2(ctx context.Context, in *CourseStatisticRequest, opts ...grpc.CallOption) (*CourseStatisticResponse, error)
	RetrieveLearningProgress(ctx context.Context, in *RetrieveLearningProgressRequest, opts ...grpc.CallOption) (*RetrieveLearningProgressResponse, error)
	RetrieveSchoolHistoryByStudentInCourse(ctx context.Context, in *RetrieveSchoolHistoryByStudentInCourseRequest, opts ...grpc.CallOption) (*RetrieveSchoolHistoryByStudentInCourseResponse, error)
	ListTagByStudentInCourse(ctx context.Context, in *ListTagByStudentInCourseRequest, opts ...grpc.CallOption) (*ListTagByStudentInCourseResponse, error)
}

type statisticsClient struct {
	cc grpc.ClientConnInterface
}

func NewStatisticsClient(cc grpc.ClientConnInterface) StatisticsClient {
	return &statisticsClient{cc}
}

func (c *statisticsClient) GetStudentAssignmentProgress(ctx context.Context, in *GetStudentAssignmentProgressRequest, opts ...grpc.CallOption) (*GetStudentAssignmentProgressResponse, error) {
	out := new(GetStudentAssignmentProgressResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/GetStudentAssignmentProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) GetCourseProgress(ctx context.Context, in *GetCourseProgressRequest, opts ...grpc.CallOption) (*GetCourseProgressResponse, error) {
	out := new(GetCourseProgressResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/GetCourseProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) GetLearningMaterialProgressInClass(ctx context.Context, in *GetLearningMaterialProgressInClassRequest, opts ...grpc.CallOption) (*GetLearningMaterialProgressInClassResponse, error) {
	out := new(GetLearningMaterialProgressInClassResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/GetLearningMaterialProgressInClass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) GetStudentProgress(ctx context.Context, in *GetStudentProgressRequest, opts ...grpc.CallOption) (*GetStudentProgressResponse, error) {
	out := new(GetStudentProgressResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/GetStudentProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) GetStudyPlanItemEventLogs(ctx context.Context, in *GetStudyPlanItemEventLogsRequest, opts ...grpc.CallOption) (*GetStudyPlanItemEventLogsResponse, error) {
	out := new(GetStudyPlanItemEventLogsResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/GetStudyPlanItemEventLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) ListLOHighestScoresByStudyPlanItemIDs(ctx context.Context, in *ListLOHighestScoresByStudyPlanItemIDsRequest, opts ...grpc.CallOption) (*ListLOHighestScoresByStudyPlanItemIDsResponse, error) {
	out := new(ListLOHighestScoresByStudyPlanItemIDsResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/ListLOHighestScoresByStudyPlanItemIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) GetStudentStat(ctx context.Context, in *GetStudentStatRequest, opts ...grpc.CallOption) (*GetStudentStatResponse, error) {
	out := new(GetStudentStatResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/GetStudentStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) ListGradeBook(ctx context.Context, in *GradeBookRequest, opts ...grpc.CallOption) (*GradeBookResponse, error) {
	out := new(GradeBookResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/ListGradeBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) GetStudentQuestionSetTests(ctx context.Context, in *GetStudentQuestionSetTestsRequest, opts ...grpc.CallOption) (*GetStudentQuestionSetTestsResponse, error) {
	out := new(GetStudentQuestionSetTestsResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/GetStudentQuestionSetTests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) ListSubmissions(ctx context.Context, in *ListSubmissionsRequest, opts ...grpc.CallOption) (*ListSubmissionsResponse, error) {
	out := new(ListSubmissionsResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/ListSubmissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) SearchSubmissions(ctx context.Context, in *SearchSubmissionsRequest, opts ...grpc.CallOption) (*SearchSubmissionsResponse, error) {
	out := new(SearchSubmissionsResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/SearchSubmissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) SearchSubmissionsV2(ctx context.Context, in *SearchSubmissionsV2Request, opts ...grpc.CallOption) (*SearchSubmissionsV2Response, error) {
	out := new(SearchSubmissionsV2Response)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/SearchSubmissionsV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) RetrieveCourseStatistic(ctx context.Context, in *CourseStatisticRequest, opts ...grpc.CallOption) (*CourseStatisticResponse, error) {
	out := new(CourseStatisticResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/RetrieveCourseStatistic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) RetrieveCourseStatisticV2(ctx context.Context, in *CourseStatisticRequest, opts ...grpc.CallOption) (*CourseStatisticResponse, error) {
	out := new(CourseStatisticResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/RetrieveCourseStatisticV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) RetrieveLearningProgress(ctx context.Context, in *RetrieveLearningProgressRequest, opts ...grpc.CallOption) (*RetrieveLearningProgressResponse, error) {
	out := new(RetrieveLearningProgressResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/RetrieveLearningProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) RetrieveSchoolHistoryByStudentInCourse(ctx context.Context, in *RetrieveSchoolHistoryByStudentInCourseRequest, opts ...grpc.CallOption) (*RetrieveSchoolHistoryByStudentInCourseResponse, error) {
	out := new(RetrieveSchoolHistoryByStudentInCourseResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/RetrieveSchoolHistoryByStudentInCourse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsClient) ListTagByStudentInCourse(ctx context.Context, in *ListTagByStudentInCourseRequest, opts ...grpc.CallOption) (*ListTagByStudentInCourseResponse, error) {
	out := new(ListTagByStudentInCourseResponse)
	err := c.cc.Invoke(ctx, "/syllabus.v1.Statistics/ListTagByStudentInCourse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatisticsServer is the server API for Statistics service.
// All implementations should embed UnimplementedStatisticsServer
// for forward compatibility
type StatisticsServer interface {
	GetStudentAssignmentProgress(context.Context, *GetStudentAssignmentProgressRequest) (*GetStudentAssignmentProgressResponse, error)
	GetCourseProgress(context.Context, *GetCourseProgressRequest) (*GetCourseProgressResponse, error)
	GetLearningMaterialProgressInClass(context.Context, *GetLearningMaterialProgressInClassRequest) (*GetLearningMaterialProgressInClassResponse, error)
	GetStudentProgress(context.Context, *GetStudentProgressRequest) (*GetStudentProgressResponse, error)
	GetStudyPlanItemEventLogs(context.Context, *GetStudyPlanItemEventLogsRequest) (*GetStudyPlanItemEventLogsResponse, error)
	ListLOHighestScoresByStudyPlanItemIDs(context.Context, *ListLOHighestScoresByStudyPlanItemIDsRequest) (*ListLOHighestScoresByStudyPlanItemIDsResponse, error)
	GetStudentStat(context.Context, *GetStudentStatRequest) (*GetStudentStatResponse, error)
	// Grade Book service
	ListGradeBook(context.Context, *GradeBookRequest) (*GradeBookResponse, error)
	// rpc InsertStudentEventLogs(InsertStudentEventLogsRequest) returns (InsertStudentEventLogsResponse); //TODO: define it
	GetStudentQuestionSetTests(context.Context, *GetStudentQuestionSetTestsRequest) (*GetStudentQuestionSetTestsResponse, error)
	ListSubmissions(context.Context, *ListSubmissionsRequest) (*ListSubmissionsResponse, error)
	SearchSubmissions(context.Context, *SearchSubmissionsRequest) (*SearchSubmissionsResponse, error)
	SearchSubmissionsV2(context.Context, *SearchSubmissionsV2Request) (*SearchSubmissionsV2Response, error)
	RetrieveCourseStatistic(context.Context, *CourseStatisticRequest) (*CourseStatisticResponse, error)
	RetrieveCourseStatisticV2(context.Context, *CourseStatisticRequest) (*CourseStatisticResponse, error)
	RetrieveLearningProgress(context.Context, *RetrieveLearningProgressRequest) (*RetrieveLearningProgressResponse, error)
	RetrieveSchoolHistoryByStudentInCourse(context.Context, *RetrieveSchoolHistoryByStudentInCourseRequest) (*RetrieveSchoolHistoryByStudentInCourseResponse, error)
	ListTagByStudentInCourse(context.Context, *ListTagByStudentInCourseRequest) (*ListTagByStudentInCourseResponse, error)
}

// UnimplementedStatisticsServer should be embedded to have forward compatible implementations.
type UnimplementedStatisticsServer struct {
}

func (UnimplementedStatisticsServer) GetStudentAssignmentProgress(context.Context, *GetStudentAssignmentProgressRequest) (*GetStudentAssignmentProgressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudentAssignmentProgress not implemented")
}
func (UnimplementedStatisticsServer) GetCourseProgress(context.Context, *GetCourseProgressRequest) (*GetCourseProgressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourseProgress not implemented")
}
func (UnimplementedStatisticsServer) GetLearningMaterialProgressInClass(context.Context, *GetLearningMaterialProgressInClassRequest) (*GetLearningMaterialProgressInClassResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLearningMaterialProgressInClass not implemented")
}
func (UnimplementedStatisticsServer) GetStudentProgress(context.Context, *GetStudentProgressRequest) (*GetStudentProgressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudentProgress not implemented")
}
func (UnimplementedStatisticsServer) GetStudyPlanItemEventLogs(context.Context, *GetStudyPlanItemEventLogsRequest) (*GetStudyPlanItemEventLogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudyPlanItemEventLogs not implemented")
}
func (UnimplementedStatisticsServer) ListLOHighestScoresByStudyPlanItemIDs(context.Context, *ListLOHighestScoresByStudyPlanItemIDsRequest) (*ListLOHighestScoresByStudyPlanItemIDsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLOHighestScoresByStudyPlanItemIDs not implemented")
}
func (UnimplementedStatisticsServer) GetStudentStat(context.Context, *GetStudentStatRequest) (*GetStudentStatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudentStat not implemented")
}
func (UnimplementedStatisticsServer) ListGradeBook(context.Context, *GradeBookRequest) (*GradeBookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGradeBook not implemented")
}
func (UnimplementedStatisticsServer) GetStudentQuestionSetTests(context.Context, *GetStudentQuestionSetTestsRequest) (*GetStudentQuestionSetTestsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudentQuestionSetTests not implemented")
}
func (UnimplementedStatisticsServer) ListSubmissions(context.Context, *ListSubmissionsRequest) (*ListSubmissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSubmissions not implemented")
}
func (UnimplementedStatisticsServer) SearchSubmissions(context.Context, *SearchSubmissionsRequest) (*SearchSubmissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSubmissions not implemented")
}
func (UnimplementedStatisticsServer) SearchSubmissionsV2(context.Context, *SearchSubmissionsV2Request) (*SearchSubmissionsV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSubmissionsV2 not implemented")
}
func (UnimplementedStatisticsServer) RetrieveCourseStatistic(context.Context, *CourseStatisticRequest) (*CourseStatisticResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCourseStatistic not implemented")
}
func (UnimplementedStatisticsServer) RetrieveCourseStatisticV2(context.Context, *CourseStatisticRequest) (*CourseStatisticResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCourseStatisticV2 not implemented")
}
func (UnimplementedStatisticsServer) RetrieveLearningProgress(context.Context, *RetrieveLearningProgressRequest) (*RetrieveLearningProgressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveLearningProgress not implemented")
}
func (UnimplementedStatisticsServer) RetrieveSchoolHistoryByStudentInCourse(context.Context, *RetrieveSchoolHistoryByStudentInCourseRequest) (*RetrieveSchoolHistoryByStudentInCourseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveSchoolHistoryByStudentInCourse not implemented")
}
func (UnimplementedStatisticsServer) ListTagByStudentInCourse(context.Context, *ListTagByStudentInCourseRequest) (*ListTagByStudentInCourseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTagByStudentInCourse not implemented")
}

// UnsafeStatisticsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StatisticsServer will
// result in compilation errors.
type UnsafeStatisticsServer interface {
	mustEmbedUnimplementedStatisticsServer()
}

func RegisterStatisticsServer(s grpc.ServiceRegistrar, srv StatisticsServer) {
	s.RegisterService(&_Statistics_serviceDesc, srv)
}

func _Statistics_GetStudentAssignmentProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentAssignmentProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).GetStudentAssignmentProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/GetStudentAssignmentProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).GetStudentAssignmentProgress(ctx, req.(*GetStudentAssignmentProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_GetCourseProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCourseProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).GetCourseProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/GetCourseProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).GetCourseProgress(ctx, req.(*GetCourseProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_GetLearningMaterialProgressInClass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLearningMaterialProgressInClassRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).GetLearningMaterialProgressInClass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/GetLearningMaterialProgressInClass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).GetLearningMaterialProgressInClass(ctx, req.(*GetLearningMaterialProgressInClassRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_GetStudentProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).GetStudentProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/GetStudentProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).GetStudentProgress(ctx, req.(*GetStudentProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_GetStudyPlanItemEventLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudyPlanItemEventLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).GetStudyPlanItemEventLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/GetStudyPlanItemEventLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).GetStudyPlanItemEventLogs(ctx, req.(*GetStudyPlanItemEventLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_ListLOHighestScoresByStudyPlanItemIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLOHighestScoresByStudyPlanItemIDsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).ListLOHighestScoresByStudyPlanItemIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/ListLOHighestScoresByStudyPlanItemIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).ListLOHighestScoresByStudyPlanItemIDs(ctx, req.(*ListLOHighestScoresByStudyPlanItemIDsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_GetStudentStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentStatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).GetStudentStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/GetStudentStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).GetStudentStat(ctx, req.(*GetStudentStatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_ListGradeBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GradeBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).ListGradeBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/ListGradeBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).ListGradeBook(ctx, req.(*GradeBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_GetStudentQuestionSetTests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentQuestionSetTestsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).GetStudentQuestionSetTests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/GetStudentQuestionSetTests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).GetStudentQuestionSetTests(ctx, req.(*GetStudentQuestionSetTestsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_ListSubmissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSubmissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).ListSubmissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/ListSubmissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).ListSubmissions(ctx, req.(*ListSubmissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_SearchSubmissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchSubmissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).SearchSubmissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/SearchSubmissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).SearchSubmissions(ctx, req.(*SearchSubmissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_SearchSubmissionsV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchSubmissionsV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).SearchSubmissionsV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/SearchSubmissionsV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).SearchSubmissionsV2(ctx, req.(*SearchSubmissionsV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_RetrieveCourseStatistic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourseStatisticRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).RetrieveCourseStatistic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/RetrieveCourseStatistic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).RetrieveCourseStatistic(ctx, req.(*CourseStatisticRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_RetrieveCourseStatisticV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourseStatisticRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).RetrieveCourseStatisticV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/RetrieveCourseStatisticV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).RetrieveCourseStatisticV2(ctx, req.(*CourseStatisticRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_RetrieveLearningProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveLearningProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).RetrieveLearningProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/RetrieveLearningProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).RetrieveLearningProgress(ctx, req.(*RetrieveLearningProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_RetrieveSchoolHistoryByStudentInCourse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveSchoolHistoryByStudentInCourseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).RetrieveSchoolHistoryByStudentInCourse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/RetrieveSchoolHistoryByStudentInCourse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).RetrieveSchoolHistoryByStudentInCourse(ctx, req.(*RetrieveSchoolHistoryByStudentInCourseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Statistics_ListTagByStudentInCourse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTagByStudentInCourseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServer).ListTagByStudentInCourse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/syllabus.v1.Statistics/ListTagByStudentInCourse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServer).ListTagByStudentInCourse(ctx, req.(*ListTagByStudentInCourseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Statistics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "syllabus.v1.Statistics",
	HandlerType: (*StatisticsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStudentAssignmentProgress",
			Handler:    _Statistics_GetStudentAssignmentProgress_Handler,
		},
		{
			MethodName: "GetCourseProgress",
			Handler:    _Statistics_GetCourseProgress_Handler,
		},
		{
			MethodName: "GetLearningMaterialProgressInClass",
			Handler:    _Statistics_GetLearningMaterialProgressInClass_Handler,
		},
		{
			MethodName: "GetStudentProgress",
			Handler:    _Statistics_GetStudentProgress_Handler,
		},
		{
			MethodName: "GetStudyPlanItemEventLogs",
			Handler:    _Statistics_GetStudyPlanItemEventLogs_Handler,
		},
		{
			MethodName: "ListLOHighestScoresByStudyPlanItemIDs",
			Handler:    _Statistics_ListLOHighestScoresByStudyPlanItemIDs_Handler,
		},
		{
			MethodName: "GetStudentStat",
			Handler:    _Statistics_GetStudentStat_Handler,
		},
		{
			MethodName: "ListGradeBook",
			Handler:    _Statistics_ListGradeBook_Handler,
		},
		{
			MethodName: "GetStudentQuestionSetTests",
			Handler:    _Statistics_GetStudentQuestionSetTests_Handler,
		},
		{
			MethodName: "ListSubmissions",
			Handler:    _Statistics_ListSubmissions_Handler,
		},
		{
			MethodName: "SearchSubmissions",
			Handler:    _Statistics_SearchSubmissions_Handler,
		},
		{
			MethodName: "SearchSubmissionsV2",
			Handler:    _Statistics_SearchSubmissionsV2_Handler,
		},
		{
			MethodName: "RetrieveCourseStatistic",
			Handler:    _Statistics_RetrieveCourseStatistic_Handler,
		},
		{
			MethodName: "RetrieveCourseStatisticV2",
			Handler:    _Statistics_RetrieveCourseStatisticV2_Handler,
		},
		{
			MethodName: "RetrieveLearningProgress",
			Handler:    _Statistics_RetrieveLearningProgress_Handler,
		},
		{
			MethodName: "RetrieveSchoolHistoryByStudentInCourse",
			Handler:    _Statistics_RetrieveSchoolHistoryByStudentInCourse_Handler,
		},
		{
			MethodName: "ListTagByStudentInCourse",
			Handler:    _Statistics_ListTagByStudentInCourse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "syllabus/v1/statistics_service.proto",
}
