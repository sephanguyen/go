// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: syllabus/v1/common.proto

package sspb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SubmissionContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitMediaId     string `protobuf:"bytes,1,opt,name=submit_media_id,json=submitMediaId,proto3" json:"submit_media_id,omitempty"`
	AttachmentMediaId string `protobuf:"bytes,2,opt,name=attachment_media_id,json=attachmentMediaId,proto3" json:"attachment_media_id,omitempty"`
}

func (x *SubmissionContent) Reset() {
	*x = SubmissionContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionContent) ProtoMessage() {}

func (x *SubmissionContent) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionContent.ProtoReflect.Descriptor instead.
func (*SubmissionContent) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *SubmissionContent) GetSubmitMediaId() string {
	if x != nil {
		return x.SubmitMediaId
	}
	return ""
}

func (x *SubmissionContent) GetAttachmentMediaId() string {
	if x != nil {
		return x.AttachmentMediaId
	}
	return ""
}

type StudentSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId          string                       `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	StudyPlanItemIdentity *StudyPlanItemIdentity       `protobuf:"bytes,2,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
	Note                  string                       `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	SubmissionContent     []*SubmissionContent         `protobuf:"bytes,4,rep,name=submission_content,json=submissionContent,proto3" json:"submission_content,omitempty"`
	CreatedAt             *timestamppb.Timestamp       `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp       `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status                SubmissionStatus             `protobuf:"varint,7,opt,name=status,proto3,enum=syllabus.v1.SubmissionStatus" json:"status,omitempty"`
	SubmissionGradeId     *wrapperspb.StringValue      `protobuf:"bytes,8,opt,name=submission_grade_id,json=submissionGradeId,proto3" json:"submission_grade_id,omitempty"`
	CourseId              string                       `protobuf:"bytes,9,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StartDate             *timestamppb.Timestamp       `protobuf:"bytes,10,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate               *timestamppb.Timestamp       `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	CompleteDate          *timestamppb.Timestamp       `protobuf:"bytes,12,opt,name=complete_date,json=completeDate,proto3" json:"complete_date,omitempty"`
	Duration              int32                        `protobuf:"varint,13,opt,name=duration,proto3" json:"duration,omitempty"`
	CorrectScore          *wrapperspb.FloatValue       `protobuf:"bytes,14,opt,name=correct_score,json=correctScore,proto3" json:"correct_score,omitempty"`
	TotalScore            *wrapperspb.FloatValue       `protobuf:"bytes,15,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
	UnderstandingLevel    SubmissionUnderstandingLevel `protobuf:"varint,16,opt,name=understanding_level,json=understandingLevel,proto3,enum=syllabus.v1.SubmissionUnderstandingLevel" json:"understanding_level,omitempty"`
}

func (x *StudentSubmission) Reset() {
	*x = StudentSubmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentSubmission) ProtoMessage() {}

func (x *StudentSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentSubmission.ProtoReflect.Descriptor instead.
func (*StudentSubmission) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *StudentSubmission) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *StudentSubmission) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

func (x *StudentSubmission) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *StudentSubmission) GetSubmissionContent() []*SubmissionContent {
	if x != nil {
		return x.SubmissionContent
	}
	return nil
}

func (x *StudentSubmission) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *StudentSubmission) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *StudentSubmission) GetStatus() SubmissionStatus {
	if x != nil {
		return x.Status
	}
	return SubmissionStatus_SUBMISSION_STATUS_NONE
}

func (x *StudentSubmission) GetSubmissionGradeId() *wrapperspb.StringValue {
	if x != nil {
		return x.SubmissionGradeId
	}
	return nil
}

func (x *StudentSubmission) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *StudentSubmission) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *StudentSubmission) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *StudentSubmission) GetCompleteDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CompleteDate
	}
	return nil
}

func (x *StudentSubmission) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *StudentSubmission) GetCorrectScore() *wrapperspb.FloatValue {
	if x != nil {
		return x.CorrectScore
	}
	return nil
}

func (x *StudentSubmission) GetTotalScore() *wrapperspb.FloatValue {
	if x != nil {
		return x.TotalScore
	}
	return nil
}

func (x *StudentSubmission) GetUnderstandingLevel() SubmissionUnderstandingLevel {
	if x != nil {
		return x.UnderstandingLevel
	}
	return SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_NONE
}

var File_syllabus_v1_common_proto protoreflect.FileDescriptor

var file_syllabus_v1_common_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x6b, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x22, 0xbb, 0x07, 0x0a,
	0x11, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x15, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x11, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x5a,
	0x0a, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x12, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65,
	0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_syllabus_v1_common_proto_rawDescOnce sync.Once
	file_syllabus_v1_common_proto_rawDescData = file_syllabus_v1_common_proto_rawDesc
)

func file_syllabus_v1_common_proto_rawDescGZIP() []byte {
	file_syllabus_v1_common_proto_rawDescOnce.Do(func() {
		file_syllabus_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_syllabus_v1_common_proto_rawDescData)
	})
	return file_syllabus_v1_common_proto_rawDescData
}

var file_syllabus_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_syllabus_v1_common_proto_goTypes = []interface{}{
	(*SubmissionContent)(nil),         // 0: syllabus.v1.SubmissionContent
	(*StudentSubmission)(nil),         // 1: syllabus.v1.StudentSubmission
	(*StudyPlanItemIdentity)(nil),     // 2: syllabus.v1.StudyPlanItemIdentity
	(*timestamppb.Timestamp)(nil),     // 3: google.protobuf.Timestamp
	(SubmissionStatus)(0),             // 4: syllabus.v1.SubmissionStatus
	(*wrapperspb.StringValue)(nil),    // 5: google.protobuf.StringValue
	(*wrapperspb.FloatValue)(nil),     // 6: google.protobuf.FloatValue
	(SubmissionUnderstandingLevel)(0), // 7: syllabus.v1.SubmissionUnderstandingLevel
}
var file_syllabus_v1_common_proto_depIdxs = []int32{
	2,  // 0: syllabus.v1.StudentSubmission.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	0,  // 1: syllabus.v1.StudentSubmission.submission_content:type_name -> syllabus.v1.SubmissionContent
	3,  // 2: syllabus.v1.StudentSubmission.created_at:type_name -> google.protobuf.Timestamp
	3,  // 3: syllabus.v1.StudentSubmission.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 4: syllabus.v1.StudentSubmission.status:type_name -> syllabus.v1.SubmissionStatus
	5,  // 5: syllabus.v1.StudentSubmission.submission_grade_id:type_name -> google.protobuf.StringValue
	3,  // 6: syllabus.v1.StudentSubmission.start_date:type_name -> google.protobuf.Timestamp
	3,  // 7: syllabus.v1.StudentSubmission.end_date:type_name -> google.protobuf.Timestamp
	3,  // 8: syllabus.v1.StudentSubmission.complete_date:type_name -> google.protobuf.Timestamp
	6,  // 9: syllabus.v1.StudentSubmission.correct_score:type_name -> google.protobuf.FloatValue
	6,  // 10: syllabus.v1.StudentSubmission.total_score:type_name -> google.protobuf.FloatValue
	7,  // 11: syllabus.v1.StudentSubmission.understanding_level:type_name -> syllabus.v1.SubmissionUnderstandingLevel
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_syllabus_v1_common_proto_init() }
func file_syllabus_v1_common_proto_init() {
	if File_syllabus_v1_common_proto != nil {
		return
	}
	file_syllabus_v1_study_plan_proto_init()
	file_syllabus_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_syllabus_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentSubmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_syllabus_v1_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_syllabus_v1_common_proto_goTypes,
		DependencyIndexes: file_syllabus_v1_common_proto_depIdxs,
		MessageInfos:      file_syllabus_v1_common_proto_msgTypes,
	}.Build()
	File_syllabus_v1_common_proto = out.File
	file_syllabus_v1_common_proto_rawDesc = nil
	file_syllabus_v1_common_proto_goTypes = nil
	file_syllabus_v1_common_proto_depIdxs = nil
}
