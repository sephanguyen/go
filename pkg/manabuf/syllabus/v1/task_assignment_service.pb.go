// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: syllabus/v1/task_assignment_service.proto

package sspb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// TaskAssignmentBase is task assignment metadata
type TaskAssignmentBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Learning Material metadata
	Base *LearningMaterialBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// list of attachments urls
	Attachments []string `protobuf:"bytes,2,rep,name=attachments,proto3" json:"attachments,omitempty"`
	// instruction or descriptions
	Instruction string `protobuf:"bytes,3,opt,name=instruction,proto3" json:"instruction,omitempty"`
	// require student submit duration time
	RequireDuration bool `protobuf:"varint,4,opt,name=require_duration,json=requireDuration,proto3" json:"require_duration,omitempty"`
	// require student submit completed date
	RequireCompleteDate bool `protobuf:"varint,5,opt,name=require_complete_date,json=requireCompleteDate,proto3" json:"require_complete_date,omitempty"`
	// require student submit emotional understanding level
	RequireUnderstandingLevel bool `protobuf:"varint,6,opt,name=require_understanding_level,json=requireUnderstandingLevel,proto3" json:"require_understanding_level,omitempty"`
	// require student submit grade number
	RequireCorrectness bool `protobuf:"varint,7,opt,name=require_correctness,json=requireCorrectness,proto3" json:"require_correctness,omitempty"`
	// require student submit attachments
	RequireAttachment bool `protobuf:"varint,8,opt,name=require_attachment,json=requireAttachment,proto3" json:"require_attachment,omitempty"`
	// require student submit attachments text notes
	RequireAssignmentNote bool `protobuf:"varint,9,opt,name=require_assignment_note,json=requireAssignmentNote,proto3" json:"require_assignment_note,omitempty"`
}

func (x *TaskAssignmentBase) Reset() {
	*x = TaskAssignmentBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAssignmentBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAssignmentBase) ProtoMessage() {}

func (x *TaskAssignmentBase) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAssignmentBase.ProtoReflect.Descriptor instead.
func (*TaskAssignmentBase) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_task_assignment_service_proto_rawDescGZIP(), []int{0}
}

func (x *TaskAssignmentBase) GetBase() *LearningMaterialBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *TaskAssignmentBase) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *TaskAssignmentBase) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *TaskAssignmentBase) GetRequireDuration() bool {
	if x != nil {
		return x.RequireDuration
	}
	return false
}

func (x *TaskAssignmentBase) GetRequireCompleteDate() bool {
	if x != nil {
		return x.RequireCompleteDate
	}
	return false
}

func (x *TaskAssignmentBase) GetRequireUnderstandingLevel() bool {
	if x != nil {
		return x.RequireUnderstandingLevel
	}
	return false
}

func (x *TaskAssignmentBase) GetRequireCorrectness() bool {
	if x != nil {
		return x.RequireCorrectness
	}
	return false
}

func (x *TaskAssignmentBase) GetRequireAttachment() bool {
	if x != nil {
		return x.RequireAttachment
	}
	return false
}

func (x *TaskAssignmentBase) GetRequireAssignmentNote() bool {
	if x != nil {
		return x.RequireAssignmentNote
	}
	return false
}

type InsertTaskAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// We only need send some fields bellow
	// 1. LearningMaterialBase
	// 1. No learning_material
	// 2. topic_id
	// 3. name
	// 4. No send type
	// 2. attachments
	// 3. instruction
	// 4. require_duration
	// 5. No require_complete_date, todo future
	// 6. require_understanding_level
	// 7. require_correctness
	// 8. require_attachment
	// 9. require_assignment_note
	TaskAssignment *TaskAssignmentBase `protobuf:"bytes,1,opt,name=task_assignment,json=taskAssignment,proto3" json:"task_assignment,omitempty"`
}

func (x *InsertTaskAssignmentRequest) Reset() {
	*x = InsertTaskAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertTaskAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertTaskAssignmentRequest) ProtoMessage() {}

func (x *InsertTaskAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertTaskAssignmentRequest.ProtoReflect.Descriptor instead.
func (*InsertTaskAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_task_assignment_service_proto_rawDescGZIP(), []int{1}
}

func (x *InsertTaskAssignmentRequest) GetTaskAssignment() *TaskAssignmentBase {
	if x != nil {
		return x.TaskAssignment
	}
	return nil
}

type InsertTaskAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// return generated Learning Material ULID
	LearningMaterialId string `protobuf:"bytes,1,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
}

func (x *InsertTaskAssignmentResponse) Reset() {
	*x = InsertTaskAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertTaskAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertTaskAssignmentResponse) ProtoMessage() {}

func (x *InsertTaskAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertTaskAssignmentResponse.ProtoReflect.Descriptor instead.
func (*InsertTaskAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_task_assignment_service_proto_rawDescGZIP(), []int{2}
}

func (x *InsertTaskAssignmentResponse) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

type UpdateTaskAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// We only need send some fields bellow
	// 1. LearningMaterialBase
	// 1. No learning_material
	// 2. No topic_id
	// 3. name
	// 4. No send type
	// 2. attachments
	// 3. instruction
	// 4. require_duration
	// 5. No require_complete_date, todo future
	// 6. require_understanding_level
	// 7. require_correctness
	// 8. require_attachment
	// 9. require_assignment_note
	TaskAssignment *TaskAssignmentBase `protobuf:"bytes,1,opt,name=task_assignment,json=taskAssignment,proto3" json:"task_assignment,omitempty"`
}

func (x *UpdateTaskAssignmentRequest) Reset() {
	*x = UpdateTaskAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskAssignmentRequest) ProtoMessage() {}

func (x *UpdateTaskAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskAssignmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_task_assignment_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTaskAssignmentRequest) GetTaskAssignment() *TaskAssignmentBase {
	if x != nil {
		return x.TaskAssignment
	}
	return nil
}

// UpdateTaskAssignmentResponse is empty message
type UpdateTaskAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTaskAssignmentResponse) Reset() {
	*x = UpdateTaskAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskAssignmentResponse) ProtoMessage() {}

func (x *UpdateTaskAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskAssignmentResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_task_assignment_service_proto_rawDescGZIP(), []int{4}
}

type ListTaskAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningMaterialIds []string `protobuf:"bytes,1,rep,name=learning_material_ids,json=learningMaterialIds,proto3" json:"learning_material_ids,omitempty"`
}

func (x *ListTaskAssignmentRequest) Reset() {
	*x = ListTaskAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskAssignmentRequest) ProtoMessage() {}

func (x *ListTaskAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskAssignmentRequest.ProtoReflect.Descriptor instead.
func (*ListTaskAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_task_assignment_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListTaskAssignmentRequest) GetLearningMaterialIds() []string {
	if x != nil {
		return x.LearningMaterialIds
	}
	return nil
}

type ListTaskAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskAssignments []*TaskAssignmentBase `protobuf:"bytes,1,rep,name=task_assignments,json=taskAssignments,proto3" json:"task_assignments,omitempty"`
}

func (x *ListTaskAssignmentResponse) Reset() {
	*x = ListTaskAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskAssignmentResponse) ProtoMessage() {}

func (x *ListTaskAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskAssignmentResponse.ProtoReflect.Descriptor instead.
func (*ListTaskAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_task_assignment_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListTaskAssignmentResponse) GetTaskAssignments() []*TaskAssignmentBase {
	if x != nil {
		return x.TaskAssignments
	}
	return nil
}

type UpsertAdhocTaskAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId      string                 `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId       string                 `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ChapterName    string                 `protobuf:"bytes,3,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	TopicName      string                 `protobuf:"bytes,4,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	BookName       string                 `protobuf:"bytes,5,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	StudyPlanName  string                 `protobuf:"bytes,6,opt,name=study_plan_name,json=studyPlanName,proto3" json:"study_plan_name,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	TaskAssignment *TaskAssignmentBase    `protobuf:"bytes,9,opt,name=task_assignment,json=taskAssignment,proto3" json:"task_assignment,omitempty"`
}

func (x *UpsertAdhocTaskAssignmentRequest) Reset() {
	*x = UpsertAdhocTaskAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAdhocTaskAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAdhocTaskAssignmentRequest) ProtoMessage() {}

func (x *UpsertAdhocTaskAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAdhocTaskAssignmentRequest.ProtoReflect.Descriptor instead.
func (*UpsertAdhocTaskAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_task_assignment_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpsertAdhocTaskAssignmentRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpsertAdhocTaskAssignmentRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpsertAdhocTaskAssignmentRequest) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *UpsertAdhocTaskAssignmentRequest) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *UpsertAdhocTaskAssignmentRequest) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *UpsertAdhocTaskAssignmentRequest) GetStudyPlanName() string {
	if x != nil {
		return x.StudyPlanName
	}
	return ""
}

func (x *UpsertAdhocTaskAssignmentRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpsertAdhocTaskAssignmentRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *UpsertAdhocTaskAssignmentRequest) GetTaskAssignment() *TaskAssignmentBase {
	if x != nil {
		return x.TaskAssignment
	}
	return nil
}

type UpsertAdhocTaskAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningMaterialId string `protobuf:"bytes,1,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
}

func (x *UpsertAdhocTaskAssignmentResponse) Reset() {
	*x = UpsertAdhocTaskAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAdhocTaskAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAdhocTaskAssignmentResponse) ProtoMessage() {}

func (x *UpsertAdhocTaskAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_task_assignment_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAdhocTaskAssignmentResponse.ProtoReflect.Descriptor instead.
func (*UpsertAdhocTaskAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_task_assignment_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpsertAdhocTaskAssignmentResponse) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

var File_syllabus_v1_task_assignment_service_proto protoreflect.FileDescriptor

var file_syllabus_v1_task_assignment_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x23, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6,
	0x03, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x3e, 0x0a, 0x1b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2f, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x36, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x67, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x50, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0x67, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x48, 0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0e, 0x74, 0x61, 0x73,
	0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x68, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa1, 0x03, 0x0a, 0x20, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f,
	0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x48, 0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x21, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x32, 0xcd, 0x03, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41,
	0x64, 0x68, 0x6f, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x54, 0x61, 0x73, 0x6b,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x73, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_syllabus_v1_task_assignment_service_proto_rawDescOnce sync.Once
	file_syllabus_v1_task_assignment_service_proto_rawDescData = file_syllabus_v1_task_assignment_service_proto_rawDesc
)

func file_syllabus_v1_task_assignment_service_proto_rawDescGZIP() []byte {
	file_syllabus_v1_task_assignment_service_proto_rawDescOnce.Do(func() {
		file_syllabus_v1_task_assignment_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_syllabus_v1_task_assignment_service_proto_rawDescData)
	})
	return file_syllabus_v1_task_assignment_service_proto_rawDescData
}

var file_syllabus_v1_task_assignment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_syllabus_v1_task_assignment_service_proto_goTypes = []interface{}{
	(*TaskAssignmentBase)(nil),                // 0: syllabus.v1.TaskAssignmentBase
	(*InsertTaskAssignmentRequest)(nil),       // 1: syllabus.v1.InsertTaskAssignmentRequest
	(*InsertTaskAssignmentResponse)(nil),      // 2: syllabus.v1.InsertTaskAssignmentResponse
	(*UpdateTaskAssignmentRequest)(nil),       // 3: syllabus.v1.UpdateTaskAssignmentRequest
	(*UpdateTaskAssignmentResponse)(nil),      // 4: syllabus.v1.UpdateTaskAssignmentResponse
	(*ListTaskAssignmentRequest)(nil),         // 5: syllabus.v1.ListTaskAssignmentRequest
	(*ListTaskAssignmentResponse)(nil),        // 6: syllabus.v1.ListTaskAssignmentResponse
	(*UpsertAdhocTaskAssignmentRequest)(nil),  // 7: syllabus.v1.UpsertAdhocTaskAssignmentRequest
	(*UpsertAdhocTaskAssignmentResponse)(nil), // 8: syllabus.v1.UpsertAdhocTaskAssignmentResponse
	(*LearningMaterialBase)(nil),              // 9: syllabus.v1.LearningMaterialBase
	(*timestamppb.Timestamp)(nil),             // 10: google.protobuf.Timestamp
}
var file_syllabus_v1_task_assignment_service_proto_depIdxs = []int32{
	9,  // 0: syllabus.v1.TaskAssignmentBase.base:type_name -> syllabus.v1.LearningMaterialBase
	0,  // 1: syllabus.v1.InsertTaskAssignmentRequest.task_assignment:type_name -> syllabus.v1.TaskAssignmentBase
	0,  // 2: syllabus.v1.UpdateTaskAssignmentRequest.task_assignment:type_name -> syllabus.v1.TaskAssignmentBase
	0,  // 3: syllabus.v1.ListTaskAssignmentResponse.task_assignments:type_name -> syllabus.v1.TaskAssignmentBase
	10, // 4: syllabus.v1.UpsertAdhocTaskAssignmentRequest.start_date:type_name -> google.protobuf.Timestamp
	10, // 5: syllabus.v1.UpsertAdhocTaskAssignmentRequest.end_date:type_name -> google.protobuf.Timestamp
	0,  // 6: syllabus.v1.UpsertAdhocTaskAssignmentRequest.task_assignment:type_name -> syllabus.v1.TaskAssignmentBase
	1,  // 7: syllabus.v1.TaskAssignment.InsertTaskAssignment:input_type -> syllabus.v1.InsertTaskAssignmentRequest
	3,  // 8: syllabus.v1.TaskAssignment.UpdateTaskAssignment:input_type -> syllabus.v1.UpdateTaskAssignmentRequest
	5,  // 9: syllabus.v1.TaskAssignment.ListTaskAssignment:input_type -> syllabus.v1.ListTaskAssignmentRequest
	7,  // 10: syllabus.v1.TaskAssignment.UpsertAdhocTaskAssignment:input_type -> syllabus.v1.UpsertAdhocTaskAssignmentRequest
	2,  // 11: syllabus.v1.TaskAssignment.InsertTaskAssignment:output_type -> syllabus.v1.InsertTaskAssignmentResponse
	4,  // 12: syllabus.v1.TaskAssignment.UpdateTaskAssignment:output_type -> syllabus.v1.UpdateTaskAssignmentResponse
	6,  // 13: syllabus.v1.TaskAssignment.ListTaskAssignment:output_type -> syllabus.v1.ListTaskAssignmentResponse
	8,  // 14: syllabus.v1.TaskAssignment.UpsertAdhocTaskAssignment:output_type -> syllabus.v1.UpsertAdhocTaskAssignmentResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_syllabus_v1_task_assignment_service_proto_init() }
func file_syllabus_v1_task_assignment_service_proto_init() {
	if File_syllabus_v1_task_assignment_service_proto != nil {
		return
	}
	file_syllabus_v1_learning_material_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_syllabus_v1_task_assignment_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskAssignmentBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_task_assignment_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertTaskAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_task_assignment_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertTaskAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_task_assignment_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_task_assignment_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_task_assignment_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_task_assignment_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_task_assignment_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAdhocTaskAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_task_assignment_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAdhocTaskAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_syllabus_v1_task_assignment_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_syllabus_v1_task_assignment_service_proto_goTypes,
		DependencyIndexes: file_syllabus_v1_task_assignment_service_proto_depIdxs,
		MessageInfos:      file_syllabus_v1_task_assignment_service_proto_msgTypes,
	}.Build()
	File_syllabus_v1_task_assignment_service_proto = out.File
	file_syllabus_v1_task_assignment_service_proto_rawDesc = nil
	file_syllabus_v1_task_assignment_service_proto_goTypes = nil
	file_syllabus_v1_task_assignment_service_proto_depIdxs = nil
}
