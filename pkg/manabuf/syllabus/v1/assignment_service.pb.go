// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: syllabus/v1/assignment_service.proto

package sspb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// AssignmentBase is assignment metadata
type AssignmentBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Learning Material metadata
	Base *LearningMaterialBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// list of attachments urls
	Attachments []string `protobuf:"bytes,2,rep,name=attachments,proto3" json:"attachments,omitempty"`
	// assignments status
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// instruction or descriptions
	Instruction string `protobuf:"bytes,4,opt,name=instruction,proto3" json:"instruction,omitempty"`
	// max grade number
	MaxGrade uint32 `protobuf:"varint,5,opt,name=max_grade,json=maxGrade,proto3" json:"max_grade,omitempty"`
	// require grade for submissions
	IsRequiredGrade bool `protobuf:"varint,6,opt,name=is_required_grade,json=isRequiredGrade,proto3" json:"is_required_grade,omitempty"`
	// allow student resubmission
	AllowResubmission bool `protobuf:"varint,7,opt,name=allow_resubmission,json=allowResubmission,proto3" json:"allow_resubmission,omitempty"`
	// require student send attachments
	RequireAttachment bool `protobuf:"varint,8,opt,name=require_attachment,json=requireAttachment,proto3" json:"require_attachment,omitempty"`
	// enable student send late submissions
	AllowLateSubmission bool `protobuf:"varint,9,opt,name=allow_late_submission,json=allowLateSubmission,proto3" json:"allow_late_submission,omitempty"`
	// require student send text notes
	RequireAssignmentNote bool `protobuf:"varint,10,opt,name=require_assignment_note,json=requireAssignmentNote,proto3" json:"require_assignment_note,omitempty"`
	// require student send video submissions
	RequireVideoSubmission bool `protobuf:"varint,11,opt,name=require_video_submission,json=requireVideoSubmission,proto3" json:"require_video_submission,omitempty"`
}

func (x *AssignmentBase) Reset() {
	*x = AssignmentBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentBase) ProtoMessage() {}

func (x *AssignmentBase) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentBase.ProtoReflect.Descriptor instead.
func (*AssignmentBase) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{0}
}

func (x *AssignmentBase) GetBase() *LearningMaterialBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *AssignmentBase) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *AssignmentBase) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AssignmentBase) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *AssignmentBase) GetMaxGrade() uint32 {
	if x != nil {
		return x.MaxGrade
	}
	return 0
}

func (x *AssignmentBase) GetIsRequiredGrade() bool {
	if x != nil {
		return x.IsRequiredGrade
	}
	return false
}

func (x *AssignmentBase) GetAllowResubmission() bool {
	if x != nil {
		return x.AllowResubmission
	}
	return false
}

func (x *AssignmentBase) GetRequireAttachment() bool {
	if x != nil {
		return x.RequireAttachment
	}
	return false
}

func (x *AssignmentBase) GetAllowLateSubmission() bool {
	if x != nil {
		return x.AllowLateSubmission
	}
	return false
}

func (x *AssignmentBase) GetRequireAssignmentNote() bool {
	if x != nil {
		return x.RequireAssignmentNote
	}
	return false
}

func (x *AssignmentBase) GetRequireVideoSubmission() bool {
	if x != nil {
		return x.RequireVideoSubmission
	}
	return false
}

type InsertAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// We only need send some fields bellow
	// 1. LearningMaterialBase
	// 1. No learning_material
	// 2. topic_id
	// 3. name
	// 4. No send type
	// 2. attachments
	// 3. No status
	// 4. instruction
	// 5. max_grade
	// 6. is_required_grade
	// 7. allow_resubmission
	// 8. require_attachment
	// 9. allow_late_submission
	// 10. require_assignment_note
	// 11. require_video_submission
	Assignment *AssignmentBase `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *InsertAssignmentRequest) Reset() {
	*x = InsertAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertAssignmentRequest) ProtoMessage() {}

func (x *InsertAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertAssignmentRequest.ProtoReflect.Descriptor instead.
func (*InsertAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{1}
}

func (x *InsertAssignmentRequest) GetAssignment() *AssignmentBase {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type InsertAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// return generated Learning Material ULID
	LearningMaterialId string `protobuf:"bytes,1,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
}

func (x *InsertAssignmentResponse) Reset() {
	*x = InsertAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertAssignmentResponse) ProtoMessage() {}

func (x *InsertAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertAssignmentResponse.ProtoReflect.Descriptor instead.
func (*InsertAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{2}
}

func (x *InsertAssignmentResponse) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

type UpdateAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// We only need send some fields bellow
	// 1. LearningMaterialBase
	// 1. No learning_material
	// 2. No topic_id
	// 3. name
	// 4. No type
	// 2. attachments
	// 3. status
	// 4. instruction
	// 5. max_grade
	// 6. is_required_grade
	// 7. allow_resubmission
	// 8. require_attachment
	// 9. allow_late_submission
	// 10. require_assignment_note
	// 11. require_video_submission
	Assignment *AssignmentBase `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *UpdateAssignmentRequest) Reset() {
	*x = UpdateAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssignmentRequest) ProtoMessage() {}

func (x *UpdateAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssignmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAssignmentRequest) GetAssignment() *AssignmentBase {
	if x != nil {
		return x.Assignment
	}
	return nil
}

// UpdateAssignmentResponse is empty message
type UpdateAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAssignmentResponse) Reset() {
	*x = UpdateAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssignmentResponse) ProtoMessage() {}

func (x *UpdateAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssignmentResponse.ProtoReflect.Descriptor instead.
func (*UpdateAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{4}
}

type InsertAdhocAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId     string                 `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId      string                 `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ChapterName   string                 `protobuf:"bytes,3,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"` // TODO: if default seem we should add this field
	TopicName     string                 `protobuf:"bytes,4,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`       // TODO: if default seem we should add this field
	BookName      string                 `protobuf:"bytes,5,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`          // TODO:  if default seem we should add this field
	StudyPlanName string                 `protobuf:"bytes,6,opt,name=study_plan_name,json=studyPlanName,proto3" json:"study_plan_name,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Assignment    *AssignmentBase        `protobuf:"bytes,9,opt,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *InsertAdhocAssignmentRequest) Reset() {
	*x = InsertAdhocAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertAdhocAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertAdhocAssignmentRequest) ProtoMessage() {}

func (x *InsertAdhocAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertAdhocAssignmentRequest.ProtoReflect.Descriptor instead.
func (*InsertAdhocAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{5}
}

func (x *InsertAdhocAssignmentRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *InsertAdhocAssignmentRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *InsertAdhocAssignmentRequest) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *InsertAdhocAssignmentRequest) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *InsertAdhocAssignmentRequest) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *InsertAdhocAssignmentRequest) GetStudyPlanName() string {
	if x != nil {
		return x.StudyPlanName
	}
	return ""
}

func (x *InsertAdhocAssignmentRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *InsertAdhocAssignmentRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *InsertAdhocAssignmentRequest) GetAssignment() *AssignmentBase {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type InsertAdhocAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningMaterialId string `protobuf:"bytes,1,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
}

func (x *InsertAdhocAssignmentResponse) Reset() {
	*x = InsertAdhocAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertAdhocAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertAdhocAssignmentResponse) ProtoMessage() {}

func (x *InsertAdhocAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertAdhocAssignmentResponse.ProtoReflect.Descriptor instead.
func (*InsertAdhocAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{6}
}

func (x *InsertAdhocAssignmentResponse) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

type UpdateAdhocAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId     string                 `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId      string                 `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ChapterName   string                 `protobuf:"bytes,3,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"` // TODO: if default seem we should add this field
	TopicName     string                 `protobuf:"bytes,4,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`       // TODO: if default seem we should add this field
	BookName      string                 `protobuf:"bytes,5,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`          // TODO:  if default seem we should add this field
	StudyPlanName string                 `protobuf:"bytes,6,opt,name=study_plan_name,json=studyPlanName,proto3" json:"study_plan_name,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Assignment    *AssignmentBase        `protobuf:"bytes,9,opt,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *UpdateAdhocAssignmentRequest) Reset() {
	*x = UpdateAdhocAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdhocAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdhocAssignmentRequest) ProtoMessage() {}

func (x *UpdateAdhocAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdhocAssignmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateAdhocAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAdhocAssignmentRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpdateAdhocAssignmentRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpdateAdhocAssignmentRequest) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *UpdateAdhocAssignmentRequest) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *UpdateAdhocAssignmentRequest) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *UpdateAdhocAssignmentRequest) GetStudyPlanName() string {
	if x != nil {
		return x.StudyPlanName
	}
	return ""
}

func (x *UpdateAdhocAssignmentRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateAdhocAssignmentRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *UpdateAdhocAssignmentRequest) GetAssignment() *AssignmentBase {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type UpdateAdhocAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAdhocAssignmentResponse) Reset() {
	*x = UpdateAdhocAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdhocAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdhocAssignmentResponse) ProtoMessage() {}

func (x *UpdateAdhocAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdhocAssignmentResponse.ProtoReflect.Descriptor instead.
func (*UpdateAdhocAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{8}
}

type ListAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningMaterialIds []string `protobuf:"bytes,1,rep,name=learning_material_ids,json=learningMaterialIds,proto3" json:"learning_material_ids,omitempty"`
}

func (x *ListAssignmentRequest) Reset() {
	*x = ListAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssignmentRequest) ProtoMessage() {}

func (x *ListAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssignmentRequest.ProtoReflect.Descriptor instead.
func (*ListAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListAssignmentRequest) GetLearningMaterialIds() []string {
	if x != nil {
		return x.LearningMaterialIds
	}
	return nil
}

type ListAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignments []*AssignmentBase `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
}

func (x *ListAssignmentResponse) Reset() {
	*x = ListAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssignmentResponse) ProtoMessage() {}

func (x *ListAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssignmentResponse.ProtoReflect.Descriptor instead.
func (*ListAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListAssignmentResponse) GetAssignments() []*AssignmentBase {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type SubmitAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submission *StudentSubmission `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
}

func (x *SubmitAssignmentRequest) Reset() {
	*x = SubmitAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAssignmentRequest) ProtoMessage() {}

func (x *SubmitAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAssignmentRequest.ProtoReflect.Descriptor instead.
func (*SubmitAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{11}
}

func (x *SubmitAssignmentRequest) GetSubmission() *StudentSubmission {
	if x != nil {
		return x.Submission
	}
	return nil
}

type SubmitAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId string `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
}

func (x *SubmitAssignmentResponse) Reset() {
	*x = SubmitAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_assignment_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAssignmentResponse) ProtoMessage() {}

func (x *SubmitAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_assignment_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAssignmentResponse.ProtoReflect.Descriptor instead.
func (*SubmitAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_assignment_service_proto_rawDescGZIP(), []int{12}
}

func (x *SubmitAssignmentResponse) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

var File_syllabus_v1_assignment_service_proto protoreflect.FileDescriptor

var file_syllabus_v1_assignment_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x18, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x03, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78,
	0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x32, 0x0a, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x18,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4c,
	0x0a, 0x18, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x90, 0x03, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x68, 0x6f, 0x63,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x1d, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x68,
	0x6f, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x90, 0x03, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0a,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0a, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x13, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x57, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x59, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x18, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0xea, 0x04, 0x0a,
	0x0a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x10, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a,
	0x15, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x68, 0x6f, 0x63,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x68, 0x6f, 0x63,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x68, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x73, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_syllabus_v1_assignment_service_proto_rawDescOnce sync.Once
	file_syllabus_v1_assignment_service_proto_rawDescData = file_syllabus_v1_assignment_service_proto_rawDesc
)

func file_syllabus_v1_assignment_service_proto_rawDescGZIP() []byte {
	file_syllabus_v1_assignment_service_proto_rawDescOnce.Do(func() {
		file_syllabus_v1_assignment_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_syllabus_v1_assignment_service_proto_rawDescData)
	})
	return file_syllabus_v1_assignment_service_proto_rawDescData
}

var file_syllabus_v1_assignment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_syllabus_v1_assignment_service_proto_goTypes = []interface{}{
	(*AssignmentBase)(nil),                // 0: syllabus.v1.AssignmentBase
	(*InsertAssignmentRequest)(nil),       // 1: syllabus.v1.InsertAssignmentRequest
	(*InsertAssignmentResponse)(nil),      // 2: syllabus.v1.InsertAssignmentResponse
	(*UpdateAssignmentRequest)(nil),       // 3: syllabus.v1.UpdateAssignmentRequest
	(*UpdateAssignmentResponse)(nil),      // 4: syllabus.v1.UpdateAssignmentResponse
	(*InsertAdhocAssignmentRequest)(nil),  // 5: syllabus.v1.InsertAdhocAssignmentRequest
	(*InsertAdhocAssignmentResponse)(nil), // 6: syllabus.v1.InsertAdhocAssignmentResponse
	(*UpdateAdhocAssignmentRequest)(nil),  // 7: syllabus.v1.UpdateAdhocAssignmentRequest
	(*UpdateAdhocAssignmentResponse)(nil), // 8: syllabus.v1.UpdateAdhocAssignmentResponse
	(*ListAssignmentRequest)(nil),         // 9: syllabus.v1.ListAssignmentRequest
	(*ListAssignmentResponse)(nil),        // 10: syllabus.v1.ListAssignmentResponse
	(*SubmitAssignmentRequest)(nil),       // 11: syllabus.v1.SubmitAssignmentRequest
	(*SubmitAssignmentResponse)(nil),      // 12: syllabus.v1.SubmitAssignmentResponse
	(*LearningMaterialBase)(nil),          // 13: syllabus.v1.LearningMaterialBase
	(*timestamppb.Timestamp)(nil),         // 14: google.protobuf.Timestamp
	(*StudentSubmission)(nil),             // 15: syllabus.v1.StudentSubmission
}
var file_syllabus_v1_assignment_service_proto_depIdxs = []int32{
	13, // 0: syllabus.v1.AssignmentBase.base:type_name -> syllabus.v1.LearningMaterialBase
	0,  // 1: syllabus.v1.InsertAssignmentRequest.assignment:type_name -> syllabus.v1.AssignmentBase
	0,  // 2: syllabus.v1.UpdateAssignmentRequest.assignment:type_name -> syllabus.v1.AssignmentBase
	14, // 3: syllabus.v1.InsertAdhocAssignmentRequest.start_date:type_name -> google.protobuf.Timestamp
	14, // 4: syllabus.v1.InsertAdhocAssignmentRequest.end_date:type_name -> google.protobuf.Timestamp
	0,  // 5: syllabus.v1.InsertAdhocAssignmentRequest.assignment:type_name -> syllabus.v1.AssignmentBase
	14, // 6: syllabus.v1.UpdateAdhocAssignmentRequest.start_date:type_name -> google.protobuf.Timestamp
	14, // 7: syllabus.v1.UpdateAdhocAssignmentRequest.end_date:type_name -> google.protobuf.Timestamp
	0,  // 8: syllabus.v1.UpdateAdhocAssignmentRequest.assignment:type_name -> syllabus.v1.AssignmentBase
	0,  // 9: syllabus.v1.ListAssignmentResponse.assignments:type_name -> syllabus.v1.AssignmentBase
	15, // 10: syllabus.v1.SubmitAssignmentRequest.submission:type_name -> syllabus.v1.StudentSubmission
	1,  // 11: syllabus.v1.Assignment.InsertAssignment:input_type -> syllabus.v1.InsertAssignmentRequest
	3,  // 12: syllabus.v1.Assignment.UpdateAssignment:input_type -> syllabus.v1.UpdateAssignmentRequest
	5,  // 13: syllabus.v1.Assignment.InsertAdhocAssignment:input_type -> syllabus.v1.InsertAdhocAssignmentRequest
	7,  // 14: syllabus.v1.Assignment.UpdateAdhocAssignment:input_type -> syllabus.v1.UpdateAdhocAssignmentRequest
	9,  // 15: syllabus.v1.Assignment.ListAssignment:input_type -> syllabus.v1.ListAssignmentRequest
	11, // 16: syllabus.v1.Assignment.SubmitAssignment:input_type -> syllabus.v1.SubmitAssignmentRequest
	2,  // 17: syllabus.v1.Assignment.InsertAssignment:output_type -> syllabus.v1.InsertAssignmentResponse
	4,  // 18: syllabus.v1.Assignment.UpdateAssignment:output_type -> syllabus.v1.UpdateAssignmentResponse
	6,  // 19: syllabus.v1.Assignment.InsertAdhocAssignment:output_type -> syllabus.v1.InsertAdhocAssignmentResponse
	8,  // 20: syllabus.v1.Assignment.UpdateAdhocAssignment:output_type -> syllabus.v1.UpdateAdhocAssignmentResponse
	10, // 21: syllabus.v1.Assignment.ListAssignment:output_type -> syllabus.v1.ListAssignmentResponse
	12, // 22: syllabus.v1.Assignment.SubmitAssignment:output_type -> syllabus.v1.SubmitAssignmentResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_syllabus_v1_assignment_service_proto_init() }
func file_syllabus_v1_assignment_service_proto_init() {
	if File_syllabus_v1_assignment_service_proto != nil {
		return
	}
	file_syllabus_v1_common_proto_init()
	file_syllabus_v1_learning_material_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_syllabus_v1_assignment_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertAdhocAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertAdhocAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdhocAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdhocAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_assignment_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_syllabus_v1_assignment_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_syllabus_v1_assignment_service_proto_goTypes,
		DependencyIndexes: file_syllabus_v1_assignment_service_proto_depIdxs,
		MessageInfos:      file_syllabus_v1_assignment_service_proto_msgTypes,
	}.Build()
	File_syllabus_v1_assignment_service_proto = out.File
	file_syllabus_v1_assignment_service_proto_rawDesc = nil
	file_syllabus_v1_assignment_service_proto_goTypes = nil
	file_syllabus_v1_assignment_service_proto_depIdxs = nil
}
