/*
  ____            _   _           _
 / ___|   _   _  | | | |   __ _  | |__    _   _   ___
 \___ \  | | | | | | | |  / _` | | '_ \  | | | | / __|
  ___) | | |_| | | | | | | (_| | | |_) | | |_| | \__ \
 |____/   \__, | |_| |_|  \__,_| |_.__/   \__,_| |___/
          |___/

*/
// * Code generated by protoc-gen-syllabus. DO NOT EDIT.
// * versions:
// * - protoc-gen-syllabus (devel)
// * - protoc                   v3.14.0
// * source: v1

package sspb

func (x LearningMaterialType) FromString(str string) LearningMaterialType {
	switch str {
	case LearningMaterialType_LEARNING_MATERIAL_LEARNING_OBJECTIVE.String():
		return LearningMaterialType_LEARNING_MATERIAL_LEARNING_OBJECTIVE
	case LearningMaterialType_LEARNING_MATERIAL_EXAM_LO.String():
		return LearningMaterialType_LEARNING_MATERIAL_EXAM_LO
	case LearningMaterialType_LEARNING_MATERIAL_FLASH_CARD.String():
		return LearningMaterialType_LEARNING_MATERIAL_FLASH_CARD
	case LearningMaterialType_LEARNING_MATERIAL_GENERAL_ASSIGNMENT.String():
		return LearningMaterialType_LEARNING_MATERIAL_GENERAL_ASSIGNMENT
	case LearningMaterialType_LEARNING_MATERIAL_TASK_ASSIGNMENT.String():
		return LearningMaterialType_LEARNING_MATERIAL_TASK_ASSIGNMENT
	}
	return LearningMaterialType(0)
}

func (x AchievementCrown) FromString(str string) AchievementCrown {
	switch str {
	case AchievementCrown_ACHIEVEMENT_CROWN_NONE.String():
		return AchievementCrown_ACHIEVEMENT_CROWN_NONE
	case AchievementCrown_ACHIEVEMENT_CROWN_BRONZE.String():
		return AchievementCrown_ACHIEVEMENT_CROWN_BRONZE
	case AchievementCrown_ACHIEVEMENT_CROWN_SILVER.String():
		return AchievementCrown_ACHIEVEMENT_CROWN_SILVER
	case AchievementCrown_ACHIEVEMENT_CROWN_GOLD.String():
		return AchievementCrown_ACHIEVEMENT_CROWN_GOLD
	}
	return AchievementCrown(0)
}

func (x SubmissionStatus) FromString(str string) SubmissionStatus {
	switch str {
	case SubmissionStatus_SUBMISSION_STATUS_NONE.String():
		return SubmissionStatus_SUBMISSION_STATUS_NONE
	case SubmissionStatus_SUBMISSION_STATUS_NOT_MARKED.String():
		return SubmissionStatus_SUBMISSION_STATUS_NOT_MARKED
	case SubmissionStatus_SUBMISSION_STATUS_IN_PROGRESS.String():
		return SubmissionStatus_SUBMISSION_STATUS_IN_PROGRESS
	case SubmissionStatus_SUBMISSION_STATUS_MARKED.String():
		return SubmissionStatus_SUBMISSION_STATUS_MARKED
	case SubmissionStatus_SUBMISSION_STATUS_RETURNED.String():
		return SubmissionStatus_SUBMISSION_STATUS_RETURNED
	case SubmissionStatus_SUBMISSION_STATUS_PENDING_RETURN.String():
		return SubmissionStatus_SUBMISSION_STATUS_PENDING_RETURN
	case SubmissionStatus_SUBMISSION_STATUS_REJECTED.String():
		return SubmissionStatus_SUBMISSION_STATUS_REJECTED
	}
	return SubmissionStatus(0)
}

func (x SubmissionUnderstandingLevel) FromString(str string) SubmissionUnderstandingLevel {
	switch str {
	case SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_NONE.String():
		return SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_NONE
	case SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_SAD.String():
		return SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_SAD
	case SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_NEUTRAL.String():
		return SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_NEUTRAL
	case SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_HAPPY.String():
		return SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_HAPPY
	}
	return SubmissionUnderstandingLevel(0)
}

func (x StudyPlanStatus) FromString(str string) StudyPlanStatus {
	switch str {
	case StudyPlanStatus_STUDY_PLAN_STATUS_NONE.String():
		return StudyPlanStatus_STUDY_PLAN_STATUS_NONE
	case StudyPlanStatus_STUDY_PLAN_STATUS_ACTIVE.String():
		return StudyPlanStatus_STUDY_PLAN_STATUS_ACTIVE
	case StudyPlanStatus_STUDY_PLAN_STATUS_ARCHIVED.String():
		return StudyPlanStatus_STUDY_PLAN_STATUS_ARCHIVED
	}
	return StudyPlanStatus(0)
}

func (x StudyPlanItemToDoStatus) FromString(str string) StudyPlanItemToDoStatus {
	switch str {
	case StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_NONE.String():
		return StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_NONE
	case StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_ACTIVE.String():
		return StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_ACTIVE
	case StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_OVERDUE.String():
		return StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_OVERDUE
	case StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_COMPLETED.String():
		return StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_COMPLETED
	case StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_UPCOMING.String():
		return StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_UPCOMING
	}
	return StudyPlanItemToDoStatus(0)
}

func (x StudyPlanItemStatus) FromString(str string) StudyPlanItemStatus {
	switch str {
	case StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_NONE.String():
		return StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_NONE
	case StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_ACTIVE.String():
		return StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_ACTIVE
	case StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_ARCHIVED.String():
		return StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_ARCHIVED
	}
	return StudyPlanItemStatus(0)
}

func (x ExamLOSubmissionResult) FromString(str string) ExamLOSubmissionResult {
	switch str {
	case ExamLOSubmissionResult_EXAM_LO_SUBMISSION_WAITING_FOR_GRADE.String():
		return ExamLOSubmissionResult_EXAM_LO_SUBMISSION_WAITING_FOR_GRADE
	case ExamLOSubmissionResult_EXAM_LO_SUBMISSION_PASSED.String():
		return ExamLOSubmissionResult_EXAM_LO_SUBMISSION_PASSED
	case ExamLOSubmissionResult_EXAM_LO_SUBMISSION_FAILED.String():
		return ExamLOSubmissionResult_EXAM_LO_SUBMISSION_FAILED
	case ExamLOSubmissionResult_EXAM_LO_SUBMISSION_COMPLETED.String():
		return ExamLOSubmissionResult_EXAM_LO_SUBMISSION_COMPLETED
	}
	return ExamLOSubmissionResult(0)
}

func (x ApproveGradingAction) FromString(str string) ApproveGradingAction {
	switch str {
	case ApproveGradingAction_APPROVE_ACTION_NONE.String():
		return ApproveGradingAction_APPROVE_ACTION_NONE
	case ApproveGradingAction_APPROVE_ACTION_APPROVED.String():
		return ApproveGradingAction_APPROVE_ACTION_APPROVED
	case ApproveGradingAction_APPROVE_ACTION_REJECTED.String():
		return ApproveGradingAction_APPROVE_ACTION_REJECTED
	}
	return ApproveGradingAction(0)
}

func (x SearchType) FromString(str string) SearchType {
	switch str {
	case SearchType_SEARCH_TYPE_NONE.String():
		return SearchType_SEARCH_TYPE_NONE
	case SearchType_SEARCH_TYPE_ASSIGNMENT_NAME.String():
		return SearchType_SEARCH_TYPE_ASSIGNMENT_NAME
	case SearchType_SEARCH_TYPE_STUDENT_NAME.String():
		return SearchType_SEARCH_TYPE_STUDENT_NAME
	}
	return SearchType(0)
}

func (x FlashcardQuizStudyStatus) FromString(str string) FlashcardQuizStudyStatus {
	switch str {
	case FlashcardQuizStudyStatus_FLASHCARD_QUIZ_STUDY_STATUS_NONE.String():
		return FlashcardQuizStudyStatus_FLASHCARD_QUIZ_STUDY_STATUS_NONE
	case FlashcardQuizStudyStatus_FLASHCARD_QUIZ_STUDY_STATUS_SKIPPED.String():
		return FlashcardQuizStudyStatus_FLASHCARD_QUIZ_STUDY_STATUS_SKIPPED
	case FlashcardQuizStudyStatus_FLASHCARD_QUIZ_STUDY_STATUS_REMEMBERED.String():
		return FlashcardQuizStudyStatus_FLASHCARD_QUIZ_STUDY_STATUS_REMEMBERED
	}
	return FlashcardQuizStudyStatus(0)
}

func (x ExamLOReviewOption) FromString(str string) ExamLOReviewOption {
	switch str {
	case ExamLOReviewOption_EXAM_LO_REVIEW_OPTION_IMMEDIATELY.String():
		return ExamLOReviewOption_EXAM_LO_REVIEW_OPTION_IMMEDIATELY
	case ExamLOReviewOption_EXAM_LO_REVIEW_OPTION_AFTER_DUE_DATE.String():
		return ExamLOReviewOption_EXAM_LO_REVIEW_OPTION_AFTER_DUE_DATE
	}
	return ExamLOReviewOption(0)
}

func (x LearningMaterialVendorType) FromString(str string) LearningMaterialVendorType {
	switch str {
	case LearningMaterialVendorType_LM_VENDOR_TYPE_MANABIE.String():
		return LearningMaterialVendorType_LM_VENDOR_TYPE_MANABIE
	case LearningMaterialVendorType_LM_VENDOR_TYPE_LEARNOSITY.String():
		return LearningMaterialVendorType_LM_VENDOR_TYPE_LEARNOSITY
	}
	return LearningMaterialVendorType(0)
}

func (x AssessmentSessionStatus) FromString(str string) AssessmentSessionStatus {
	switch str {
	case AssessmentSessionStatus_ASSESSMENT_SESSION_STATUS_NONE.String():
		return AssessmentSessionStatus_ASSESSMENT_SESSION_STATUS_NONE
	case AssessmentSessionStatus_ASSESSMENT_SESSION_STATUS_INCOMPLETE.String():
		return AssessmentSessionStatus_ASSESSMENT_SESSION_STATUS_INCOMPLETE
	case AssessmentSessionStatus_ASSESSMENT_SESSION_STATUS_COMPLETED.String():
		return AssessmentSessionStatus_ASSESSMENT_SESSION_STATUS_COMPLETED
	}
	return AssessmentSessionStatus(0)
}

func (x ItemsBankErrorCode) FromString(str string) ItemsBankErrorCode {
	switch str {
	case ItemsBankErrorCode_ERR_UNKNOWN.String():
		return ItemsBankErrorCode_ERR_UNKNOWN
	case ItemsBankErrorCode_ERR_CORRECT_OPTION_MISSING.String():
		return ItemsBankErrorCode_ERR_CORRECT_OPTION_MISSING
	case ItemsBankErrorCode_ERR_ITEM_DESCRIPTION_INVALID.String():
		return ItemsBankErrorCode_ERR_ITEM_DESCRIPTION_INVALID
	case ItemsBankErrorCode_ERR_QUESTION_LIMIT_EXCEEDED.String():
		return ItemsBankErrorCode_ERR_QUESTION_LIMIT_EXCEEDED
	case ItemsBankErrorCode_ERR_DATA_TYPE_INVALID.String():
		return ItemsBankErrorCode_ERR_DATA_TYPE_INVALID
	case ItemsBankErrorCode_ERR_REQUIRED_VALUE_MISSING.String():
		return ItemsBankErrorCode_ERR_REQUIRED_VALUE_MISSING
	case ItemsBankErrorCode_ERR_LO_ID_INVALID.String():
		return ItemsBankErrorCode_ERR_LO_ID_INVALID
	case ItemsBankErrorCode_ERR_QUESTION_TYPE_INVALID.String():
		return ItemsBankErrorCode_ERR_QUESTION_TYPE_INVALID
	case ItemsBankErrorCode_ERR_OPTIONS_MISSING.String():
		return ItemsBankErrorCode_ERR_OPTIONS_MISSING
	case ItemsBankErrorCode_ERR_NO_OPTION_SELECTED.String():
		return ItemsBankErrorCode_ERR_NO_OPTION_SELECTED
	case ItemsBankErrorCode_ERR_FIB_OPTIONS_INVALID.String():
		return ItemsBankErrorCode_ERR_FIB_OPTIONS_INVALID
	case ItemsBankErrorCode_ERR_VALUE_OUT_OF_RANGE.String():
		return ItemsBankErrorCode_ERR_VALUE_OUT_OF_RANGE
	case ItemsBankErrorCode_ERR_ITEM_ID_ALREADY_EXISTS.String():
		return ItemsBankErrorCode_ERR_ITEM_ID_ALREADY_EXISTS
	case ItemsBankErrorCode_ERR_MCQ_CORRECT_OPTIONS_INVALID.String():
		return ItemsBankErrorCode_ERR_MCQ_CORRECT_OPTIONS_INVALID
	case ItemsBankErrorCode_ERR_IMAGE_INVALID.String():
		return ItemsBankErrorCode_ERR_IMAGE_INVALID
	case ItemsBankErrorCode_ERR_MIQ_EXPLANATION_MISSING.String():
		return ItemsBankErrorCode_ERR_MIQ_EXPLANATION_MISSING
	case ItemsBankErrorCode_ERR_ITEM_ID_INVALID.String():
		return ItemsBankErrorCode_ERR_ITEM_ID_INVALID
	}
	return ItemsBankErrorCode(0)
}

func (x MediaType) FromString(str string) MediaType {
	switch str {
	case MediaType_MEDIA_TYPE_NONE.String():
		return MediaType_MEDIA_TYPE_NONE
	case MediaType_MEDIA_TYPE_IMAGE.String():
		return MediaType_MEDIA_TYPE_IMAGE
	}
	return MediaType(0)
}
