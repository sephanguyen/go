// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: syllabus/v1/flashcard_service.proto

package sspb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// FlashcardBase is flash card learning type metadata
type FlashcardBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Learning Material metadata
	Base *LearningMaterialBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// total_question is total learning material question
	TotalQuestion int32 `protobuf:"varint,2,opt,name=total_question,json=totalQuestion,proto3" json:"total_question,omitempty"`
}

func (x *FlashcardBase) Reset() {
	*x = FlashcardBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashcardBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashcardBase) ProtoMessage() {}

func (x *FlashcardBase) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashcardBase.ProtoReflect.Descriptor instead.
func (*FlashcardBase) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{0}
}

func (x *FlashcardBase) GetBase() *LearningMaterialBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FlashcardBase) GetTotalQuestion() int32 {
	if x != nil {
		return x.TotalQuestion
	}
	return 0
}

type InsertFlashcardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// We only need send some fields bellow
	// 1. LearningMaterialBase
	// 1. No learning_material
	// 2. topic_id
	// 3. name
	// 4. No send type
	Flashcard *FlashcardBase `protobuf:"bytes,1,opt,name=flashcard,proto3" json:"flashcard,omitempty"`
}

func (x *InsertFlashcardRequest) Reset() {
	*x = InsertFlashcardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertFlashcardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertFlashcardRequest) ProtoMessage() {}

func (x *InsertFlashcardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertFlashcardRequest.ProtoReflect.Descriptor instead.
func (*InsertFlashcardRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{1}
}

func (x *InsertFlashcardRequest) GetFlashcard() *FlashcardBase {
	if x != nil {
		return x.Flashcard
	}
	return nil
}

type InsertFlashcardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// return generated Learning Material ULID
	LearningMaterialId string `protobuf:"bytes,1,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
}

func (x *InsertFlashcardResponse) Reset() {
	*x = InsertFlashcardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertFlashcardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertFlashcardResponse) ProtoMessage() {}

func (x *InsertFlashcardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertFlashcardResponse.ProtoReflect.Descriptor instead.
func (*InsertFlashcardResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{2}
}

func (x *InsertFlashcardResponse) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

type UpdateFlashcardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// We only need send some fields bellow
	// 1. LearningMaterialBase
	// 1. No learning_material
	// 2. No topic_id
	// 3. name
	// 4. No type
	Flashcard *FlashcardBase `protobuf:"bytes,1,opt,name=flashcard,proto3" json:"flashcard,omitempty"`
}

func (x *UpdateFlashcardRequest) Reset() {
	*x = UpdateFlashcardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashcardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashcardRequest) ProtoMessage() {}

func (x *UpdateFlashcardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashcardRequest.ProtoReflect.Descriptor instead.
func (*UpdateFlashcardRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateFlashcardRequest) GetFlashcard() *FlashcardBase {
	if x != nil {
		return x.Flashcard
	}
	return nil
}

// UpdateFlashcardResponse is empty message
type UpdateFlashcardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFlashcardResponse) Reset() {
	*x = UpdateFlashcardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlashcardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlashcardResponse) ProtoMessage() {}

func (x *UpdateFlashcardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlashcardResponse.ProtoReflect.Descriptor instead.
func (*UpdateFlashcardResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{4}
}

type ListFlashcardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningMaterialIds []string `protobuf:"bytes,1,rep,name=learning_material_ids,json=learningMaterialIds,proto3" json:"learning_material_ids,omitempty"`
}

func (x *ListFlashcardRequest) Reset() {
	*x = ListFlashcardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFlashcardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlashcardRequest) ProtoMessage() {}

func (x *ListFlashcardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlashcardRequest.ProtoReflect.Descriptor instead.
func (*ListFlashcardRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListFlashcardRequest) GetLearningMaterialIds() []string {
	if x != nil {
		return x.LearningMaterialIds
	}
	return nil
}

type ListFlashcardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flashcards []*FlashcardBase `protobuf:"bytes,1,rep,name=flashcards,proto3" json:"flashcards,omitempty"`
}

func (x *ListFlashcardResponse) Reset() {
	*x = ListFlashcardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFlashcardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlashcardResponse) ProtoMessage() {}

func (x *ListFlashcardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlashcardResponse.ProtoReflect.Descriptor instead.
func (*ListFlashcardResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListFlashcardResponse) GetFlashcards() []*FlashcardBase {
	if x != nil {
		return x.Flashcards
	}
	return nil
}

type GetLastestProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,1,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
	// return the last study set id with completed_at or not, default is false
	IsCompleted bool `protobuf:"varint,2,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
}

func (x *GetLastestProgressRequest) Reset() {
	*x = GetLastestProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastestProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastestProgressRequest) ProtoMessage() {}

func (x *GetLastestProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastestProgressRequest.ProtoReflect.Descriptor instead.
func (*GetLastestProgressRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetLastestProgressRequest) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

func (x *GetLastestProgressRequest) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

type GetLastestProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// return null if no records
	StudySetId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=study_set_id,json=studySetId,proto3" json:"study_set_id,omitempty"`
}

func (x *GetLastestProgressResponse) Reset() {
	*x = GetLastestProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastestProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastestProgressResponse) ProtoMessage() {}

func (x *GetLastestProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastestProgressResponse.ProtoReflect.Descriptor instead.
func (*GetLastestProgressResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetLastestProgressResponse) GetStudySetId() *wrapperspb.StringValue {
	if x != nil {
		return x.StudySetId
	}
	return nil
}

type FlashcardQuizzes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item   *v1.Quiz                 `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Status FlashcardQuizStudyStatus `protobuf:"varint,2,opt,name=status,proto3,enum=syllabus.v1.FlashcardQuizStudyStatus" json:"status,omitempty"`
}

func (x *FlashcardQuizzes) Reset() {
	*x = FlashcardQuizzes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashcardQuizzes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashcardQuizzes) ProtoMessage() {}

func (x *FlashcardQuizzes) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashcardQuizzes.ProtoReflect.Descriptor instead.
func (*FlashcardQuizzes) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{9}
}

func (x *FlashcardQuizzes) GetItem() *v1.Quiz {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *FlashcardQuizzes) GetStatus() FlashcardQuizStudyStatus {
	if x != nil {
		return x.Status
	}
	return FlashcardQuizStudyStatus_FLASHCARD_QUIZ_STUDY_STATUS_NONE
}

type CreateFlashCardStudyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId string     `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	LmId        string     `protobuf:"bytes,2,opt,name=lm_id,json=lmId,proto3" json:"lm_id,omitempty"`
	StudentId   string     `protobuf:"bytes,3,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudySetId  string     `protobuf:"bytes,4,opt,name=study_set_id,json=studySetId,proto3" json:"study_set_id,omitempty"`
	Paging      *v1.Paging `protobuf:"bytes,5,opt,name=paging,proto3" json:"paging,omitempty"`
	KeepOrder   bool       `protobuf:"varint,6,opt,name=keep_order,json=keepOrder,proto3" json:"keep_order,omitempty"`
}

func (x *CreateFlashCardStudyRequest) Reset() {
	*x = CreateFlashCardStudyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlashCardStudyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlashCardStudyRequest) ProtoMessage() {}

func (x *CreateFlashCardStudyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlashCardStudyRequest.ProtoReflect.Descriptor instead.
func (*CreateFlashCardStudyRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateFlashCardStudyRequest) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *CreateFlashCardStudyRequest) GetLmId() string {
	if x != nil {
		return x.LmId
	}
	return ""
}

func (x *CreateFlashCardStudyRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *CreateFlashCardStudyRequest) GetStudySetId() string {
	if x != nil {
		return x.StudySetId
	}
	return ""
}

func (x *CreateFlashCardStudyRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *CreateFlashCardStudyRequest) GetKeepOrder() bool {
	if x != nil {
		return x.KeepOrder
	}
	return false
}

type CreateFlashCardStudyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage      *v1.Paging          `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	StudySetId    string              `protobuf:"bytes,2,opt,name=study_set_id,json=studySetId,proto3" json:"study_set_id,omitempty"`
	Items         []*FlashcardQuizzes `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	StudyingIndex int32               `protobuf:"varint,4,opt,name=studying_index,json=studyingIndex,proto3" json:"studying_index,omitempty"`
}

func (x *CreateFlashCardStudyResponse) Reset() {
	*x = CreateFlashCardStudyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlashCardStudyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlashCardStudyResponse) ProtoMessage() {}

func (x *CreateFlashCardStudyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlashCardStudyResponse.ProtoReflect.Descriptor instead.
func (*CreateFlashCardStudyResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{11}
}

func (x *CreateFlashCardStudyResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *CreateFlashCardStudyResponse) GetStudySetId() string {
	if x != nil {
		return x.StudySetId
	}
	return ""
}

func (x *CreateFlashCardStudyResponse) GetItems() []*FlashcardQuizzes {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CreateFlashCardStudyResponse) GetStudyingIndex() int32 {
	if x != nil {
		return x.StudyingIndex
	}
	return 0
}

type FinishFlashCardStudyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,1,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
	StudySetId            string                 `protobuf:"bytes,2,opt,name=study_set_id,json=studySetId,proto3" json:"study_set_id,omitempty"`
	IsRestart             bool                   `protobuf:"varint,3,opt,name=is_restart,json=isRestart,proto3" json:"is_restart,omitempty"`
}

func (x *FinishFlashCardStudyRequest) Reset() {
	*x = FinishFlashCardStudyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishFlashCardStudyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishFlashCardStudyRequest) ProtoMessage() {}

func (x *FinishFlashCardStudyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishFlashCardStudyRequest.ProtoReflect.Descriptor instead.
func (*FinishFlashCardStudyRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{12}
}

func (x *FinishFlashCardStudyRequest) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

func (x *FinishFlashCardStudyRequest) GetStudySetId() string {
	if x != nil {
		return x.StudySetId
	}
	return ""
}

func (x *FinishFlashCardStudyRequest) GetIsRestart() bool {
	if x != nil {
		return x.IsRestart
	}
	return false
}

type FinishFlashCardStudyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinishFlashCardStudyResponse) Reset() {
	*x = FinishFlashCardStudyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishFlashCardStudyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishFlashCardStudyResponse) ProtoMessage() {}

func (x *FinishFlashCardStudyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_flashcard_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishFlashCardStudyResponse.ProtoReflect.Descriptor instead.
func (*FinishFlashCardStudyResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_flashcard_service_proto_rawDescGZIP(), []int{13}
}

var File_syllabus_v1_flashcard_service_proto protoreflect.FileDescriptor

var file_syllabus_v1_flashcard_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x0d, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x42,
	0x61, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x52, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x66,
	0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x09, 0x66, 0x6c, 0x61, 0x73,
	0x68, 0x63, 0x61, 0x72, 0x64, 0x22, 0x4b, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x09, 0x66, 0x6c, 0x61,
	0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4a, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x53, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61,
	0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x22, 0x5c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x53, 0x65, 0x74, 0x49, 0x64, 0x22, 0x76,
	0x0a, 0x10, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x51, 0x75, 0x69, 0x7a, 0x7a,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x69,
	0x7a, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x51,
	0x75, 0x69, 0x7a, 0x53, 0x74, 0x75, 0x64, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6c, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6d, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6b,
	0x65, 0x65, 0x70, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x6b, 0x65, 0x65, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xcc, 0x01, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x63, 0x61, 0x72, 0x64, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xbb, 0x01, 0x0a, 0x1b, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe0, 0x04, 0x0a, 0x09, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x63, 0x61, 0x72, 0x64, 0x12, 0x5c, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61,
	0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x75, 0x64, 0x79, 0x12, 0x28, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b,
	0x0a, 0x14, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x74, 0x75, 0x64, 0x79, 0x12, 0x28, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65,
	0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_syllabus_v1_flashcard_service_proto_rawDescOnce sync.Once
	file_syllabus_v1_flashcard_service_proto_rawDescData = file_syllabus_v1_flashcard_service_proto_rawDesc
)

func file_syllabus_v1_flashcard_service_proto_rawDescGZIP() []byte {
	file_syllabus_v1_flashcard_service_proto_rawDescOnce.Do(func() {
		file_syllabus_v1_flashcard_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_syllabus_v1_flashcard_service_proto_rawDescData)
	})
	return file_syllabus_v1_flashcard_service_proto_rawDescData
}

var file_syllabus_v1_flashcard_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_syllabus_v1_flashcard_service_proto_goTypes = []interface{}{
	(*FlashcardBase)(nil),                // 0: syllabus.v1.FlashcardBase
	(*InsertFlashcardRequest)(nil),       // 1: syllabus.v1.InsertFlashcardRequest
	(*InsertFlashcardResponse)(nil),      // 2: syllabus.v1.InsertFlashcardResponse
	(*UpdateFlashcardRequest)(nil),       // 3: syllabus.v1.UpdateFlashcardRequest
	(*UpdateFlashcardResponse)(nil),      // 4: syllabus.v1.UpdateFlashcardResponse
	(*ListFlashcardRequest)(nil),         // 5: syllabus.v1.ListFlashcardRequest
	(*ListFlashcardResponse)(nil),        // 6: syllabus.v1.ListFlashcardResponse
	(*GetLastestProgressRequest)(nil),    // 7: syllabus.v1.GetLastestProgressRequest
	(*GetLastestProgressResponse)(nil),   // 8: syllabus.v1.GetLastestProgressResponse
	(*FlashcardQuizzes)(nil),             // 9: syllabus.v1.FlashcardQuizzes
	(*CreateFlashCardStudyRequest)(nil),  // 10: syllabus.v1.CreateFlashCardStudyRequest
	(*CreateFlashCardStudyResponse)(nil), // 11: syllabus.v1.CreateFlashCardStudyResponse
	(*FinishFlashCardStudyRequest)(nil),  // 12: syllabus.v1.FinishFlashCardStudyRequest
	(*FinishFlashCardStudyResponse)(nil), // 13: syllabus.v1.FinishFlashCardStudyResponse
	(*LearningMaterialBase)(nil),         // 14: syllabus.v1.LearningMaterialBase
	(*StudyPlanItemIdentity)(nil),        // 15: syllabus.v1.StudyPlanItemIdentity
	(*wrapperspb.StringValue)(nil),       // 16: google.protobuf.StringValue
	(*v1.Quiz)(nil),                      // 17: common.v1.Quiz
	(FlashcardQuizStudyStatus)(0),        // 18: syllabus.v1.FlashcardQuizStudyStatus
	(*v1.Paging)(nil),                    // 19: common.v1.Paging
}
var file_syllabus_v1_flashcard_service_proto_depIdxs = []int32{
	14, // 0: syllabus.v1.FlashcardBase.base:type_name -> syllabus.v1.LearningMaterialBase
	0,  // 1: syllabus.v1.InsertFlashcardRequest.flashcard:type_name -> syllabus.v1.FlashcardBase
	0,  // 2: syllabus.v1.UpdateFlashcardRequest.flashcard:type_name -> syllabus.v1.FlashcardBase
	0,  // 3: syllabus.v1.ListFlashcardResponse.flashcards:type_name -> syllabus.v1.FlashcardBase
	15, // 4: syllabus.v1.GetLastestProgressRequest.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	16, // 5: syllabus.v1.GetLastestProgressResponse.study_set_id:type_name -> google.protobuf.StringValue
	17, // 6: syllabus.v1.FlashcardQuizzes.item:type_name -> common.v1.Quiz
	18, // 7: syllabus.v1.FlashcardQuizzes.status:type_name -> syllabus.v1.FlashcardQuizStudyStatus
	19, // 8: syllabus.v1.CreateFlashCardStudyRequest.paging:type_name -> common.v1.Paging
	19, // 9: syllabus.v1.CreateFlashCardStudyResponse.next_page:type_name -> common.v1.Paging
	9,  // 10: syllabus.v1.CreateFlashCardStudyResponse.items:type_name -> syllabus.v1.FlashcardQuizzes
	15, // 11: syllabus.v1.FinishFlashCardStudyRequest.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	1,  // 12: syllabus.v1.Flashcard.InsertFlashcard:input_type -> syllabus.v1.InsertFlashcardRequest
	3,  // 13: syllabus.v1.Flashcard.UpdateFlashcard:input_type -> syllabus.v1.UpdateFlashcardRequest
	10, // 14: syllabus.v1.Flashcard.CreateFlashCardStudy:input_type -> syllabus.v1.CreateFlashCardStudyRequest
	12, // 15: syllabus.v1.Flashcard.FinishFlashCardStudy:input_type -> syllabus.v1.FinishFlashCardStudyRequest
	5,  // 16: syllabus.v1.Flashcard.ListFlashcard:input_type -> syllabus.v1.ListFlashcardRequest
	7,  // 17: syllabus.v1.Flashcard.GetLastestProgress:input_type -> syllabus.v1.GetLastestProgressRequest
	2,  // 18: syllabus.v1.Flashcard.InsertFlashcard:output_type -> syllabus.v1.InsertFlashcardResponse
	4,  // 19: syllabus.v1.Flashcard.UpdateFlashcard:output_type -> syllabus.v1.UpdateFlashcardResponse
	11, // 20: syllabus.v1.Flashcard.CreateFlashCardStudy:output_type -> syllabus.v1.CreateFlashCardStudyResponse
	13, // 21: syllabus.v1.Flashcard.FinishFlashCardStudy:output_type -> syllabus.v1.FinishFlashCardStudyResponse
	6,  // 22: syllabus.v1.Flashcard.ListFlashcard:output_type -> syllabus.v1.ListFlashcardResponse
	8,  // 23: syllabus.v1.Flashcard.GetLastestProgress:output_type -> syllabus.v1.GetLastestProgressResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_syllabus_v1_flashcard_service_proto_init() }
func file_syllabus_v1_flashcard_service_proto_init() {
	if File_syllabus_v1_flashcard_service_proto != nil {
		return
	}
	file_syllabus_v1_enums_proto_init()
	file_syllabus_v1_study_plan_proto_init()
	file_syllabus_v1_learning_material_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_syllabus_v1_flashcard_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashcardBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertFlashcardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertFlashcardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashcardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlashcardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFlashcardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFlashcardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastestProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastestProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashcardQuizzes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlashCardStudyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlashCardStudyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishFlashCardStudyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_flashcard_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishFlashCardStudyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_syllabus_v1_flashcard_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_syllabus_v1_flashcard_service_proto_goTypes,
		DependencyIndexes: file_syllabus_v1_flashcard_service_proto_depIdxs,
		MessageInfos:      file_syllabus_v1_flashcard_service_proto_msgTypes,
	}.Build()
	File_syllabus_v1_flashcard_service_proto = out.File
	file_syllabus_v1_flashcard_service_proto_rawDesc = nil
	file_syllabus_v1_flashcard_service_proto_goTypes = nil
	file_syllabus_v1_flashcard_service_proto_depIdxs = nil
}
