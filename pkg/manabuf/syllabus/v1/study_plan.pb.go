// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: syllabus/v1/study_plan.proto

package sspb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StudyPlanItemIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId        string                  `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	LearningMaterialId string                  `protobuf:"bytes,2,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
	StudentId          *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"` // when this field == null -> mean master_study_plan_item identify
}

func (x *StudyPlanItemIdentity) Reset() {
	*x = StudyPlanItemIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanItemIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanItemIdentity) ProtoMessage() {}

func (x *StudyPlanItemIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanItemIdentity.ProtoReflect.Descriptor instead.
func (*StudyPlanItemIdentity) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{0}
}

func (x *StudyPlanItemIdentity) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *StudyPlanItemIdentity) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

func (x *StudyPlanItemIdentity) GetStudentId() *wrapperspb.StringValue {
	if x != nil {
		return x.StudentId
	}
	return nil
}

type StudyPlanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId         string          `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	Name                string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BookId              string          `protobuf:"bytes,3,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Status              StudyPlanStatus `protobuf:"varint,4,opt,name=status,proto3,enum=syllabus.v1.StudyPlanStatus" json:"status,omitempty"`
	TrackSchoolProgress bool            `protobuf:"varint,5,opt,name=track_school_progress,json=trackSchoolProgress,proto3" json:"track_school_progress,omitempty"`
	Grades              []int32         `protobuf:"varint,6,rep,packed,name=grades,proto3" json:"grades,omitempty"`
}

func (x *StudyPlanData) Reset() {
	*x = StudyPlanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanData) ProtoMessage() {}

func (x *StudyPlanData) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanData.ProtoReflect.Descriptor instead.
func (*StudyPlanData) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{1}
}

func (x *StudyPlanData) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *StudyPlanData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StudyPlanData) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *StudyPlanData) GetStatus() StudyPlanStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanStatus_STUDY_PLAN_STATUS_NONE
}

func (x *StudyPlanData) GetTrackSchoolProgress() bool {
	if x != nil {
		return x.TrackSchoolProgress
	}
	return false
}

func (x *StudyPlanData) GetGrades() []int32 {
	if x != nil {
		return x.Grades
	}
	return nil
}

type StudentStudyPlanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId         string          `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	Name                string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BookId              string          `protobuf:"bytes,3,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Status              StudyPlanStatus `protobuf:"varint,4,opt,name=status,proto3,enum=syllabus.v1.StudyPlanStatus" json:"status,omitempty"`
	TrackSchoolProgress bool            `protobuf:"varint,5,opt,name=track_school_progress,json=trackSchoolProgress,proto3" json:"track_school_progress,omitempty"`
	StudentId           string          `protobuf:"bytes,6,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Grades              []int32         `protobuf:"varint,7,rep,packed,name=grades,proto3" json:"grades,omitempty"`
}

func (x *StudentStudyPlanData) Reset() {
	*x = StudentStudyPlanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStudyPlanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStudyPlanData) ProtoMessage() {}

func (x *StudentStudyPlanData) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStudyPlanData.ProtoReflect.Descriptor instead.
func (*StudentStudyPlanData) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{2}
}

func (x *StudentStudyPlanData) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *StudentStudyPlanData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StudentStudyPlanData) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *StudentStudyPlanData) GetStatus() StudyPlanStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanStatus_STUDY_PLAN_STATUS_NONE
}

func (x *StudentStudyPlanData) GetTrackSchoolProgress() bool {
	if x != nil {
		return x.TrackSchoolProgress
	}
	return false
}

func (x *StudentStudyPlanData) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *StudentStudyPlanData) GetGrades() []int32 {
	if x != nil {
		return x.Grades
	}
	return nil
}

type StudyPlanItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,1,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
	AvailableFrom         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=available_from,json=availableFrom,proto3" json:"available_from,omitempty"`
	AvailableTo           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=available_to,json=availableTo,proto3" json:"available_to,omitempty"`
	StartDate             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate               *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Status                StudyPlanItemStatus    `protobuf:"varint,6,opt,name=status,proto3,enum=syllabus.v1.StudyPlanItemStatus" json:"status,omitempty"`
	SchoolDate            *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=school_date,json=schoolDate,proto3" json:"school_date,omitempty"`
	CompletedAt           *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
}

func (x *StudyPlanItem) Reset() {
	*x = StudyPlanItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanItem) ProtoMessage() {}

func (x *StudyPlanItem) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanItem.ProtoReflect.Descriptor instead.
func (*StudyPlanItem) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{3}
}

func (x *StudyPlanItem) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

func (x *StudyPlanItem) GetAvailableFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableFrom
	}
	return nil
}

func (x *StudyPlanItem) GetAvailableTo() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableTo
	}
	return nil
}

func (x *StudyPlanItem) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *StudyPlanItem) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *StudyPlanItem) GetStatus() StudyPlanItemStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_NONE
}

func (x *StudyPlanItem) GetSchoolDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SchoolDate
	}
	return nil
}

func (x *StudyPlanItem) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type StudyPlanItemContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndividualStudyPlanItem *StudyPlanItem       `protobuf:"bytes,1,opt,name=individual_study_plan_item,json=individualStudyPlanItem,proto3" json:"individual_study_plan_item,omitempty"`
	LearningMaterialType    LearningMaterialType `protobuf:"varint,2,opt,name=learning_material_type,json=learningMaterialType,proto3,enum=syllabus.v1.LearningMaterialType" json:"learning_material_type,omitempty"`
}

func (x *StudyPlanItemContent) Reset() {
	*x = StudyPlanItemContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanItemContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanItemContent) ProtoMessage() {}

func (x *StudyPlanItemContent) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanItemContent.ProtoReflect.Descriptor instead.
func (*StudyPlanItemContent) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{4}
}

func (x *StudyPlanItemContent) GetIndividualStudyPlanItem() *StudyPlanItem {
	if x != nil {
		return x.IndividualStudyPlanItem
	}
	return nil
}

func (x *StudyPlanItemContent) GetLearningMaterialType() LearningMaterialType {
	if x != nil {
		return x.LearningMaterialType
	}
	return LearningMaterialType_LEARNING_MATERIAL_LEARNING_OBJECTIVE
}

type StudyPlanToDoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndividualStudyPlanItem *StudyPlanItem          `protobuf:"bytes,1,opt,name=individual_study_plan_item,json=individualStudyPlanItem,proto3" json:"individual_study_plan_item,omitempty"`
	Status                  StudyPlanItemToDoStatus `protobuf:"varint,2,opt,name=status,proto3,enum=syllabus.v1.StudyPlanItemToDoStatus" json:"status,omitempty"`
	Crown                   AchievementCrown        `protobuf:"varint,3,opt,name=crown,proto3,enum=syllabus.v1.AchievementCrown" json:"crown,omitempty"`
	LearningMaterialType    LearningMaterialType    `protobuf:"varint,4,opt,name=learning_material_type,json=learningMaterialType,proto3,enum=syllabus.v1.LearningMaterialType" json:"learning_material_type,omitempty"`
}

func (x *StudyPlanToDoItem) Reset() {
	*x = StudyPlanToDoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanToDoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanToDoItem) ProtoMessage() {}

func (x *StudyPlanToDoItem) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanToDoItem.ProtoReflect.Descriptor instead.
func (*StudyPlanToDoItem) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{5}
}

func (x *StudyPlanToDoItem) GetIndividualStudyPlanItem() *StudyPlanItem {
	if x != nil {
		return x.IndividualStudyPlanItem
	}
	return nil
}

func (x *StudyPlanToDoItem) GetStatus() StudyPlanItemToDoStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanItemToDoStatus_STUDY_PLAN_ITEM_TO_DO_STATUS_NONE
}

func (x *StudyPlanToDoItem) GetCrown() AchievementCrown {
	if x != nil {
		return x.Crown
	}
	return AchievementCrown_ACHIEVEMENT_CROWN_NONE
}

func (x *StudyPlanToDoItem) GetLearningMaterialType() LearningMaterialType {
	if x != nil {
		return x.LearningMaterialType
	}
	return LearningMaterialType_LEARNING_MATERIAL_LEARNING_OBJECTIVE
}

type StudyPlanTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId   string                 `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	BookTree      *BookTree              `protobuf:"bytes,2,opt,name=book_tree,json=bookTree,proto3" json:"book_tree,omitempty"`
	AvailableFrom *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=available_from,json=availableFrom,proto3" json:"available_from,omitempty"`
	AvailableTo   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=available_to,json=availableTo,proto3" json:"available_to,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Status        StudyPlanItemStatus    `protobuf:"varint,8,opt,name=status,proto3,enum=syllabus.v1.StudyPlanItemStatus" json:"status,omitempty"`
	SchoolDate    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=school_date,json=schoolDate,proto3" json:"school_date,omitempty"`
}

func (x *StudyPlanTree) Reset() {
	*x = StudyPlanTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanTree) ProtoMessage() {}

func (x *StudyPlanTree) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanTree.ProtoReflect.Descriptor instead.
func (*StudyPlanTree) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{6}
}

func (x *StudyPlanTree) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *StudyPlanTree) GetBookTree() *BookTree {
	if x != nil {
		return x.BookTree
	}
	return nil
}

func (x *StudyPlanTree) GetAvailableFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableFrom
	}
	return nil
}

func (x *StudyPlanTree) GetAvailableTo() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableTo
	}
	return nil
}

func (x *StudyPlanTree) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *StudyPlanTree) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *StudyPlanTree) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *StudyPlanTree) GetStatus() StudyPlanItemStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_NONE
}

func (x *StudyPlanTree) GetSchoolDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SchoolDate
	}
	return nil
}

// StudyPlanIdentity this struct name is incorrect, please aware by read the struct, not the name.
type StudyPlanIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId        string `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	StudentId          string `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	LearningMaterialId string `protobuf:"bytes,3,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
	StudyPlanItemId    string `protobuf:"bytes,4,opt,name=study_plan_item_id,json=studyPlanItemId,proto3" json:"study_plan_item_id,omitempty"`
}

func (x *StudyPlanIdentity) Reset() {
	*x = StudyPlanIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanIdentity) ProtoMessage() {}

func (x *StudyPlanIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanIdentity.ProtoReflect.Descriptor instead.
func (*StudyPlanIdentity) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{7}
}

func (x *StudyPlanIdentity) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *StudyPlanIdentity) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *StudyPlanIdentity) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

func (x *StudyPlanIdentity) GetStudyPlanItemId() string {
	if x != nil {
		return x.StudyPlanItemId
	}
	return ""
}

type MasterStudyPlanIdentify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId        string `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	LearningMaterialId string `protobuf:"bytes,2,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
}

func (x *MasterStudyPlanIdentify) Reset() {
	*x = MasterStudyPlanIdentify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterStudyPlanIdentify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterStudyPlanIdentify) ProtoMessage() {}

func (x *MasterStudyPlanIdentify) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterStudyPlanIdentify.ProtoReflect.Descriptor instead.
func (*MasterStudyPlanIdentify) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{8}
}

func (x *MasterStudyPlanIdentify) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *MasterStudyPlanIdentify) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

type MasterStudyPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterStudyPlanIdentify *MasterStudyPlanIdentify `protobuf:"bytes,1,opt,name=master_study_plan_identify,json=masterStudyPlanIdentify,proto3" json:"master_study_plan_identify,omitempty"`
	AvailableFrom           *timestamppb.Timestamp   `protobuf:"bytes,2,opt,name=available_from,json=availableFrom,proto3" json:"available_from,omitempty"`
	AvailableTo             *timestamppb.Timestamp   `protobuf:"bytes,3,opt,name=available_to,json=availableTo,proto3" json:"available_to,omitempty"`
	StartDate               *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate                 *timestamppb.Timestamp   `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Status                  StudyPlanItemStatus      `protobuf:"varint,6,opt,name=status,proto3,enum=syllabus.v1.StudyPlanItemStatus" json:"status,omitempty"`
	SchoolDate              *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=school_date,json=schoolDate,proto3" json:"school_date,omitempty"`
}

func (x *MasterStudyPlan) Reset() {
	*x = MasterStudyPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterStudyPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterStudyPlan) ProtoMessage() {}

func (x *MasterStudyPlan) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterStudyPlan.ProtoReflect.Descriptor instead.
func (*MasterStudyPlan) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{9}
}

func (x *MasterStudyPlan) GetMasterStudyPlanIdentify() *MasterStudyPlanIdentify {
	if x != nil {
		return x.MasterStudyPlanIdentify
	}
	return nil
}

func (x *MasterStudyPlan) GetAvailableFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableFrom
	}
	return nil
}

func (x *MasterStudyPlan) GetAvailableTo() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableTo
	}
	return nil
}

func (x *MasterStudyPlan) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *MasterStudyPlan) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *MasterStudyPlan) GetStatus() StudyPlanItemStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_NONE
}

func (x *MasterStudyPlan) GetSchoolDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SchoolDate
	}
	return nil
}

// StudyPlanIdt for recognize the study plan belong to the student or master
type StudyPlanIdt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId string                  `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	StudentId   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"` // when this field == null -> mean master_study_plan identify
}

func (x *StudyPlanIdt) Reset() {
	*x = StudyPlanIdt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_study_plan_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanIdt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanIdt) ProtoMessage() {}

func (x *StudyPlanIdt) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_study_plan_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanIdt.ProtoReflect.Descriptor instead.
func (*StudyPlanIdt) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_study_plan_proto_rawDescGZIP(), []int{10}
}

func (x *StudyPlanIdt) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *StudyPlanIdt) GetStudentId() *wrapperspb.StringValue {
	if x != nil {
		return x.StudentId
	}
	return nil
}

var File_syllabus_v1_study_plan_proto protoreflect.FileDescriptor

var file_syllabus_v1_study_plan_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x88, 0x02, 0x0a,
	0x14, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x15,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x96, 0x04, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xc8, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x1a, 0x69, 0x6e, 0x64,
	0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x17, 0x69, 0x6e, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x57, 0x0a, 0x16, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb8, 0x02, 0x0a, 0x11,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x57, 0x0a, 0x1a, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x17, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x6f, 0x44, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x63, 0x72, 0x6f, 0x77,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x52, 0x05, 0x63, 0x72, 0x6f, 0x77, 0x6e, 0x12, 0x57, 0x0a,
	0x16, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x91, 0x04, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x09,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x65, 0x65,
	0x12, 0x41, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0x6f, 0x0a, 0x17, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x22, 0xdf, 0x03, 0x0a, 0x0f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x61, 0x0a, 0x1a, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x52, 0x17, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x41, 0x0a, 0x0e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3d, 0x0a,
	0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x44, 0x61, 0x74, 0x65, 0x22, 0x6f, 0x0a, 0x0c, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e,
	0x61, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x73, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_syllabus_v1_study_plan_proto_rawDescOnce sync.Once
	file_syllabus_v1_study_plan_proto_rawDescData = file_syllabus_v1_study_plan_proto_rawDesc
)

func file_syllabus_v1_study_plan_proto_rawDescGZIP() []byte {
	file_syllabus_v1_study_plan_proto_rawDescOnce.Do(func() {
		file_syllabus_v1_study_plan_proto_rawDescData = protoimpl.X.CompressGZIP(file_syllabus_v1_study_plan_proto_rawDescData)
	})
	return file_syllabus_v1_study_plan_proto_rawDescData
}

var file_syllabus_v1_study_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_syllabus_v1_study_plan_proto_goTypes = []interface{}{
	(*StudyPlanItemIdentity)(nil),   // 0: syllabus.v1.StudyPlanItemIdentity
	(*StudyPlanData)(nil),           // 1: syllabus.v1.StudyPlanData
	(*StudentStudyPlanData)(nil),    // 2: syllabus.v1.StudentStudyPlanData
	(*StudyPlanItem)(nil),           // 3: syllabus.v1.StudyPlanItem
	(*StudyPlanItemContent)(nil),    // 4: syllabus.v1.StudyPlanItemContent
	(*StudyPlanToDoItem)(nil),       // 5: syllabus.v1.StudyPlanToDoItem
	(*StudyPlanTree)(nil),           // 6: syllabus.v1.StudyPlanTree
	(*StudyPlanIdentity)(nil),       // 7: syllabus.v1.StudyPlanIdentity
	(*MasterStudyPlanIdentify)(nil), // 8: syllabus.v1.MasterStudyPlanIdentify
	(*MasterStudyPlan)(nil),         // 9: syllabus.v1.MasterStudyPlan
	(*StudyPlanIdt)(nil),            // 10: syllabus.v1.StudyPlanIdt
	(*wrapperspb.StringValue)(nil),  // 11: google.protobuf.StringValue
	(StudyPlanStatus)(0),            // 12: syllabus.v1.StudyPlanStatus
	(*timestamppb.Timestamp)(nil),   // 13: google.protobuf.Timestamp
	(StudyPlanItemStatus)(0),        // 14: syllabus.v1.StudyPlanItemStatus
	(LearningMaterialType)(0),       // 15: syllabus.v1.LearningMaterialType
	(StudyPlanItemToDoStatus)(0),    // 16: syllabus.v1.StudyPlanItemToDoStatus
	(AchievementCrown)(0),           // 17: syllabus.v1.AchievementCrown
	(*BookTree)(nil),                // 18: syllabus.v1.BookTree
}
var file_syllabus_v1_study_plan_proto_depIdxs = []int32{
	11, // 0: syllabus.v1.StudyPlanItemIdentity.student_id:type_name -> google.protobuf.StringValue
	12, // 1: syllabus.v1.StudyPlanData.status:type_name -> syllabus.v1.StudyPlanStatus
	12, // 2: syllabus.v1.StudentStudyPlanData.status:type_name -> syllabus.v1.StudyPlanStatus
	0,  // 3: syllabus.v1.StudyPlanItem.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	13, // 4: syllabus.v1.StudyPlanItem.available_from:type_name -> google.protobuf.Timestamp
	13, // 5: syllabus.v1.StudyPlanItem.available_to:type_name -> google.protobuf.Timestamp
	13, // 6: syllabus.v1.StudyPlanItem.start_date:type_name -> google.protobuf.Timestamp
	13, // 7: syllabus.v1.StudyPlanItem.end_date:type_name -> google.protobuf.Timestamp
	14, // 8: syllabus.v1.StudyPlanItem.status:type_name -> syllabus.v1.StudyPlanItemStatus
	13, // 9: syllabus.v1.StudyPlanItem.school_date:type_name -> google.protobuf.Timestamp
	13, // 10: syllabus.v1.StudyPlanItem.completed_at:type_name -> google.protobuf.Timestamp
	3,  // 11: syllabus.v1.StudyPlanItemContent.individual_study_plan_item:type_name -> syllabus.v1.StudyPlanItem
	15, // 12: syllabus.v1.StudyPlanItemContent.learning_material_type:type_name -> syllabus.v1.LearningMaterialType
	3,  // 13: syllabus.v1.StudyPlanToDoItem.individual_study_plan_item:type_name -> syllabus.v1.StudyPlanItem
	16, // 14: syllabus.v1.StudyPlanToDoItem.status:type_name -> syllabus.v1.StudyPlanItemToDoStatus
	17, // 15: syllabus.v1.StudyPlanToDoItem.crown:type_name -> syllabus.v1.AchievementCrown
	15, // 16: syllabus.v1.StudyPlanToDoItem.learning_material_type:type_name -> syllabus.v1.LearningMaterialType
	18, // 17: syllabus.v1.StudyPlanTree.book_tree:type_name -> syllabus.v1.BookTree
	13, // 18: syllabus.v1.StudyPlanTree.available_from:type_name -> google.protobuf.Timestamp
	13, // 19: syllabus.v1.StudyPlanTree.available_to:type_name -> google.protobuf.Timestamp
	13, // 20: syllabus.v1.StudyPlanTree.start_date:type_name -> google.protobuf.Timestamp
	13, // 21: syllabus.v1.StudyPlanTree.end_date:type_name -> google.protobuf.Timestamp
	13, // 22: syllabus.v1.StudyPlanTree.completed_at:type_name -> google.protobuf.Timestamp
	14, // 23: syllabus.v1.StudyPlanTree.status:type_name -> syllabus.v1.StudyPlanItemStatus
	13, // 24: syllabus.v1.StudyPlanTree.school_date:type_name -> google.protobuf.Timestamp
	8,  // 25: syllabus.v1.MasterStudyPlan.master_study_plan_identify:type_name -> syllabus.v1.MasterStudyPlanIdentify
	13, // 26: syllabus.v1.MasterStudyPlan.available_from:type_name -> google.protobuf.Timestamp
	13, // 27: syllabus.v1.MasterStudyPlan.available_to:type_name -> google.protobuf.Timestamp
	13, // 28: syllabus.v1.MasterStudyPlan.start_date:type_name -> google.protobuf.Timestamp
	13, // 29: syllabus.v1.MasterStudyPlan.end_date:type_name -> google.protobuf.Timestamp
	14, // 30: syllabus.v1.MasterStudyPlan.status:type_name -> syllabus.v1.StudyPlanItemStatus
	13, // 31: syllabus.v1.MasterStudyPlan.school_date:type_name -> google.protobuf.Timestamp
	11, // 32: syllabus.v1.StudyPlanIdt.student_id:type_name -> google.protobuf.StringValue
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_syllabus_v1_study_plan_proto_init() }
func file_syllabus_v1_study_plan_proto_init() {
	if File_syllabus_v1_study_plan_proto != nil {
		return
	}
	file_syllabus_v1_enums_proto_init()
	file_syllabus_v1_learning_material_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_syllabus_v1_study_plan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanItemIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStudyPlanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanItemContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanToDoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterStudyPlanIdentify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterStudyPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_study_plan_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanIdt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_syllabus_v1_study_plan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_syllabus_v1_study_plan_proto_goTypes,
		DependencyIndexes: file_syllabus_v1_study_plan_proto_depIdxs,
		MessageInfos:      file_syllabus_v1_study_plan_proto_msgTypes,
	}.Build()
	File_syllabus_v1_study_plan_proto = out.File
	file_syllabus_v1_study_plan_proto_rawDesc = nil
	file_syllabus_v1_study_plan_proto_goTypes = nil
	file_syllabus_v1_study_plan_proto_depIdxs = nil
}
