// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: syllabus/v1/statistics_service.proto

package sspb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GradeBookSetting int32

const (
	GradeBookSetting_LATEST_SCORE        GradeBookSetting = 0
	GradeBookSetting_GRADE_TO_PASS_SCORE GradeBookSetting = 1
)

// Enum value maps for GradeBookSetting.
var (
	GradeBookSetting_name = map[int32]string{
		0: "LATEST_SCORE",
		1: "GRADE_TO_PASS_SCORE",
	}
	GradeBookSetting_value = map[string]int32{
		"LATEST_SCORE":        0,
		"GRADE_TO_PASS_SCORE": 1,
	}
)

func (x GradeBookSetting) Enum() *GradeBookSetting {
	p := new(GradeBookSetting)
	*p = x
	return p
}

func (x GradeBookSetting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GradeBookSetting) Descriptor() protoreflect.EnumDescriptor {
	return file_syllabus_v1_statistics_service_proto_enumTypes[0].Descriptor()
}

func (GradeBookSetting) Type() protoreflect.EnumType {
	return &file_syllabus_v1_statistics_service_proto_enumTypes[0]
}

func (x GradeBookSetting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GradeBookSetting.Descriptor instead.
func (GradeBookSetting) EnumDescriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{0}
}

// TODO: GetStudentAssignmentProgress think for learning_material in general
type GetStudentAssignmentProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterStudyPlanId string `protobuf:"bytes,1,opt,name=master_study_plan_id,json=masterStudyPlanId,proto3" json:"master_study_plan_id,omitempty"`
	StudentId         string `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *GetStudentAssignmentProgressRequest) Reset() {
	*x = GetStudentAssignmentProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentAssignmentProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentAssignmentProgressRequest) ProtoMessage() {}

func (x *GetStudentAssignmentProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentAssignmentProgressRequest.ProtoReflect.Descriptor instead.
func (*GetStudentAssignmentProgressRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetStudentAssignmentProgressRequest) GetMasterStudyPlanId() string {
	if x != nil {
		return x.MasterStudyPlanId
	}
	return ""
}

func (x *GetStudentAssignmentProgressRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type GetStudentAssignmentProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompletedAssignments int32 `protobuf:"varint,1,opt,name=completed_assignments,json=completedAssignments,proto3" json:"completed_assignments,omitempty"` // -> develop to completed_learning_material
	TotalAssignments     int32 `protobuf:"varint,2,opt,name=total_assignments,json=totalAssignments,proto3" json:"total_assignments,omitempty"`             // total_learning_materials
}

func (x *GetStudentAssignmentProgressResponse) Reset() {
	*x = GetStudentAssignmentProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentAssignmentProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentAssignmentProgressResponse) ProtoMessage() {}

func (x *GetStudentAssignmentProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentAssignmentProgressResponse.ProtoReflect.Descriptor instead.
func (*GetStudentAssignmentProgressResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetStudentAssignmentProgressResponse) GetCompletedAssignments() int32 {
	if x != nil {
		return x.CompletedAssignments
	}
	return 0
}

func (x *GetStudentAssignmentProgressResponse) GetTotalAssignments() int32 {
	if x != nil {
		return x.TotalAssignments
	}
	return 0
}

type StatisticsTodoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TodoItem             *StudyPlanToDoItem `protobuf:"bytes,1,opt,name=todo_item,json=todoItem,proto3" json:"todo_item,omitempty"`
	CompletedStudent     int32              `protobuf:"varint,2,opt,name=completed_student,json=completedStudent,proto3" json:"completed_student,omitempty"`
	TotalAssignedStudent int32              `protobuf:"varint,3,opt,name=total_assigned_student,json=totalAssignedStudent,proto3" json:"total_assigned_student,omitempty"`
}

func (x *StatisticsTodoItem) Reset() {
	*x = StatisticsTodoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsTodoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsTodoItem) ProtoMessage() {}

func (x *StatisticsTodoItem) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsTodoItem.ProtoReflect.Descriptor instead.
func (*StatisticsTodoItem) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{2}
}

func (x *StatisticsTodoItem) GetTodoItem() *StudyPlanToDoItem {
	if x != nil {
		return x.TodoItem
	}
	return nil
}

func (x *StatisticsTodoItem) GetCompletedStudent() int32 {
	if x != nil {
		return x.CompletedStudent
	}
	return 0
}

func (x *StatisticsTodoItem) GetTotalAssignedStudent() int32 {
	if x != nil {
		return x.TotalAssignedStudent
	}
	return 0
}

type GetCourseProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterStudyPlanId string `protobuf:"bytes,1,opt,name=master_study_plan_id,json=masterStudyPlanId,proto3" json:"master_study_plan_id,omitempty"` //course_study_plan
}

func (x *GetCourseProgressRequest) Reset() {
	*x = GetCourseProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseProgressRequest) ProtoMessage() {}

func (x *GetCourseProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseProgressRequest.ProtoReflect.Descriptor instead.
func (*GetCourseProgressRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetCourseProgressRequest) GetMasterStudyPlanId() string {
	if x != nil {
		return x.MasterStudyPlanId
	}
	return ""
}

type GetCourseProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatisticsItems []*StatisticsTodoItem `protobuf:"bytes,1,rep,name=statistics_items,json=statisticsItems,proto3" json:"statistics_items,omitempty"`
}

func (x *GetCourseProgressResponse) Reset() {
	*x = GetCourseProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseProgressResponse) ProtoMessage() {}

func (x *GetCourseProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseProgressResponse.ProtoReflect.Descriptor instead.
func (*GetCourseProgressResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetCourseProgressResponse) GetStatisticsItems() []*StatisticsTodoItem {
	if x != nil {
		return x.StatisticsItems
	}
	return nil
}

type GetLearningMaterialProgressInClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId                     string                 `protobuf:"bytes,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	MasterStudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,2,opt,name=master_study_plan_item_identity,json=masterStudyPlanItemIdentity,proto3" json:"master_study_plan_item_identity,omitempty"`
}

func (x *GetLearningMaterialProgressInClassRequest) Reset() {
	*x = GetLearningMaterialProgressInClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLearningMaterialProgressInClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLearningMaterialProgressInClassRequest) ProtoMessage() {}

func (x *GetLearningMaterialProgressInClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLearningMaterialProgressInClassRequest.ProtoReflect.Descriptor instead.
func (*GetLearningMaterialProgressInClassRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetLearningMaterialProgressInClassRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *GetLearningMaterialProgressInClassRequest) GetMasterStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.MasterStudyPlanItemIdentity
	}
	return nil
}

type GetLearningMaterialProgressInClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatisticsItem *StatisticsTodoItem `protobuf:"bytes,1,opt,name=statistics_item,json=statisticsItem,proto3" json:"statistics_item,omitempty"`
}

func (x *GetLearningMaterialProgressInClassResponse) Reset() {
	*x = GetLearningMaterialProgressInClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLearningMaterialProgressInClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLearningMaterialProgressInClassResponse) ProtoMessage() {}

func (x *GetLearningMaterialProgressInClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLearningMaterialProgressInClassResponse.ProtoReflect.Descriptor instead.
func (*GetLearningMaterialProgressInClassResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetLearningMaterialProgressInClassResponse) GetStatisticsItem() *StatisticsTodoItem {
	if x != nil {
		return x.StatisticsItem
	}
	return nil
}

type LearningMaterialResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// no need to fill topic_id(optional)
	LearningMaterial *LearningMaterialBase `protobuf:"bytes,1,opt,name=learning_material,json=learningMaterial,proto3" json:"learning_material,omitempty"`
	IsCompleted      bool                  `protobuf:"varint,2,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	Crown            AchievementCrown      `protobuf:"varint,3,opt,name=crown,proto3,enum=syllabus.v1.AchievementCrown" json:"crown,omitempty"`
}

func (x *LearningMaterialResult) Reset() {
	*x = LearningMaterialResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LearningMaterialResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearningMaterialResult) ProtoMessage() {}

func (x *LearningMaterialResult) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearningMaterialResult.ProtoReflect.Descriptor instead.
func (*LearningMaterialResult) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{7}
}

func (x *LearningMaterialResult) GetLearningMaterial() *LearningMaterialBase {
	if x != nil {
		return x.LearningMaterial
	}
	return nil
}

func (x *LearningMaterialResult) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *LearningMaterialResult) GetCrown() AchievementCrown {
	if x != nil {
		return x.Crown
	}
	return AchievementCrown_ACHIEVEMENT_CROWN_NONE
}

type StudentTopicStudyProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId                string                 `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	CompletedStudyPlanItem *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=completed_study_plan_item,json=completedStudyPlanItem,proto3" json:"completed_study_plan_item,omitempty"`
	TotalStudyPlanItem     *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=total_study_plan_item,json=totalStudyPlanItem,proto3" json:"total_study_plan_item,omitempty"`
	AverageScore           *wrapperspb.Int32Value `protobuf:"bytes,4,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
	TopicName              string                 `protobuf:"bytes,5,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	DisplayOrder           int32                  `protobuf:"varint,6,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	IconUrl                string                 `protobuf:"bytes,7,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
}

func (x *StudentTopicStudyProgress) Reset() {
	*x = StudentTopicStudyProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentTopicStudyProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentTopicStudyProgress) ProtoMessage() {}

func (x *StudentTopicStudyProgress) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentTopicStudyProgress.ProtoReflect.Descriptor instead.
func (*StudentTopicStudyProgress) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{8}
}

func (x *StudentTopicStudyProgress) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *StudentTopicStudyProgress) GetCompletedStudyPlanItem() *wrapperspb.Int32Value {
	if x != nil {
		return x.CompletedStudyPlanItem
	}
	return nil
}

func (x *StudentTopicStudyProgress) GetTotalStudyPlanItem() *wrapperspb.Int32Value {
	if x != nil {
		return x.TotalStudyPlanItem
	}
	return nil
}

func (x *StudentTopicStudyProgress) GetAverageScore() *wrapperspb.Int32Value {
	if x != nil {
		return x.AverageScore
	}
	return nil
}

func (x *StudentTopicStudyProgress) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *StudentTopicStudyProgress) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

func (x *StudentTopicStudyProgress) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type StudentChapterStudyProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId    string                 `protobuf:"bytes,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	AverageScore *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
}

func (x *StudentChapterStudyProgress) Reset() {
	*x = StudentChapterStudyProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentChapterStudyProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentChapterStudyProgress) ProtoMessage() {}

func (x *StudentChapterStudyProgress) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentChapterStudyProgress.ProtoReflect.Descriptor instead.
func (*StudentChapterStudyProgress) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{9}
}

func (x *StudentChapterStudyProgress) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *StudentChapterStudyProgress) GetAverageScore() *wrapperspb.Int32Value {
	if x != nil {
		return x.AverageScore
	}
	return nil
}

type GetStudentProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// use study_plan_id and student_id
	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,1,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
	CourseId              string                 `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *GetStudentProgressRequest) Reset() {
	*x = GetStudentProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentProgressRequest) ProtoMessage() {}

func (x *GetStudentProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentProgressRequest.ProtoReflect.Descriptor instead.
func (*GetStudentProgressRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetStudentProgressRequest) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

func (x *GetStudentProgressRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

type GetStudentProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentStudyPlanProgresses []*GetStudentProgressResponse_StudentStudyPlanProgress `protobuf:"bytes,1,rep,name=student_study_plan_progresses,json=studentStudyPlanProgresses,proto3" json:"student_study_plan_progresses,omitempty"`
}

func (x *GetStudentProgressResponse) Reset() {
	*x = GetStudentProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentProgressResponse) ProtoMessage() {}

func (x *GetStudentProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentProgressResponse.ProtoReflect.Descriptor instead.
func (*GetStudentProgressResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetStudentProgressResponse) GetStudentStudyPlanProgresses() []*GetStudentProgressResponse_StudentStudyPlanProgress {
	if x != nil {
		return x.StudentStudyPlanProgresses
	}
	return nil
}

type GetStudyPlanItemEventLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentity []*StudyPlanItemIdentity `protobuf:"bytes,1,rep,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
}

func (x *GetStudyPlanItemEventLogsRequest) Reset() {
	*x = GetStudyPlanItemEventLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudyPlanItemEventLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyPlanItemEventLogsRequest) ProtoMessage() {}

func (x *GetStudyPlanItemEventLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyPlanItemEventLogsRequest.ProtoReflect.Descriptor instead.
func (*GetStudyPlanItemEventLogsRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetStudyPlanItemEventLogsRequest) GetStudyPlanItemIdentity() []*StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

type GetStudyPlanItemEventLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*GetStudyPlanItemEventLogsResponse_StudyPlanItemLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *GetStudyPlanItemEventLogsResponse) Reset() {
	*x = GetStudyPlanItemEventLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudyPlanItemEventLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyPlanItemEventLogsResponse) ProtoMessage() {}

func (x *GetStudyPlanItemEventLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyPlanItemEventLogsResponse.ProtoReflect.Descriptor instead.
func (*GetStudyPlanItemEventLogsResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetStudyPlanItemEventLogsResponse) GetLogs() []*GetStudyPlanItemEventLogsResponse_StudyPlanItemLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type ListLOHighestScoresByStudyPlanItemIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,1,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
}

func (x *ListLOHighestScoresByStudyPlanItemIDsRequest) Reset() {
	*x = ListLOHighestScoresByStudyPlanItemIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLOHighestScoresByStudyPlanItemIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLOHighestScoresByStudyPlanItemIDsRequest) ProtoMessage() {}

func (x *ListLOHighestScoresByStudyPlanItemIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLOHighestScoresByStudyPlanItemIDsRequest.ProtoReflect.Descriptor instead.
func (*ListLOHighestScoresByStudyPlanItemIDsRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListLOHighestScoresByStudyPlanItemIDsRequest) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

type ListLOHighestScoresByStudyPlanItemIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoHighestScores []*ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore `protobuf:"bytes,1,rep,name=lo_highest_scores,json=loHighestScores,proto3" json:"lo_highest_scores,omitempty"`
}

func (x *ListLOHighestScoresByStudyPlanItemIDsResponse) Reset() {
	*x = ListLOHighestScoresByStudyPlanItemIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLOHighestScoresByStudyPlanItemIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLOHighestScoresByStudyPlanItemIDsResponse) ProtoMessage() {}

func (x *ListLOHighestScoresByStudyPlanItemIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLOHighestScoresByStudyPlanItemIDsResponse.ProtoReflect.Descriptor instead.
func (*ListLOHighestScoresByStudyPlanItemIDsResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListLOHighestScoresByStudyPlanItemIDsResponse) GetLoHighestScores() []*ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore {
	if x != nil {
		return x.LoHighestScores
	}
	return nil
}

type GetStudentStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *GetStudentStatRequest) Reset() {
	*x = GetStudentStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentStatRequest) ProtoMessage() {}

func (x *GetStudentStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentStatRequest.ProtoReflect.Descriptor instead.
func (*GetStudentStatRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetStudentStatRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type StudentStatCrown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementCrown AchievementCrown `protobuf:"varint,1,opt,name=AchievementCrown,proto3,enum=syllabus.v1.AchievementCrown" json:"AchievementCrown,omitempty"`
	Total            int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *StudentStatCrown) Reset() {
	*x = StudentStatCrown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStatCrown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStatCrown) ProtoMessage() {}

func (x *StudentStatCrown) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStatCrown.ProtoReflect.Descriptor instead.
func (*StudentStatCrown) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{17}
}

func (x *StudentStatCrown) GetAchievementCrown() AchievementCrown {
	if x != nil {
		return x.AchievementCrown
	}
	return AchievementCrown_ACHIEVEMENT_CROWN_NONE
}

func (x *StudentStatCrown) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type StudentStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalLearningTime             int32               `protobuf:"varint,1,opt,name=total_learning_time,json=totalLearningTime,proto3" json:"total_learning_time,omitempty"`
	TotalLearningMaterialFinished int32               `protobuf:"varint,2,opt,name=total_learning_material_finished,json=totalLearningMaterialFinished,proto3" json:"total_learning_material_finished,omitempty"`
	Crowns                        []*StudentStatCrown `protobuf:"bytes,3,rep,name=crowns,proto3" json:"crowns,omitempty"`
}

func (x *StudentStat) Reset() {
	*x = StudentStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStat) ProtoMessage() {}

func (x *StudentStat) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStat.ProtoReflect.Descriptor instead.
func (*StudentStat) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{18}
}

func (x *StudentStat) GetTotalLearningTime() int32 {
	if x != nil {
		return x.TotalLearningTime
	}
	return 0
}

func (x *StudentStat) GetTotalLearningMaterialFinished() int32 {
	if x != nil {
		return x.TotalLearningMaterialFinished
	}
	return 0
}

func (x *StudentStat) GetCrowns() []*StudentStatCrown {
	if x != nil {
		return x.Crowns
	}
	return nil
}

type GetStudentStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentStatistics *StudentStat `protobuf:"bytes,1,opt,name=student_statistics,json=studentStatistics,proto3" json:"student_statistics,omitempty"`
}

func (x *GetStudentStatResponse) Reset() {
	*x = GetStudentStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentStatResponse) ProtoMessage() {}

func (x *GetStudentStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentStatResponse.ProtoReflect.Descriptor instead.
func (*GetStudentStatResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetStudentStatResponse) GetStudentStatistics() *StudentStat {
	if x != nil {
		return x.StudentStatistics
	}
	return nil
}

type GetStudentQuestionSetTestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentities []*StudyPlanItemIdentity `protobuf:"bytes,1,rep,name=study_plan_item_identities,json=studyPlanItemIdentities,proto3" json:"study_plan_item_identities,omitempty"`
	IsCompleted             bool                     `protobuf:"varint,2,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
}

func (x *GetStudentQuestionSetTestsRequest) Reset() {
	*x = GetStudentQuestionSetTestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentQuestionSetTestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentQuestionSetTestsRequest) ProtoMessage() {}

func (x *GetStudentQuestionSetTestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentQuestionSetTestsRequest.ProtoReflect.Descriptor instead.
func (*GetStudentQuestionSetTestsRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetStudentQuestionSetTestsRequest) GetStudyPlanItemIdentities() []*StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentities
	}
	return nil
}

func (x *GetStudentQuestionSetTestsRequest) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

// HighestQuestionScore converted from HighestQuizScore
type HighestQuestionScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrectQuestion *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=correct_question,json=correctQuestion,proto3" json:"correct_question,omitempty"` // if not yet do, null is suitable
	TotalQuestion   int32                  `protobuf:"varint,2,opt,name=total_question,json=totalQuestion,proto3" json:"total_question,omitempty"`
}

func (x *HighestQuestionScore) Reset() {
	*x = HighestQuestionScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighestQuestionScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighestQuestionScore) ProtoMessage() {}

func (x *HighestQuestionScore) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighestQuestionScore.ProtoReflect.Descriptor instead.
func (*HighestQuestionScore) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{21}
}

func (x *HighestQuestionScore) GetCorrectQuestion() *wrapperspb.Int32Value {
	if x != nil {
		return x.CorrectQuestion
	}
	return nil
}

func (x *HighestQuestionScore) GetTotalQuestion() int32 {
	if x != nil {
		return x.TotalQuestion
	}
	return 0
}

type QuestionSetTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShuffleQuestionSetId string                 `protobuf:"bytes,1,opt,name=shuffle_question_set_id,json=shuffleQuestionSetId,proto3" json:"shuffle_question_set_id,omitempty"` //shuffle_quiz_set_id current table -> for PHASE 3
	TotalCorrectness     *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=total_correctness,json=totalCorrectness,proto3" json:"total_correctness,omitempty"`
	TotalQuestion        int32                  `protobuf:"varint,3,opt,name=total_question,json=totalQuestion,proto3" json:"total_question,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CompletedAt          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	TotalLearningTime    int32                  `protobuf:"varint,6,opt,name=total_learning_time,json=totalLearningTime,proto3" json:"total_learning_time,omitempty"`
	IsRetry              bool                   `protobuf:"varint,7,opt,name=is_retry,json=isRetry,proto3" json:"is_retry,omitempty"`
}

func (x *QuestionSetTest) Reset() {
	*x = QuestionSetTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionSetTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionSetTest) ProtoMessage() {}

func (x *QuestionSetTest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionSetTest.ProtoReflect.Descriptor instead.
func (*QuestionSetTest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{22}
}

func (x *QuestionSetTest) GetShuffleQuestionSetId() string {
	if x != nil {
		return x.ShuffleQuestionSetId
	}
	return ""
}

func (x *QuestionSetTest) GetTotalCorrectness() *wrapperspb.Int32Value {
	if x != nil {
		return x.TotalCorrectness
	}
	return nil
}

func (x *QuestionSetTest) GetTotalQuestion() int32 {
	if x != nil {
		return x.TotalQuestion
	}
	return 0
}

func (x *QuestionSetTest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *QuestionSetTest) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *QuestionSetTest) GetTotalLearningTime() int32 {
	if x != nil {
		return x.TotalLearningTime
	}
	return 0
}

func (x *QuestionSetTest) GetIsRetry() bool {
	if x != nil {
		return x.IsRetry
	}
	return false
}

type StudyPlanItemQuestionSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,1,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
	QuestionSetTest       *QuestionSetTest       `protobuf:"bytes,2,opt,name=question_set_test,json=questionSetTest,proto3" json:"question_set_test,omitempty"`
}

func (x *StudyPlanItemQuestionSet) Reset() {
	*x = StudyPlanItemQuestionSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanItemQuestionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanItemQuestionSet) ProtoMessage() {}

func (x *StudyPlanItemQuestionSet) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanItemQuestionSet.ProtoReflect.Descriptor instead.
func (*StudyPlanItemQuestionSet) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{23}
}

func (x *StudyPlanItemQuestionSet) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

func (x *StudyPlanItemQuestionSet) GetQuestionSetTest() *QuestionSetTest {
	if x != nil {
		return x.QuestionSetTest
	}
	return nil
}

type GetStudentQuestionSetTestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListStudyPlanItemQuestionSet []*StudyPlanItemQuestionSet `protobuf:"bytes,1,rep,name=list_study_plan_item_question_set,json=listStudyPlanItemQuestionSet,proto3" json:"list_study_plan_item_question_set,omitempty"`
	HighestCrown                 AchievementCrown            `protobuf:"varint,2,opt,name=highest_crown,json=highestCrown,proto3,enum=syllabus.v1.AchievementCrown" json:"highest_crown,omitempty"`
	TotalAttempt                 int32                       `protobuf:"varint,3,opt,name=total_attempt,json=totalAttempt,proto3" json:"total_attempt,omitempty"` //only count for the origin attempts, not retry attempts
	HighestScore                 *HighestQuestionScore       `protobuf:"bytes,4,opt,name=highest_score,json=highestScore,proto3" json:"highest_score,omitempty"`
}

func (x *GetStudentQuestionSetTestsResponse) Reset() {
	*x = GetStudentQuestionSetTestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentQuestionSetTestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentQuestionSetTestsResponse) ProtoMessage() {}

func (x *GetStudentQuestionSetTestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentQuestionSetTestsResponse.ProtoReflect.Descriptor instead.
func (*GetStudentQuestionSetTestsResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetStudentQuestionSetTestsResponse) GetListStudyPlanItemQuestionSet() []*StudyPlanItemQuestionSet {
	if x != nil {
		return x.ListStudyPlanItemQuestionSet
	}
	return nil
}

func (x *GetStudentQuestionSetTestsResponse) GetHighestCrown() AchievementCrown {
	if x != nil {
		return x.HighestCrown
	}
	return AchievementCrown_ACHIEVEMENT_CROWN_NONE
}

func (x *GetStudentQuestionSetTestsResponse) GetTotalAttempt() int32 {
	if x != nil {
		return x.TotalAttempt
	}
	return 0
}

func (x *GetStudentQuestionSetTestsResponse) GetHighestScore() *HighestQuestionScore {
	if x != nil {
		return x.HighestScore
	}
	return nil
}

type ListSubmissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentities []*StudyPlanItemIdentity `protobuf:"bytes,1,rep,name=study_plan_item_identities,json=studyPlanItemIdentities,proto3" json:"study_plan_item_identities,omitempty"`
}

func (x *ListSubmissionsRequest) Reset() {
	*x = ListSubmissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubmissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsRequest) ProtoMessage() {}

func (x *ListSubmissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsRequest.ProtoReflect.Descriptor instead.
func (*ListSubmissionsRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{25}
}

func (x *ListSubmissionsRequest) GetStudyPlanItemIdentities() []*StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentities
	}
	return nil
}

type Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId          string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,2,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
	Note                  string                 `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	// array of media id
	SubmissionContent []*SubmissionContent   `protobuf:"bytes,4,rep,name=submission_content,json=submissionContent,proto3" json:"submission_content,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status            SubmissionStatus       `protobuf:"varint,7,opt,name=status,proto3,enum=syllabus.v1.SubmissionStatus" json:"status,omitempty"`
	// empty if not grade yet
	SubmissionGradeId  *wrapperspb.StringValue      `protobuf:"bytes,8,opt,name=submission_grade_id,json=submissionGradeId,proto3" json:"submission_grade_id,omitempty"`
	CourseId           string                       `protobuf:"bytes,9,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StartDate          *timestamppb.Timestamp       `protobuf:"bytes,10,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate            *timestamppb.Timestamp       `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	CompleteDate       *timestamppb.Timestamp       `protobuf:"bytes,12,opt,name=complete_date,json=completeDate,proto3" json:"complete_date,omitempty"`
	Duration           int32                        `protobuf:"varint,13,opt,name=duration,proto3" json:"duration,omitempty"`
	CorrectScore       *wrapperspb.FloatValue       `protobuf:"bytes,14,opt,name=correct_score,json=correctScore,proto3" json:"correct_score,omitempty"`
	TotalScore         *wrapperspb.FloatValue       `protobuf:"bytes,15,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
	UnderstandingLevel SubmissionUnderstandingLevel `protobuf:"varint,16,opt,name=understanding_level,json=understandingLevel,proto3,enum=syllabus.v1.SubmissionUnderstandingLevel" json:"understanding_level,omitempty"`
}

func (x *Submission) Reset() {
	*x = Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{26}
}

func (x *Submission) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *Submission) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

func (x *Submission) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Submission) GetSubmissionContent() []*SubmissionContent {
	if x != nil {
		return x.SubmissionContent
	}
	return nil
}

func (x *Submission) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Submission) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Submission) GetStatus() SubmissionStatus {
	if x != nil {
		return x.Status
	}
	return SubmissionStatus_SUBMISSION_STATUS_NONE
}

func (x *Submission) GetSubmissionGradeId() *wrapperspb.StringValue {
	if x != nil {
		return x.SubmissionGradeId
	}
	return nil
}

func (x *Submission) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *Submission) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Submission) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Submission) GetCompleteDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CompleteDate
	}
	return nil
}

func (x *Submission) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Submission) GetCorrectScore() *wrapperspb.FloatValue {
	if x != nil {
		return x.CorrectScore
	}
	return nil
}

func (x *Submission) GetTotalScore() *wrapperspb.FloatValue {
	if x != nil {
		return x.TotalScore
	}
	return nil
}

func (x *Submission) GetUnderstandingLevel() SubmissionUnderstandingLevel {
	if x != nil {
		return x.UnderstandingLevel
	}
	return SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_NONE
}

type ListSubmissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submissions []*Submission `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"` // added StudyPlanItemIdentity to StudentSubmission
}

func (x *ListSubmissionsResponse) Reset() {
	*x = ListSubmissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubmissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsResponse) ProtoMessage() {}

func (x *ListSubmissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsResponse.ProtoReflect.Descriptor instead.
func (*ListSubmissionsResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{27}
}

func (x *ListSubmissionsResponse) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

type SearchSubmissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging               *v1.Paging              `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	CourseId             *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ClassIds             []string                `protobuf:"bytes,3,rep,name=class_ids,json=classIds,proto3" json:"class_ids,omitempty"`
	Statuses             []SubmissionStatus      `protobuf:"varint,4,rep,packed,name=statuses,proto3,enum=syllabus.v1.SubmissionStatus" json:"statuses,omitempty"`
	Start                *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	LearningMaterialName *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=learning_material_name,json=learningMaterialName,proto3" json:"learning_material_name,omitempty"`
}

func (x *SearchSubmissionsRequest) Reset() {
	*x = SearchSubmissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSubmissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSubmissionsRequest) ProtoMessage() {}

func (x *SearchSubmissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSubmissionsRequest.ProtoReflect.Descriptor instead.
func (*SearchSubmissionsRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{28}
}

func (x *SearchSubmissionsRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *SearchSubmissionsRequest) GetCourseId() *wrapperspb.StringValue {
	if x != nil {
		return x.CourseId
	}
	return nil
}

func (x *SearchSubmissionsRequest) GetClassIds() []string {
	if x != nil {
		return x.ClassIds
	}
	return nil
}

func (x *SearchSubmissionsRequest) GetStatuses() []SubmissionStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *SearchSubmissionsRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *SearchSubmissionsRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *SearchSubmissionsRequest) GetLearningMaterialName() *wrapperspb.StringValue {
	if x != nil {
		return x.LearningMaterialName
	}
	return nil
}

type SearchSubmissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage    *v1.Paging    `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Submissions []*Submission `protobuf:"bytes,2,rep,name=submissions,proto3" json:"submissions,omitempty"`
}

func (x *SearchSubmissionsResponse) Reset() {
	*x = SearchSubmissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSubmissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSubmissionsResponse) ProtoMessage() {}

func (x *SearchSubmissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSubmissionsResponse.ProtoReflect.Descriptor instead.
func (*SearchSubmissionsResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{29}
}

func (x *SearchSubmissionsResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *SearchSubmissionsResponse) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

type SearchSubmissionsV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging               *v1.Paging              `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	CourseId             *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ClassIds             []string                `protobuf:"bytes,3,rep,name=class_ids,json=classIds,proto3" json:"class_ids,omitempty"`
	Statuses             []SubmissionStatus      `protobuf:"varint,4,rep,packed,name=statuses,proto3,enum=syllabus.v1.SubmissionStatus" json:"statuses,omitempty"`
	Start                *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	LearningMaterialName *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=learning_material_name,json=learningMaterialName,proto3" json:"learning_material_name,omitempty"`
	LocationIds          []string                `protobuf:"bytes,8,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *SearchSubmissionsV2Request) Reset() {
	*x = SearchSubmissionsV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSubmissionsV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSubmissionsV2Request) ProtoMessage() {}

func (x *SearchSubmissionsV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSubmissionsV2Request.ProtoReflect.Descriptor instead.
func (*SearchSubmissionsV2Request) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{30}
}

func (x *SearchSubmissionsV2Request) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *SearchSubmissionsV2Request) GetCourseId() *wrapperspb.StringValue {
	if x != nil {
		return x.CourseId
	}
	return nil
}

func (x *SearchSubmissionsV2Request) GetClassIds() []string {
	if x != nil {
		return x.ClassIds
	}
	return nil
}

func (x *SearchSubmissionsV2Request) GetStatuses() []SubmissionStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *SearchSubmissionsV2Request) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *SearchSubmissionsV2Request) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *SearchSubmissionsV2Request) GetLearningMaterialName() *wrapperspb.StringValue {
	if x != nil {
		return x.LearningMaterialName
	}
	return nil
}

func (x *SearchSubmissionsV2Request) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type SearchSubmissionsV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage    *v1.Paging    `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Submissions []*Submission `protobuf:"bytes,2,rep,name=submissions,proto3" json:"submissions,omitempty"` // added StudyPlanItemIdentity to StudentSubmission
}

func (x *SearchSubmissionsV2Response) Reset() {
	*x = SearchSubmissionsV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSubmissionsV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSubmissionsV2Response) ProtoMessage() {}

func (x *SearchSubmissionsV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSubmissionsV2Response.ProtoReflect.Descriptor instead.
func (*SearchSubmissionsV2Response) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{31}
}

func (x *SearchSubmissionsV2Response) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *SearchSubmissionsV2Response) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

type GradeBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging       *v1.Paging       `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	CourseIds    []string         `protobuf:"bytes,2,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	StudyPlanIds []string         `protobuf:"bytes,3,rep,name=study_plan_ids,json=studyPlanIds,proto3" json:"study_plan_ids,omitempty"`
	Grades       []int32          `protobuf:"varint,4,rep,packed,name=grades,proto3" json:"grades,omitempty"`
	StudentIds   []string         `protobuf:"bytes,5,rep,name=student_ids,json=studentIds,proto3" json:"student_ids,omitempty"`
	Setting      GradeBookSetting `protobuf:"varint,6,opt,name=setting,proto3,enum=syllabus.v1.GradeBookSetting" json:"setting,omitempty"`
	StudentName  string           `protobuf:"bytes,7,opt,name=student_name,json=studentName,proto3" json:"student_name,omitempty"`
	GradeIds     []string         `protobuf:"bytes,8,rep,name=grade_ids,json=gradeIds,proto3" json:"grade_ids,omitempty"`
	LocationIds  []string         `protobuf:"bytes,9,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *GradeBookRequest) Reset() {
	*x = GradeBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeBookRequest) ProtoMessage() {}

func (x *GradeBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeBookRequest.ProtoReflect.Descriptor instead.
func (*GradeBookRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{32}
}

func (x *GradeBookRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *GradeBookRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *GradeBookRequest) GetStudyPlanIds() []string {
	if x != nil {
		return x.StudyPlanIds
	}
	return nil
}

func (x *GradeBookRequest) GetGrades() []int32 {
	if x != nil {
		return x.Grades
	}
	return nil
}

func (x *GradeBookRequest) GetStudentIds() []string {
	if x != nil {
		return x.StudentIds
	}
	return nil
}

func (x *GradeBookRequest) GetSetting() GradeBookSetting {
	if x != nil {
		return x.Setting
	}
	return GradeBookSetting_LATEST_SCORE
}

func (x *GradeBookRequest) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *GradeBookRequest) GetGradeIds() []string {
	if x != nil {
		return x.GradeIds
	}
	return nil
}

func (x *GradeBookRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type GradeBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentGradeItems []*GradeBookResponse_StudentGradeItem `protobuf:"bytes,1,rep,name=student_grade_items,json=studentGradeItems,proto3" json:"student_grade_items,omitempty"`
	NextPage          *v1.Paging                            `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
}

func (x *GradeBookResponse) Reset() {
	*x = GradeBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeBookResponse) ProtoMessage() {}

func (x *GradeBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeBookResponse.ProtoReflect.Descriptor instead.
func (*GradeBookResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{33}
}

func (x *GradeBookResponse) GetStudentGradeItems() []*GradeBookResponse_StudentGradeItem {
	if x != nil {
		return x.StudentGradeItems
	}
	return nil
}

func (x *GradeBookResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

type CourseStatisticRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId    string   `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StudyPlanId string   `protobuf:"bytes,2,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	ClassId     []string `protobuf:"bytes,3,rep,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	// Types that are assignable to School:
	//
	//	*CourseStatisticRequest_AllSchool
	//	*CourseStatisticRequest_Unassigned
	//	*CourseStatisticRequest_SchoolId
	School        isCourseStatisticRequest_School `protobuf_oneof:"school"`
	StudentTagIds []string                        `protobuf:"bytes,7,rep,name=student_tag_ids,json=studentTagIds,proto3" json:"student_tag_ids,omitempty"`
	LocationIds   []string                        `protobuf:"bytes,8,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *CourseStatisticRequest) Reset() {
	*x = CourseStatisticRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseStatisticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseStatisticRequest) ProtoMessage() {}

func (x *CourseStatisticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseStatisticRequest.ProtoReflect.Descriptor instead.
func (*CourseStatisticRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{34}
}

func (x *CourseStatisticRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *CourseStatisticRequest) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *CourseStatisticRequest) GetClassId() []string {
	if x != nil {
		return x.ClassId
	}
	return nil
}

func (m *CourseStatisticRequest) GetSchool() isCourseStatisticRequest_School {
	if m != nil {
		return m.School
	}
	return nil
}

func (x *CourseStatisticRequest) GetAllSchool() bool {
	if x, ok := x.GetSchool().(*CourseStatisticRequest_AllSchool); ok {
		return x.AllSchool
	}
	return false
}

func (x *CourseStatisticRequest) GetUnassigned() bool {
	if x, ok := x.GetSchool().(*CourseStatisticRequest_Unassigned); ok {
		return x.Unassigned
	}
	return false
}

func (x *CourseStatisticRequest) GetSchoolId() string {
	if x, ok := x.GetSchool().(*CourseStatisticRequest_SchoolId); ok {
		return x.SchoolId
	}
	return ""
}

func (x *CourseStatisticRequest) GetStudentTagIds() []string {
	if x != nil {
		return x.StudentTagIds
	}
	return nil
}

func (x *CourseStatisticRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type isCourseStatisticRequest_School interface {
	isCourseStatisticRequest_School()
}

type CourseStatisticRequest_AllSchool struct {
	AllSchool bool `protobuf:"varint,4,opt,name=all_school,json=allSchool,proto3,oneof"`
}

type CourseStatisticRequest_Unassigned struct {
	Unassigned bool `protobuf:"varint,5,opt,name=unassigned,proto3,oneof"`
}

type CourseStatisticRequest_SchoolId struct {
	SchoolId string `protobuf:"bytes,6,opt,name=school_id,json=schoolId,proto3,oneof"`
}

func (*CourseStatisticRequest_AllSchool) isCourseStatisticRequest_School() {}

func (*CourseStatisticRequest_Unassigned) isCourseStatisticRequest_School() {}

func (*CourseStatisticRequest_SchoolId) isCourseStatisticRequest_School() {}

type CourseStatisticResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicStatistic []*CourseStatisticResponse_TopicStatistic `protobuf:"bytes,1,rep,name=topic_statistic,json=topicStatistic,proto3" json:"topic_statistic,omitempty"`
}

func (x *CourseStatisticResponse) Reset() {
	*x = CourseStatisticResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseStatisticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseStatisticResponse) ProtoMessage() {}

func (x *CourseStatisticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseStatisticResponse.ProtoReflect.Descriptor instead.
func (*CourseStatisticResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{35}
}

func (x *CourseStatisticResponse) GetTopicStatistic() []*CourseStatisticResponse_TopicStatistic {
	if x != nil {
		return x.TopicStatistic
	}
	return nil
}

type RetrieveLearningProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string                 `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	SessionId string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	From      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *RetrieveLearningProgressRequest) Reset() {
	*x = RetrieveLearningProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLearningProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLearningProgressRequest) ProtoMessage() {}

func (x *RetrieveLearningProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLearningProgressRequest.ProtoReflect.Descriptor instead.
func (*RetrieveLearningProgressRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{36}
}

func (x *RetrieveLearningProgressRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *RetrieveLearningProgressRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RetrieveLearningProgressRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *RetrieveLearningProgressRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type RetrieveLearningProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dailies []*RetrieveLearningProgressResponse_DailyLearningTime `protobuf:"bytes,1,rep,name=dailies,proto3" json:"dailies,omitempty"`
}

func (x *RetrieveLearningProgressResponse) Reset() {
	*x = RetrieveLearningProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLearningProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLearningProgressResponse) ProtoMessage() {}

func (x *RetrieveLearningProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLearningProgressResponse.ProtoReflect.Descriptor instead.
func (*RetrieveLearningProgressResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{37}
}

func (x *RetrieveLearningProgressResponse) GetDailies() []*RetrieveLearningProgressResponse_DailyLearningTime {
	if x != nil {
		return x.Dailies
	}
	return nil
}

type RetrieveSchoolHistoryByStudentInCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId string `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *RetrieveSchoolHistoryByStudentInCourseRequest) Reset() {
	*x = RetrieveSchoolHistoryByStudentInCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveSchoolHistoryByStudentInCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSchoolHistoryByStudentInCourseRequest) ProtoMessage() {}

func (x *RetrieveSchoolHistoryByStudentInCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSchoolHistoryByStudentInCourseRequest.ProtoReflect.Descriptor instead.
func (*RetrieveSchoolHistoryByStudentInCourseRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{38}
}

func (x *RetrieveSchoolHistoryByStudentInCourseRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

type RetrieveSchoolHistoryByStudentInCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schools map[string]*RetrieveSchoolHistoryByStudentInCourseResponse_School `protobuf:"bytes,1,rep,name=schools,proto3" json:"schools,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RetrieveSchoolHistoryByStudentInCourseResponse) Reset() {
	*x = RetrieveSchoolHistoryByStudentInCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveSchoolHistoryByStudentInCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSchoolHistoryByStudentInCourseResponse) ProtoMessage() {}

func (x *RetrieveSchoolHistoryByStudentInCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSchoolHistoryByStudentInCourseResponse.ProtoReflect.Descriptor instead.
func (*RetrieveSchoolHistoryByStudentInCourseResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{39}
}

func (x *RetrieveSchoolHistoryByStudentInCourseResponse) GetSchools() map[string]*RetrieveSchoolHistoryByStudentInCourseResponse_School {
	if x != nil {
		return x.Schools
	}
	return nil
}

type ListTagByStudentInCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId string `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *ListTagByStudentInCourseRequest) Reset() {
	*x = ListTagByStudentInCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagByStudentInCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagByStudentInCourseRequest) ProtoMessage() {}

func (x *ListTagByStudentInCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagByStudentInCourseRequest.ProtoReflect.Descriptor instead.
func (*ListTagByStudentInCourseRequest) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{40}
}

func (x *ListTagByStudentInCourseRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

type ListTagByStudentInCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentTags []*ListTagByStudentInCourseResponse_StudentTag `protobuf:"bytes,1,rep,name=student_tags,json=studentTags,proto3" json:"student_tags,omitempty"`
}

func (x *ListTagByStudentInCourseResponse) Reset() {
	*x = ListTagByStudentInCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagByStudentInCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagByStudentInCourseResponse) ProtoMessage() {}

func (x *ListTagByStudentInCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagByStudentInCourseResponse.ProtoReflect.Descriptor instead.
func (*ListTagByStudentInCourseResponse) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{41}
}

func (x *ListTagByStudentInCourseResponse) GetStudentTags() []*ListTagByStudentInCourseResponse_StudentTag {
	if x != nil {
		return x.StudentTags
	}
	return nil
}

type GetStudentProgressResponse_StudentStudyPlanProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId             string                         `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	ChapterProgress         []*StudentChapterStudyProgress `protobuf:"bytes,2,rep,name=chapter_progress,json=chapterProgress,proto3" json:"chapter_progress,omitempty"`
	TopicProgress           []*StudentTopicStudyProgress   `protobuf:"bytes,3,rep,name=topic_progress,json=topicProgress,proto3" json:"topic_progress,omitempty"`
	LearningMaterialResults []*LearningMaterialResult      `protobuf:"bytes,4,rep,name=learning_material_results,json=learningMaterialResults,proto3" json:"learning_material_results,omitempty"`
	StudyPlanTrees          []*StudyPlanTree               `protobuf:"bytes,5,rep,name=study_plan_trees,json=studyPlanTrees,proto3" json:"study_plan_trees,omitempty"`
}

func (x *GetStudentProgressResponse_StudentStudyPlanProgress) Reset() {
	*x = GetStudentProgressResponse_StudentStudyPlanProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentProgressResponse_StudentStudyPlanProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentProgressResponse_StudentStudyPlanProgress) ProtoMessage() {}

func (x *GetStudentProgressResponse_StudentStudyPlanProgress) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentProgressResponse_StudentStudyPlanProgress.ProtoReflect.Descriptor instead.
func (*GetStudentProgressResponse_StudentStudyPlanProgress) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetStudentProgressResponse_StudentStudyPlanProgress) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *GetStudentProgressResponse_StudentStudyPlanProgress) GetChapterProgress() []*StudentChapterStudyProgress {
	if x != nil {
		return x.ChapterProgress
	}
	return nil
}

func (x *GetStudentProgressResponse_StudentStudyPlanProgress) GetTopicProgress() []*StudentTopicStudyProgress {
	if x != nil {
		return x.TopicProgress
	}
	return nil
}

func (x *GetStudentProgressResponse_StudentStudyPlanProgress) GetLearningMaterialResults() []*LearningMaterialResult {
	if x != nil {
		return x.LearningMaterialResults
	}
	return nil
}

func (x *GetStudentProgressResponse_StudentStudyPlanProgress) GetStudyPlanTrees() []*StudyPlanTree {
	if x != nil {
		return x.StudyPlanTrees
	}
	return nil
}

type GetStudyPlanItemEventLogsResponse_StudyPlanItemLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,1,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
	SessionId             string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	LearningTime          int32                  `protobuf:"varint,3,opt,name=learning_time,json=learningTime,proto3" json:"learning_time,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CompletedAt           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
}

func (x *GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) Reset() {
	*x = GetStudyPlanItemEventLogsResponse_StudyPlanItemLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) ProtoMessage() {}

func (x *GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyPlanItemEventLogsResponse_StudyPlanItemLog.ProtoReflect.Descriptor instead.
func (*GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

func (x *GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) GetLearningTime() int32 {
	if x != nil {
		return x.LearningTime
	}
	return 0
}

func (x *GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetStudyPlanItemEventLogsResponse_StudyPlanItemLog) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIdentity *StudyPlanItemIdentity `protobuf:"bytes,1,opt,name=study_plan_item_identity,json=studyPlanItemIdentity,proto3" json:"study_plan_item_identity,omitempty"`
	Percentage            *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
}

func (x *ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore) Reset() {
	*x = ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore) ProtoMessage() {}

func (x *ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore.ProtoReflect.Descriptor instead.
func (*ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore) GetStudyPlanItemIdentity() *StudyPlanItemIdentity {
	if x != nil {
		return x.StudyPlanItemIdentity
	}
	return nil
}

func (x *ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore) GetPercentage() *wrapperspb.Int32Value {
	if x != nil {
		return x.Percentage
	}
	return nil
}

type GradeBookResponse_ExamResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LmId                string                  `protobuf:"bytes,1,opt,name=lm_id,json=lmId,proto3" json:"lm_id,omitempty"`
	LmName              string                  `protobuf:"bytes,2,opt,name=lm_name,json=lmName,proto3" json:"lm_name,omitempty"`
	TotalPoint          *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=total_point,json=totalPoint,proto3" json:"total_point,omitempty"`
	GradePoint          *wrapperspb.UInt32Value `protobuf:"bytes,4,opt,name=grade_point,json=gradePoint,proto3" json:"grade_point,omitempty"`
	TotalAttempts       uint32                  `protobuf:"varint,5,opt,name=total_attempts,json=totalAttempts,proto3" json:"total_attempts,omitempty"`
	Failed              bool                    `protobuf:"varint,6,opt,name=failed,proto3" json:"failed,omitempty"`
	Status              SubmissionStatus        `protobuf:"varint,7,opt,name=status,proto3,enum=syllabus.v1.SubmissionStatus" json:"status,omitempty"`
	IsGradeToPass       bool                    `protobuf:"varint,8,opt,name=is_grade_to_pass,json=isGradeToPass,proto3" json:"is_grade_to_pass,omitempty"`
	ReviewOption        ExamLOReviewOption      `protobuf:"varint,9,opt,name=review_option,json=reviewOption,proto3,enum=syllabus.v1.ExamLOReviewOption" json:"review_option,omitempty"`
	DueDate             *timestamppb.Timestamp  `protobuf:"bytes,10,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	ChapterDisplayOrder int32                   `protobuf:"varint,11,opt,name=chapterDisplayOrder,proto3" json:"chapterDisplayOrder,omitempty"`
	TopicDisplayOrder   int32                   `protobuf:"varint,12,opt,name=topicDisplayOrder,proto3" json:"topicDisplayOrder,omitempty"`
	LmDisplayOrder      int32                   `protobuf:"varint,13,opt,name=lmDisplayOrder,proto3" json:"lmDisplayOrder,omitempty"`
}

func (x *GradeBookResponse_ExamResult) Reset() {
	*x = GradeBookResponse_ExamResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeBookResponse_ExamResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeBookResponse_ExamResult) ProtoMessage() {}

func (x *GradeBookResponse_ExamResult) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeBookResponse_ExamResult.ProtoReflect.Descriptor instead.
func (*GradeBookResponse_ExamResult) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{33, 0}
}

func (x *GradeBookResponse_ExamResult) GetLmId() string {
	if x != nil {
		return x.LmId
	}
	return ""
}

func (x *GradeBookResponse_ExamResult) GetLmName() string {
	if x != nil {
		return x.LmName
	}
	return ""
}

func (x *GradeBookResponse_ExamResult) GetTotalPoint() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TotalPoint
	}
	return nil
}

func (x *GradeBookResponse_ExamResult) GetGradePoint() *wrapperspb.UInt32Value {
	if x != nil {
		return x.GradePoint
	}
	return nil
}

func (x *GradeBookResponse_ExamResult) GetTotalAttempts() uint32 {
	if x != nil {
		return x.TotalAttempts
	}
	return 0
}

func (x *GradeBookResponse_ExamResult) GetFailed() bool {
	if x != nil {
		return x.Failed
	}
	return false
}

func (x *GradeBookResponse_ExamResult) GetStatus() SubmissionStatus {
	if x != nil {
		return x.Status
	}
	return SubmissionStatus_SUBMISSION_STATUS_NONE
}

func (x *GradeBookResponse_ExamResult) GetIsGradeToPass() bool {
	if x != nil {
		return x.IsGradeToPass
	}
	return false
}

func (x *GradeBookResponse_ExamResult) GetReviewOption() ExamLOReviewOption {
	if x != nil {
		return x.ReviewOption
	}
	return ExamLOReviewOption_EXAM_LO_REVIEW_OPTION_IMMEDIATELY
}

func (x *GradeBookResponse_ExamResult) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *GradeBookResponse_ExamResult) GetChapterDisplayOrder() int32 {
	if x != nil {
		return x.ChapterDisplayOrder
	}
	return 0
}

func (x *GradeBookResponse_ExamResult) GetTopicDisplayOrder() int32 {
	if x != nil {
		return x.TopicDisplayOrder
	}
	return 0
}

func (x *GradeBookResponse_ExamResult) GetLmDisplayOrder() int32 {
	if x != nil {
		return x.LmDisplayOrder
	}
	return 0
}

type GradeBookResponse_StudentGradeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId             string                          `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudentName           string                          `protobuf:"bytes,2,opt,name=student_name,json=studentName,proto3" json:"student_name,omitempty"`
	Grade                 *wrapperspb.UInt32Value         `protobuf:"bytes,3,opt,name=grade,proto3" json:"grade,omitempty"`
	StudyPlanId           string                          `protobuf:"bytes,4,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	StudyPlanName         string                          `protobuf:"bytes,5,opt,name=study_plan_name,json=studyPlanName,proto3" json:"study_plan_name,omitempty"`
	CourseId              string                          `protobuf:"bytes,6,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	CourseName            string                          `protobuf:"bytes,7,opt,name=course_name,json=courseName,proto3" json:"course_name,omitempty"`
	TotalExamLos          *wrapperspb.UInt32Value         `protobuf:"bytes,8,opt,name=total_exam_los,json=totalExamLos,proto3" json:"total_exam_los,omitempty"`
	TotalCompletedExamLos *wrapperspb.UInt32Value         `protobuf:"bytes,9,opt,name=total_completed_exam_los,json=totalCompletedExamLos,proto3" json:"total_completed_exam_los,omitempty"`
	TotalGradeToPass      *wrapperspb.UInt32Value         `protobuf:"bytes,10,opt,name=total_grade_to_pass,json=totalGradeToPass,proto3" json:"total_grade_to_pass,omitempty"` //Total Exam LOs have Grade To Pass setting
	TotalPassed           *wrapperspb.UInt32Value         `protobuf:"bytes,11,opt,name=total_passed,json=totalPassed,proto3" json:"total_passed,omitempty"`                    //Total Exam LOs which student passed
	Results               []*GradeBookResponse_ExamResult `protobuf:"bytes,12,rep,name=results,proto3" json:"results,omitempty"`
	GradeId               string                          `protobuf:"bytes,13,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
}

func (x *GradeBookResponse_StudentGradeItem) Reset() {
	*x = GradeBookResponse_StudentGradeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeBookResponse_StudentGradeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeBookResponse_StudentGradeItem) ProtoMessage() {}

func (x *GradeBookResponse_StudentGradeItem) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeBookResponse_StudentGradeItem.ProtoReflect.Descriptor instead.
func (*GradeBookResponse_StudentGradeItem) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{33, 1}
}

func (x *GradeBookResponse_StudentGradeItem) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GradeBookResponse_StudentGradeItem) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *GradeBookResponse_StudentGradeItem) GetGrade() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Grade
	}
	return nil
}

func (x *GradeBookResponse_StudentGradeItem) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *GradeBookResponse_StudentGradeItem) GetStudyPlanName() string {
	if x != nil {
		return x.StudyPlanName
	}
	return ""
}

func (x *GradeBookResponse_StudentGradeItem) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *GradeBookResponse_StudentGradeItem) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *GradeBookResponse_StudentGradeItem) GetTotalExamLos() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TotalExamLos
	}
	return nil
}

func (x *GradeBookResponse_StudentGradeItem) GetTotalCompletedExamLos() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TotalCompletedExamLos
	}
	return nil
}

func (x *GradeBookResponse_StudentGradeItem) GetTotalGradeToPass() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TotalGradeToPass
	}
	return nil
}

func (x *GradeBookResponse_StudentGradeItem) GetTotalPassed() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TotalPassed
	}
	return nil
}

func (x *GradeBookResponse_StudentGradeItem) GetResults() []*GradeBookResponse_ExamResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GradeBookResponse_StudentGradeItem) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

type CourseStatisticResponse_TopicStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId                   string                                                              `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	CompletedStudent          int32                                                               `protobuf:"varint,2,opt,name=completed_student,json=completedStudent,proto3" json:"completed_student,omitempty"`
	TotalAssignedStudent      int32                                                               `protobuf:"varint,3,opt,name=total_assigned_student,json=totalAssignedStudent,proto3" json:"total_assigned_student,omitempty"`
	AverageScore              int32                                                               `protobuf:"varint,4,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
	LearningMaterialStatistic []*CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic `protobuf:"bytes,5,rep,name=learning_material_statistic,json=learningMaterialStatistic,proto3" json:"learning_material_statistic,omitempty"`
}

func (x *CourseStatisticResponse_TopicStatistic) Reset() {
	*x = CourseStatisticResponse_TopicStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseStatisticResponse_TopicStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseStatisticResponse_TopicStatistic) ProtoMessage() {}

func (x *CourseStatisticResponse_TopicStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseStatisticResponse_TopicStatistic.ProtoReflect.Descriptor instead.
func (*CourseStatisticResponse_TopicStatistic) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{35, 0}
}

func (x *CourseStatisticResponse_TopicStatistic) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *CourseStatisticResponse_TopicStatistic) GetCompletedStudent() int32 {
	if x != nil {
		return x.CompletedStudent
	}
	return 0
}

func (x *CourseStatisticResponse_TopicStatistic) GetTotalAssignedStudent() int32 {
	if x != nil {
		return x.TotalAssignedStudent
	}
	return 0
}

func (x *CourseStatisticResponse_TopicStatistic) GetAverageScore() int32 {
	if x != nil {
		return x.AverageScore
	}
	return 0
}

func (x *CourseStatisticResponse_TopicStatistic) GetLearningMaterialStatistic() []*CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic {
	if x != nil {
		return x.LearningMaterialStatistic
	}
	return nil
}

type CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningMaterialId   string `protobuf:"bytes,1,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
	CompletedStudent     int32  `protobuf:"varint,2,opt,name=completed_student,json=completedStudent,proto3" json:"completed_student,omitempty"`
	TotalAssignedStudent int32  `protobuf:"varint,3,opt,name=total_assigned_student,json=totalAssignedStudent,proto3" json:"total_assigned_student,omitempty"`
	AverageScore         int32  `protobuf:"varint,4,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
}

func (x *CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic) Reset() {
	*x = CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic) ProtoMessage() {}

func (x *CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic.ProtoReflect.Descriptor instead.
func (*CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{35, 0, 0}
}

func (x *CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

func (x *CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic) GetCompletedStudent() int32 {
	if x != nil {
		return x.CompletedStudent
	}
	return 0
}

func (x *CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic) GetTotalAssignedStudent() int32 {
	if x != nil {
		return x.TotalAssignedStudent
	}
	return 0
}

func (x *CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic) GetAverageScore() int32 {
	if x != nil {
		return x.AverageScore
	}
	return 0
}

type RetrieveLearningProgressResponse_DailyLearningTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalTimeSpentInDay int64                  `protobuf:"varint,1,opt,name=total_time_spent_in_day,json=totalTimeSpentInDay,proto3" json:"total_time_spent_in_day,omitempty"`
	Day                 *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *RetrieveLearningProgressResponse_DailyLearningTime) Reset() {
	*x = RetrieveLearningProgressResponse_DailyLearningTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLearningProgressResponse_DailyLearningTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLearningProgressResponse_DailyLearningTime) ProtoMessage() {}

func (x *RetrieveLearningProgressResponse_DailyLearningTime) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLearningProgressResponse_DailyLearningTime.ProtoReflect.Descriptor instead.
func (*RetrieveLearningProgressResponse_DailyLearningTime) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{37, 0}
}

func (x *RetrieveLearningProgressResponse_DailyLearningTime) GetTotalTimeSpentInDay() int64 {
	if x != nil {
		return x.TotalTimeSpentInDay
	}
	return 0
}

func (x *RetrieveLearningProgressResponse_DailyLearningTime) GetDay() *timestamppb.Timestamp {
	if x != nil {
		return x.Day
	}
	return nil
}

type RetrieveSchoolHistoryByStudentInCourseResponse_School struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolId   string `protobuf:"bytes,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	SchoolName string `protobuf:"bytes,2,opt,name=school_name,json=schoolName,proto3" json:"school_name,omitempty"`
}

func (x *RetrieveSchoolHistoryByStudentInCourseResponse_School) Reset() {
	*x = RetrieveSchoolHistoryByStudentInCourseResponse_School{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveSchoolHistoryByStudentInCourseResponse_School) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSchoolHistoryByStudentInCourseResponse_School) ProtoMessage() {}

func (x *RetrieveSchoolHistoryByStudentInCourseResponse_School) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSchoolHistoryByStudentInCourseResponse_School.ProtoReflect.Descriptor instead.
func (*RetrieveSchoolHistoryByStudentInCourseResponse_School) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{39, 0}
}

func (x *RetrieveSchoolHistoryByStudentInCourseResponse_School) GetSchoolId() string {
	if x != nil {
		return x.SchoolId
	}
	return ""
}

func (x *RetrieveSchoolHistoryByStudentInCourseResponse_School) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

type ListTagByStudentInCourseResponse_StudentTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId   string `protobuf:"bytes,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	TagName string `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
}

func (x *ListTagByStudentInCourseResponse_StudentTag) Reset() {
	*x = ListTagByStudentInCourseResponse_StudentTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syllabus_v1_statistics_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagByStudentInCourseResponse_StudentTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagByStudentInCourseResponse_StudentTag) ProtoMessage() {}

func (x *ListTagByStudentInCourseResponse_StudentTag) ProtoReflect() protoreflect.Message {
	mi := &file_syllabus_v1_statistics_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagByStudentInCourseResponse_StudentTag.ProtoReflect.Descriptor instead.
func (*ListTagByStudentInCourseResponse_StudentTag) Descriptor() ([]byte, []int) {
	return file_syllabus_v1_statistics_service_proto_rawDescGZIP(), []int{41, 0}
}

func (x *ListTagByStudentInCourseResponse_StudentTag) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *ListTagByStudentInCourseResponse_StudentTag) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

var File_syllabus_v1_statistics_service_proto protoreflect.FileDescriptor

var file_syllabus_v1_statistics_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x23, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x24,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x6f, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x0a,
	0x09, 0x74, 0x6f, 0x64, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x08, 0x74, 0x6f, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x4b, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x6f, 0x64, 0x6f, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x68, 0x0a, 0x1f,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x1b, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x76, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x6f, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xc0,
	0x01, 0x0a, 0x16, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4e, 0x0a, 0x11, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x10, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x05,
	0x63, 0x72, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x52, 0x05, 0x63, 0x72, 0x6f, 0x77,
	0x6e, 0x22, 0xff, 0x02, 0x0a, 0x19, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x19, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x4e, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x22, 0x7e, 0x0a, 0x1b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0xae, 0x04, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x1d, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x1a, 0x89, 0x03, 0x0a, 0x18, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x53, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5f, 0x0a, 0x19, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61,
	0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x17, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x0e, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa8, 0x03,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x1a, 0xad, 0x02, 0x0a, 0x10, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x12, 0x5b, 0x0a,
	0x18, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x2c, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x4f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xd3, 0x02, 0x0a, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x4f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x11, 0x6c, 0x6f, 0x5f, 0x68,
	0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x4f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4c, 0x4f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0f,
	0x6c, 0x6f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x1a,
	0xaa, 0x01, 0x0a, 0x0e, 0x4c, 0x4f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x3b, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x36, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x10, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x12, 0x49, 0x0a, 0x10, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x6f, 0x77,
	0x6e, 0x52, 0x10, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72,
	0x6f, 0x77, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xbd, 0x01, 0x0a, 0x0b, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x20, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x1d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x72, 0x6f, 0x77, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x43, 0x72, 0x6f, 0x77,
	0x6e, 0x52, 0x06, 0x63, 0x72, 0x6f, 0x77, 0x6e, 0x73, 0x22, 0x61, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0xa7, 0x01, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5f, 0x0a, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x17, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x48, 0x69, 0x67, 0x68, 0x65,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x46, 0x0a, 0x10, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfe,
	0x02, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x5f, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x74, 0x72, 0x79, 0x22,
	0xc1, 0x01, 0x0a, 0x18, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x5b, 0x0a, 0x18,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x11, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x22, 0xc5, 0x02, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x21, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x1c, 0x6c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x68, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x6f, 0x77, 0x6e,
	0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0c, 0x68,
	0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x79, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x17, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xb4, 0x07, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x18, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x5a, 0x0a, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x12, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x54, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x8c, 0x03, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x30,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x52,
	0x0a, 0x16, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x14, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x39, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb1, 0x03, 0x0a, 0x1a,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x52, 0x0a, 0x16, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22,
	0x88, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x39, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd7, 0x02, 0x0a, 0x10, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x22, 0xa1, 0x0b, 0x0a, 0x11, 0x47, 0x72, 0x61, 0x64, 0x65, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x13, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x1a, 0xdc, 0x04, 0x0a, 0x0a,
	0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x6c, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6d, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6c, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x10,
	0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x6f, 0x50, 0x61, 0x73, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x4c,
	0x4f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x64,
	0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x6d, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x9b, 0x05, 0x0a, 0x10, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x42, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x6c, 0x6f,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x61, 0x6d,
	0x4c, 0x6f, 0x73, 0x12, 0x55, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x6c, 0x6f, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x4c, 0x6f, 0x73, 0x12, 0x4b, 0x0a, 0x13, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x22, 0xab, 0x02, 0x0a, 0x16, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x12, 0x20, 0x0a, 0x0a, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x08, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x22, 0x95, 0x05, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x0e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x1a, 0x9b, 0x04, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1b, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x19, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x1a, 0xd5, 0x01, 0x0a, 0x19, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xbb,
	0x01, 0x0a, 0x1f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xf6, 0x01, 0x0a,
	0x20, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x07, 0x64, 0x61, 0x69, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x61, 0x69, 0x6c, 0x69, 0x65, 0x73, 0x1a, 0x77, 0x0a, 0x11,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x4c, 0x0a, 0x2d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x22, 0xdc, 0x02, 0x0a, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x07, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x73, 0x1a, 0x46, 0x0a, 0x06, 0x53, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x7e, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x58, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x3e, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x42, 0x79, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x42, 0x79,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x67, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x73, 0x1a, 0x3e, 0x0a, 0x0a, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x2a, 0x3d, 0x0a, 0x10, 0x47, 0x72, 0x61, 0x64, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x54, 0x45,
	0x53, 0x54, 0x5f, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x52,
	0x41, 0x44, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x53, 0x43, 0x4f, 0x52,
	0x45, 0x10, 0x01, 0x32, 0xcc, 0x0f, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x2e,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x95, 0x01, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x36, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x2d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61,
	0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x4f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42,
	0x79, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44,
	0x73, 0x12, 0x39, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x4f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x4f, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x2e, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x79, 0x6c,
	0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x62, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x12, 0x27, 0x2e, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56,
	0x32, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61,
	0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x26, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42,
	0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x12, 0x3a, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x73,
	0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x67, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x2c, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x42, 0x79, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x73, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_syllabus_v1_statistics_service_proto_rawDescOnce sync.Once
	file_syllabus_v1_statistics_service_proto_rawDescData = file_syllabus_v1_statistics_service_proto_rawDesc
)

func file_syllabus_v1_statistics_service_proto_rawDescGZIP() []byte {
	file_syllabus_v1_statistics_service_proto_rawDescOnce.Do(func() {
		file_syllabus_v1_statistics_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_syllabus_v1_statistics_service_proto_rawDescData)
	})
	return file_syllabus_v1_statistics_service_proto_rawDescData
}

var file_syllabus_v1_statistics_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_syllabus_v1_statistics_service_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_syllabus_v1_statistics_service_proto_goTypes = []interface{}{
	(GradeBookSetting)(0),                                                    // 0: syllabus.v1.GradeBookSetting
	(*GetStudentAssignmentProgressRequest)(nil),                              // 1: syllabus.v1.GetStudentAssignmentProgressRequest
	(*GetStudentAssignmentProgressResponse)(nil),                             // 2: syllabus.v1.GetStudentAssignmentProgressResponse
	(*StatisticsTodoItem)(nil),                                               // 3: syllabus.v1.StatisticsTodoItem
	(*GetCourseProgressRequest)(nil),                                         // 4: syllabus.v1.GetCourseProgressRequest
	(*GetCourseProgressResponse)(nil),                                        // 5: syllabus.v1.GetCourseProgressResponse
	(*GetLearningMaterialProgressInClassRequest)(nil),                        // 6: syllabus.v1.GetLearningMaterialProgressInClassRequest
	(*GetLearningMaterialProgressInClassResponse)(nil),                       // 7: syllabus.v1.GetLearningMaterialProgressInClassResponse
	(*LearningMaterialResult)(nil),                                           // 8: syllabus.v1.LearningMaterialResult
	(*StudentTopicStudyProgress)(nil),                                        // 9: syllabus.v1.StudentTopicStudyProgress
	(*StudentChapterStudyProgress)(nil),                                      // 10: syllabus.v1.StudentChapterStudyProgress
	(*GetStudentProgressRequest)(nil),                                        // 11: syllabus.v1.GetStudentProgressRequest
	(*GetStudentProgressResponse)(nil),                                       // 12: syllabus.v1.GetStudentProgressResponse
	(*GetStudyPlanItemEventLogsRequest)(nil),                                 // 13: syllabus.v1.GetStudyPlanItemEventLogsRequest
	(*GetStudyPlanItemEventLogsResponse)(nil),                                // 14: syllabus.v1.GetStudyPlanItemEventLogsResponse
	(*ListLOHighestScoresByStudyPlanItemIDsRequest)(nil),                     // 15: syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsRequest
	(*ListLOHighestScoresByStudyPlanItemIDsResponse)(nil),                    // 16: syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsResponse
	(*GetStudentStatRequest)(nil),                                            // 17: syllabus.v1.GetStudentStatRequest
	(*StudentStatCrown)(nil),                                                 // 18: syllabus.v1.StudentStatCrown
	(*StudentStat)(nil),                                                      // 19: syllabus.v1.StudentStat
	(*GetStudentStatResponse)(nil),                                           // 20: syllabus.v1.GetStudentStatResponse
	(*GetStudentQuestionSetTestsRequest)(nil),                                // 21: syllabus.v1.GetStudentQuestionSetTestsRequest
	(*HighestQuestionScore)(nil),                                             // 22: syllabus.v1.HighestQuestionScore
	(*QuestionSetTest)(nil),                                                  // 23: syllabus.v1.QuestionSetTest
	(*StudyPlanItemQuestionSet)(nil),                                         // 24: syllabus.v1.StudyPlanItemQuestionSet
	(*GetStudentQuestionSetTestsResponse)(nil),                               // 25: syllabus.v1.GetStudentQuestionSetTestsResponse
	(*ListSubmissionsRequest)(nil),                                           // 26: syllabus.v1.ListSubmissionsRequest
	(*Submission)(nil),                                                       // 27: syllabus.v1.Submission
	(*ListSubmissionsResponse)(nil),                                          // 28: syllabus.v1.ListSubmissionsResponse
	(*SearchSubmissionsRequest)(nil),                                         // 29: syllabus.v1.SearchSubmissionsRequest
	(*SearchSubmissionsResponse)(nil),                                        // 30: syllabus.v1.SearchSubmissionsResponse
	(*SearchSubmissionsV2Request)(nil),                                       // 31: syllabus.v1.SearchSubmissionsV2Request
	(*SearchSubmissionsV2Response)(nil),                                      // 32: syllabus.v1.SearchSubmissionsV2Response
	(*GradeBookRequest)(nil),                                                 // 33: syllabus.v1.GradeBookRequest
	(*GradeBookResponse)(nil),                                                // 34: syllabus.v1.GradeBookResponse
	(*CourseStatisticRequest)(nil),                                           // 35: syllabus.v1.CourseStatisticRequest
	(*CourseStatisticResponse)(nil),                                          // 36: syllabus.v1.CourseStatisticResponse
	(*RetrieveLearningProgressRequest)(nil),                                  // 37: syllabus.v1.RetrieveLearningProgressRequest
	(*RetrieveLearningProgressResponse)(nil),                                 // 38: syllabus.v1.RetrieveLearningProgressResponse
	(*RetrieveSchoolHistoryByStudentInCourseRequest)(nil),                    // 39: syllabus.v1.RetrieveSchoolHistoryByStudentInCourseRequest
	(*RetrieveSchoolHistoryByStudentInCourseResponse)(nil),                   // 40: syllabus.v1.RetrieveSchoolHistoryByStudentInCourseResponse
	(*ListTagByStudentInCourseRequest)(nil),                                  // 41: syllabus.v1.ListTagByStudentInCourseRequest
	(*ListTagByStudentInCourseResponse)(nil),                                 // 42: syllabus.v1.ListTagByStudentInCourseResponse
	(*GetStudentProgressResponse_StudentStudyPlanProgress)(nil),              // 43: syllabus.v1.GetStudentProgressResponse.StudentStudyPlanProgress
	(*GetStudyPlanItemEventLogsResponse_StudyPlanItemLog)(nil),               // 44: syllabus.v1.GetStudyPlanItemEventLogsResponse.StudyPlanItemLog
	(*ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore)(nil),     // 45: syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsResponse.LOHighestScore
	(*GradeBookResponse_ExamResult)(nil),                                     // 46: syllabus.v1.GradeBookResponse.ExamResult
	(*GradeBookResponse_StudentGradeItem)(nil),                               // 47: syllabus.v1.GradeBookResponse.StudentGradeItem
	(*CourseStatisticResponse_TopicStatistic)(nil),                           // 48: syllabus.v1.CourseStatisticResponse.TopicStatistic
	(*CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic)(nil), // 49: syllabus.v1.CourseStatisticResponse.TopicStatistic.LearningMaterialStatistic
	(*RetrieveLearningProgressResponse_DailyLearningTime)(nil),               // 50: syllabus.v1.RetrieveLearningProgressResponse.DailyLearningTime
	(*RetrieveSchoolHistoryByStudentInCourseResponse_School)(nil),            // 51: syllabus.v1.RetrieveSchoolHistoryByStudentInCourseResponse.School
	nil, // 52: syllabus.v1.RetrieveSchoolHistoryByStudentInCourseResponse.SchoolsEntry
	(*ListTagByStudentInCourseResponse_StudentTag)(nil), // 53: syllabus.v1.ListTagByStudentInCourseResponse.StudentTag
	(*StudyPlanToDoItem)(nil),                           // 54: syllabus.v1.StudyPlanToDoItem
	(*StudyPlanItemIdentity)(nil),                       // 55: syllabus.v1.StudyPlanItemIdentity
	(*LearningMaterialBase)(nil),                        // 56: syllabus.v1.LearningMaterialBase
	(AchievementCrown)(0),                               // 57: syllabus.v1.AchievementCrown
	(*wrapperspb.Int32Value)(nil),                       // 58: google.protobuf.Int32Value
	(*timestamppb.Timestamp)(nil),                       // 59: google.protobuf.Timestamp
	(*SubmissionContent)(nil),                           // 60: syllabus.v1.SubmissionContent
	(SubmissionStatus)(0),                               // 61: syllabus.v1.SubmissionStatus
	(*wrapperspb.StringValue)(nil),                      // 62: google.protobuf.StringValue
	(*wrapperspb.FloatValue)(nil),                       // 63: google.protobuf.FloatValue
	(SubmissionUnderstandingLevel)(0),                   // 64: syllabus.v1.SubmissionUnderstandingLevel
	(*v1.Paging)(nil),                                   // 65: common.v1.Paging
	(*StudyPlanTree)(nil),                               // 66: syllabus.v1.StudyPlanTree
	(*wrapperspb.UInt32Value)(nil),                      // 67: google.protobuf.UInt32Value
	(ExamLOReviewOption)(0),                             // 68: syllabus.v1.ExamLOReviewOption
}
var file_syllabus_v1_statistics_service_proto_depIdxs = []int32{
	54,  // 0: syllabus.v1.StatisticsTodoItem.todo_item:type_name -> syllabus.v1.StudyPlanToDoItem
	3,   // 1: syllabus.v1.GetCourseProgressResponse.statistics_items:type_name -> syllabus.v1.StatisticsTodoItem
	55,  // 2: syllabus.v1.GetLearningMaterialProgressInClassRequest.master_study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	3,   // 3: syllabus.v1.GetLearningMaterialProgressInClassResponse.statistics_item:type_name -> syllabus.v1.StatisticsTodoItem
	56,  // 4: syllabus.v1.LearningMaterialResult.learning_material:type_name -> syllabus.v1.LearningMaterialBase
	57,  // 5: syllabus.v1.LearningMaterialResult.crown:type_name -> syllabus.v1.AchievementCrown
	58,  // 6: syllabus.v1.StudentTopicStudyProgress.completed_study_plan_item:type_name -> google.protobuf.Int32Value
	58,  // 7: syllabus.v1.StudentTopicStudyProgress.total_study_plan_item:type_name -> google.protobuf.Int32Value
	58,  // 8: syllabus.v1.StudentTopicStudyProgress.average_score:type_name -> google.protobuf.Int32Value
	58,  // 9: syllabus.v1.StudentChapterStudyProgress.average_score:type_name -> google.protobuf.Int32Value
	55,  // 10: syllabus.v1.GetStudentProgressRequest.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	43,  // 11: syllabus.v1.GetStudentProgressResponse.student_study_plan_progresses:type_name -> syllabus.v1.GetStudentProgressResponse.StudentStudyPlanProgress
	55,  // 12: syllabus.v1.GetStudyPlanItemEventLogsRequest.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	44,  // 13: syllabus.v1.GetStudyPlanItemEventLogsResponse.logs:type_name -> syllabus.v1.GetStudyPlanItemEventLogsResponse.StudyPlanItemLog
	55,  // 14: syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsRequest.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	45,  // 15: syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsResponse.lo_highest_scores:type_name -> syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsResponse.LOHighestScore
	57,  // 16: syllabus.v1.StudentStatCrown.AchievementCrown:type_name -> syllabus.v1.AchievementCrown
	18,  // 17: syllabus.v1.StudentStat.crowns:type_name -> syllabus.v1.StudentStatCrown
	19,  // 18: syllabus.v1.GetStudentStatResponse.student_statistics:type_name -> syllabus.v1.StudentStat
	55,  // 19: syllabus.v1.GetStudentQuestionSetTestsRequest.study_plan_item_identities:type_name -> syllabus.v1.StudyPlanItemIdentity
	58,  // 20: syllabus.v1.HighestQuestionScore.correct_question:type_name -> google.protobuf.Int32Value
	58,  // 21: syllabus.v1.QuestionSetTest.total_correctness:type_name -> google.protobuf.Int32Value
	59,  // 22: syllabus.v1.QuestionSetTest.created_at:type_name -> google.protobuf.Timestamp
	59,  // 23: syllabus.v1.QuestionSetTest.completed_at:type_name -> google.protobuf.Timestamp
	55,  // 24: syllabus.v1.StudyPlanItemQuestionSet.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	23,  // 25: syllabus.v1.StudyPlanItemQuestionSet.question_set_test:type_name -> syllabus.v1.QuestionSetTest
	24,  // 26: syllabus.v1.GetStudentQuestionSetTestsResponse.list_study_plan_item_question_set:type_name -> syllabus.v1.StudyPlanItemQuestionSet
	57,  // 27: syllabus.v1.GetStudentQuestionSetTestsResponse.highest_crown:type_name -> syllabus.v1.AchievementCrown
	22,  // 28: syllabus.v1.GetStudentQuestionSetTestsResponse.highest_score:type_name -> syllabus.v1.HighestQuestionScore
	55,  // 29: syllabus.v1.ListSubmissionsRequest.study_plan_item_identities:type_name -> syllabus.v1.StudyPlanItemIdentity
	55,  // 30: syllabus.v1.Submission.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	60,  // 31: syllabus.v1.Submission.submission_content:type_name -> syllabus.v1.SubmissionContent
	59,  // 32: syllabus.v1.Submission.created_at:type_name -> google.protobuf.Timestamp
	59,  // 33: syllabus.v1.Submission.updated_at:type_name -> google.protobuf.Timestamp
	61,  // 34: syllabus.v1.Submission.status:type_name -> syllabus.v1.SubmissionStatus
	62,  // 35: syllabus.v1.Submission.submission_grade_id:type_name -> google.protobuf.StringValue
	59,  // 36: syllabus.v1.Submission.start_date:type_name -> google.protobuf.Timestamp
	59,  // 37: syllabus.v1.Submission.end_date:type_name -> google.protobuf.Timestamp
	59,  // 38: syllabus.v1.Submission.complete_date:type_name -> google.protobuf.Timestamp
	63,  // 39: syllabus.v1.Submission.correct_score:type_name -> google.protobuf.FloatValue
	63,  // 40: syllabus.v1.Submission.total_score:type_name -> google.protobuf.FloatValue
	64,  // 41: syllabus.v1.Submission.understanding_level:type_name -> syllabus.v1.SubmissionUnderstandingLevel
	27,  // 42: syllabus.v1.ListSubmissionsResponse.submissions:type_name -> syllabus.v1.Submission
	65,  // 43: syllabus.v1.SearchSubmissionsRequest.paging:type_name -> common.v1.Paging
	62,  // 44: syllabus.v1.SearchSubmissionsRequest.course_id:type_name -> google.protobuf.StringValue
	61,  // 45: syllabus.v1.SearchSubmissionsRequest.statuses:type_name -> syllabus.v1.SubmissionStatus
	59,  // 46: syllabus.v1.SearchSubmissionsRequest.start:type_name -> google.protobuf.Timestamp
	59,  // 47: syllabus.v1.SearchSubmissionsRequest.end:type_name -> google.protobuf.Timestamp
	62,  // 48: syllabus.v1.SearchSubmissionsRequest.learning_material_name:type_name -> google.protobuf.StringValue
	65,  // 49: syllabus.v1.SearchSubmissionsResponse.next_page:type_name -> common.v1.Paging
	27,  // 50: syllabus.v1.SearchSubmissionsResponse.submissions:type_name -> syllabus.v1.Submission
	65,  // 51: syllabus.v1.SearchSubmissionsV2Request.paging:type_name -> common.v1.Paging
	62,  // 52: syllabus.v1.SearchSubmissionsV2Request.course_id:type_name -> google.protobuf.StringValue
	61,  // 53: syllabus.v1.SearchSubmissionsV2Request.statuses:type_name -> syllabus.v1.SubmissionStatus
	59,  // 54: syllabus.v1.SearchSubmissionsV2Request.start:type_name -> google.protobuf.Timestamp
	59,  // 55: syllabus.v1.SearchSubmissionsV2Request.end:type_name -> google.protobuf.Timestamp
	62,  // 56: syllabus.v1.SearchSubmissionsV2Request.learning_material_name:type_name -> google.protobuf.StringValue
	65,  // 57: syllabus.v1.SearchSubmissionsV2Response.next_page:type_name -> common.v1.Paging
	27,  // 58: syllabus.v1.SearchSubmissionsV2Response.submissions:type_name -> syllabus.v1.Submission
	65,  // 59: syllabus.v1.GradeBookRequest.paging:type_name -> common.v1.Paging
	0,   // 60: syllabus.v1.GradeBookRequest.setting:type_name -> syllabus.v1.GradeBookSetting
	47,  // 61: syllabus.v1.GradeBookResponse.student_grade_items:type_name -> syllabus.v1.GradeBookResponse.StudentGradeItem
	65,  // 62: syllabus.v1.GradeBookResponse.next_page:type_name -> common.v1.Paging
	48,  // 63: syllabus.v1.CourseStatisticResponse.topic_statistic:type_name -> syllabus.v1.CourseStatisticResponse.TopicStatistic
	59,  // 64: syllabus.v1.RetrieveLearningProgressRequest.from:type_name -> google.protobuf.Timestamp
	59,  // 65: syllabus.v1.RetrieveLearningProgressRequest.to:type_name -> google.protobuf.Timestamp
	50,  // 66: syllabus.v1.RetrieveLearningProgressResponse.dailies:type_name -> syllabus.v1.RetrieveLearningProgressResponse.DailyLearningTime
	52,  // 67: syllabus.v1.RetrieveSchoolHistoryByStudentInCourseResponse.schools:type_name -> syllabus.v1.RetrieveSchoolHistoryByStudentInCourseResponse.SchoolsEntry
	53,  // 68: syllabus.v1.ListTagByStudentInCourseResponse.student_tags:type_name -> syllabus.v1.ListTagByStudentInCourseResponse.StudentTag
	10,  // 69: syllabus.v1.GetStudentProgressResponse.StudentStudyPlanProgress.chapter_progress:type_name -> syllabus.v1.StudentChapterStudyProgress
	9,   // 70: syllabus.v1.GetStudentProgressResponse.StudentStudyPlanProgress.topic_progress:type_name -> syllabus.v1.StudentTopicStudyProgress
	8,   // 71: syllabus.v1.GetStudentProgressResponse.StudentStudyPlanProgress.learning_material_results:type_name -> syllabus.v1.LearningMaterialResult
	66,  // 72: syllabus.v1.GetStudentProgressResponse.StudentStudyPlanProgress.study_plan_trees:type_name -> syllabus.v1.StudyPlanTree
	55,  // 73: syllabus.v1.GetStudyPlanItemEventLogsResponse.StudyPlanItemLog.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	59,  // 74: syllabus.v1.GetStudyPlanItemEventLogsResponse.StudyPlanItemLog.created_at:type_name -> google.protobuf.Timestamp
	59,  // 75: syllabus.v1.GetStudyPlanItemEventLogsResponse.StudyPlanItemLog.completed_at:type_name -> google.protobuf.Timestamp
	55,  // 76: syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsResponse.LOHighestScore.study_plan_item_identity:type_name -> syllabus.v1.StudyPlanItemIdentity
	58,  // 77: syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsResponse.LOHighestScore.percentage:type_name -> google.protobuf.Int32Value
	67,  // 78: syllabus.v1.GradeBookResponse.ExamResult.total_point:type_name -> google.protobuf.UInt32Value
	67,  // 79: syllabus.v1.GradeBookResponse.ExamResult.grade_point:type_name -> google.protobuf.UInt32Value
	61,  // 80: syllabus.v1.GradeBookResponse.ExamResult.status:type_name -> syllabus.v1.SubmissionStatus
	68,  // 81: syllabus.v1.GradeBookResponse.ExamResult.review_option:type_name -> syllabus.v1.ExamLOReviewOption
	59,  // 82: syllabus.v1.GradeBookResponse.ExamResult.due_date:type_name -> google.protobuf.Timestamp
	67,  // 83: syllabus.v1.GradeBookResponse.StudentGradeItem.grade:type_name -> google.protobuf.UInt32Value
	67,  // 84: syllabus.v1.GradeBookResponse.StudentGradeItem.total_exam_los:type_name -> google.protobuf.UInt32Value
	67,  // 85: syllabus.v1.GradeBookResponse.StudentGradeItem.total_completed_exam_los:type_name -> google.protobuf.UInt32Value
	67,  // 86: syllabus.v1.GradeBookResponse.StudentGradeItem.total_grade_to_pass:type_name -> google.protobuf.UInt32Value
	67,  // 87: syllabus.v1.GradeBookResponse.StudentGradeItem.total_passed:type_name -> google.protobuf.UInt32Value
	46,  // 88: syllabus.v1.GradeBookResponse.StudentGradeItem.results:type_name -> syllabus.v1.GradeBookResponse.ExamResult
	49,  // 89: syllabus.v1.CourseStatisticResponse.TopicStatistic.learning_material_statistic:type_name -> syllabus.v1.CourseStatisticResponse.TopicStatistic.LearningMaterialStatistic
	59,  // 90: syllabus.v1.RetrieveLearningProgressResponse.DailyLearningTime.day:type_name -> google.protobuf.Timestamp
	51,  // 91: syllabus.v1.RetrieveSchoolHistoryByStudentInCourseResponse.SchoolsEntry.value:type_name -> syllabus.v1.RetrieveSchoolHistoryByStudentInCourseResponse.School
	1,   // 92: syllabus.v1.Statistics.GetStudentAssignmentProgress:input_type -> syllabus.v1.GetStudentAssignmentProgressRequest
	4,   // 93: syllabus.v1.Statistics.GetCourseProgress:input_type -> syllabus.v1.GetCourseProgressRequest
	6,   // 94: syllabus.v1.Statistics.GetLearningMaterialProgressInClass:input_type -> syllabus.v1.GetLearningMaterialProgressInClassRequest
	11,  // 95: syllabus.v1.Statistics.GetStudentProgress:input_type -> syllabus.v1.GetStudentProgressRequest
	13,  // 96: syllabus.v1.Statistics.GetStudyPlanItemEventLogs:input_type -> syllabus.v1.GetStudyPlanItemEventLogsRequest
	15,  // 97: syllabus.v1.Statistics.ListLOHighestScoresByStudyPlanItemIDs:input_type -> syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsRequest
	17,  // 98: syllabus.v1.Statistics.GetStudentStat:input_type -> syllabus.v1.GetStudentStatRequest
	33,  // 99: syllabus.v1.Statistics.ListGradeBook:input_type -> syllabus.v1.GradeBookRequest
	21,  // 100: syllabus.v1.Statistics.GetStudentQuestionSetTests:input_type -> syllabus.v1.GetStudentQuestionSetTestsRequest
	26,  // 101: syllabus.v1.Statistics.ListSubmissions:input_type -> syllabus.v1.ListSubmissionsRequest
	29,  // 102: syllabus.v1.Statistics.SearchSubmissions:input_type -> syllabus.v1.SearchSubmissionsRequest
	31,  // 103: syllabus.v1.Statistics.SearchSubmissionsV2:input_type -> syllabus.v1.SearchSubmissionsV2Request
	35,  // 104: syllabus.v1.Statistics.RetrieveCourseStatistic:input_type -> syllabus.v1.CourseStatisticRequest
	35,  // 105: syllabus.v1.Statistics.RetrieveCourseStatisticV2:input_type -> syllabus.v1.CourseStatisticRequest
	37,  // 106: syllabus.v1.Statistics.RetrieveLearningProgress:input_type -> syllabus.v1.RetrieveLearningProgressRequest
	39,  // 107: syllabus.v1.Statistics.RetrieveSchoolHistoryByStudentInCourse:input_type -> syllabus.v1.RetrieveSchoolHistoryByStudentInCourseRequest
	41,  // 108: syllabus.v1.Statistics.ListTagByStudentInCourse:input_type -> syllabus.v1.ListTagByStudentInCourseRequest
	2,   // 109: syllabus.v1.Statistics.GetStudentAssignmentProgress:output_type -> syllabus.v1.GetStudentAssignmentProgressResponse
	5,   // 110: syllabus.v1.Statistics.GetCourseProgress:output_type -> syllabus.v1.GetCourseProgressResponse
	7,   // 111: syllabus.v1.Statistics.GetLearningMaterialProgressInClass:output_type -> syllabus.v1.GetLearningMaterialProgressInClassResponse
	12,  // 112: syllabus.v1.Statistics.GetStudentProgress:output_type -> syllabus.v1.GetStudentProgressResponse
	14,  // 113: syllabus.v1.Statistics.GetStudyPlanItemEventLogs:output_type -> syllabus.v1.GetStudyPlanItemEventLogsResponse
	16,  // 114: syllabus.v1.Statistics.ListLOHighestScoresByStudyPlanItemIDs:output_type -> syllabus.v1.ListLOHighestScoresByStudyPlanItemIDsResponse
	20,  // 115: syllabus.v1.Statistics.GetStudentStat:output_type -> syllabus.v1.GetStudentStatResponse
	34,  // 116: syllabus.v1.Statistics.ListGradeBook:output_type -> syllabus.v1.GradeBookResponse
	25,  // 117: syllabus.v1.Statistics.GetStudentQuestionSetTests:output_type -> syllabus.v1.GetStudentQuestionSetTestsResponse
	28,  // 118: syllabus.v1.Statistics.ListSubmissions:output_type -> syllabus.v1.ListSubmissionsResponse
	30,  // 119: syllabus.v1.Statistics.SearchSubmissions:output_type -> syllabus.v1.SearchSubmissionsResponse
	32,  // 120: syllabus.v1.Statistics.SearchSubmissionsV2:output_type -> syllabus.v1.SearchSubmissionsV2Response
	36,  // 121: syllabus.v1.Statistics.RetrieveCourseStatistic:output_type -> syllabus.v1.CourseStatisticResponse
	36,  // 122: syllabus.v1.Statistics.RetrieveCourseStatisticV2:output_type -> syllabus.v1.CourseStatisticResponse
	38,  // 123: syllabus.v1.Statistics.RetrieveLearningProgress:output_type -> syllabus.v1.RetrieveLearningProgressResponse
	40,  // 124: syllabus.v1.Statistics.RetrieveSchoolHistoryByStudentInCourse:output_type -> syllabus.v1.RetrieveSchoolHistoryByStudentInCourseResponse
	42,  // 125: syllabus.v1.Statistics.ListTagByStudentInCourse:output_type -> syllabus.v1.ListTagByStudentInCourseResponse
	109, // [109:126] is the sub-list for method output_type
	92,  // [92:109] is the sub-list for method input_type
	92,  // [92:92] is the sub-list for extension type_name
	92,  // [92:92] is the sub-list for extension extendee
	0,   // [0:92] is the sub-list for field type_name
}

func init() { file_syllabus_v1_statistics_service_proto_init() }
func file_syllabus_v1_statistics_service_proto_init() {
	if File_syllabus_v1_statistics_service_proto != nil {
		return
	}
	file_syllabus_v1_study_plan_proto_init()
	file_syllabus_v1_enums_proto_init()
	file_syllabus_v1_common_proto_init()
	file_syllabus_v1_learning_material_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_syllabus_v1_statistics_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentAssignmentProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentAssignmentProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsTodoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLearningMaterialProgressInClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLearningMaterialProgressInClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LearningMaterialResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentTopicStudyProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentChapterStudyProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudyPlanItemEventLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudyPlanItemEventLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLOHighestScoresByStudyPlanItemIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLOHighestScoresByStudyPlanItemIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStatCrown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentQuestionSetTestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighestQuestionScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionSetTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanItemQuestionSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentQuestionSetTestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubmissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubmissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSubmissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSubmissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSubmissionsV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSubmissionsV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseStatisticRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseStatisticResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLearningProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLearningProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveSchoolHistoryByStudentInCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveSchoolHistoryByStudentInCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTagByStudentInCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTagByStudentInCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentProgressResponse_StudentStudyPlanProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudyPlanItemEventLogsResponse_StudyPlanItemLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLOHighestScoresByStudyPlanItemIDsResponse_LOHighestScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeBookResponse_ExamResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeBookResponse_StudentGradeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseStatisticResponse_TopicStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseStatisticResponse_TopicStatistic_LearningMaterialStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLearningProgressResponse_DailyLearningTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveSchoolHistoryByStudentInCourseResponse_School); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syllabus_v1_statistics_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTagByStudentInCourseResponse_StudentTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_syllabus_v1_statistics_service_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*CourseStatisticRequest_AllSchool)(nil),
		(*CourseStatisticRequest_Unassigned)(nil),
		(*CourseStatisticRequest_SchoolId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_syllabus_v1_statistics_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_syllabus_v1_statistics_service_proto_goTypes,
		DependencyIndexes: file_syllabus_v1_statistics_service_proto_depIdxs,
		EnumInfos:         file_syllabus_v1_statistics_service_proto_enumTypes,
		MessageInfos:      file_syllabus_v1_statistics_service_proto_msgTypes,
	}.Build()
	File_syllabus_v1_statistics_service_proto = out.File
	file_syllabus_v1_statistics_service_proto_rawDesc = nil
	file_syllabus_v1_statistics_service_proto_goTypes = nil
	file_syllabus_v1_statistics_service_proto_depIdxs = nil
}
