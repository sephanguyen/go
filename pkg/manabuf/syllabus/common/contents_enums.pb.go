/*
  ____            _   _           _
 / ___|   _   _  | | | |   __ _  | |__    _   _   ___
 \___ \  | | | | | | | |  / _` | | '_ \  | | | | / __|
  ___) | | |_| | | | | | | (_| | | |_) | | |_| | \__ \
 |____/   \__, | |_| |_|  \__,_| |_.__/   \__,_| |___/
          |___/

*/
// * Code generated by protoc-gen-syllabus. DO NOT EDIT.
// * versions:
// * - protoc-gen-syllabus (devel)
// * - protoc                   v3.14.0
// * source: common

package scpb

func (x QuizConfig) FromString(str string) QuizConfig {
	switch str {
	case QuizConfig_QUIZ_CONFIG_OPTIONS_PLAIN_LIST.String():
		return QuizConfig_QUIZ_CONFIG_OPTIONS_PLAIN_LIST
	}
	return QuizConfig(0)
}

func (x QuizItemAttributeConfig) FromString(str string) QuizItemAttributeConfig {
	switch str {
	case QuizItemAttributeConfig_FLASHCARD_LANGUAGE_CONFIG_NONE.String():
		return QuizItemAttributeConfig_FLASHCARD_LANGUAGE_CONFIG_NONE
	case QuizItemAttributeConfig_FLASHCARD_LANGUAGE_CONFIG_ENG.String():
		return QuizItemAttributeConfig_FLASHCARD_LANGUAGE_CONFIG_ENG
	case QuizItemAttributeConfig_FLASHCARD_LANGUAGE_CONFIG_JP.String():
		return QuizItemAttributeConfig_FLASHCARD_LANGUAGE_CONFIG_JP
	case QuizItemAttributeConfig_LANGUAGE_CONFIG_JP.String():
		return QuizItemAttributeConfig_LANGUAGE_CONFIG_JP
	case QuizItemAttributeConfig_LANGUAGE_CONFIG_ENG.String():
		return QuizItemAttributeConfig_LANGUAGE_CONFIG_ENG
	case QuizItemAttributeConfig_MATH_CONFIG.String():
		return QuizItemAttributeConfig_MATH_CONFIG
	}
	return QuizItemAttributeConfig(0)
}

func (x QuizType) FromString(str string) QuizType {
	switch str {
	case QuizType_QUIZ_TYPE_MCQ.String():
		return QuizType_QUIZ_TYPE_MCQ
	case QuizType_QUIZ_TYPE_FIB.String():
		return QuizType_QUIZ_TYPE_FIB
	case QuizType_QUIZ_TYPE_POW.String():
		return QuizType_QUIZ_TYPE_POW
	case QuizType_QUIZ_TYPE_TAD.String():
		return QuizType_QUIZ_TYPE_TAD
	case QuizType_QUIZ_TYPE_MIQ.String():
		return QuizType_QUIZ_TYPE_MIQ
	case QuizType_QUIZ_TYPE_MAQ.String():
		return QuizType_QUIZ_TYPE_MAQ
	case QuizType_QUIZ_TYPE_ORD.String():
		return QuizType_QUIZ_TYPE_ORD
	case QuizType_QUIZ_TYPE_ESQ.String():
		return QuizType_QUIZ_TYPE_ESQ
	}
	return QuizType(0)
}

func (x QuizStatus) FromString(str string) QuizStatus {
	switch str {
	case QuizStatus_QUIZ_STATUS_NEW.String():
		return QuizStatus_QUIZ_STATUS_NEW
	case QuizStatus_QUIZ_STATUS_APPROVED.String():
		return QuizStatus_QUIZ_STATUS_APPROVED
	case QuizStatus_QUIZ_STATUS_DELETED.String():
		return QuizStatus_QUIZ_STATUS_DELETED
	}
	return QuizStatus(0)
}

func (x QuizOptionConfig) FromString(str string) QuizOptionConfig {
	switch str {
	case QuizOptionConfig_QUIZ_OPTION_CONFIG_CASE_SENSITIVE.String():
		return QuizOptionConfig_QUIZ_OPTION_CONFIG_CASE_SENSITIVE
	case QuizOptionConfig_QUIZ_OPTION_CONFIG_PARTIAL_CREDIT.String():
		return QuizOptionConfig_QUIZ_OPTION_CONFIG_PARTIAL_CREDIT
	case QuizOptionConfig_QUIZ_OPTION_CONFIG_PLAN_LIST.String():
		return QuizOptionConfig_QUIZ_OPTION_CONFIG_PLAN_LIST
	}
	return QuizOptionConfig(0)
}

func (x CourseStatus) FromString(str string) CourseStatus {
	switch str {
	case CourseStatus_COURSE_STATUS_NONE.String():
		return CourseStatus_COURSE_STATUS_NONE
	case CourseStatus_COURSE_STATUS_ACTIVE.String():
		return CourseStatus_COURSE_STATUS_ACTIVE
	case CourseStatus_COURSE_STATUS_COMPLETED.String():
		return CourseStatus_COURSE_STATUS_COMPLETED
	case CourseStatus_COURSE_STATUS_ON_GOING.String():
		return CourseStatus_COURSE_STATUS_ON_GOING
	case CourseStatus_COURSE_STATUS_INACTIVE.String():
		return CourseStatus_COURSE_STATUS_INACTIVE
	}
	return CourseStatus(0)
}

func (x LessonStatus) FromString(str string) LessonStatus {
	switch str {
	case LessonStatus_LESSON_STATUS_NONE.String():
		return LessonStatus_LESSON_STATUS_NONE
	case LessonStatus_LESSON_STATUS_COMPLETED.String():
		return LessonStatus_LESSON_STATUS_COMPLETED
	case LessonStatus_LESSON_STATUS_IN_PROGRESS.String():
		return LessonStatus_LESSON_STATUS_IN_PROGRESS
	case LessonStatus_LESSON_STATUS_NOT_STARTED.String():
		return LessonStatus_LESSON_STATUS_NOT_STARTED
	case LessonStatus_LESSON_STATUS_DRAFT.String():
		return LessonStatus_LESSON_STATUS_DRAFT
	}
	return LessonStatus(0)
}

func (x LiveLessonView) FromString(str string) LiveLessonView {
	switch str {
	case LiveLessonView_LIVE_LESSON_VIEW_NONE.String():
		return LiveLessonView_LIVE_LESSON_VIEW_NONE
	case LiveLessonView_LIVE_LESSON_VIEW_GALLERY.String():
		return LiveLessonView_LIVE_LESSON_VIEW_GALLERY
	case LiveLessonView_LIVE_LESSON_VIEW_SPEAKER.String():
		return LiveLessonView_LIVE_LESSON_VIEW_SPEAKER
	}
	return LiveLessonView(0)
}

func (x TopicType) FromString(str string) TopicType {
	switch str {
	case TopicType_TOPIC_TYPE_NONE.String():
		return TopicType_TOPIC_TYPE_NONE
	case TopicType_TOPIC_TYPE_LEARNING.String():
		return TopicType_TOPIC_TYPE_LEARNING
	case TopicType_TOPIC_TYPE_PRACTICAL.String():
		return TopicType_TOPIC_TYPE_PRACTICAL
	case TopicType_TOPIC_TYPE_EXAM.String():
		return TopicType_TOPIC_TYPE_EXAM
	case TopicType_TOPIC_TYPE_ASSIGNMENT.String():
		return TopicType_TOPIC_TYPE_ASSIGNMENT
	case TopicType_TOPIC_TYPE_LIVE_LESSON.String():
		return TopicType_TOPIC_TYPE_LIVE_LESSON
	}
	return TopicType(0)
}

func (x TopicStatus) FromString(str string) TopicStatus {
	switch str {
	case TopicStatus_TOPIC_STATUS_NONE.String():
		return TopicStatus_TOPIC_STATUS_NONE
	case TopicStatus_TOPIC_STATUS_DRAFT.String():
		return TopicStatus_TOPIC_STATUS_DRAFT
	case TopicStatus_TOPIC_STATUS_PUBLISHED.String():
		return TopicStatus_TOPIC_STATUS_PUBLISHED
	}
	return TopicStatus(0)
}

func (x BookType) FromString(str string) BookType {
	switch str {
	case BookType_BOOK_TYPE_NONE.String():
		return BookType_BOOK_TYPE_NONE
	case BookType_BOOK_TYPE_GENERAL.String():
		return BookType_BOOK_TYPE_GENERAL
	case BookType_BOOK_TYPE_ADHOC.String():
		return BookType_BOOK_TYPE_ADHOC
	}
	return BookType(0)
}

func (x EssayLimitType) FromString(str string) EssayLimitType {
	switch str {
	case EssayLimitType_ESSAY_LIMIT_TYPE_WORD.String():
		return EssayLimitType_ESSAY_LIMIT_TYPE_WORD
	case EssayLimitType_ESSAY_LIMIT_TYPE_CHAR.String():
		return EssayLimitType_ESSAY_LIMIT_TYPE_CHAR
	}
	return EssayLimitType(0)
}
