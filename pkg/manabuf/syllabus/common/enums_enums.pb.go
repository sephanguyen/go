/*
  ____            _   _           _
 / ___|   _   _  | | | |   __ _  | |__    _   _   ___
 \___ \  | | | | | | | |  / _` | | '_ \  | | | | / __|
  ___) | | |_| | | | | | | (_| | | |_) | | |_| | \__ \
 |____/   \__, | |_| |_|  \__,_| |_.__/   \__,_| |___/
          |___/

*/
// * Code generated by protoc-gen-syllabus. DO NOT EDIT.
// * versions:
// * - protoc-gen-syllabus (devel)
// * - protoc                   v3.14.0
// * source: common

package scpb

func (x Country) FromString(str string) Country {
	switch str {
	case Country_COUNTRY_NONE.String():
		return Country_COUNTRY_NONE
	case Country_COUNTRY_MASTER.String():
		return Country_COUNTRY_MASTER
	case Country_COUNTRY_VN.String():
		return Country_COUNTRY_VN
	case Country_COUNTRY_ID.String():
		return Country_COUNTRY_ID
	case Country_COUNTRY_SG.String():
		return Country_COUNTRY_SG
	case Country_COUNTRY_JP.String():
		return Country_COUNTRY_JP
	}
	return Country(0)
}

func (x Subject) FromString(str string) Subject {
	switch str {
	case Subject_SUBJECT_NONE.String():
		return Subject_SUBJECT_NONE
	case Subject_SUBJECT_MATHS.String():
		return Subject_SUBJECT_MATHS
	case Subject_SUBJECT_BIOLOGY.String():
		return Subject_SUBJECT_BIOLOGY
	case Subject_SUBJECT_PHYSICS.String():
		return Subject_SUBJECT_PHYSICS
	case Subject_SUBJECT_CHEMISTRY.String():
		return Subject_SUBJECT_CHEMISTRY
	case Subject_SUBJECT_GEOGRAPHY.String():
		return Subject_SUBJECT_GEOGRAPHY
	case Subject_SUBJECT_ENGLISH.String():
		return Subject_SUBJECT_ENGLISH
	case Subject_SUBJECT_ENGLISH_2.String():
		return Subject_SUBJECT_ENGLISH_2
	case Subject_SUBJECT_JAPANESE.String():
		return Subject_SUBJECT_JAPANESE
	case Subject_SUBJECT_SCIENCE.String():
		return Subject_SUBJECT_SCIENCE
	case Subject_SUBJECT_SOCIAL_STUDIES.String():
		return Subject_SUBJECT_SOCIAL_STUDIES
	case Subject_SUBJECT_LITERATURE.String():
		return Subject_SUBJECT_LITERATURE
	}
	return Subject(0)
}

func (x LessonType) FromString(str string) LessonType {
	switch str {
	case LessonType_LESSON_TYPE_NONE.String():
		return LessonType_LESSON_TYPE_NONE
	case LessonType_LESSON_TYPE_ONLINE.String():
		return LessonType_LESSON_TYPE_ONLINE
	case LessonType_LESSON_TYPE_OFFLINE.String():
		return LessonType_LESSON_TYPE_OFFLINE
	case LessonType_LESSON_TYPE_HYBRID.String():
		return LessonType_LESSON_TYPE_HYBRID
	}
	return LessonType(0)
}

func (x TeachingModel) FromString(str string) TeachingModel {
	switch str {
	case TeachingModel_LESSON_TEACHING_MODEL_INDIVIDUAL.String():
		return TeachingModel_LESSON_TEACHING_MODEL_INDIVIDUAL
	case TeachingModel_LESSON_TEACHING_MODEL_GROUP.String():
		return TeachingModel_LESSON_TEACHING_MODEL_GROUP
	}
	return TeachingModel(0)
}

func (x LearningObjectiveType) FromString(str string) LearningObjectiveType {
	switch str {
	case LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_NONE.String():
		return LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_NONE
	case LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_LEARNING.String():
		return LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_LEARNING
	case LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_FLASH_CARD.String():
		return LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_FLASH_CARD
	case LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_OFFLINE_LEARNING.String():
		return LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_OFFLINE_LEARNING
	case LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_EXAM_LO.String():
		return LearningObjectiveType_LEARNING_OBJECTIVE_TYPE_EXAM_LO
	}
	return LearningObjectiveType(0)
}

func (x StudentStatus) FromString(str string) StudentStatus {
	switch str {
	case StudentStatus_STUDENT_STATUS_NONE.String():
		return StudentStatus_STUDENT_STATUS_NONE
	}
	return StudentStatus(0)
}

func (x StudentEnrollmentStatus) FromString(str string) StudentEnrollmentStatus {
	switch str {
	case StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_NONE.String():
		return StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_NONE
	case StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_POTENTIAL.String():
		return StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_POTENTIAL
	case StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_ENROLLED.String():
		return StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_ENROLLED
	}
	return StudentEnrollmentStatus(0)
}

func (x LessonTeachingMethod) FromString(str string) LessonTeachingMethod {
	switch str {
	case LessonTeachingMethod_LESSON_TEACHING_METHOD_INDIVIDUAL.String():
		return LessonTeachingMethod_LESSON_TEACHING_METHOD_INDIVIDUAL
	case LessonTeachingMethod_LESSON_TEACHING_METHOD_GROUP.String():
		return LessonTeachingMethod_LESSON_TEACHING_METHOD_GROUP
	}
	return LessonTeachingMethod(0)
}

func (x LessonTeachingMedium) FromString(str string) LessonTeachingMedium {
	switch str {
	case LessonTeachingMedium_LESSON_TEACHING_MEDIUM_OFFLINE.String():
		return LessonTeachingMedium_LESSON_TEACHING_MEDIUM_OFFLINE
	case LessonTeachingMedium_LESSON_TEACHING_MEDIUM_ONLINE.String():
		return LessonTeachingMedium_LESSON_TEACHING_MEDIUM_ONLINE
	case LessonTeachingMedium_LESSON_TEACHING_MEDIUM_HYBRID.String():
		return LessonTeachingMedium_LESSON_TEACHING_MEDIUM_HYBRID
	case LessonTeachingMedium_LESSON_TEACHING_MEDIUM_ZOOM.String():
		return LessonTeachingMedium_LESSON_TEACHING_MEDIUM_ZOOM
	}
	return LessonTeachingMedium(0)
}

func (x LessonSchedulingStatus) FromString(str string) LessonSchedulingStatus {
	switch str {
	case LessonSchedulingStatus_LESSON_SCHEDULING_STATUS_DRAFT.String():
		return LessonSchedulingStatus_LESSON_SCHEDULING_STATUS_DRAFT
	case LessonSchedulingStatus_LESSON_SCHEDULING_STATUS_PUBLISHED.String():
		return LessonSchedulingStatus_LESSON_SCHEDULING_STATUS_PUBLISHED
	case LessonSchedulingStatus_LESSON_SCHEDULING_STATUS_COMPLETED.String():
		return LessonSchedulingStatus_LESSON_SCHEDULING_STATUS_COMPLETED
	case LessonSchedulingStatus_LESSON_SCHEDULING_STATUS_CANCELED.String():
		return LessonSchedulingStatus_LESSON_SCHEDULING_STATUS_CANCELED
	}
	return LessonSchedulingStatus(0)
}

func (x ImportUserEventStatus) FromString(str string) ImportUserEventStatus {
	switch str {
	case ImportUserEventStatus_IMPORT_USER_EVENT_STATUS_WAITING.String():
		return ImportUserEventStatus_IMPORT_USER_EVENT_STATUS_WAITING
	case ImportUserEventStatus_IMPORT_USER_EVENT_STATUS_FINISHED.String():
		return ImportUserEventStatus_IMPORT_USER_EVENT_STATUS_FINISHED
	case ImportUserEventStatus_IMPORT_USER_EVENT_STATUS_FAILED.String():
		return ImportUserEventStatus_IMPORT_USER_EVENT_STATUS_FAILED
	}
	return ImportUserEventStatus(0)
}

func (x DateOfWeek) FromString(str string) DateOfWeek {
	switch str {
	case DateOfWeek_DATE_OF_WEEK_SUNDAY.String():
		return DateOfWeek_DATE_OF_WEEK_SUNDAY
	case DateOfWeek_DATE_OF_WEEK_MONDAY.String():
		return DateOfWeek_DATE_OF_WEEK_MONDAY
	case DateOfWeek_DATE_OF_WEEK_TUESDAY.String():
		return DateOfWeek_DATE_OF_WEEK_TUESDAY
	case DateOfWeek_DATE_OF_WEEK_WEDNESDAY.String():
		return DateOfWeek_DATE_OF_WEEK_WEDNESDAY
	case DateOfWeek_DATE_OF_WEEK_THURSDAY.String():
		return DateOfWeek_DATE_OF_WEEK_THURSDAY
	case DateOfWeek_DATE_OF_WEEK_FRIDAY.String():
		return DateOfWeek_DATE_OF_WEEK_FRIDAY
	case DateOfWeek_DATE_OF_WEEK_SATURDAY.String():
		return DateOfWeek_DATE_OF_WEEK_SATURDAY
	}
	return DateOfWeek(0)
}

func (x AchievementCrown) FromString(str string) AchievementCrown {
	switch str {
	case AchievementCrown_ACHIEVEMENT_CROWN_NONE.String():
		return AchievementCrown_ACHIEVEMENT_CROWN_NONE
	case AchievementCrown_ACHIEVEMENT_CROWN_BRONZE.String():
		return AchievementCrown_ACHIEVEMENT_CROWN_BRONZE
	case AchievementCrown_ACHIEVEMENT_CROWN_SILVER.String():
		return AchievementCrown_ACHIEVEMENT_CROWN_SILVER
	case AchievementCrown_ACHIEVEMENT_CROWN_GOLD.String():
		return AchievementCrown_ACHIEVEMENT_CROWN_GOLD
	}
	return AchievementCrown(0)
}

func (x Platform) FromString(str string) Platform {
	switch str {
	case Platform_PLATFORM_BACKOFFICE.String():
		return Platform_PLATFORM_BACKOFFICE
	case Platform_PLATFORM_TEACHER.String():
		return Platform_PLATFORM_TEACHER
	case Platform_PLATFORM_LEARNER.String():
		return Platform_PLATFORM_LEARNER
	}
	return Platform(0)
}

func (x StudentAttendStatus) FromString(str string) StudentAttendStatus {
	switch str {
	case StudentAttendStatus_STUDENT_ATTEND_STATUS_EMPTY.String():
		return StudentAttendStatus_STUDENT_ATTEND_STATUS_EMPTY
	case StudentAttendStatus_STUDENT_ATTEND_STATUS_ATTEND.String():
		return StudentAttendStatus_STUDENT_ATTEND_STATUS_ATTEND
	case StudentAttendStatus_STUDENT_ATTEND_STATUS_ABSENT.String():
		return StudentAttendStatus_STUDENT_ATTEND_STATUS_ABSENT
	case StudentAttendStatus_STUDENT_ATTEND_STATUS_LATE.String():
		return StudentAttendStatus_STUDENT_ATTEND_STATUS_LATE
	case StudentAttendStatus_STUDENT_ATTEND_STATUS_LEAVE_EARLY.String():
		return StudentAttendStatus_STUDENT_ATTEND_STATUS_LEAVE_EARLY
	case StudentAttendStatus_STUDENT_ATTEND_STATUS_INFORMED_ABSENT.String():
		return StudentAttendStatus_STUDENT_ATTEND_STATUS_INFORMED_ABSENT
	case StudentAttendStatus_STUDENT_ATTEND_STATUS_INFORMED_LATE.String():
		return StudentAttendStatus_STUDENT_ATTEND_STATUS_INFORMED_LATE
	case StudentAttendStatus_STUDENT_ATTEND_STATUS_REALLOCATE.String():
		return StudentAttendStatus_STUDENT_ATTEND_STATUS_REALLOCATE
	}
	return StudentAttendStatus(0)
}

func (x ValueType) FromString(str string) ValueType {
	switch str {
	case ValueType_VALUE_TYPE_INT.String():
		return ValueType_VALUE_TYPE_INT
	case ValueType_VALUE_TYPE_STRING.String():
		return ValueType_VALUE_TYPE_STRING
	case ValueType_VALUE_TYPE_BOOL.String():
		return ValueType_VALUE_TYPE_BOOL
	case ValueType_VALUE_TYPE_INT_ARRAY.String():
		return ValueType_VALUE_TYPE_INT_ARRAY
	case ValueType_VALUE_TYPE_STRING_ARRAY.String():
		return ValueType_VALUE_TYPE_STRING_ARRAY
	case ValueType_VALUE_TYPE_INT_SET.String():
		return ValueType_VALUE_TYPE_INT_SET
	case ValueType_VALUE_TYPE_STRING_SET.String():
		return ValueType_VALUE_TYPE_STRING_SET
	case ValueType_VALUE_TYPE_STRING_MAP.String():
		return ValueType_VALUE_TYPE_STRING_MAP
	case ValueType_VALUE_TYPE_INT_MAP.String():
		return ValueType_VALUE_TYPE_INT_MAP
	}
	return ValueType(0)
}

func (x ExamLOReviewOption) FromString(str string) ExamLOReviewOption {
	switch str {
	case ExamLOReviewOption_EXAM_LO_REVIEW_OPTION_IMMEDIATELY.String():
		return ExamLOReviewOption_EXAM_LO_REVIEW_OPTION_IMMEDIATELY
	case ExamLOReviewOption_EXAM_LO_REVIEW_OPTION_AFTER_DUE_DATE.String():
		return ExamLOReviewOption_EXAM_LO_REVIEW_OPTION_AFTER_DUE_DATE
	}
	return ExamLOReviewOption(0)
}

func (x StudentAttendanceNotice) FromString(str string) StudentAttendanceNotice {
	switch str {
	case StudentAttendanceNotice_NOTICE_EMPTY.String():
		return StudentAttendanceNotice_NOTICE_EMPTY
	case StudentAttendanceNotice_IN_ADVANCE.String():
		return StudentAttendanceNotice_IN_ADVANCE
	case StudentAttendanceNotice_ON_THE_DAY.String():
		return StudentAttendanceNotice_ON_THE_DAY
	case StudentAttendanceNotice_NO_CONTACT.String():
		return StudentAttendanceNotice_NO_CONTACT
	}
	return StudentAttendanceNotice(0)
}

func (x StudentAttendanceReason) FromString(str string) StudentAttendanceReason {
	switch str {
	case StudentAttendanceReason_REASON_EMPTY.String():
		return StudentAttendanceReason_REASON_EMPTY
	case StudentAttendanceReason_PHYSICAL_CONDITION.String():
		return StudentAttendanceReason_PHYSICAL_CONDITION
	case StudentAttendanceReason_SCHOOL_EVENT.String():
		return StudentAttendanceReason_SCHOOL_EVENT
	case StudentAttendanceReason_FAMILY_REASON.String():
		return StudentAttendanceReason_FAMILY_REASON
	case StudentAttendanceReason_REASON_OTHER.String():
		return StudentAttendanceReason_REASON_OTHER
	}
	return StudentAttendanceReason(0)
}

func (x LearningMaterialVendorType) FromString(str string) LearningMaterialVendorType {
	switch str {
	case LearningMaterialVendorType_LM_VENDOR_TYPE_NONE.String():
		return LearningMaterialVendorType_LM_VENDOR_TYPE_NONE
	case LearningMaterialVendorType_LM_VENDOR_TYPE_MANABIE.String():
		return LearningMaterialVendorType_LM_VENDOR_TYPE_MANABIE
	case LearningMaterialVendorType_LM_VENDOR_TYPE_LEARNOSITY.String():
		return LearningMaterialVendorType_LM_VENDOR_TYPE_LEARNOSITY
	}
	return LearningMaterialVendorType(0)
}
