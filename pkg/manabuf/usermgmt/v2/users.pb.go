// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: usermgmt/v2/users.proto

package upb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StudentContactPreference int32

const (
	StudentContactPreference_STUDENT_PHONE_NUMBER          StudentContactPreference = 0
	StudentContactPreference_STUDENT_HOME_PHONE_NUMBER     StudentContactPreference = 1
	StudentContactPreference_PARENT_PRIMARY_PHONE_NUMBER   StudentContactPreference = 2
	StudentContactPreference_PARENT_SECONDARY_PHONE_NUMBER StudentContactPreference = 3
)

// Enum value maps for StudentContactPreference.
var (
	StudentContactPreference_name = map[int32]string{
		0: "STUDENT_PHONE_NUMBER",
		1: "STUDENT_HOME_PHONE_NUMBER",
		2: "PARENT_PRIMARY_PHONE_NUMBER",
		3: "PARENT_SECONDARY_PHONE_NUMBER",
	}
	StudentContactPreference_value = map[string]int32{
		"STUDENT_PHONE_NUMBER":          0,
		"STUDENT_HOME_PHONE_NUMBER":     1,
		"PARENT_PRIMARY_PHONE_NUMBER":   2,
		"PARENT_SECONDARY_PHONE_NUMBER": 3,
	}
)

func (x StudentContactPreference) Enum() *StudentContactPreference {
	p := new(StudentContactPreference)
	*p = x
	return p
}

func (x StudentContactPreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudentContactPreference) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_users_proto_enumTypes[0].Descriptor()
}

func (StudentContactPreference) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_users_proto_enumTypes[0]
}

func (x StudentContactPreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudentContactPreference.Descriptor instead.
func (StudentContactPreference) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{0}
}

type StudentPhoneNumberType int32

const (
	StudentPhoneNumberType_PHONE_NUMBER      StudentPhoneNumberType = 0
	StudentPhoneNumberType_HOME_PHONE_NUMBER StudentPhoneNumberType = 1
)

// Enum value maps for StudentPhoneNumberType.
var (
	StudentPhoneNumberType_name = map[int32]string{
		0: "PHONE_NUMBER",
		1: "HOME_PHONE_NUMBER",
	}
	StudentPhoneNumberType_value = map[string]int32{
		"PHONE_NUMBER":      0,
		"HOME_PHONE_NUMBER": 1,
	}
)

func (x StudentPhoneNumberType) Enum() *StudentPhoneNumberType {
	p := new(StudentPhoneNumberType)
	*p = x
	return p
}

func (x StudentPhoneNumberType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudentPhoneNumberType) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_users_proto_enumTypes[1].Descriptor()
}

func (StudentPhoneNumberType) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_users_proto_enumTypes[1]
}

func (x StudentPhoneNumberType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudentPhoneNumberType.Descriptor instead.
func (StudentPhoneNumberType) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{1}
}

type StaffPhoneNumberType int32

const (
	StaffPhoneNumberType_STAFF_PRIMARY_PHONE_NUMBER   StaffPhoneNumberType = 0
	StaffPhoneNumberType_STAFF_SECONDARY_PHONE_NUMBER StaffPhoneNumberType = 1
)

// Enum value maps for StaffPhoneNumberType.
var (
	StaffPhoneNumberType_name = map[int32]string{
		0: "STAFF_PRIMARY_PHONE_NUMBER",
		1: "STAFF_SECONDARY_PHONE_NUMBER",
	}
	StaffPhoneNumberType_value = map[string]int32{
		"STAFF_PRIMARY_PHONE_NUMBER":   0,
		"STAFF_SECONDARY_PHONE_NUMBER": 1,
	}
)

func (x StaffPhoneNumberType) Enum() *StaffPhoneNumberType {
	p := new(StaffPhoneNumberType)
	*p = x
	return p
}

func (x StaffPhoneNumberType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StaffPhoneNumberType) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_users_proto_enumTypes[2].Descriptor()
}

func (StaffPhoneNumberType) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_users_proto_enumTypes[2]
}

func (x StaffPhoneNumberType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StaffPhoneNumberType.Descriptor instead.
func (StaffPhoneNumberType) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{2}
}

type StaffWorkingStatus int32

const (
	StaffWorkingStatus_AVAILABLE StaffWorkingStatus = 0
	StaffWorkingStatus_RESIGNED  StaffWorkingStatus = 1
	StaffWorkingStatus_ON_LEAVE  StaffWorkingStatus = 2
)

// Enum value maps for StaffWorkingStatus.
var (
	StaffWorkingStatus_name = map[int32]string{
		0: "AVAILABLE",
		1: "RESIGNED",
		2: "ON_LEAVE",
	}
	StaffWorkingStatus_value = map[string]int32{
		"AVAILABLE": 0,
		"RESIGNED":  1,
		"ON_LEAVE":  2,
	}
)

func (x StaffWorkingStatus) Enum() *StaffWorkingStatus {
	p := new(StaffWorkingStatus)
	*p = x
	return p
}

func (x StaffWorkingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StaffWorkingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_users_proto_enumTypes[3].Descriptor()
}

func (StaffWorkingStatus) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_users_proto_enumTypes[3]
}

func (x StaffWorkingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StaffWorkingStatus.Descriptor instead.
func (StaffWorkingStatus) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{3}
}

type ParentPhoneNumber_ParentPhoneNumberType int32

const (
	ParentPhoneNumber_PARENT_PRIMARY_PHONE_NUMBER   ParentPhoneNumber_ParentPhoneNumberType = 0
	ParentPhoneNumber_PARENT_SECONDARY_PHONE_NUMBER ParentPhoneNumber_ParentPhoneNumberType = 1
)

// Enum value maps for ParentPhoneNumber_ParentPhoneNumberType.
var (
	ParentPhoneNumber_ParentPhoneNumberType_name = map[int32]string{
		0: "PARENT_PRIMARY_PHONE_NUMBER",
		1: "PARENT_SECONDARY_PHONE_NUMBER",
	}
	ParentPhoneNumber_ParentPhoneNumberType_value = map[string]int32{
		"PARENT_PRIMARY_PHONE_NUMBER":   0,
		"PARENT_SECONDARY_PHONE_NUMBER": 1,
	}
)

func (x ParentPhoneNumber_ParentPhoneNumberType) Enum() *ParentPhoneNumber_ParentPhoneNumberType {
	p := new(ParentPhoneNumber_ParentPhoneNumberType)
	*p = x
	return p
}

func (x ParentPhoneNumber_ParentPhoneNumberType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParentPhoneNumber_ParentPhoneNumberType) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_users_proto_enumTypes[4].Descriptor()
}

func (ParentPhoneNumber_ParentPhoneNumberType) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_users_proto_enumTypes[4]
}

func (x ParentPhoneNumber_ParentPhoneNumberType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParentPhoneNumber_ParentPhoneNumberType.Descriptor instead.
func (ParentPhoneNumber_ParentPhoneNumberType) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{10, 0}
}

type UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email             string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name              string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Avatar            string                 `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Group             UserGroup              `protobuf:"varint,5,opt,name=group,proto3,enum=usermgmt.v2.UserGroup" json:"group,omitempty"`
	PhoneNumber       string                 `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	FacebookId        string                 `protobuf:"bytes,7,opt,name=facebook_id,json=facebookId,proto3" json:"facebook_id,omitempty"`
	AppleUserId       string                 `protobuf:"bytes,8,opt,name=apple_user_id,json=appleUserId,proto3" json:"apple_user_id,omitempty"`
	GivenName         string                 `protobuf:"bytes,9,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	CountryCode       v1.Country             `protobuf:"varint,10,opt,name=country_code,json=countryCode,proto3,enum=common.v1.Country" json:"country_code,omitempty"`
	Birthday          *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender            Gender                 `protobuf:"varint,12,opt,name=gender,proto3,enum=usermgmt.v2.Gender" json:"gender,omitempty"`
	LocationIds       []string               `protobuf:"bytes,13,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	FirstName         string                 `protobuf:"bytes,14,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string                 `protobuf:"bytes,15,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FirstNamePhonetic string                 `protobuf:"bytes,16,opt,name=first_name_phonetic,json=firstNamePhonetic,proto3" json:"first_name_phonetic,omitempty"`
	LastNamePhonetic  string                 `protobuf:"bytes,17,opt,name=last_name_phonetic,json=lastNamePhonetic,proto3" json:"last_name_phonetic,omitempty"`
	FullNamePhonetic  string                 `protobuf:"bytes,18,opt,name=full_name_phonetic,json=fullNamePhonetic,proto3" json:"full_name_phonetic,omitempty"`
	ExternalUserId    string                 `protobuf:"bytes,19,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"`
	Username          string                 `protobuf:"bytes,20,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{0}
}

func (x *UserProfile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserProfile) GetGroup() UserGroup {
	if x != nil {
		return x.Group
	}
	return UserGroup_USER_GROUP_NONE
}

func (x *UserProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserProfile) GetFacebookId() string {
	if x != nil {
		return x.FacebookId
	}
	return ""
}

func (x *UserProfile) GetAppleUserId() string {
	if x != nil {
		return x.AppleUserId
	}
	return ""
}

func (x *UserProfile) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *UserProfile) GetCountryCode() v1.Country {
	if x != nil {
		return x.CountryCode
	}
	return v1.Country_COUNTRY_NONE
}

func (x *UserProfile) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *UserProfile) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_NONE
}

func (x *UserProfile) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *UserProfile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserProfile) GetFirstNamePhonetic() string {
	if x != nil {
		return x.FirstNamePhonetic
	}
	return ""
}

func (x *UserProfile) GetLastNamePhonetic() string {
	if x != nil {
		return x.LastNamePhonetic
	}
	return ""
}

func (x *UserProfile) GetFullNamePhonetic() string {
	if x != nil {
		return x.FullNamePhonetic
	}
	return ""
}

func (x *UserProfile) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

func (x *UserProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type UserNameFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName         string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FirstNamePhonetic string `protobuf:"bytes,3,opt,name=first_name_phonetic,json=firstNamePhonetic,proto3" json:"first_name_phonetic,omitempty"`
	LastNamePhonetic  string `protobuf:"bytes,4,opt,name=last_name_phonetic,json=lastNamePhonetic,proto3" json:"last_name_phonetic,omitempty"`
}

func (x *UserNameFields) Reset() {
	*x = UserNameFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNameFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNameFields) ProtoMessage() {}

func (x *UserNameFields) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNameFields.ProtoReflect.Descriptor instead.
func (*UserNameFields) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{1}
}

func (x *UserNameFields) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserNameFields) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserNameFields) GetFirstNamePhonetic() string {
	if x != nil {
		return x.FirstNamePhonetic
	}
	return ""
}

func (x *UserNameFields) GetLastNamePhonetic() string {
	if x != nil {
		return x.LastNamePhonetic
	}
	return ""
}

type Student struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserProfile *UserProfile `protobuf:"bytes,1,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	// Deprecated: Do not use.
	Grade             int32                   `protobuf:"varint,2,opt,name=grade,proto3" json:"grade,omitempty"`
	SchoolId          int32                   `protobuf:"varint,3,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	EnrollmentStatus  StudentEnrollmentStatus `protobuf:"varint,4,opt,name=enrollment_status,json=enrollmentStatus,proto3,enum=usermgmt.v2.StudentEnrollmentStatus" json:"enrollment_status,omitempty"`
	StudentExternalId string                  `protobuf:"bytes,5,opt,name=student_external_id,json=studentExternalId,proto3" json:"student_external_id,omitempty"`
	StudentNote       string                  `protobuf:"bytes,6,opt,name=student_note,json=studentNote,proto3" json:"student_note,omitempty"`
	Email             string                  `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	// Deprecated: Do not use.
	Birthday *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// Deprecated: Do not use.
	Gender  Gender `protobuf:"varint,9,opt,name=gender,proto3,enum=usermgmt.v2.Gender" json:"gender,omitempty"`
	GradeId string `protobuf:"bytes,10,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
}

func (x *Student) Reset() {
	*x = Student{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Student) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Student) ProtoMessage() {}

func (x *Student) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Student.ProtoReflect.Descriptor instead.
func (*Student) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{2}
}

func (x *Student) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

// Deprecated: Do not use.
func (x *Student) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *Student) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *Student) GetEnrollmentStatus() StudentEnrollmentStatus {
	if x != nil {
		return x.EnrollmentStatus
	}
	return StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_NONE
}

func (x *Student) GetStudentExternalId() string {
	if x != nil {
		return x.StudentExternalId
	}
	return ""
}

func (x *Student) GetStudentNote() string {
	if x != nil {
		return x.StudentNote
	}
	return ""
}

func (x *Student) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// Deprecated: Do not use.
func (x *Student) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

// Deprecated: Do not use.
func (x *Student) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_NONE
}

func (x *Student) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

type Parent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserProfile *UserProfile `protobuf:"bytes,1,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	SchoolId    int32        `protobuf:"varint,2,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
}

func (x *Parent) Reset() {
	*x = Parent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parent) ProtoMessage() {}

func (x *Parent) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parent.ProtoReflect.Descriptor instead.
func (*Parent) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{3}
}

func (x *Parent) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

func (x *Parent) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

type SchoolHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolId       string                 `protobuf:"bytes,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	SchoolCourseId string                 `protobuf:"bytes,2,opt,name=school_course_id,json=schoolCourseId,proto3" json:"school_course_id,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *SchoolHistory) Reset() {
	*x = SchoolHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolHistory) ProtoMessage() {}

func (x *SchoolHistory) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolHistory.ProtoReflect.Descriptor instead.
func (*SchoolHistory) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{4}
}

func (x *SchoolHistory) GetSchoolId() string {
	if x != nil {
		return x.SchoolId
	}
	return ""
}

func (x *SchoolHistory) GetSchoolCourseId() string {
	if x != nil {
		return x.SchoolCourseId
	}
	return ""
}

func (x *SchoolHistory) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SchoolHistory) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type EnrollmentStatusHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string                  `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	LocationId       string                  `protobuf:"bytes,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	EnrollmentStatus StudentEnrollmentStatus `protobuf:"varint,3,opt,name=enrollment_status,json=enrollmentStatus,proto3,enum=usermgmt.v2.StudentEnrollmentStatus" json:"enrollment_status,omitempty"`
	Comment          string                  `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	StartDate        *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate          *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *EnrollmentStatusHistory) Reset() {
	*x = EnrollmentStatusHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollmentStatusHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollmentStatusHistory) ProtoMessage() {}

func (x *EnrollmentStatusHistory) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollmentStatusHistory.ProtoReflect.Descriptor instead.
func (*EnrollmentStatusHistory) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{5}
}

func (x *EnrollmentStatusHistory) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *EnrollmentStatusHistory) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *EnrollmentStatusHistory) GetEnrollmentStatus() StudentEnrollmentStatus {
	if x != nil {
		return x.EnrollmentStatus
	}
	return StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_NONE
}

func (x *EnrollmentStatusHistory) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *EnrollmentStatusHistory) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *EnrollmentStatusHistory) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type UserAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId    string      `protobuf:"bytes,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	AddressType  AddressType `protobuf:"varint,2,opt,name=address_type,json=addressType,proto3,enum=usermgmt.v2.AddressType" json:"address_type,omitempty"`
	PostalCode   string      `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Prefecture   string      `protobuf:"bytes,4,opt,name=prefecture,proto3" json:"prefecture,omitempty"`
	City         string      `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	FirstStreet  string      `protobuf:"bytes,6,opt,name=first_street,json=firstStreet,proto3" json:"first_street,omitempty"`
	SecondStreet string      `protobuf:"bytes,7,opt,name=second_street,json=secondStreet,proto3" json:"second_street,omitempty"`
}

func (x *UserAddress) Reset() {
	*x = UserAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddress) ProtoMessage() {}

func (x *UserAddress) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddress.ProtoReflect.Descriptor instead.
func (*UserAddress) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{6}
}

func (x *UserAddress) GetAddressId() string {
	if x != nil {
		return x.AddressId
	}
	return ""
}

func (x *UserAddress) GetAddressType() AddressType {
	if x != nil {
		return x.AddressType
	}
	return AddressType_HOME_ADDRESS
}

func (x *UserAddress) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *UserAddress) GetPrefecture() string {
	if x != nil {
		return x.Prefecture
	}
	return ""
}

func (x *UserAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserAddress) GetFirstStreet() string {
	if x != nil {
		return x.FirstStreet
	}
	return ""
}

func (x *UserAddress) GetSecondStreet() string {
	if x != nil {
		return x.SecondStreet
	}
	return ""
}

type StudentPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber       string                   `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	HomePhoneNumber   string                   `protobuf:"bytes,2,opt,name=home_phone_number,json=homePhoneNumber,proto3" json:"home_phone_number,omitempty"`
	ContactPreference StudentContactPreference `protobuf:"varint,3,opt,name=contact_preference,json=contactPreference,proto3,enum=usermgmt.v2.StudentContactPreference" json:"contact_preference,omitempty"`
}

func (x *StudentPhoneNumber) Reset() {
	*x = StudentPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentPhoneNumber) ProtoMessage() {}

func (x *StudentPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentPhoneNumber.ProtoReflect.Descriptor instead.
func (*StudentPhoneNumber) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{7}
}

func (x *StudentPhoneNumber) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *StudentPhoneNumber) GetHomePhoneNumber() string {
	if x != nil {
		return x.HomePhoneNumber
	}
	return ""
}

func (x *StudentPhoneNumber) GetContactPreference() StudentContactPreference {
	if x != nil {
		return x.ContactPreference
	}
	return StudentContactPreference_STUDENT_PHONE_NUMBER
}

type StudentPhoneNumberWithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentPhoneNumberId string                 `protobuf:"bytes,1,opt,name=student_phone_number_id,json=studentPhoneNumberId,proto3" json:"student_phone_number_id,omitempty"`
	PhoneNumberType      StudentPhoneNumberType `protobuf:"varint,2,opt,name=phone_number_type,json=phoneNumberType,proto3,enum=usermgmt.v2.StudentPhoneNumberType" json:"phone_number_type,omitempty"`
	PhoneNumber          string                 `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *StudentPhoneNumberWithID) Reset() {
	*x = StudentPhoneNumberWithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentPhoneNumberWithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentPhoneNumberWithID) ProtoMessage() {}

func (x *StudentPhoneNumberWithID) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentPhoneNumberWithID.ProtoReflect.Descriptor instead.
func (*StudentPhoneNumberWithID) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{8}
}

func (x *StudentPhoneNumberWithID) GetStudentPhoneNumberId() string {
	if x != nil {
		return x.StudentPhoneNumberId
	}
	return ""
}

func (x *StudentPhoneNumberWithID) GetPhoneNumberType() StudentPhoneNumberType {
	if x != nil {
		return x.PhoneNumberType
	}
	return StudentPhoneNumberType_PHONE_NUMBER
}

func (x *StudentPhoneNumberWithID) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type UpdateStudentPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentPhoneNumber []*StudentPhoneNumberWithID `protobuf:"bytes,1,rep,name=student_phone_number,json=studentPhoneNumber,proto3" json:"student_phone_number,omitempty"`
	ContactPreference  StudentContactPreference    `protobuf:"varint,3,opt,name=contact_preference,json=contactPreference,proto3,enum=usermgmt.v2.StudentContactPreference" json:"contact_preference,omitempty"`
}

func (x *UpdateStudentPhoneNumber) Reset() {
	*x = UpdateStudentPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudentPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentPhoneNumber) ProtoMessage() {}

func (x *UpdateStudentPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentPhoneNumber.ProtoReflect.Descriptor instead.
func (*UpdateStudentPhoneNumber) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateStudentPhoneNumber) GetStudentPhoneNumber() []*StudentPhoneNumberWithID {
	if x != nil {
		return x.StudentPhoneNumber
	}
	return nil
}

func (x *UpdateStudentPhoneNumber) GetContactPreference() StudentContactPreference {
	if x != nil {
		return x.ContactPreference
	}
	return StudentContactPreference_STUDENT_PHONE_NUMBER
}

type ParentPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber     string                                  `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneNumberType ParentPhoneNumber_ParentPhoneNumberType `protobuf:"varint,2,opt,name=phone_number_type,json=phoneNumberType,proto3,enum=usermgmt.v2.ParentPhoneNumber_ParentPhoneNumberType" json:"phone_number_type,omitempty"`
	PhoneNumberId   string                                  `protobuf:"bytes,3,opt,name=phone_number_id,json=phoneNumberId,proto3" json:"phone_number_id,omitempty"`
}

func (x *ParentPhoneNumber) Reset() {
	*x = ParentPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentPhoneNumber) ProtoMessage() {}

func (x *ParentPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentPhoneNumber.ProtoReflect.Descriptor instead.
func (*ParentPhoneNumber) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{10}
}

func (x *ParentPhoneNumber) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ParentPhoneNumber) GetPhoneNumberType() ParentPhoneNumber_ParentPhoneNumberType {
	if x != nil {
		return x.PhoneNumberType
	}
	return ParentPhoneNumber_PARENT_PRIMARY_PHONE_NUMBER
}

func (x *ParentPhoneNumber) GetPhoneNumberId() string {
	if x != nil {
		return x.PhoneNumberId
	}
	return ""
}

// requests
type CreateStudentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolId                  int32                                `protobuf:"varint,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	StudentProfile            *CreateStudentRequest_StudentProfile `protobuf:"bytes,2,opt,name=student_profile,json=studentProfile,proto3" json:"student_profile,omitempty"`
	SchoolHistories           []*SchoolHistory                     `protobuf:"bytes,3,rep,name=school_histories,json=schoolHistories,proto3" json:"school_histories,omitempty"`
	UserAddresses             []*UserAddress                       `protobuf:"bytes,4,rep,name=user_addresses,json=userAddresses,proto3" json:"user_addresses,omitempty"`
	EnrollmentStatusHistories []*EnrollmentStatusHistory           `protobuf:"bytes,5,rep,name=enrollment_status_histories,json=enrollmentStatusHistories,proto3" json:"enrollment_status_histories,omitempty"`
}

func (x *CreateStudentRequest) Reset() {
	*x = CreateStudentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudentRequest) ProtoMessage() {}

func (x *CreateStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudentRequest.ProtoReflect.Descriptor instead.
func (*CreateStudentRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{11}
}

func (x *CreateStudentRequest) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *CreateStudentRequest) GetStudentProfile() *CreateStudentRequest_StudentProfile {
	if x != nil {
		return x.StudentProfile
	}
	return nil
}

func (x *CreateStudentRequest) GetSchoolHistories() []*SchoolHistory {
	if x != nil {
		return x.SchoolHistories
	}
	return nil
}

func (x *CreateStudentRequest) GetUserAddresses() []*UserAddress {
	if x != nil {
		return x.UserAddresses
	}
	return nil
}

func (x *CreateStudentRequest) GetEnrollmentStatusHistories() []*EnrollmentStatusHistory {
	if x != nil {
		return x.EnrollmentStatusHistories
	}
	return nil
}

type CreateParentsAndAssignToStudentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolId       int32                                                   `protobuf:"varint,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	StudentId      string                                                  `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	ParentProfiles []*CreateParentsAndAssignToStudentRequest_ParentProfile `protobuf:"bytes,3,rep,name=parent_profiles,json=parentProfiles,proto3" json:"parent_profiles,omitempty"`
}

func (x *CreateParentsAndAssignToStudentRequest) Reset() {
	*x = CreateParentsAndAssignToStudentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParentsAndAssignToStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParentsAndAssignToStudentRequest) ProtoMessage() {}

func (x *CreateParentsAndAssignToStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParentsAndAssignToStudentRequest.ProtoReflect.Descriptor instead.
func (*CreateParentsAndAssignToStudentRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{12}
}

func (x *CreateParentsAndAssignToStudentRequest) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *CreateParentsAndAssignToStudentRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *CreateParentsAndAssignToStudentRequest) GetParentProfiles() []*CreateParentsAndAssignToStudentRequest_ParentProfile {
	if x != nil {
		return x.ParentProfiles
	}
	return nil
}

type StaffPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber     string               `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneNumberType StaffPhoneNumberType `protobuf:"varint,2,opt,name=phone_number_type,json=phoneNumberType,proto3,enum=usermgmt.v2.StaffPhoneNumberType" json:"phone_number_type,omitempty"`
	PhoneNumberId   string               `protobuf:"bytes,3,opt,name=phone_number_id,json=phoneNumberId,proto3" json:"phone_number_id,omitempty"`
}

func (x *StaffPhoneNumber) Reset() {
	*x = StaffPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffPhoneNumber) ProtoMessage() {}

func (x *StaffPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffPhoneNumber.ProtoReflect.Descriptor instead.
func (*StaffPhoneNumber) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{13}
}

func (x *StaffPhoneNumber) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *StaffPhoneNumber) GetPhoneNumberType() StaffPhoneNumberType {
	if x != nil {
		return x.PhoneNumberType
	}
	return StaffPhoneNumberType_STAFF_PRIMARY_PHONE_NUMBER
}

func (x *StaffPhoneNumber) GetPhoneNumberId() string {
	if x != nil {
		return x.PhoneNumberId
	}
	return ""
}

type CreateStaffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff *CreateStaffRequest_StaffProfile `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *CreateStaffRequest) Reset() {
	*x = CreateStaffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaffRequest) ProtoMessage() {}

func (x *CreateStaffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaffRequest.ProtoReflect.Descriptor instead.
func (*CreateStaffRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{14}
}

func (x *CreateStaffRequest) GetStaff() *CreateStaffRequest_StaffProfile {
	if x != nil {
		return x.Staff
	}
	return nil
}

type CreateStaffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff *CreateStaffResponse_StaffProfile `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *CreateStaffResponse) Reset() {
	*x = CreateStaffResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaffResponse) ProtoMessage() {}

func (x *CreateStaffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaffResponse.ProtoReflect.Descriptor instead.
func (*CreateStaffResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{15}
}

func (x *CreateStaffResponse) GetStaff() *CreateStaffResponse_StaffProfile {
	if x != nil {
		return x.Staff
	}
	return nil
}

type UpdateStaffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff *UpdateStaffRequest_StaffProfile `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (x *UpdateStaffRequest) Reset() {
	*x = UpdateStaffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStaffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaffRequest) ProtoMessage() {}

func (x *UpdateStaffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaffRequest.ProtoReflect.Descriptor instead.
func (*UpdateStaffRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateStaffRequest) GetStaff() *UpdateStaffRequest_StaffProfile {
	if x != nil {
		return x.Staff
	}
	return nil
}

type UpdateStaffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *UpdateStaffResponse) Reset() {
	*x = UpdateStaffResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStaffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaffResponse) ProtoMessage() {}

func (x *UpdateStaffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaffResponse.ProtoReflect.Descriptor instead.
func (*UpdateStaffResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateStaffResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type UpdateStudentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolId                  int32                                `protobuf:"varint,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	StudentProfile            *UpdateStudentRequest_StudentProfile `protobuf:"bytes,2,opt,name=student_profile,json=studentProfile,proto3" json:"student_profile,omitempty"`
	SchoolHistories           []*SchoolHistory                     `protobuf:"bytes,3,rep,name=school_histories,json=schoolHistories,proto3" json:"school_histories,omitempty"`
	UserAddresses             []*UserAddress                       `protobuf:"bytes,4,rep,name=user_addresses,json=userAddresses,proto3" json:"user_addresses,omitempty"`
	EnrollmentStatusHistories []*EnrollmentStatusHistory           `protobuf:"bytes,5,rep,name=enrollment_status_histories,json=enrollmentStatusHistories,proto3" json:"enrollment_status_histories,omitempty"`
}

func (x *UpdateStudentRequest) Reset() {
	*x = UpdateStudentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentRequest) ProtoMessage() {}

func (x *UpdateStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentRequest.ProtoReflect.Descriptor instead.
func (*UpdateStudentRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateStudentRequest) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *UpdateStudentRequest) GetStudentProfile() *UpdateStudentRequest_StudentProfile {
	if x != nil {
		return x.StudentProfile
	}
	return nil
}

func (x *UpdateStudentRequest) GetSchoolHistories() []*SchoolHistory {
	if x != nil {
		return x.SchoolHistories
	}
	return nil
}

func (x *UpdateStudentRequest) GetUserAddresses() []*UserAddress {
	if x != nil {
		return x.UserAddresses
	}
	return nil
}

func (x *UpdateStudentRequest) GetEnrollmentStatusHistories() []*EnrollmentStatusHistory {
	if x != nil {
		return x.EnrollmentStatusHistories
	}
	return nil
}

type UpdateStaffSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId             string `protobuf:"bytes,1,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	AutoCreateTimesheet bool   `protobuf:"varint,2,opt,name=auto_create_timesheet,json=autoCreateTimesheet,proto3" json:"auto_create_timesheet,omitempty"`
}

func (x *UpdateStaffSettingRequest) Reset() {
	*x = UpdateStaffSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStaffSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaffSettingRequest) ProtoMessage() {}

func (x *UpdateStaffSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaffSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateStaffSettingRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateStaffSettingRequest) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *UpdateStaffSettingRequest) GetAutoCreateTimesheet() bool {
	if x != nil {
		return x.AutoCreateTimesheet
	}
	return false
}

type UpdateStaffSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *UpdateStaffSettingResponse) Reset() {
	*x = UpdateStaffSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStaffSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaffSettingResponse) ProtoMessage() {}

func (x *UpdateStaffSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaffSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdateStaffSettingResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateStaffSettingResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type UpdateParentsAndFamilyRelationshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolId       int32                                                      `protobuf:"varint,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	StudentId      string                                                     `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	ParentProfiles []*UpdateParentsAndFamilyRelationshipRequest_ParentProfile `protobuf:"bytes,3,rep,name=parent_profiles,json=parentProfiles,proto3" json:"parent_profiles,omitempty"`
}

func (x *UpdateParentsAndFamilyRelationshipRequest) Reset() {
	*x = UpdateParentsAndFamilyRelationshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParentsAndFamilyRelationshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParentsAndFamilyRelationshipRequest) ProtoMessage() {}

func (x *UpdateParentsAndFamilyRelationshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParentsAndFamilyRelationshipRequest.ProtoReflect.Descriptor instead.
func (*UpdateParentsAndFamilyRelationshipRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateParentsAndFamilyRelationshipRequest) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *UpdateParentsAndFamilyRelationshipRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpdateParentsAndFamilyRelationshipRequest) GetParentProfiles() []*UpdateParentsAndFamilyRelationshipRequest_ParentProfile {
	if x != nil {
		return x.ParentProfiles
	}
	return nil
}

type ReissueUserPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *ReissueUserPasswordRequest) Reset() {
	*x = ReissueUserPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReissueUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReissueUserPasswordRequest) ProtoMessage() {}

func (x *ReissueUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReissueUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*ReissueUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{22}
}

func (x *ReissueUserPasswordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReissueUserPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type UpsertStudentCoursePackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId              string                                                     `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudentPackageProfiles []*UpsertStudentCoursePackageRequest_StudentPackageProfile `protobuf:"bytes,2,rep,name=student_package_profiles,json=studentPackageProfiles,proto3" json:"student_package_profiles,omitempty"`
	// Deprecated: Do not use.
	LocationIds []string `protobuf:"bytes,3,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *UpsertStudentCoursePackageRequest) Reset() {
	*x = UpsertStudentCoursePackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStudentCoursePackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStudentCoursePackageRequest) ProtoMessage() {}

func (x *UpsertStudentCoursePackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStudentCoursePackageRequest.ProtoReflect.Descriptor instead.
func (*UpsertStudentCoursePackageRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{23}
}

func (x *UpsertStudentCoursePackageRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpsertStudentCoursePackageRequest) GetStudentPackageProfiles() []*UpsertStudentCoursePackageRequest_StudentPackageProfile {
	if x != nil {
		return x.StudentPackageProfiles
	}
	return nil
}

// Deprecated: Do not use.
func (x *UpsertStudentCoursePackageRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type StudentPackageExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId string `protobuf:"bytes,6,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	ClassId    string `protobuf:"bytes,7,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
}

func (x *StudentPackageExtra) Reset() {
	*x = StudentPackageExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentPackageExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentPackageExtra) ProtoMessage() {}

func (x *StudentPackageExtra) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentPackageExtra.ProtoReflect.Descriptor instead.
func (*StudentPackageExtra) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{24}
}

func (x *StudentPackageExtra) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *StudentPackageExtra) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

type CreateStudentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentProfile *CreateStudentResponse_StudentProfile `protobuf:"bytes,1,opt,name=student_profile,json=studentProfile,proto3" json:"student_profile,omitempty"`
}

func (x *CreateStudentResponse) Reset() {
	*x = CreateStudentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStudentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudentResponse) ProtoMessage() {}

func (x *CreateStudentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudentResponse.ProtoReflect.Descriptor instead.
func (*CreateStudentResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{25}
}

func (x *CreateStudentResponse) GetStudentProfile() *CreateStudentResponse_StudentProfile {
	if x != nil {
		return x.StudentProfile
	}
	return nil
}

type CreateParentsAndAssignToStudentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId      string                                                   `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	ParentProfiles []*CreateParentsAndAssignToStudentResponse_ParentProfile `protobuf:"bytes,2,rep,name=parent_profiles,json=parentProfiles,proto3" json:"parent_profiles,omitempty"`
}

func (x *CreateParentsAndAssignToStudentResponse) Reset() {
	*x = CreateParentsAndAssignToStudentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParentsAndAssignToStudentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParentsAndAssignToStudentResponse) ProtoMessage() {}

func (x *CreateParentsAndAssignToStudentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParentsAndAssignToStudentResponse.ProtoReflect.Descriptor instead.
func (*CreateParentsAndAssignToStudentResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{26}
}

func (x *CreateParentsAndAssignToStudentResponse) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *CreateParentsAndAssignToStudentResponse) GetParentProfiles() []*CreateParentsAndAssignToStudentResponse_ParentProfile {
	if x != nil {
		return x.ParentProfiles
	}
	return nil
}

type ReissueUserPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *ReissueUserPasswordResponse) Reset() {
	*x = ReissueUserPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReissueUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReissueUserPasswordResponse) ProtoMessage() {}

func (x *ReissueUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReissueUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*ReissueUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{27}
}

func (x *ReissueUserPasswordResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type UpdateStudentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentProfile *UpdateStudentResponse_StudentProfile `protobuf:"bytes,1,opt,name=student_profile,json=studentProfile,proto3" json:"student_profile,omitempty"`
}

func (x *UpdateStudentResponse) Reset() {
	*x = UpdateStudentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentResponse) ProtoMessage() {}

func (x *UpdateStudentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentResponse.ProtoReflect.Descriptor instead.
func (*UpdateStudentResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateStudentResponse) GetStudentProfile() *UpdateStudentResponse_StudentProfile {
	if x != nil {
		return x.StudentProfile
	}
	return nil
}

type UpdateParentsAndFamilyRelationshipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId      string                                                      `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	ParentProfiles []*UpdateParentsAndFamilyRelationshipResponse_ParentProfile `protobuf:"bytes,2,rep,name=parent_profiles,json=parentProfiles,proto3" json:"parent_profiles,omitempty"`
}

func (x *UpdateParentsAndFamilyRelationshipResponse) Reset() {
	*x = UpdateParentsAndFamilyRelationshipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParentsAndFamilyRelationshipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParentsAndFamilyRelationshipResponse) ProtoMessage() {}

func (x *UpdateParentsAndFamilyRelationshipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParentsAndFamilyRelationshipResponse.ProtoReflect.Descriptor instead.
func (*UpdateParentsAndFamilyRelationshipResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateParentsAndFamilyRelationshipResponse) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpdateParentsAndFamilyRelationshipResponse) GetParentProfiles() []*UpdateParentsAndFamilyRelationshipResponse_ParentProfile {
	if x != nil {
		return x.ParentProfiles
	}
	return nil
}

type UpsertStudentCoursePackageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId              string                                                      `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudentPackageProfiles []*UpsertStudentCoursePackageResponse_StudentPackageProfile `protobuf:"bytes,2,rep,name=student_package_profiles,json=studentPackageProfiles,proto3" json:"student_package_profiles,omitempty"`
}

func (x *UpsertStudentCoursePackageResponse) Reset() {
	*x = UpsertStudentCoursePackageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStudentCoursePackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStudentCoursePackageResponse) ProtoMessage() {}

func (x *UpsertStudentCoursePackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStudentCoursePackageResponse.ProtoReflect.Descriptor instead.
func (*UpsertStudentCoursePackageResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{30}
}

func (x *UpsertStudentCoursePackageResponse) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpsertStudentCoursePackageResponse) GetStudentPackageProfiles() []*UpsertStudentCoursePackageResponse_StudentPackageProfile {
	if x != nil {
		return x.StudentPackageProfiles
	}
	return nil
}

type RemoveParentFromStudentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId  string `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	StudentId string `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *RemoveParentFromStudentRequest) Reset() {
	*x = RemoveParentFromStudentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveParentFromStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveParentFromStudentRequest) ProtoMessage() {}

func (x *RemoveParentFromStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveParentFromStudentRequest.ProtoReflect.Descriptor instead.
func (*RemoveParentFromStudentRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{31}
}

func (x *RemoveParentFromStudentRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *RemoveParentFromStudentRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type RemoveParentFromStudentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId  string `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	StudentId string `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *RemoveParentFromStudentResponse) Reset() {
	*x = RemoveParentFromStudentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveParentFromStudentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveParentFromStudentResponse) ProtoMessage() {}

func (x *RemoveParentFromStudentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveParentFromStudentResponse.ProtoReflect.Descriptor instead.
func (*RemoveParentFromStudentResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{32}
}

func (x *RemoveParentFromStudentResponse) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *RemoveParentFromStudentResponse) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type UpdateUserProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *UpdateUserProfileRequest_UserProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *UpdateUserProfileRequest) Reset() {
	*x = UpdateUserProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserProfileRequest) ProtoMessage() {}

func (x *UpdateUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateUserProfileRequest) GetProfile() *UpdateUserProfileRequest_UserProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type UpdateUserProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *UpdateUserProfileResponse) Reset() {
	*x = UpdateUserProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserProfileResponse) ProtoMessage() {}

func (x *UpdateUserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserProfileResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserProfileResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateUserProfileResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type UpdateUserLastLoginDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastLoginDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_login_date,json=lastLoginDate,proto3" json:"last_login_date,omitempty"`
}

func (x *UpdateUserLastLoginDateRequest) Reset() {
	*x = UpdateUserLastLoginDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserLastLoginDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserLastLoginDateRequest) ProtoMessage() {}

func (x *UpdateUserLastLoginDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserLastLoginDateRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserLastLoginDateRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateUserLastLoginDateRequest) GetLastLoginDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginDate
	}
	return nil
}

type UpdateUserLastLoginDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *UpdateUserLastLoginDateResponse) Reset() {
	*x = UpdateUserLastLoginDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserLastLoginDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserLastLoginDateResponse) ProtoMessage() {}

func (x *UpdateUserLastLoginDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserLastLoginDateResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserLastLoginDateResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateUserLastLoginDateResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type RetrieveStudentAssociatedToParentAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetrieveStudentAssociatedToParentAccountRequest) Reset() {
	*x = RetrieveStudentAssociatedToParentAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStudentAssociatedToParentAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStudentAssociatedToParentAccountRequest) ProtoMessage() {}

func (x *RetrieveStudentAssociatedToParentAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStudentAssociatedToParentAccountRequest.ProtoReflect.Descriptor instead.
func (*RetrieveStudentAssociatedToParentAccountRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{37}
}

type RetrieveStudentAssociatedToParentAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*v1.BasicProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *RetrieveStudentAssociatedToParentAccountResponse) Reset() {
	*x = RetrieveStudentAssociatedToParentAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveStudentAssociatedToParentAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveStudentAssociatedToParentAccountResponse) ProtoMessage() {}

func (x *RetrieveStudentAssociatedToParentAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveStudentAssociatedToParentAccountResponse.ProtoReflect.Descriptor instead.
func (*RetrieveStudentAssociatedToParentAccountResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{38}
}

func (x *RetrieveStudentAssociatedToParentAccountResponse) GetProfiles() []*v1.BasicProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type UpdateUserDeviceTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceToken       string `protobuf:"bytes,2,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	AllowNotification bool   `protobuf:"varint,3,opt,name=allow_notification,json=allowNotification,proto3" json:"allow_notification,omitempty"`
}

func (x *UpdateUserDeviceTokenRequest) Reset() {
	*x = UpdateUserDeviceTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDeviceTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDeviceTokenRequest) ProtoMessage() {}

func (x *UpdateUserDeviceTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDeviceTokenRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserDeviceTokenRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateUserDeviceTokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserDeviceTokenRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *UpdateUserDeviceTokenRequest) GetAllowNotification() bool {
	if x != nil {
		return x.AllowNotification
	}
	return false
}

type UpdateUserDeviceTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *UpdateUserDeviceTokenResponse) Reset() {
	*x = UpdateUserDeviceTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDeviceTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDeviceTokenResponse) ProtoMessage() {}

func (x *UpdateUserDeviceTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDeviceTokenResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserDeviceTokenResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateUserDeviceTokenResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type ImportParentsAndAssignToStudentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ImportParentsAndAssignToStudentRequest) Reset() {
	*x = ImportParentsAndAssignToStudentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportParentsAndAssignToStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportParentsAndAssignToStudentRequest) ProtoMessage() {}

func (x *ImportParentsAndAssignToStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportParentsAndAssignToStudentRequest.ProtoReflect.Descriptor instead.
func (*ImportParentsAndAssignToStudentRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{41}
}

func (x *ImportParentsAndAssignToStudentRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ImportParentsAndAssignToStudentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ImportParentsAndAssignToStudentResponse) Reset() {
	*x = ImportParentsAndAssignToStudentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportParentsAndAssignToStudentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportParentsAndAssignToStudentResponse) ProtoMessage() {}

func (x *ImportParentsAndAssignToStudentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportParentsAndAssignToStudentResponse.ProtoReflect.Descriptor instead.
func (*ImportParentsAndAssignToStudentResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{42}
}

func (x *ImportParentsAndAssignToStudentResponse) GetErrors() []*ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GenerateImportParentsAndAssignToStudentTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateImportParentsAndAssignToStudentTemplateRequest) Reset() {
	*x = GenerateImportParentsAndAssignToStudentTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateImportParentsAndAssignToStudentTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateImportParentsAndAssignToStudentTemplateRequest) ProtoMessage() {}

func (x *GenerateImportParentsAndAssignToStudentTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateImportParentsAndAssignToStudentTemplateRequest.ProtoReflect.Descriptor instead.
func (*GenerateImportParentsAndAssignToStudentTemplateRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{43}
}

type GenerateImportParentsAndAssignToStudentTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GenerateImportParentsAndAssignToStudentTemplateResponse) Reset() {
	*x = GenerateImportParentsAndAssignToStudentTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateImportParentsAndAssignToStudentTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateImportParentsAndAssignToStudentTemplateResponse) ProtoMessage() {}

func (x *GenerateImportParentsAndAssignToStudentTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateImportParentsAndAssignToStudentTemplateResponse.ProtoReflect.Descriptor instead.
func (*GenerateImportParentsAndAssignToStudentTemplateResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{44}
}

func (x *GenerateImportParentsAndAssignToStudentTemplateResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchBasicProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds     []string                `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	SearchText  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"`
	Paging      *v1.Paging              `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	LocationIds []string                `protobuf:"bytes,4,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *SearchBasicProfileRequest) Reset() {
	*x = SearchBasicProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBasicProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBasicProfileRequest) ProtoMessage() {}

func (x *SearchBasicProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBasicProfileRequest.ProtoReflect.Descriptor instead.
func (*SearchBasicProfileRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{45}
}

func (x *SearchBasicProfileRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *SearchBasicProfileRequest) GetSearchText() *wrapperspb.StringValue {
	if x != nil {
		return x.SearchText
	}
	return nil
}

func (x *SearchBasicProfileRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *SearchBasicProfileRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type SearchBasicProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*v1.BasicProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
	NextPage *v1.Paging         `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
}

func (x *SearchBasicProfileResponse) Reset() {
	*x = SearchBasicProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBasicProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBasicProfileResponse) ProtoMessage() {}

func (x *SearchBasicProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBasicProfileResponse.ProtoReflect.Descriptor instead.
func (*SearchBasicProfileResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{46}
}

func (x *SearchBasicProfileResponse) GetProfiles() []*v1.BasicProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *SearchBasicProfileResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

type BasicProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string                    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string                    `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	UserGroup     string                    `protobuf:"bytes,4,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Country       v1.Country                `protobuf:"varint,5,opt,name=country,proto3,enum=common.v1.Country" json:"country,omitempty"`
	Email         string                    `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	School        *BasicProfile_School      `protobuf:"bytes,7,opt,name=school,proto3" json:"school,omitempty"`
	UserGroupV2   []*BasicProfile_UserGroup `protobuf:"bytes,8,rep,name=user_group_v2,json=userGroupV2,proto3" json:"user_group_v2,omitempty"`
	CreatedAt     *timestamppb.Timestamp    `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastLoginDate *timestamppb.Timestamp    `protobuf:"bytes,10,opt,name=last_login_date,json=lastLoginDate,proto3" json:"last_login_date,omitempty"`
	FirstName     string                    `protobuf:"bytes,11,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                    `protobuf:"bytes,12,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *BasicProfile) Reset() {
	*x = BasicProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicProfile) ProtoMessage() {}

func (x *BasicProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicProfile.ProtoReflect.Descriptor instead.
func (*BasicProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{47}
}

func (x *BasicProfile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BasicProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BasicProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *BasicProfile) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *BasicProfile) GetCountry() v1.Country {
	if x != nil {
		return x.Country
	}
	return v1.Country_COUNTRY_NONE
}

func (x *BasicProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BasicProfile) GetSchool() *BasicProfile_School {
	if x != nil {
		return x.School
	}
	return nil
}

func (x *BasicProfile) GetUserGroupV2() []*BasicProfile_UserGroup {
	if x != nil {
		return x.UserGroupV2
	}
	return nil
}

func (x *BasicProfile) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BasicProfile) GetLastLoginDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginDate
	}
	return nil
}

func (x *BasicProfile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *BasicProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type GetBasicProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *GetBasicProfileRequest) Reset() {
	*x = GetBasicProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasicProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasicProfileRequest) ProtoMessage() {}

func (x *GetBasicProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasicProfileRequest.ProtoReflect.Descriptor instead.
func (*GetBasicProfileRequest) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{48}
}

func (x *GetBasicProfileRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type GetBasicProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*BasicProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *GetBasicProfileResponse) Reset() {
	*x = GetBasicProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasicProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasicProfileResponse) ProtoMessage() {}

func (x *GetBasicProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasicProfileResponse.ProtoReflect.Descriptor instead.
func (*GetBasicProfileResponse) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{49}
}

func (x *GetBasicProfileResponse) GetProfiles() []*BasicProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type CreateStudentRequest_StudentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Deprecated: Do not use.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Deprecated: Do not use.
	PhoneNumber string     `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	CountryCode v1.Country `protobuf:"varint,5,opt,name=country_code,json=countryCode,proto3,enum=common.v1.Country" json:"country_code,omitempty"`
	// Deprecated: Do not use.
	Grade               int32                   `protobuf:"varint,6,opt,name=grade,proto3" json:"grade,omitempty"`
	EnrollmentStatus    StudentEnrollmentStatus `protobuf:"varint,7,opt,name=enrollment_status,json=enrollmentStatus,proto3,enum=usermgmt.v2.StudentEnrollmentStatus" json:"enrollment_status,omitempty"`
	StudentExternalId   string                  `protobuf:"bytes,8,opt,name=student_external_id,json=studentExternalId,proto3" json:"student_external_id,omitempty"`
	StudentNote         string                  `protobuf:"bytes,9,opt,name=student_note,json=studentNote,proto3" json:"student_note,omitempty"`
	Birthday            *timestamppb.Timestamp  `protobuf:"bytes,10,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender              Gender                  `protobuf:"varint,11,opt,name=gender,proto3,enum=usermgmt.v2.Gender" json:"gender,omitempty"`
	LocationIds         []string                `protobuf:"bytes,12,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	EnrollmentStatusStr string                  `protobuf:"bytes,13,opt,name=enrollment_status_str,json=enrollmentStatusStr,proto3" json:"enrollment_status_str,omitempty"`
	FirstName           string                  `protobuf:"bytes,14,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName            string                  `protobuf:"bytes,15,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FirstNamePhonetic   string                  `protobuf:"bytes,16,opt,name=first_name_phonetic,json=firstNamePhonetic,proto3" json:"first_name_phonetic,omitempty"`
	LastNamePhonetic    string                  `protobuf:"bytes,17,opt,name=last_name_phonetic,json=lastNamePhonetic,proto3" json:"last_name_phonetic,omitempty"`
	StudentPhoneNumber  *StudentPhoneNumber     `protobuf:"bytes,18,opt,name=student_phone_number,json=studentPhoneNumber,proto3" json:"student_phone_number,omitempty"`
	GradeId             string                  `protobuf:"bytes,19,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
	TagIds              []string                `protobuf:"bytes,20,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
}

func (x *CreateStudentRequest_StudentProfile) Reset() {
	*x = CreateStudentRequest_StudentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStudentRequest_StudentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudentRequest_StudentProfile) ProtoMessage() {}

func (x *CreateStudentRequest_StudentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudentRequest_StudentProfile.ProtoReflect.Descriptor instead.
func (*CreateStudentRequest_StudentProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CreateStudentRequest_StudentProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Deprecated: Do not use.
func (x *CreateStudentRequest_StudentProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Do not use.
func (x *CreateStudentRequest_StudentProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetCountryCode() v1.Country {
	if x != nil {
		return x.CountryCode
	}
	return v1.Country_COUNTRY_NONE
}

// Deprecated: Do not use.
func (x *CreateStudentRequest_StudentProfile) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *CreateStudentRequest_StudentProfile) GetEnrollmentStatus() StudentEnrollmentStatus {
	if x != nil {
		return x.EnrollmentStatus
	}
	return StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_NONE
}

func (x *CreateStudentRequest_StudentProfile) GetStudentExternalId() string {
	if x != nil {
		return x.StudentExternalId
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetStudentNote() string {
	if x != nil {
		return x.StudentNote
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *CreateStudentRequest_StudentProfile) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_NONE
}

func (x *CreateStudentRequest_StudentProfile) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *CreateStudentRequest_StudentProfile) GetEnrollmentStatusStr() string {
	if x != nil {
		return x.EnrollmentStatusStr
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetFirstNamePhonetic() string {
	if x != nil {
		return x.FirstNamePhonetic
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetLastNamePhonetic() string {
	if x != nil {
		return x.LastNamePhonetic
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetStudentPhoneNumber() *StudentPhoneNumber {
	if x != nil {
		return x.StudentPhoneNumber
	}
	return nil
}

func (x *CreateStudentRequest_StudentProfile) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *CreateStudentRequest_StudentProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type CreateParentsAndAssignToStudentRequest_ParentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Deprecated: Do not use.
	PhoneNumber        string               `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	CountryCode        v1.Country           `protobuf:"varint,5,opt,name=country_code,json=countryCode,proto3,enum=common.v1.Country" json:"country_code,omitempty"`
	Relationship       FamilyRelationship   `protobuf:"varint,6,opt,name=relationship,proto3,enum=usermgmt.v2.FamilyRelationship" json:"relationship,omitempty"`
	TagIds             []string             `protobuf:"bytes,7,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	ParentPhoneNumbers []*ParentPhoneNumber `protobuf:"bytes,8,rep,name=parent_phone_numbers,json=parentPhoneNumbers,proto3" json:"parent_phone_numbers,omitempty"`
	Remarks            string               `protobuf:"bytes,9,opt,name=remarks,proto3" json:"remarks,omitempty"`
	UserNameFields     *UserNameFields      `protobuf:"bytes,10,opt,name=user_name_fields,json=userNameFields,proto3" json:"user_name_fields,omitempty"`
	ExternalUserId     string               `protobuf:"bytes,11,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"`
	Username           string               `protobuf:"bytes,12,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) Reset() {
	*x = CreateParentsAndAssignToStudentRequest_ParentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParentsAndAssignToStudentRequest_ParentProfile) ProtoMessage() {}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParentsAndAssignToStudentRequest_ParentProfile.ProtoReflect.Descriptor instead.
func (*CreateParentsAndAssignToStudentRequest_ParentProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Do not use.
func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetCountryCode() v1.Country {
	if x != nil {
		return x.CountryCode
	}
	return v1.Country_COUNTRY_NONE
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetRelationship() FamilyRelationship {
	if x != nil {
		return x.Relationship
	}
	return FamilyRelationship_FAMILY_RELATIONSHIP_NONE
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetParentPhoneNumbers() []*ParentPhoneNumber {
	if x != nil {
		return x.ParentPhoneNumbers
	}
	return nil
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetUserNameFields() *UserNameFields {
	if x != nil {
		return x.UserNameFields
	}
	return nil
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

func (x *CreateParentsAndAssignToStudentRequest_ParentProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CreateStaffRequest_StaffProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OrganizationId string     `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserGroup      UserGroup  `protobuf:"varint,3,opt,name=user_group,json=userGroup,proto3,enum=usermgmt.v2.UserGroup" json:"user_group,omitempty"`
	Country        v1.Country `protobuf:"varint,4,opt,name=country,proto3,enum=common.v1.Country" json:"country,omitempty"`
	// Deprecated: Do not use.
	PhoneNumber      string                 `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email            string                 `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Avatar           string                 `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
	UserGroupIds     []string               `protobuf:"bytes,8,rep,name=user_group_ids,json=userGroupIds,proto3" json:"user_group_ids,omitempty"`
	LocationIds      []string               `protobuf:"bytes,9,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	Birthday         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender           Gender                 `protobuf:"varint,11,opt,name=gender,proto3,enum=usermgmt.v2.Gender" json:"gender,omitempty"`
	StaffPhoneNumber []*StaffPhoneNumber    `protobuf:"bytes,12,rep,name=staff_phone_number,json=staffPhoneNumber,proto3" json:"staff_phone_number,omitempty"`
	WorkingStatus    StaffWorkingStatus     `protobuf:"varint,13,opt,name=working_status,json=workingStatus,proto3,enum=usermgmt.v2.StaffWorkingStatus" json:"working_status,omitempty"`
	StartDate        *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate          *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Remarks          string                 `protobuf:"bytes,16,opt,name=remarks,proto3" json:"remarks,omitempty"`
	UserNameFields   *UserNameFields        `protobuf:"bytes,17,opt,name=user_name_fields,json=userNameFields,proto3" json:"user_name_fields,omitempty"`
	TagIds           []string               `protobuf:"bytes,18,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	ExternalUserId   string                 `protobuf:"bytes,19,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"`
	Username         string                 `protobuf:"bytes,20,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *CreateStaffRequest_StaffProfile) Reset() {
	*x = CreateStaffRequest_StaffProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaffRequest_StaffProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaffRequest_StaffProfile) ProtoMessage() {}

func (x *CreateStaffRequest_StaffProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaffRequest_StaffProfile.ProtoReflect.Descriptor instead.
func (*CreateStaffRequest_StaffProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CreateStaffRequest_StaffProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStaffRequest_StaffProfile) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateStaffRequest_StaffProfile) GetUserGroup() UserGroup {
	if x != nil {
		return x.UserGroup
	}
	return UserGroup_USER_GROUP_NONE
}

func (x *CreateStaffRequest_StaffProfile) GetCountry() v1.Country {
	if x != nil {
		return x.Country
	}
	return v1.Country_COUNTRY_NONE
}

// Deprecated: Do not use.
func (x *CreateStaffRequest_StaffProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateStaffRequest_StaffProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateStaffRequest_StaffProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreateStaffRequest_StaffProfile) GetUserGroupIds() []string {
	if x != nil {
		return x.UserGroupIds
	}
	return nil
}

func (x *CreateStaffRequest_StaffProfile) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *CreateStaffRequest_StaffProfile) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *CreateStaffRequest_StaffProfile) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_NONE
}

func (x *CreateStaffRequest_StaffProfile) GetStaffPhoneNumber() []*StaffPhoneNumber {
	if x != nil {
		return x.StaffPhoneNumber
	}
	return nil
}

func (x *CreateStaffRequest_StaffProfile) GetWorkingStatus() StaffWorkingStatus {
	if x != nil {
		return x.WorkingStatus
	}
	return StaffWorkingStatus_AVAILABLE
}

func (x *CreateStaffRequest_StaffProfile) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateStaffRequest_StaffProfile) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *CreateStaffRequest_StaffProfile) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *CreateStaffRequest_StaffProfile) GetUserNameFields() *UserNameFields {
	if x != nil {
		return x.UserNameFields
	}
	return nil
}

func (x *CreateStaffRequest_StaffProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *CreateStaffRequest_StaffProfile) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

func (x *CreateStaffRequest_StaffProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CreateStaffResponse_StaffProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId        string     `protobuf:"bytes,1,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	Name           string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OrganizationId string     `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserGroup      UserGroup  `protobuf:"varint,4,opt,name=user_group,json=userGroup,proto3,enum=usermgmt.v2.UserGroup" json:"user_group,omitempty"`
	Country        v1.Country `protobuf:"varint,5,opt,name=country,proto3,enum=common.v1.Country" json:"country,omitempty"`
	// Deprecated: Do not use.
	PhoneNumber      string                 `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email            string                 `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Avatar           string                 `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	UserGroupIds     []string               `protobuf:"bytes,9,rep,name=user_group_ids,json=userGroupIds,proto3" json:"user_group_ids,omitempty"`
	LocationIds      []string               `protobuf:"bytes,10,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	Birthday         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender           Gender                 `protobuf:"varint,12,opt,name=gender,proto3,enum=usermgmt.v2.Gender" json:"gender,omitempty"`
	StaffPhoneNumber []*StaffPhoneNumber    `protobuf:"bytes,13,rep,name=staff_phone_number,json=staffPhoneNumber,proto3" json:"staff_phone_number,omitempty"`
	WorkingStatus    StaffWorkingStatus     `protobuf:"varint,14,opt,name=working_status,json=workingStatus,proto3,enum=usermgmt.v2.StaffWorkingStatus" json:"working_status,omitempty"`
	StartDate        *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate          *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Remarks          string                 `protobuf:"bytes,17,opt,name=remarks,proto3" json:"remarks,omitempty"`
	UserNameFields   *UserNameFields        `protobuf:"bytes,18,opt,name=user_name_fields,json=userNameFields,proto3" json:"user_name_fields,omitempty"`
	TagIds           []string               `protobuf:"bytes,19,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	ExternalUserId   string                 `protobuf:"bytes,20,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"`
	Username         string                 `protobuf:"bytes,21,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *CreateStaffResponse_StaffProfile) Reset() {
	*x = CreateStaffResponse_StaffProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaffResponse_StaffProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaffResponse_StaffProfile) ProtoMessage() {}

func (x *CreateStaffResponse_StaffProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaffResponse_StaffProfile.ProtoReflect.Descriptor instead.
func (*CreateStaffResponse_StaffProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CreateStaffResponse_StaffProfile) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *CreateStaffResponse_StaffProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStaffResponse_StaffProfile) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateStaffResponse_StaffProfile) GetUserGroup() UserGroup {
	if x != nil {
		return x.UserGroup
	}
	return UserGroup_USER_GROUP_NONE
}

func (x *CreateStaffResponse_StaffProfile) GetCountry() v1.Country {
	if x != nil {
		return x.Country
	}
	return v1.Country_COUNTRY_NONE
}

// Deprecated: Do not use.
func (x *CreateStaffResponse_StaffProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateStaffResponse_StaffProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateStaffResponse_StaffProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreateStaffResponse_StaffProfile) GetUserGroupIds() []string {
	if x != nil {
		return x.UserGroupIds
	}
	return nil
}

func (x *CreateStaffResponse_StaffProfile) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *CreateStaffResponse_StaffProfile) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *CreateStaffResponse_StaffProfile) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_NONE
}

func (x *CreateStaffResponse_StaffProfile) GetStaffPhoneNumber() []*StaffPhoneNumber {
	if x != nil {
		return x.StaffPhoneNumber
	}
	return nil
}

func (x *CreateStaffResponse_StaffProfile) GetWorkingStatus() StaffWorkingStatus {
	if x != nil {
		return x.WorkingStatus
	}
	return StaffWorkingStatus_AVAILABLE
}

func (x *CreateStaffResponse_StaffProfile) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateStaffResponse_StaffProfile) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *CreateStaffResponse_StaffProfile) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *CreateStaffResponse_StaffProfile) GetUserNameFields() *UserNameFields {
	if x != nil {
		return x.UserNameFields
	}
	return nil
}

func (x *CreateStaffResponse_StaffProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *CreateStaffResponse_StaffProfile) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

func (x *CreateStaffResponse_StaffProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type UpdateStaffRequest_StaffProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId          string                 `protobuf:"bytes,1,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email            string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	UserGroupIds     []string               `protobuf:"bytes,4,rep,name=user_group_ids,json=userGroupIds,proto3" json:"user_group_ids,omitempty"`
	LocationIds      []string               `protobuf:"bytes,5,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	Birthday         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender           Gender                 `protobuf:"varint,7,opt,name=gender,proto3,enum=usermgmt.v2.Gender" json:"gender,omitempty"`
	StaffPhoneNumber []*StaffPhoneNumber    `protobuf:"bytes,8,rep,name=staff_phone_number,json=staffPhoneNumber,proto3" json:"staff_phone_number,omitempty"`
	WorkingStatus    StaffWorkingStatus     `protobuf:"varint,9,opt,name=working_status,json=workingStatus,proto3,enum=usermgmt.v2.StaffWorkingStatus" json:"working_status,omitempty"`
	StartDate        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate          *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Remarks          string                 `protobuf:"bytes,12,opt,name=remarks,proto3" json:"remarks,omitempty"`
	UserNameFields   *UserNameFields        `protobuf:"bytes,13,opt,name=user_name_fields,json=userNameFields,proto3" json:"user_name_fields,omitempty"`
	TagIds           []string               `protobuf:"bytes,14,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	ExternalUserId   string                 `protobuf:"bytes,15,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"`
	Username         string                 `protobuf:"bytes,16,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *UpdateStaffRequest_StaffProfile) Reset() {
	*x = UpdateStaffRequest_StaffProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStaffRequest_StaffProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaffRequest_StaffProfile) ProtoMessage() {}

func (x *UpdateStaffRequest_StaffProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaffRequest_StaffProfile.ProtoReflect.Descriptor instead.
func (*UpdateStaffRequest_StaffProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{16, 0}
}

func (x *UpdateStaffRequest_StaffProfile) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *UpdateStaffRequest_StaffProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateStaffRequest_StaffProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateStaffRequest_StaffProfile) GetUserGroupIds() []string {
	if x != nil {
		return x.UserGroupIds
	}
	return nil
}

func (x *UpdateStaffRequest_StaffProfile) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *UpdateStaffRequest_StaffProfile) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *UpdateStaffRequest_StaffProfile) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_NONE
}

func (x *UpdateStaffRequest_StaffProfile) GetStaffPhoneNumber() []*StaffPhoneNumber {
	if x != nil {
		return x.StaffPhoneNumber
	}
	return nil
}

func (x *UpdateStaffRequest_StaffProfile) GetWorkingStatus() StaffWorkingStatus {
	if x != nil {
		return x.WorkingStatus
	}
	return StaffWorkingStatus_AVAILABLE
}

func (x *UpdateStaffRequest_StaffProfile) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateStaffRequest_StaffProfile) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *UpdateStaffRequest_StaffProfile) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *UpdateStaffRequest_StaffProfile) GetUserNameFields() *UserNameFields {
	if x != nil {
		return x.UserNameFields
	}
	return nil
}

func (x *UpdateStaffRequest_StaffProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *UpdateStaffRequest_StaffProfile) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

func (x *UpdateStaffRequest_StaffProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type UpdateStudentRequest_StudentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Deprecated: Do not use.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Deprecated: Do not use.
	Grade               int32                   `protobuf:"varint,3,opt,name=grade,proto3" json:"grade,omitempty"`
	EnrollmentStatus    StudentEnrollmentStatus `protobuf:"varint,4,opt,name=enrollment_status,json=enrollmentStatus,proto3,enum=usermgmt.v2.StudentEnrollmentStatus" json:"enrollment_status,omitempty"`
	StudentExternalId   string                  `protobuf:"bytes,5,opt,name=student_external_id,json=studentExternalId,proto3" json:"student_external_id,omitempty"`
	StudentNote         string                  `protobuf:"bytes,6,opt,name=student_note,json=studentNote,proto3" json:"student_note,omitempty"`
	Email               string                  `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Birthday            *timestamppb.Timestamp  `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender              Gender                  `protobuf:"varint,9,opt,name=gender,proto3,enum=usermgmt.v2.Gender" json:"gender,omitempty"`
	LocationIds         []string                `protobuf:"bytes,10,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	EnrollmentStatusStr string                  `protobuf:"bytes,11,opt,name=enrollment_status_str,json=enrollmentStatusStr,proto3" json:"enrollment_status_str,omitempty"`
	FirstName           string                  `protobuf:"bytes,12,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName            string                  `protobuf:"bytes,13,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FirstNamePhonetic   string                  `protobuf:"bytes,14,opt,name=first_name_phonetic,json=firstNamePhonetic,proto3" json:"first_name_phonetic,omitempty"`
	LastNamePhonetic    string                  `protobuf:"bytes,15,opt,name=last_name_phonetic,json=lastNamePhonetic,proto3" json:"last_name_phonetic,omitempty"`
	// Deprecated: Do not use.
	StudentPhoneNumber  *StudentPhoneNumber       `protobuf:"bytes,16,opt,name=student_phone_number,json=studentPhoneNumber,proto3" json:"student_phone_number,omitempty"`
	GradeId             string                    `protobuf:"bytes,17,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
	TagIds              []string                  `protobuf:"bytes,18,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	StudentPhoneNumbers *UpdateStudentPhoneNumber `protobuf:"bytes,19,opt,name=student_phone_numbers,json=studentPhoneNumbers,proto3" json:"student_phone_numbers,omitempty"`
}

func (x *UpdateStudentRequest_StudentProfile) Reset() {
	*x = UpdateStudentRequest_StudentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudentRequest_StudentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentRequest_StudentProfile) ProtoMessage() {}

func (x *UpdateStudentRequest_StudentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentRequest_StudentProfile.ProtoReflect.Descriptor instead.
func (*UpdateStudentRequest_StudentProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{18, 0}
}

func (x *UpdateStudentRequest_StudentProfile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Deprecated: Do not use.
func (x *UpdateStudentRequest_StudentProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Do not use.
func (x *UpdateStudentRequest_StudentProfile) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *UpdateStudentRequest_StudentProfile) GetEnrollmentStatus() StudentEnrollmentStatus {
	if x != nil {
		return x.EnrollmentStatus
	}
	return StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_NONE
}

func (x *UpdateStudentRequest_StudentProfile) GetStudentExternalId() string {
	if x != nil {
		return x.StudentExternalId
	}
	return ""
}

func (x *UpdateStudentRequest_StudentProfile) GetStudentNote() string {
	if x != nil {
		return x.StudentNote
	}
	return ""
}

func (x *UpdateStudentRequest_StudentProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateStudentRequest_StudentProfile) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *UpdateStudentRequest_StudentProfile) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_NONE
}

func (x *UpdateStudentRequest_StudentProfile) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *UpdateStudentRequest_StudentProfile) GetEnrollmentStatusStr() string {
	if x != nil {
		return x.EnrollmentStatusStr
	}
	return ""
}

func (x *UpdateStudentRequest_StudentProfile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateStudentRequest_StudentProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdateStudentRequest_StudentProfile) GetFirstNamePhonetic() string {
	if x != nil {
		return x.FirstNamePhonetic
	}
	return ""
}

func (x *UpdateStudentRequest_StudentProfile) GetLastNamePhonetic() string {
	if x != nil {
		return x.LastNamePhonetic
	}
	return ""
}

// Deprecated: Do not use.
func (x *UpdateStudentRequest_StudentProfile) GetStudentPhoneNumber() *StudentPhoneNumber {
	if x != nil {
		return x.StudentPhoneNumber
	}
	return nil
}

func (x *UpdateStudentRequest_StudentProfile) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *UpdateStudentRequest_StudentProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *UpdateStudentRequest_StudentProfile) GetStudentPhoneNumbers() *UpdateStudentPhoneNumber {
	if x != nil {
		return x.StudentPhoneNumbers
	}
	return nil
}

type UpdateParentsAndFamilyRelationshipRequest_ParentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email              string               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Relationship       FamilyRelationship   `protobuf:"varint,3,opt,name=relationship,proto3,enum=usermgmt.v2.FamilyRelationship" json:"relationship,omitempty"`
	TagIds             []string             `protobuf:"bytes,4,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	ParentPhoneNumbers []*ParentPhoneNumber `protobuf:"bytes,5,rep,name=parent_phone_numbers,json=parentPhoneNumbers,proto3" json:"parent_phone_numbers,omitempty"`
	Remarks            string               `protobuf:"bytes,6,opt,name=remarks,proto3" json:"remarks,omitempty"`
	UserNameFields     *UserNameFields      `protobuf:"bytes,7,opt,name=user_name_fields,json=userNameFields,proto3" json:"user_name_fields,omitempty"`
	ExternalUserId     string               `protobuf:"bytes,8,opt,name=external_user_id,json=externalUserId,proto3" json:"external_user_id,omitempty"`
	Username           string               `protobuf:"bytes,9,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) Reset() {
	*x = UpdateParentsAndFamilyRelationshipRequest_ParentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParentsAndFamilyRelationshipRequest_ParentProfile) ProtoMessage() {}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParentsAndFamilyRelationshipRequest_ParentProfile.ProtoReflect.Descriptor instead.
func (*UpdateParentsAndFamilyRelationshipRequest_ParentProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{21, 0}
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) GetRelationship() FamilyRelationship {
	if x != nil {
		return x.Relationship
	}
	return FamilyRelationship_FAMILY_RELATIONSHIP_NONE
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) GetParentPhoneNumbers() []*ParentPhoneNumber {
	if x != nil {
		return x.ParentPhoneNumbers
	}
	return nil
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) GetUserNameFields() *UserNameFields {
	if x != nil {
		return x.UserNameFields
	}
	return nil
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) GetExternalUserId() string {
	if x != nil {
		return x.ExternalUserId
	}
	return ""
}

func (x *UpdateParentsAndFamilyRelationshipRequest_ParentProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type UpsertStudentCoursePackageRequest_StudentPackageProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//
	//	*UpsertStudentCoursePackageRequest_StudentPackageProfile_CourseId
	//	*UpsertStudentCoursePackageRequest_StudentPackageProfile_StudentPackageId
	Id        isUpsertStudentCoursePackageRequest_StudentPackageProfile_Id `protobuf_oneof:"id"`
	StartTime *timestamppb.Timestamp                                       `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp                                       `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Deprecated: Do not use.
	LocationIds         []string               `protobuf:"bytes,5,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	StudentPackageExtra []*StudentPackageExtra `protobuf:"bytes,6,rep,name=student_package_extra,json=studentPackageExtra,proto3" json:"student_package_extra,omitempty"`
}

func (x *UpsertStudentCoursePackageRequest_StudentPackageProfile) Reset() {
	*x = UpsertStudentCoursePackageRequest_StudentPackageProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStudentCoursePackageRequest_StudentPackageProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStudentCoursePackageRequest_StudentPackageProfile) ProtoMessage() {}

func (x *UpsertStudentCoursePackageRequest_StudentPackageProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStudentCoursePackageRequest_StudentPackageProfile.ProtoReflect.Descriptor instead.
func (*UpsertStudentCoursePackageRequest_StudentPackageProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{23, 0}
}

func (m *UpsertStudentCoursePackageRequest_StudentPackageProfile) GetId() isUpsertStudentCoursePackageRequest_StudentPackageProfile_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *UpsertStudentCoursePackageRequest_StudentPackageProfile) GetCourseId() string {
	if x, ok := x.GetId().(*UpsertStudentCoursePackageRequest_StudentPackageProfile_CourseId); ok {
		return x.CourseId
	}
	return ""
}

func (x *UpsertStudentCoursePackageRequest_StudentPackageProfile) GetStudentPackageId() string {
	if x, ok := x.GetId().(*UpsertStudentCoursePackageRequest_StudentPackageProfile_StudentPackageId); ok {
		return x.StudentPackageId
	}
	return ""
}

func (x *UpsertStudentCoursePackageRequest_StudentPackageProfile) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpsertStudentCoursePackageRequest_StudentPackageProfile) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// Deprecated: Do not use.
func (x *UpsertStudentCoursePackageRequest_StudentPackageProfile) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *UpsertStudentCoursePackageRequest_StudentPackageProfile) GetStudentPackageExtra() []*StudentPackageExtra {
	if x != nil {
		return x.StudentPackageExtra
	}
	return nil
}

type isUpsertStudentCoursePackageRequest_StudentPackageProfile_Id interface {
	isUpsertStudentCoursePackageRequest_StudentPackageProfile_Id()
}

type UpsertStudentCoursePackageRequest_StudentPackageProfile_CourseId struct {
	CourseId string `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3,oneof"`
}

type UpsertStudentCoursePackageRequest_StudentPackageProfile_StudentPackageId struct {
	StudentPackageId string `protobuf:"bytes,2,opt,name=student_package_id,json=studentPackageId,proto3,oneof"`
}

func (*UpsertStudentCoursePackageRequest_StudentPackageProfile_CourseId) isUpsertStudentCoursePackageRequest_StudentPackageProfile_Id() {
}

func (*UpsertStudentCoursePackageRequest_StudentPackageProfile_StudentPackageId) isUpsertStudentCoursePackageRequest_StudentPackageProfile_Id() {
}

type CreateStudentResponse_StudentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Student            *Student            `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
	StudentPassword    string              `protobuf:"bytes,2,opt,name=student_password,json=studentPassword,proto3" json:"student_password,omitempty"`
	StudentPhoneNumber *StudentPhoneNumber `protobuf:"bytes,3,opt,name=student_phone_number,json=studentPhoneNumber,proto3" json:"student_phone_number,omitempty"`
	TagIds             []string            `protobuf:"bytes,4,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
}

func (x *CreateStudentResponse_StudentProfile) Reset() {
	*x = CreateStudentResponse_StudentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStudentResponse_StudentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudentResponse_StudentProfile) ProtoMessage() {}

func (x *CreateStudentResponse_StudentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudentResponse_StudentProfile.ProtoReflect.Descriptor instead.
func (*CreateStudentResponse_StudentProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{25, 0}
}

func (x *CreateStudentResponse_StudentProfile) GetStudent() *Student {
	if x != nil {
		return x.Student
	}
	return nil
}

func (x *CreateStudentResponse_StudentProfile) GetStudentPassword() string {
	if x != nil {
		return x.StudentPassword
	}
	return ""
}

func (x *CreateStudentResponse_StudentProfile) GetStudentPhoneNumber() *StudentPhoneNumber {
	if x != nil {
		return x.StudentPhoneNumber
	}
	return nil
}

func (x *CreateStudentResponse_StudentProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type CreateParentsAndAssignToStudentResponse_ParentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent             *Parent              `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	ParentPassword     string               `protobuf:"bytes,2,opt,name=parent_password,json=parentPassword,proto3" json:"parent_password,omitempty"`
	Relationship       FamilyRelationship   `protobuf:"varint,3,opt,name=relationship,proto3,enum=usermgmt.v2.FamilyRelationship" json:"relationship,omitempty"`
	TagIds             []string             `protobuf:"bytes,4,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	ParentPhoneNumbers []*ParentPhoneNumber `protobuf:"bytes,5,rep,name=parent_phone_numbers,json=parentPhoneNumbers,proto3" json:"parent_phone_numbers,omitempty"`
	Remarks            string               `protobuf:"bytes,6,opt,name=remarks,proto3" json:"remarks,omitempty"`
	UserNameFields     *UserNameFields      `protobuf:"bytes,7,opt,name=user_name_fields,json=userNameFields,proto3" json:"user_name_fields,omitempty"`
}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) Reset() {
	*x = CreateParentsAndAssignToStudentResponse_ParentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParentsAndAssignToStudentResponse_ParentProfile) ProtoMessage() {}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParentsAndAssignToStudentResponse_ParentProfile.ProtoReflect.Descriptor instead.
func (*CreateParentsAndAssignToStudentResponse_ParentProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{26, 0}
}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) GetParent() *Parent {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) GetParentPassword() string {
	if x != nil {
		return x.ParentPassword
	}
	return ""
}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) GetRelationship() FamilyRelationship {
	if x != nil {
		return x.Relationship
	}
	return FamilyRelationship_FAMILY_RELATIONSHIP_NONE
}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) GetParentPhoneNumbers() []*ParentPhoneNumber {
	if x != nil {
		return x.ParentPhoneNumbers
	}
	return nil
}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *CreateParentsAndAssignToStudentResponse_ParentProfile) GetUserNameFields() *UserNameFields {
	if x != nil {
		return x.UserNameFields
	}
	return nil
}

type UpdateStudentResponse_StudentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Deprecated: Do not use.
	Grade               int32                   `protobuf:"varint,3,opt,name=grade,proto3" json:"grade,omitempty"`
	EnrollmentStatus    StudentEnrollmentStatus `protobuf:"varint,4,opt,name=enrollment_status,json=enrollmentStatus,proto3,enum=usermgmt.v2.StudentEnrollmentStatus" json:"enrollment_status,omitempty"`
	StudentExternalId   string                  `protobuf:"bytes,5,opt,name=student_external_id,json=studentExternalId,proto3" json:"student_external_id,omitempty"`
	StudentNote         string                  `protobuf:"bytes,6,opt,name=student_note,json=studentNote,proto3" json:"student_note,omitempty"`
	Email               string                  `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Birthday            *timestamppb.Timestamp  `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender              Gender                  `protobuf:"varint,9,opt,name=gender,proto3,enum=usermgmt.v2.Gender" json:"gender,omitempty"`
	LocationIds         []string                `protobuf:"bytes,10,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	EnrollmentStatusStr string                  `protobuf:"bytes,11,opt,name=enrollment_status_str,json=enrollmentStatusStr,proto3" json:"enrollment_status_str,omitempty"`
	FirstName           string                  `protobuf:"bytes,12,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName            string                  `protobuf:"bytes,13,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FirstNamePhonetic   string                  `protobuf:"bytes,14,opt,name=first_name_phonetic,json=firstNamePhonetic,proto3" json:"first_name_phonetic,omitempty"`
	LastNamePhonetic    string                  `protobuf:"bytes,15,opt,name=last_name_phonetic,json=lastNamePhonetic,proto3" json:"last_name_phonetic,omitempty"`
	FullNamePhonetic    string                  `protobuf:"bytes,16,opt,name=full_name_phonetic,json=fullNamePhonetic,proto3" json:"full_name_phonetic,omitempty"`
	StudentPhoneNumber  *StudentPhoneNumber     `protobuf:"bytes,17,opt,name=student_phone_number,json=studentPhoneNumber,proto3" json:"student_phone_number,omitempty"`
	GradeId             string                  `protobuf:"bytes,18,opt,name=grade_id,json=gradeId,proto3" json:"grade_id,omitempty"`
	TagIds              []string                `protobuf:"bytes,19,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
}

func (x *UpdateStudentResponse_StudentProfile) Reset() {
	*x = UpdateStudentResponse_StudentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudentResponse_StudentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentResponse_StudentProfile) ProtoMessage() {}

func (x *UpdateStudentResponse_StudentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentResponse_StudentProfile.ProtoReflect.Descriptor instead.
func (*UpdateStudentResponse_StudentProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{28, 0}
}

func (x *UpdateStudentResponse_StudentProfile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Do not use.
func (x *UpdateStudentResponse_StudentProfile) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *UpdateStudentResponse_StudentProfile) GetEnrollmentStatus() StudentEnrollmentStatus {
	if x != nil {
		return x.EnrollmentStatus
	}
	return StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_NONE
}

func (x *UpdateStudentResponse_StudentProfile) GetStudentExternalId() string {
	if x != nil {
		return x.StudentExternalId
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetStudentNote() string {
	if x != nil {
		return x.StudentNote
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *UpdateStudentResponse_StudentProfile) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_NONE
}

func (x *UpdateStudentResponse_StudentProfile) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *UpdateStudentResponse_StudentProfile) GetEnrollmentStatusStr() string {
	if x != nil {
		return x.EnrollmentStatusStr
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetFirstNamePhonetic() string {
	if x != nil {
		return x.FirstNamePhonetic
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetLastNamePhonetic() string {
	if x != nil {
		return x.LastNamePhonetic
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetFullNamePhonetic() string {
	if x != nil {
		return x.FullNamePhonetic
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetStudentPhoneNumber() *StudentPhoneNumber {
	if x != nil {
		return x.StudentPhoneNumber
	}
	return nil
}

func (x *UpdateStudentResponse_StudentProfile) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *UpdateStudentResponse_StudentProfile) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type UpdateParentsAndFamilyRelationshipResponse_ParentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent       *Parent            `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Relationship FamilyRelationship `protobuf:"varint,2,opt,name=relationship,proto3,enum=usermgmt.v2.FamilyRelationship" json:"relationship,omitempty"`
}

func (x *UpdateParentsAndFamilyRelationshipResponse_ParentProfile) Reset() {
	*x = UpdateParentsAndFamilyRelationshipResponse_ParentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParentsAndFamilyRelationshipResponse_ParentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParentsAndFamilyRelationshipResponse_ParentProfile) ProtoMessage() {}

func (x *UpdateParentsAndFamilyRelationshipResponse_ParentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParentsAndFamilyRelationshipResponse_ParentProfile.ProtoReflect.Descriptor instead.
func (*UpdateParentsAndFamilyRelationshipResponse_ParentProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{29, 0}
}

func (x *UpdateParentsAndFamilyRelationshipResponse_ParentProfile) GetParent() *Parent {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *UpdateParentsAndFamilyRelationshipResponse_ParentProfile) GetRelationship() FamilyRelationship {
	if x != nil {
		return x.Relationship
	}
	return FamilyRelationship_FAMILY_RELATIONSHIP_NONE
}

type UpsertStudentCoursePackageResponse_StudentPackageProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentCoursePackageId string                 `protobuf:"bytes,1,opt,name=student_course_package_id,json=studentCoursePackageId,proto3" json:"student_course_package_id,omitempty"`
	CourseId               string                 `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StartTime              *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime                *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Deprecated: Do not use.
	LocationIds         []string               `protobuf:"bytes,5,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	StudentPackageExtra []*StudentPackageExtra `protobuf:"bytes,6,rep,name=student_package_extra,json=studentPackageExtra,proto3" json:"student_package_extra,omitempty"`
}

func (x *UpsertStudentCoursePackageResponse_StudentPackageProfile) Reset() {
	*x = UpsertStudentCoursePackageResponse_StudentPackageProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStudentCoursePackageResponse_StudentPackageProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStudentCoursePackageResponse_StudentPackageProfile) ProtoMessage() {}

func (x *UpsertStudentCoursePackageResponse_StudentPackageProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStudentCoursePackageResponse_StudentPackageProfile.ProtoReflect.Descriptor instead.
func (*UpsertStudentCoursePackageResponse_StudentPackageProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{30, 0}
}

func (x *UpsertStudentCoursePackageResponse_StudentPackageProfile) GetStudentCoursePackageId() string {
	if x != nil {
		return x.StudentCoursePackageId
	}
	return ""
}

func (x *UpsertStudentCoursePackageResponse_StudentPackageProfile) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpsertStudentCoursePackageResponse_StudentPackageProfile) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpsertStudentCoursePackageResponse_StudentPackageProfile) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// Deprecated: Do not use.
func (x *UpsertStudentCoursePackageResponse_StudentPackageProfile) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *UpsertStudentCoursePackageResponse_StudentPackageProfile) GetStudentPackageExtra() []*StudentPackageExtra {
	if x != nil {
		return x.StudentPackageExtra
	}
	return nil
}

type UpdateUserProfileRequest_UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Country     v1.Country `protobuf:"varint,3,opt,name=country,proto3,enum=common.v1.Country" json:"country,omitempty"`
	PhoneNumber string     `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email       string     `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Avatar      string     `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	DeviceToken string     `protobuf:"bytes,7,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	Group       string     `protobuf:"bytes,8,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *UpdateUserProfileRequest_UserProfile) Reset() {
	*x = UpdateUserProfileRequest_UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserProfileRequest_UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserProfileRequest_UserProfile) ProtoMessage() {}

func (x *UpdateUserProfileRequest_UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserProfileRequest_UserProfile.ProtoReflect.Descriptor instead.
func (*UpdateUserProfileRequest_UserProfile) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{33, 0}
}

func (x *UpdateUserProfileRequest_UserProfile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUserProfileRequest_UserProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUserProfileRequest_UserProfile) GetCountry() v1.Country {
	if x != nil {
		return x.Country
	}
	return v1.Country_COUNTRY_NONE
}

func (x *UpdateUserProfileRequest_UserProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateUserProfileRequest_UserProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserProfileRequest_UserProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateUserProfileRequest_UserProfile) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *UpdateUserProfileRequest_UserProfile) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowNumber int32  `protobuf:"varint,1,opt,name=row_number,json=rowNumber,proto3" json:"row_number,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	FieldName string `protobuf:"bytes,3,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
}

func (x *ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError) Reset() {
	*x = ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError) ProtoMessage() {}

func (x *ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError.ProtoReflect.Descriptor instead.
func (*ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{42, 0}
}

func (x *ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError) GetRowNumber() int32 {
	if x != nil {
		return x.RowNumber
	}
	return 0
}

func (x *ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

type BasicProfile_School struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchoolId   int64  `protobuf:"varint,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	SchoolName string `protobuf:"bytes,2,opt,name=school_name,json=schoolName,proto3" json:"school_name,omitempty"`
}

func (x *BasicProfile_School) Reset() {
	*x = BasicProfile_School{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicProfile_School) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicProfile_School) ProtoMessage() {}

func (x *BasicProfile_School) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicProfile_School.ProtoReflect.Descriptor instead.
func (*BasicProfile_School) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{47, 0}
}

func (x *BasicProfile_School) GetSchoolId() int64 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *BasicProfile_School) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

type BasicProfile_Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role      string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	RoleId    string                 `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *BasicProfile_Role) Reset() {
	*x = BasicProfile_Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicProfile_Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicProfile_Role) ProtoMessage() {}

func (x *BasicProfile_Role) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicProfile_Role.ProtoReflect.Descriptor instead.
func (*BasicProfile_Role) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{47, 1}
}

func (x *BasicProfile_Role) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *BasicProfile_Role) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BasicProfile_Role) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type BasicProfile_UserGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroup   string               `protobuf:"bytes,1,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Roles       []*BasicProfile_Role `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	UserGroupId string               `protobuf:"bytes,3,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,omitempty"`
}

func (x *BasicProfile_UserGroup) Reset() {
	*x = BasicProfile_UserGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermgmt_v2_users_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicProfile_UserGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicProfile_UserGroup) ProtoMessage() {}

func (x *BasicProfile_UserGroup) ProtoReflect() protoreflect.Message {
	mi := &file_usermgmt_v2_users_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicProfile_UserGroup.ProtoReflect.Descriptor instead.
func (*BasicProfile_UserGroup) Descriptor() ([]byte, []int) {
	return file_usermgmt_v2_users_proto_rawDescGZIP(), []int{47, 2}
}

func (x *BasicProfile_UserGroup) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *BasicProfile_UserGroup) GetRoles() []*BasicProfile_Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *BasicProfile_UserGroup) GetUserGroupId() string {
	if x != nil {
		return x.UserGroupId
	}
	return ""
}

var File_usermgmt_v2_users_proto protoreflect.FileDescriptor

var file_usermgmt_v2_users_proto_rawDesc = []byte{
	0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x1a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2f, 0x76, 0x32, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x05, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74,
	0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x74, 0x69, 0x63, 0x22, 0xc1, 0x03, 0x0a, 0x07, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x11, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x3a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x2f, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x06, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0xc8, 0x01,
	0x0a, 0x0d, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xb8, 0x02, 0x0a, 0x17, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x11, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x22, 0xb9, 0x01, 0x0a,
	0x12, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x54, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x18, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x11,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xc9, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x57, 0x0a,
	0x14, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x44, 0x52, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x9d, 0x02, 0x0a,
	0x11, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x11, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x5b, 0x0a, 0x15, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x41, 0x52, 0x45,
	0x4e, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45,
	0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x41, 0x52,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f, 0x50, 0x48,
	0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x22, 0xd4, 0x09, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x12, 0x59, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x45, 0x0a,
	0x10, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x1b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x19, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x1a, 0xd5, 0x06, 0x0a, 0x0e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x16, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x35, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x51, 0x0a, 0x11, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x2b,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x32,
	0x0a, 0x15, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x74, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x2c,
	0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x74, 0x69, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x51, 0x0a, 0x14,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x12, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x73, 0x22, 0xdd, 0x05, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x6a, 0x0a, 0x0f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41,
	0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x8a, 0x04, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x66, 0x66, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x11, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xd5, 0x07, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x1a, 0xfa, 0x06,
	0x0a, 0x0c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x25, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x36,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x10,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x46, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf2, 0x07, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x1a, 0x95, 0x07, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x10, 0x73, 0x74, 0x61, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xa3, 0x06, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x1a, 0xc8, 0x05, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x4b,
	0x0a, 0x12, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x10, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0e, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12,
	0x45, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12,
	0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0xc9, 0x09, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x12, 0x59, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x45, 0x0a,
	0x10, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x1b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x19, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x1a, 0xca, 0x06, 0x0a, 0x0e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x51, 0x0a, 0x11, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x36, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74,
	0x69, 0x63, 0x12, 0x55, 0x0a, 0x14, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x02, 0x18, 0x01, 0x52, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12, 0x59, 0x0a,
	0x15, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x6a, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x68, 0x65, 0x65, 0x74, 0x22, 0x3c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66,
	0x75, 0x6c, 0x22, 0xe5, 0x04, 0x0a, 0x29, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x6d, 0x0a, 0x0f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x6e, 0x64, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x8c, 0x03, 0x0a, 0x0d,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x43, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64,
	0x73, 0x12, 0x50, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x45, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x1a, 0x52, 0x65,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0xc7, 0x04, 0x0a, 0x21, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x7e, 0x0a, 0x18, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x16, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x1a, 0xdb, 0x02, 0x0a, 0x15, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x73, 0x12, 0x54, 0x0a, 0x15, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0x51,
	0x0a, 0x13, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x22, 0xcd, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0xd7, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x51, 0x0a, 0x14, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64,
	0x73, 0x22, 0xae, 0x04, 0x0a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x6b, 0x0a, 0x0f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0xf6, 0x02, 0x0a, 0x0d, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x43, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12,
	0x50, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x12, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x22, 0x3d, 0x0a, 0x1b, 0x52, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75,
	0x6c, 0x22, 0x8b, 0x07, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x95, 0x06, 0x0a, 0x0e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x51, 0x0a, 0x11, 0x65, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x15,
	0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x74, 0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74,
	0x69, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x51, 0x0a, 0x14, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x22,
	0xbf, 0x02, 0x0a, 0x2a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x6e, 0x64, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x6e, 0x0a,
	0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x73, 0x41, 0x6e, 0x64, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x81, 0x01,
	0x0a, 0x0d, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x22, 0xa5, 0x04, 0x0a, 0x22, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x7f, 0x0a, 0x18, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x16, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0xde, 0x02, 0x0a, 0x15, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x12, 0x54, 0x0a, 0x15, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x22, 0x5c, 0x0a, 0x1e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd3, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x1a, 0xe9, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x3b, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x64, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22,
	0x41, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66,
	0x75, 0x6c, 0x22, 0x31, 0x0a, 0x2f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x6f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x30, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x89,
	0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x42, 0x0a, 0x26, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x98, 0x02, 0x0a, 0x27, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41,
	0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x7a,
	0x0a, 0x24, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41,
	0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x36, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x37, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xc3, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0xb3, 0x06,
	0x0a, 0x0c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x12, 0x47, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76,
	0x32, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x32, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x46, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x6e, 0x0a, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x84, 0x01, 0x0a,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x34, 0x0a, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x50, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2a, 0x97, 0x01, 0x0a, 0x18, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x55, 0x44, 0x45,
	0x4e, 0x54, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x48, 0x4f, 0x4d,
	0x45, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01,
	0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41,
	0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42,
	0x45, 0x52, 0x10, 0x03, 0x2a, 0x41, 0x0a, 0x16, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e,
	0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x2a, 0x58, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x46, 0x46, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59,
	0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x00, 0x12,
	0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x46, 0x46, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x41,
	0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10,
	0x01, 0x2a, 0x3f, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x66, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x56, 0x41, 0x49, 0x4c,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x49, 0x47, 0x4e,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45,
	0x10, 0x02, 0x32, 0xed, 0x0b, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x8c, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x1f, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54,
	0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88,
	0x02, 0x01, 0x12, 0x95, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x36, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x52, 0x65,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x1a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x2b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x25,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xbc, 0x01, 0x0a, 0x2f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x43, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73,
	0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x82, 0x03, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0xa7, 0x01, 0x0a, 0x28, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x99, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75,
	0x66, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x32, 0x3b, 0x75, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_usermgmt_v2_users_proto_rawDescOnce sync.Once
	file_usermgmt_v2_users_proto_rawDescData = file_usermgmt_v2_users_proto_rawDesc
)

func file_usermgmt_v2_users_proto_rawDescGZIP() []byte {
	file_usermgmt_v2_users_proto_rawDescOnce.Do(func() {
		file_usermgmt_v2_users_proto_rawDescData = protoimpl.X.CompressGZIP(file_usermgmt_v2_users_proto_rawDescData)
	})
	return file_usermgmt_v2_users_proto_rawDescData
}

var file_usermgmt_v2_users_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_usermgmt_v2_users_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_usermgmt_v2_users_proto_goTypes = []interface{}{
	(StudentContactPreference)(0),                                                        // 0: usermgmt.v2.StudentContactPreference
	(StudentPhoneNumberType)(0),                                                          // 1: usermgmt.v2.StudentPhoneNumberType
	(StaffPhoneNumberType)(0),                                                            // 2: usermgmt.v2.StaffPhoneNumberType
	(StaffWorkingStatus)(0),                                                              // 3: usermgmt.v2.StaffWorkingStatus
	(ParentPhoneNumber_ParentPhoneNumberType)(0),                                         // 4: usermgmt.v2.ParentPhoneNumber.ParentPhoneNumberType
	(*UserProfile)(nil),                                                                  // 5: usermgmt.v2.UserProfile
	(*UserNameFields)(nil),                                                               // 6: usermgmt.v2.UserNameFields
	(*Student)(nil),                                                                      // 7: usermgmt.v2.Student
	(*Parent)(nil),                                                                       // 8: usermgmt.v2.Parent
	(*SchoolHistory)(nil),                                                                // 9: usermgmt.v2.SchoolHistory
	(*EnrollmentStatusHistory)(nil),                                                      // 10: usermgmt.v2.EnrollmentStatusHistory
	(*UserAddress)(nil),                                                                  // 11: usermgmt.v2.UserAddress
	(*StudentPhoneNumber)(nil),                                                           // 12: usermgmt.v2.StudentPhoneNumber
	(*StudentPhoneNumberWithID)(nil),                                                     // 13: usermgmt.v2.StudentPhoneNumberWithID
	(*UpdateStudentPhoneNumber)(nil),                                                     // 14: usermgmt.v2.UpdateStudentPhoneNumber
	(*ParentPhoneNumber)(nil),                                                            // 15: usermgmt.v2.ParentPhoneNumber
	(*CreateStudentRequest)(nil),                                                         // 16: usermgmt.v2.CreateStudentRequest
	(*CreateParentsAndAssignToStudentRequest)(nil),                                       // 17: usermgmt.v2.CreateParentsAndAssignToStudentRequest
	(*StaffPhoneNumber)(nil),                                                             // 18: usermgmt.v2.StaffPhoneNumber
	(*CreateStaffRequest)(nil),                                                           // 19: usermgmt.v2.CreateStaffRequest
	(*CreateStaffResponse)(nil),                                                          // 20: usermgmt.v2.CreateStaffResponse
	(*UpdateStaffRequest)(nil),                                                           // 21: usermgmt.v2.UpdateStaffRequest
	(*UpdateStaffResponse)(nil),                                                          // 22: usermgmt.v2.UpdateStaffResponse
	(*UpdateStudentRequest)(nil),                                                         // 23: usermgmt.v2.UpdateStudentRequest
	(*UpdateStaffSettingRequest)(nil),                                                    // 24: usermgmt.v2.UpdateStaffSettingRequest
	(*UpdateStaffSettingResponse)(nil),                                                   // 25: usermgmt.v2.UpdateStaffSettingResponse
	(*UpdateParentsAndFamilyRelationshipRequest)(nil),                                    // 26: usermgmt.v2.UpdateParentsAndFamilyRelationshipRequest
	(*ReissueUserPasswordRequest)(nil),                                                   // 27: usermgmt.v2.ReissueUserPasswordRequest
	(*UpsertStudentCoursePackageRequest)(nil),                                            // 28: usermgmt.v2.UpsertStudentCoursePackageRequest
	(*StudentPackageExtra)(nil),                                                          // 29: usermgmt.v2.StudentPackageExtra
	(*CreateStudentResponse)(nil),                                                        // 30: usermgmt.v2.CreateStudentResponse
	(*CreateParentsAndAssignToStudentResponse)(nil),                                      // 31: usermgmt.v2.CreateParentsAndAssignToStudentResponse
	(*ReissueUserPasswordResponse)(nil),                                                  // 32: usermgmt.v2.ReissueUserPasswordResponse
	(*UpdateStudentResponse)(nil),                                                        // 33: usermgmt.v2.UpdateStudentResponse
	(*UpdateParentsAndFamilyRelationshipResponse)(nil),                                   // 34: usermgmt.v2.UpdateParentsAndFamilyRelationshipResponse
	(*UpsertStudentCoursePackageResponse)(nil),                                           // 35: usermgmt.v2.UpsertStudentCoursePackageResponse
	(*RemoveParentFromStudentRequest)(nil),                                               // 36: usermgmt.v2.RemoveParentFromStudentRequest
	(*RemoveParentFromStudentResponse)(nil),                                              // 37: usermgmt.v2.RemoveParentFromStudentResponse
	(*UpdateUserProfileRequest)(nil),                                                     // 38: usermgmt.v2.UpdateUserProfileRequest
	(*UpdateUserProfileResponse)(nil),                                                    // 39: usermgmt.v2.UpdateUserProfileResponse
	(*UpdateUserLastLoginDateRequest)(nil),                                               // 40: usermgmt.v2.UpdateUserLastLoginDateRequest
	(*UpdateUserLastLoginDateResponse)(nil),                                              // 41: usermgmt.v2.UpdateUserLastLoginDateResponse
	(*RetrieveStudentAssociatedToParentAccountRequest)(nil),                              // 42: usermgmt.v2.RetrieveStudentAssociatedToParentAccountRequest
	(*RetrieveStudentAssociatedToParentAccountResponse)(nil),                             // 43: usermgmt.v2.RetrieveStudentAssociatedToParentAccountResponse
	(*UpdateUserDeviceTokenRequest)(nil),                                                 // 44: usermgmt.v2.UpdateUserDeviceTokenRequest
	(*UpdateUserDeviceTokenResponse)(nil),                                                // 45: usermgmt.v2.UpdateUserDeviceTokenResponse
	(*ImportParentsAndAssignToStudentRequest)(nil),                                       // 46: usermgmt.v2.ImportParentsAndAssignToStudentRequest
	(*ImportParentsAndAssignToStudentResponse)(nil),                                      // 47: usermgmt.v2.ImportParentsAndAssignToStudentResponse
	(*GenerateImportParentsAndAssignToStudentTemplateRequest)(nil),                       // 48: usermgmt.v2.GenerateImportParentsAndAssignToStudentTemplateRequest
	(*GenerateImportParentsAndAssignToStudentTemplateResponse)(nil),                      // 49: usermgmt.v2.GenerateImportParentsAndAssignToStudentTemplateResponse
	(*SearchBasicProfileRequest)(nil),                                                    // 50: usermgmt.v2.SearchBasicProfileRequest
	(*SearchBasicProfileResponse)(nil),                                                   // 51: usermgmt.v2.SearchBasicProfileResponse
	(*BasicProfile)(nil),                                                                 // 52: usermgmt.v2.BasicProfile
	(*GetBasicProfileRequest)(nil),                                                       // 53: usermgmt.v2.GetBasicProfileRequest
	(*GetBasicProfileResponse)(nil),                                                      // 54: usermgmt.v2.GetBasicProfileResponse
	(*CreateStudentRequest_StudentProfile)(nil),                                          // 55: usermgmt.v2.CreateStudentRequest.StudentProfile
	(*CreateParentsAndAssignToStudentRequest_ParentProfile)(nil),                         // 56: usermgmt.v2.CreateParentsAndAssignToStudentRequest.ParentProfile
	(*CreateStaffRequest_StaffProfile)(nil),                                              // 57: usermgmt.v2.CreateStaffRequest.StaffProfile
	(*CreateStaffResponse_StaffProfile)(nil),                                             // 58: usermgmt.v2.CreateStaffResponse.StaffProfile
	(*UpdateStaffRequest_StaffProfile)(nil),                                              // 59: usermgmt.v2.UpdateStaffRequest.StaffProfile
	(*UpdateStudentRequest_StudentProfile)(nil),                                          // 60: usermgmt.v2.UpdateStudentRequest.StudentProfile
	(*UpdateParentsAndFamilyRelationshipRequest_ParentProfile)(nil),                      // 61: usermgmt.v2.UpdateParentsAndFamilyRelationshipRequest.ParentProfile
	(*UpsertStudentCoursePackageRequest_StudentPackageProfile)(nil),                      // 62: usermgmt.v2.UpsertStudentCoursePackageRequest.StudentPackageProfile
	(*CreateStudentResponse_StudentProfile)(nil),                                         // 63: usermgmt.v2.CreateStudentResponse.StudentProfile
	(*CreateParentsAndAssignToStudentResponse_ParentProfile)(nil),                        // 64: usermgmt.v2.CreateParentsAndAssignToStudentResponse.ParentProfile
	(*UpdateStudentResponse_StudentProfile)(nil),                                         // 65: usermgmt.v2.UpdateStudentResponse.StudentProfile
	(*UpdateParentsAndFamilyRelationshipResponse_ParentProfile)(nil),                     // 66: usermgmt.v2.UpdateParentsAndFamilyRelationshipResponse.ParentProfile
	(*UpsertStudentCoursePackageResponse_StudentPackageProfile)(nil),                     // 67: usermgmt.v2.UpsertStudentCoursePackageResponse.StudentPackageProfile
	(*UpdateUserProfileRequest_UserProfile)(nil),                                         // 68: usermgmt.v2.UpdateUserProfileRequest.UserProfile
	(*ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError)(nil), // 69: usermgmt.v2.ImportParentsAndAssignToStudentResponse.ImportParentsAndAssignToStudentError
	(*BasicProfile_School)(nil),                                                          // 70: usermgmt.v2.BasicProfile.School
	(*BasicProfile_Role)(nil),                                                            // 71: usermgmt.v2.BasicProfile.Role
	(*BasicProfile_UserGroup)(nil),                                                       // 72: usermgmt.v2.BasicProfile.UserGroup
	(UserGroup)(0),                                                                       // 73: usermgmt.v2.UserGroup
	(v1.Country)(0),                                                                      // 74: common.v1.Country
	(*timestamppb.Timestamp)(nil),                                                        // 75: google.protobuf.Timestamp
	(Gender)(0),                                                                          // 76: usermgmt.v2.Gender
	(StudentEnrollmentStatus)(0),                                                         // 77: usermgmt.v2.StudentEnrollmentStatus
	(AddressType)(0),                                                                     // 78: usermgmt.v2.AddressType
	(*v1.BasicProfile)(nil),                                                              // 79: common.v1.BasicProfile
	(*wrapperspb.StringValue)(nil),                                                       // 80: google.protobuf.StringValue
	(*v1.Paging)(nil),                                                                    // 81: common.v1.Paging
	(FamilyRelationship)(0),                                                              // 82: usermgmt.v2.FamilyRelationship
}
var file_usermgmt_v2_users_proto_depIdxs = []int32{
	73,  // 0: usermgmt.v2.UserProfile.group:type_name -> usermgmt.v2.UserGroup
	74,  // 1: usermgmt.v2.UserProfile.country_code:type_name -> common.v1.Country
	75,  // 2: usermgmt.v2.UserProfile.birthday:type_name -> google.protobuf.Timestamp
	76,  // 3: usermgmt.v2.UserProfile.gender:type_name -> usermgmt.v2.Gender
	5,   // 4: usermgmt.v2.Student.user_profile:type_name -> usermgmt.v2.UserProfile
	77,  // 5: usermgmt.v2.Student.enrollment_status:type_name -> usermgmt.v2.StudentEnrollmentStatus
	75,  // 6: usermgmt.v2.Student.birthday:type_name -> google.protobuf.Timestamp
	76,  // 7: usermgmt.v2.Student.gender:type_name -> usermgmt.v2.Gender
	5,   // 8: usermgmt.v2.Parent.user_profile:type_name -> usermgmt.v2.UserProfile
	75,  // 9: usermgmt.v2.SchoolHistory.start_date:type_name -> google.protobuf.Timestamp
	75,  // 10: usermgmt.v2.SchoolHistory.end_date:type_name -> google.protobuf.Timestamp
	77,  // 11: usermgmt.v2.EnrollmentStatusHistory.enrollment_status:type_name -> usermgmt.v2.StudentEnrollmentStatus
	75,  // 12: usermgmt.v2.EnrollmentStatusHistory.start_date:type_name -> google.protobuf.Timestamp
	75,  // 13: usermgmt.v2.EnrollmentStatusHistory.end_date:type_name -> google.protobuf.Timestamp
	78,  // 14: usermgmt.v2.UserAddress.address_type:type_name -> usermgmt.v2.AddressType
	0,   // 15: usermgmt.v2.StudentPhoneNumber.contact_preference:type_name -> usermgmt.v2.StudentContactPreference
	1,   // 16: usermgmt.v2.StudentPhoneNumberWithID.phone_number_type:type_name -> usermgmt.v2.StudentPhoneNumberType
	13,  // 17: usermgmt.v2.UpdateStudentPhoneNumber.student_phone_number:type_name -> usermgmt.v2.StudentPhoneNumberWithID
	0,   // 18: usermgmt.v2.UpdateStudentPhoneNumber.contact_preference:type_name -> usermgmt.v2.StudentContactPreference
	4,   // 19: usermgmt.v2.ParentPhoneNumber.phone_number_type:type_name -> usermgmt.v2.ParentPhoneNumber.ParentPhoneNumberType
	55,  // 20: usermgmt.v2.CreateStudentRequest.student_profile:type_name -> usermgmt.v2.CreateStudentRequest.StudentProfile
	9,   // 21: usermgmt.v2.CreateStudentRequest.school_histories:type_name -> usermgmt.v2.SchoolHistory
	11,  // 22: usermgmt.v2.CreateStudentRequest.user_addresses:type_name -> usermgmt.v2.UserAddress
	10,  // 23: usermgmt.v2.CreateStudentRequest.enrollment_status_histories:type_name -> usermgmt.v2.EnrollmentStatusHistory
	56,  // 24: usermgmt.v2.CreateParentsAndAssignToStudentRequest.parent_profiles:type_name -> usermgmt.v2.CreateParentsAndAssignToStudentRequest.ParentProfile
	2,   // 25: usermgmt.v2.StaffPhoneNumber.phone_number_type:type_name -> usermgmt.v2.StaffPhoneNumberType
	57,  // 26: usermgmt.v2.CreateStaffRequest.staff:type_name -> usermgmt.v2.CreateStaffRequest.StaffProfile
	58,  // 27: usermgmt.v2.CreateStaffResponse.staff:type_name -> usermgmt.v2.CreateStaffResponse.StaffProfile
	59,  // 28: usermgmt.v2.UpdateStaffRequest.staff:type_name -> usermgmt.v2.UpdateStaffRequest.StaffProfile
	60,  // 29: usermgmt.v2.UpdateStudentRequest.student_profile:type_name -> usermgmt.v2.UpdateStudentRequest.StudentProfile
	9,   // 30: usermgmt.v2.UpdateStudentRequest.school_histories:type_name -> usermgmt.v2.SchoolHistory
	11,  // 31: usermgmt.v2.UpdateStudentRequest.user_addresses:type_name -> usermgmt.v2.UserAddress
	10,  // 32: usermgmt.v2.UpdateStudentRequest.enrollment_status_histories:type_name -> usermgmt.v2.EnrollmentStatusHistory
	61,  // 33: usermgmt.v2.UpdateParentsAndFamilyRelationshipRequest.parent_profiles:type_name -> usermgmt.v2.UpdateParentsAndFamilyRelationshipRequest.ParentProfile
	62,  // 34: usermgmt.v2.UpsertStudentCoursePackageRequest.student_package_profiles:type_name -> usermgmt.v2.UpsertStudentCoursePackageRequest.StudentPackageProfile
	63,  // 35: usermgmt.v2.CreateStudentResponse.student_profile:type_name -> usermgmt.v2.CreateStudentResponse.StudentProfile
	64,  // 36: usermgmt.v2.CreateParentsAndAssignToStudentResponse.parent_profiles:type_name -> usermgmt.v2.CreateParentsAndAssignToStudentResponse.ParentProfile
	65,  // 37: usermgmt.v2.UpdateStudentResponse.student_profile:type_name -> usermgmt.v2.UpdateStudentResponse.StudentProfile
	66,  // 38: usermgmt.v2.UpdateParentsAndFamilyRelationshipResponse.parent_profiles:type_name -> usermgmt.v2.UpdateParentsAndFamilyRelationshipResponse.ParentProfile
	67,  // 39: usermgmt.v2.UpsertStudentCoursePackageResponse.student_package_profiles:type_name -> usermgmt.v2.UpsertStudentCoursePackageResponse.StudentPackageProfile
	68,  // 40: usermgmt.v2.UpdateUserProfileRequest.profile:type_name -> usermgmt.v2.UpdateUserProfileRequest.UserProfile
	75,  // 41: usermgmt.v2.UpdateUserLastLoginDateRequest.last_login_date:type_name -> google.protobuf.Timestamp
	79,  // 42: usermgmt.v2.RetrieveStudentAssociatedToParentAccountResponse.profiles:type_name -> common.v1.BasicProfile
	69,  // 43: usermgmt.v2.ImportParentsAndAssignToStudentResponse.errors:type_name -> usermgmt.v2.ImportParentsAndAssignToStudentResponse.ImportParentsAndAssignToStudentError
	80,  // 44: usermgmt.v2.SearchBasicProfileRequest.search_text:type_name -> google.protobuf.StringValue
	81,  // 45: usermgmt.v2.SearchBasicProfileRequest.paging:type_name -> common.v1.Paging
	79,  // 46: usermgmt.v2.SearchBasicProfileResponse.profiles:type_name -> common.v1.BasicProfile
	81,  // 47: usermgmt.v2.SearchBasicProfileResponse.next_page:type_name -> common.v1.Paging
	74,  // 48: usermgmt.v2.BasicProfile.country:type_name -> common.v1.Country
	70,  // 49: usermgmt.v2.BasicProfile.school:type_name -> usermgmt.v2.BasicProfile.School
	72,  // 50: usermgmt.v2.BasicProfile.user_group_v2:type_name -> usermgmt.v2.BasicProfile.UserGroup
	75,  // 51: usermgmt.v2.BasicProfile.created_at:type_name -> google.protobuf.Timestamp
	75,  // 52: usermgmt.v2.BasicProfile.last_login_date:type_name -> google.protobuf.Timestamp
	52,  // 53: usermgmt.v2.GetBasicProfileResponse.profiles:type_name -> usermgmt.v2.BasicProfile
	74,  // 54: usermgmt.v2.CreateStudentRequest.StudentProfile.country_code:type_name -> common.v1.Country
	77,  // 55: usermgmt.v2.CreateStudentRequest.StudentProfile.enrollment_status:type_name -> usermgmt.v2.StudentEnrollmentStatus
	75,  // 56: usermgmt.v2.CreateStudentRequest.StudentProfile.birthday:type_name -> google.protobuf.Timestamp
	76,  // 57: usermgmt.v2.CreateStudentRequest.StudentProfile.gender:type_name -> usermgmt.v2.Gender
	12,  // 58: usermgmt.v2.CreateStudentRequest.StudentProfile.student_phone_number:type_name -> usermgmt.v2.StudentPhoneNumber
	74,  // 59: usermgmt.v2.CreateParentsAndAssignToStudentRequest.ParentProfile.country_code:type_name -> common.v1.Country
	82,  // 60: usermgmt.v2.CreateParentsAndAssignToStudentRequest.ParentProfile.relationship:type_name -> usermgmt.v2.FamilyRelationship
	15,  // 61: usermgmt.v2.CreateParentsAndAssignToStudentRequest.ParentProfile.parent_phone_numbers:type_name -> usermgmt.v2.ParentPhoneNumber
	6,   // 62: usermgmt.v2.CreateParentsAndAssignToStudentRequest.ParentProfile.user_name_fields:type_name -> usermgmt.v2.UserNameFields
	73,  // 63: usermgmt.v2.CreateStaffRequest.StaffProfile.user_group:type_name -> usermgmt.v2.UserGroup
	74,  // 64: usermgmt.v2.CreateStaffRequest.StaffProfile.country:type_name -> common.v1.Country
	75,  // 65: usermgmt.v2.CreateStaffRequest.StaffProfile.birthday:type_name -> google.protobuf.Timestamp
	76,  // 66: usermgmt.v2.CreateStaffRequest.StaffProfile.gender:type_name -> usermgmt.v2.Gender
	18,  // 67: usermgmt.v2.CreateStaffRequest.StaffProfile.staff_phone_number:type_name -> usermgmt.v2.StaffPhoneNumber
	3,   // 68: usermgmt.v2.CreateStaffRequest.StaffProfile.working_status:type_name -> usermgmt.v2.StaffWorkingStatus
	75,  // 69: usermgmt.v2.CreateStaffRequest.StaffProfile.start_date:type_name -> google.protobuf.Timestamp
	75,  // 70: usermgmt.v2.CreateStaffRequest.StaffProfile.end_date:type_name -> google.protobuf.Timestamp
	6,   // 71: usermgmt.v2.CreateStaffRequest.StaffProfile.user_name_fields:type_name -> usermgmt.v2.UserNameFields
	73,  // 72: usermgmt.v2.CreateStaffResponse.StaffProfile.user_group:type_name -> usermgmt.v2.UserGroup
	74,  // 73: usermgmt.v2.CreateStaffResponse.StaffProfile.country:type_name -> common.v1.Country
	75,  // 74: usermgmt.v2.CreateStaffResponse.StaffProfile.birthday:type_name -> google.protobuf.Timestamp
	76,  // 75: usermgmt.v2.CreateStaffResponse.StaffProfile.gender:type_name -> usermgmt.v2.Gender
	18,  // 76: usermgmt.v2.CreateStaffResponse.StaffProfile.staff_phone_number:type_name -> usermgmt.v2.StaffPhoneNumber
	3,   // 77: usermgmt.v2.CreateStaffResponse.StaffProfile.working_status:type_name -> usermgmt.v2.StaffWorkingStatus
	75,  // 78: usermgmt.v2.CreateStaffResponse.StaffProfile.start_date:type_name -> google.protobuf.Timestamp
	75,  // 79: usermgmt.v2.CreateStaffResponse.StaffProfile.end_date:type_name -> google.protobuf.Timestamp
	6,   // 80: usermgmt.v2.CreateStaffResponse.StaffProfile.user_name_fields:type_name -> usermgmt.v2.UserNameFields
	75,  // 81: usermgmt.v2.UpdateStaffRequest.StaffProfile.birthday:type_name -> google.protobuf.Timestamp
	76,  // 82: usermgmt.v2.UpdateStaffRequest.StaffProfile.gender:type_name -> usermgmt.v2.Gender
	18,  // 83: usermgmt.v2.UpdateStaffRequest.StaffProfile.staff_phone_number:type_name -> usermgmt.v2.StaffPhoneNumber
	3,   // 84: usermgmt.v2.UpdateStaffRequest.StaffProfile.working_status:type_name -> usermgmt.v2.StaffWorkingStatus
	75,  // 85: usermgmt.v2.UpdateStaffRequest.StaffProfile.start_date:type_name -> google.protobuf.Timestamp
	75,  // 86: usermgmt.v2.UpdateStaffRequest.StaffProfile.end_date:type_name -> google.protobuf.Timestamp
	6,   // 87: usermgmt.v2.UpdateStaffRequest.StaffProfile.user_name_fields:type_name -> usermgmt.v2.UserNameFields
	77,  // 88: usermgmt.v2.UpdateStudentRequest.StudentProfile.enrollment_status:type_name -> usermgmt.v2.StudentEnrollmentStatus
	75,  // 89: usermgmt.v2.UpdateStudentRequest.StudentProfile.birthday:type_name -> google.protobuf.Timestamp
	76,  // 90: usermgmt.v2.UpdateStudentRequest.StudentProfile.gender:type_name -> usermgmt.v2.Gender
	12,  // 91: usermgmt.v2.UpdateStudentRequest.StudentProfile.student_phone_number:type_name -> usermgmt.v2.StudentPhoneNumber
	14,  // 92: usermgmt.v2.UpdateStudentRequest.StudentProfile.student_phone_numbers:type_name -> usermgmt.v2.UpdateStudentPhoneNumber
	82,  // 93: usermgmt.v2.UpdateParentsAndFamilyRelationshipRequest.ParentProfile.relationship:type_name -> usermgmt.v2.FamilyRelationship
	15,  // 94: usermgmt.v2.UpdateParentsAndFamilyRelationshipRequest.ParentProfile.parent_phone_numbers:type_name -> usermgmt.v2.ParentPhoneNumber
	6,   // 95: usermgmt.v2.UpdateParentsAndFamilyRelationshipRequest.ParentProfile.user_name_fields:type_name -> usermgmt.v2.UserNameFields
	75,  // 96: usermgmt.v2.UpsertStudentCoursePackageRequest.StudentPackageProfile.start_time:type_name -> google.protobuf.Timestamp
	75,  // 97: usermgmt.v2.UpsertStudentCoursePackageRequest.StudentPackageProfile.end_time:type_name -> google.protobuf.Timestamp
	29,  // 98: usermgmt.v2.UpsertStudentCoursePackageRequest.StudentPackageProfile.student_package_extra:type_name -> usermgmt.v2.StudentPackageExtra
	7,   // 99: usermgmt.v2.CreateStudentResponse.StudentProfile.student:type_name -> usermgmt.v2.Student
	12,  // 100: usermgmt.v2.CreateStudentResponse.StudentProfile.student_phone_number:type_name -> usermgmt.v2.StudentPhoneNumber
	8,   // 101: usermgmt.v2.CreateParentsAndAssignToStudentResponse.ParentProfile.parent:type_name -> usermgmt.v2.Parent
	82,  // 102: usermgmt.v2.CreateParentsAndAssignToStudentResponse.ParentProfile.relationship:type_name -> usermgmt.v2.FamilyRelationship
	15,  // 103: usermgmt.v2.CreateParentsAndAssignToStudentResponse.ParentProfile.parent_phone_numbers:type_name -> usermgmt.v2.ParentPhoneNumber
	6,   // 104: usermgmt.v2.CreateParentsAndAssignToStudentResponse.ParentProfile.user_name_fields:type_name -> usermgmt.v2.UserNameFields
	77,  // 105: usermgmt.v2.UpdateStudentResponse.StudentProfile.enrollment_status:type_name -> usermgmt.v2.StudentEnrollmentStatus
	75,  // 106: usermgmt.v2.UpdateStudentResponse.StudentProfile.birthday:type_name -> google.protobuf.Timestamp
	76,  // 107: usermgmt.v2.UpdateStudentResponse.StudentProfile.gender:type_name -> usermgmt.v2.Gender
	12,  // 108: usermgmt.v2.UpdateStudentResponse.StudentProfile.student_phone_number:type_name -> usermgmt.v2.StudentPhoneNumber
	8,   // 109: usermgmt.v2.UpdateParentsAndFamilyRelationshipResponse.ParentProfile.parent:type_name -> usermgmt.v2.Parent
	82,  // 110: usermgmt.v2.UpdateParentsAndFamilyRelationshipResponse.ParentProfile.relationship:type_name -> usermgmt.v2.FamilyRelationship
	75,  // 111: usermgmt.v2.UpsertStudentCoursePackageResponse.StudentPackageProfile.start_time:type_name -> google.protobuf.Timestamp
	75,  // 112: usermgmt.v2.UpsertStudentCoursePackageResponse.StudentPackageProfile.end_time:type_name -> google.protobuf.Timestamp
	29,  // 113: usermgmt.v2.UpsertStudentCoursePackageResponse.StudentPackageProfile.student_package_extra:type_name -> usermgmt.v2.StudentPackageExtra
	74,  // 114: usermgmt.v2.UpdateUserProfileRequest.UserProfile.country:type_name -> common.v1.Country
	75,  // 115: usermgmt.v2.BasicProfile.Role.created_at:type_name -> google.protobuf.Timestamp
	71,  // 116: usermgmt.v2.BasicProfile.UserGroup.roles:type_name -> usermgmt.v2.BasicProfile.Role
	16,  // 117: usermgmt.v2.UserModifierService.CreateStudent:input_type -> usermgmt.v2.CreateStudentRequest
	17,  // 118: usermgmt.v2.UserModifierService.CreateParentsAndAssignToStudent:input_type -> usermgmt.v2.CreateParentsAndAssignToStudentRequest
	46,  // 119: usermgmt.v2.UserModifierService.ImportParentsAndAssignToStudent:input_type -> usermgmt.v2.ImportParentsAndAssignToStudentRequest
	23,  // 120: usermgmt.v2.UserModifierService.UpdateStudent:input_type -> usermgmt.v2.UpdateStudentRequest
	26,  // 121: usermgmt.v2.UserModifierService.UpdateParentsAndFamilyRelationship:input_type -> usermgmt.v2.UpdateParentsAndFamilyRelationshipRequest
	27,  // 122: usermgmt.v2.UserModifierService.ReissueUserPassword:input_type -> usermgmt.v2.ReissueUserPasswordRequest
	28,  // 123: usermgmt.v2.UserModifierService.UpsertStudentCoursePackage:input_type -> usermgmt.v2.UpsertStudentCoursePackageRequest
	36,  // 124: usermgmt.v2.UserModifierService.RemoveParentFromStudent:input_type -> usermgmt.v2.RemoveParentFromStudentRequest
	38,  // 125: usermgmt.v2.UserModifierService.UpdateUserProfile:input_type -> usermgmt.v2.UpdateUserProfileRequest
	44,  // 126: usermgmt.v2.UserModifierService.UpdateUserDeviceToken:input_type -> usermgmt.v2.UpdateUserDeviceTokenRequest
	40,  // 127: usermgmt.v2.UserModifierService.UpdateUserLastLoginDate:input_type -> usermgmt.v2.UpdateUserLastLoginDateRequest
	48,  // 128: usermgmt.v2.UserModifierService.GenerateImportParentsAndAssignToStudentTemplate:input_type -> usermgmt.v2.GenerateImportParentsAndAssignToStudentTemplateRequest
	50,  // 129: usermgmt.v2.UserReaderService.SearchBasicProfile:input_type -> usermgmt.v2.SearchBasicProfileRequest
	42,  // 130: usermgmt.v2.UserReaderService.RetrieveStudentAssociatedToParentAccount:input_type -> usermgmt.v2.RetrieveStudentAssociatedToParentAccountRequest
	53,  // 131: usermgmt.v2.UserReaderService.GetBasicProfile:input_type -> usermgmt.v2.GetBasicProfileRequest
	19,  // 132: usermgmt.v2.StaffService.CreateStaff:input_type -> usermgmt.v2.CreateStaffRequest
	21,  // 133: usermgmt.v2.StaffService.UpdateStaff:input_type -> usermgmt.v2.UpdateStaffRequest
	24,  // 134: usermgmt.v2.StaffService.UpdateStaffSetting:input_type -> usermgmt.v2.UpdateStaffSettingRequest
	30,  // 135: usermgmt.v2.UserModifierService.CreateStudent:output_type -> usermgmt.v2.CreateStudentResponse
	31,  // 136: usermgmt.v2.UserModifierService.CreateParentsAndAssignToStudent:output_type -> usermgmt.v2.CreateParentsAndAssignToStudentResponse
	47,  // 137: usermgmt.v2.UserModifierService.ImportParentsAndAssignToStudent:output_type -> usermgmt.v2.ImportParentsAndAssignToStudentResponse
	33,  // 138: usermgmt.v2.UserModifierService.UpdateStudent:output_type -> usermgmt.v2.UpdateStudentResponse
	34,  // 139: usermgmt.v2.UserModifierService.UpdateParentsAndFamilyRelationship:output_type -> usermgmt.v2.UpdateParentsAndFamilyRelationshipResponse
	32,  // 140: usermgmt.v2.UserModifierService.ReissueUserPassword:output_type -> usermgmt.v2.ReissueUserPasswordResponse
	35,  // 141: usermgmt.v2.UserModifierService.UpsertStudentCoursePackage:output_type -> usermgmt.v2.UpsertStudentCoursePackageResponse
	37,  // 142: usermgmt.v2.UserModifierService.RemoveParentFromStudent:output_type -> usermgmt.v2.RemoveParentFromStudentResponse
	39,  // 143: usermgmt.v2.UserModifierService.UpdateUserProfile:output_type -> usermgmt.v2.UpdateUserProfileResponse
	45,  // 144: usermgmt.v2.UserModifierService.UpdateUserDeviceToken:output_type -> usermgmt.v2.UpdateUserDeviceTokenResponse
	41,  // 145: usermgmt.v2.UserModifierService.UpdateUserLastLoginDate:output_type -> usermgmt.v2.UpdateUserLastLoginDateResponse
	49,  // 146: usermgmt.v2.UserModifierService.GenerateImportParentsAndAssignToStudentTemplate:output_type -> usermgmt.v2.GenerateImportParentsAndAssignToStudentTemplateResponse
	51,  // 147: usermgmt.v2.UserReaderService.SearchBasicProfile:output_type -> usermgmt.v2.SearchBasicProfileResponse
	43,  // 148: usermgmt.v2.UserReaderService.RetrieveStudentAssociatedToParentAccount:output_type -> usermgmt.v2.RetrieveStudentAssociatedToParentAccountResponse
	54,  // 149: usermgmt.v2.UserReaderService.GetBasicProfile:output_type -> usermgmt.v2.GetBasicProfileResponse
	20,  // 150: usermgmt.v2.StaffService.CreateStaff:output_type -> usermgmt.v2.CreateStaffResponse
	22,  // 151: usermgmt.v2.StaffService.UpdateStaff:output_type -> usermgmt.v2.UpdateStaffResponse
	25,  // 152: usermgmt.v2.StaffService.UpdateStaffSetting:output_type -> usermgmt.v2.UpdateStaffSettingResponse
	135, // [135:153] is the sub-list for method output_type
	117, // [117:135] is the sub-list for method input_type
	117, // [117:117] is the sub-list for extension type_name
	117, // [117:117] is the sub-list for extension extendee
	0,   // [0:117] is the sub-list for field type_name
}

func init() { file_usermgmt_v2_users_proto_init() }
func file_usermgmt_v2_users_proto_init() {
	if File_usermgmt_v2_users_proto != nil {
		return
	}
	file_usermgmt_v2_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_usermgmt_v2_users_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNameFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Student); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollmentStatusHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentPhoneNumberWithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudentPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStudentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParentsAndAssignToStudentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaffResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStaffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStaffResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStaffSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStaffSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateParentsAndFamilyRelationshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReissueUserPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStudentCoursePackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentPackageExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStudentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParentsAndAssignToStudentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReissueUserPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateParentsAndFamilyRelationshipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStudentCoursePackageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveParentFromStudentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveParentFromStudentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserLastLoginDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserLastLoginDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStudentAssociatedToParentAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveStudentAssociatedToParentAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDeviceTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDeviceTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportParentsAndAssignToStudentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportParentsAndAssignToStudentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateImportParentsAndAssignToStudentTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateImportParentsAndAssignToStudentTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBasicProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBasicProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasicProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasicProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStudentRequest_StudentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParentsAndAssignToStudentRequest_ParentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaffRequest_StaffProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaffResponse_StaffProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStaffRequest_StaffProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudentRequest_StudentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateParentsAndFamilyRelationshipRequest_ParentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStudentCoursePackageRequest_StudentPackageProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStudentResponse_StudentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParentsAndAssignToStudentResponse_ParentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudentResponse_StudentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateParentsAndFamilyRelationshipResponse_ParentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStudentCoursePackageResponse_StudentPackageProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserProfileRequest_UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportParentsAndAssignToStudentResponse_ImportParentsAndAssignToStudentError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicProfile_School); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicProfile_Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermgmt_v2_users_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicProfile_UserGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_usermgmt_v2_users_proto_msgTypes[57].OneofWrappers = []interface{}{
		(*UpsertStudentCoursePackageRequest_StudentPackageProfile_CourseId)(nil),
		(*UpsertStudentCoursePackageRequest_StudentPackageProfile_StudentPackageId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_usermgmt_v2_users_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_usermgmt_v2_users_proto_goTypes,
		DependencyIndexes: file_usermgmt_v2_users_proto_depIdxs,
		EnumInfos:         file_usermgmt_v2_users_proto_enumTypes,
		MessageInfos:      file_usermgmt_v2_users_proto_msgTypes,
	}.Build()
	File_usermgmt_v2_users_proto = out.File
	file_usermgmt_v2_users_proto_rawDesc = nil
	file_usermgmt_v2_users_proto_goTypes = nil
	file_usermgmt_v2_users_proto_depIdxs = nil
}
