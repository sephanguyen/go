// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: usermgmt/v2/enums.proto

package upb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserGroup int32

const (
	UserGroup_USER_GROUP_NONE                 UserGroup = 0
	UserGroup_USER_GROUP_STUDENT              UserGroup = 1
	UserGroup_USER_GROUP_TUTOR                UserGroup = 2
	UserGroup_USER_GROUP_STAFF                UserGroup = 3
	UserGroup_USER_GROUP_ADMIN                UserGroup = 4
	UserGroup_USER_GROUP_TEACHER              UserGroup = 5
	UserGroup_USER_GROUP_PARENT               UserGroup = 6
	UserGroup_USER_GROUP_CONTENT_ADMIN        UserGroup = 7
	UserGroup_USER_GROUP_CONTENT_STAFF        UserGroup = 8
	UserGroup_USER_GROUP_SALES_ADMIN          UserGroup = 9
	UserGroup_USER_GROUP_SALES_STAFF          UserGroup = 10
	UserGroup_USER_GROUP_CS_ADMIN             UserGroup = 11
	UserGroup_USER_GROUP_CS_STAFF             UserGroup = 12
	UserGroup_USER_GROUP_SCHOOL_ADMIN         UserGroup = 13
	UserGroup_USER_GROUP_SCHOOL_STAFF         UserGroup = 14
	UserGroup_USER_GROUP_ORGANIZATION_MANAGER UserGroup = 15
)

// Enum value maps for UserGroup.
var (
	UserGroup_name = map[int32]string{
		0:  "USER_GROUP_NONE",
		1:  "USER_GROUP_STUDENT",
		2:  "USER_GROUP_TUTOR",
		3:  "USER_GROUP_STAFF",
		4:  "USER_GROUP_ADMIN",
		5:  "USER_GROUP_TEACHER",
		6:  "USER_GROUP_PARENT",
		7:  "USER_GROUP_CONTENT_ADMIN",
		8:  "USER_GROUP_CONTENT_STAFF",
		9:  "USER_GROUP_SALES_ADMIN",
		10: "USER_GROUP_SALES_STAFF",
		11: "USER_GROUP_CS_ADMIN",
		12: "USER_GROUP_CS_STAFF",
		13: "USER_GROUP_SCHOOL_ADMIN",
		14: "USER_GROUP_SCHOOL_STAFF",
		15: "USER_GROUP_ORGANIZATION_MANAGER",
	}
	UserGroup_value = map[string]int32{
		"USER_GROUP_NONE":                 0,
		"USER_GROUP_STUDENT":              1,
		"USER_GROUP_TUTOR":                2,
		"USER_GROUP_STAFF":                3,
		"USER_GROUP_ADMIN":                4,
		"USER_GROUP_TEACHER":              5,
		"USER_GROUP_PARENT":               6,
		"USER_GROUP_CONTENT_ADMIN":        7,
		"USER_GROUP_CONTENT_STAFF":        8,
		"USER_GROUP_SALES_ADMIN":          9,
		"USER_GROUP_SALES_STAFF":          10,
		"USER_GROUP_CS_ADMIN":             11,
		"USER_GROUP_CS_STAFF":             12,
		"USER_GROUP_SCHOOL_ADMIN":         13,
		"USER_GROUP_SCHOOL_STAFF":         14,
		"USER_GROUP_ORGANIZATION_MANAGER": 15,
	}
)

func (x UserGroup) Enum() *UserGroup {
	p := new(UserGroup)
	*p = x
	return p
}

func (x UserGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_enums_proto_enumTypes[0].Descriptor()
}

func (UserGroup) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_enums_proto_enumTypes[0]
}

func (x UserGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserGroup.Descriptor instead.
func (UserGroup) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_enums_proto_rawDescGZIP(), []int{0}
}

type FamilyRelationship int32

const (
	FamilyRelationship_FAMILY_RELATIONSHIP_NONE        FamilyRelationship = 0
	FamilyRelationship_FAMILY_RELATIONSHIP_FATHER      FamilyRelationship = 1
	FamilyRelationship_FAMILY_RELATIONSHIP_MOTHER      FamilyRelationship = 2
	FamilyRelationship_FAMILY_RELATIONSHIP_GRANDFATHER FamilyRelationship = 3
	FamilyRelationship_FAMILY_RELATIONSHIP_GRANDMOTHER FamilyRelationship = 4
	FamilyRelationship_FAMILY_RELATIONSHIP_UNCLE       FamilyRelationship = 5
	FamilyRelationship_FAMILY_RELATIONSHIP_AUNT        FamilyRelationship = 6
	FamilyRelationship_FAMILY_RELATIONSHIP_OTHER       FamilyRelationship = 7
)

// Enum value maps for FamilyRelationship.
var (
	FamilyRelationship_name = map[int32]string{
		0: "FAMILY_RELATIONSHIP_NONE",
		1: "FAMILY_RELATIONSHIP_FATHER",
		2: "FAMILY_RELATIONSHIP_MOTHER",
		3: "FAMILY_RELATIONSHIP_GRANDFATHER",
		4: "FAMILY_RELATIONSHIP_GRANDMOTHER",
		5: "FAMILY_RELATIONSHIP_UNCLE",
		6: "FAMILY_RELATIONSHIP_AUNT",
		7: "FAMILY_RELATIONSHIP_OTHER",
	}
	FamilyRelationship_value = map[string]int32{
		"FAMILY_RELATIONSHIP_NONE":        0,
		"FAMILY_RELATIONSHIP_FATHER":      1,
		"FAMILY_RELATIONSHIP_MOTHER":      2,
		"FAMILY_RELATIONSHIP_GRANDFATHER": 3,
		"FAMILY_RELATIONSHIP_GRANDMOTHER": 4,
		"FAMILY_RELATIONSHIP_UNCLE":       5,
		"FAMILY_RELATIONSHIP_AUNT":        6,
		"FAMILY_RELATIONSHIP_OTHER":       7,
	}
)

func (x FamilyRelationship) Enum() *FamilyRelationship {
	p := new(FamilyRelationship)
	*p = x
	return p
}

func (x FamilyRelationship) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FamilyRelationship) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_enums_proto_enumTypes[1].Descriptor()
}

func (FamilyRelationship) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_enums_proto_enumTypes[1]
}

func (x FamilyRelationship) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FamilyRelationship.Descriptor instead.
func (FamilyRelationship) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_enums_proto_rawDescGZIP(), []int{1}
}

type StudentEnrollmentStatus int32

const (
	StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_NONE          StudentEnrollmentStatus = 0
	StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_POTENTIAL     StudentEnrollmentStatus = 1
	StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_ENROLLED      StudentEnrollmentStatus = 2
	StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_WITHDRAWN     StudentEnrollmentStatus = 3
	StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_GRADUATED     StudentEnrollmentStatus = 4
	StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_LOA           StudentEnrollmentStatus = 5
	StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_TEMPORARY     StudentEnrollmentStatus = 6
	StudentEnrollmentStatus_STUDENT_ENROLLMENT_STATUS_NON_POTENTIAL StudentEnrollmentStatus = 7
)

// Enum value maps for StudentEnrollmentStatus.
var (
	StudentEnrollmentStatus_name = map[int32]string{
		0: "STUDENT_ENROLLMENT_STATUS_NONE",
		1: "STUDENT_ENROLLMENT_STATUS_POTENTIAL",
		2: "STUDENT_ENROLLMENT_STATUS_ENROLLED",
		3: "STUDENT_ENROLLMENT_STATUS_WITHDRAWN",
		4: "STUDENT_ENROLLMENT_STATUS_GRADUATED",
		5: "STUDENT_ENROLLMENT_STATUS_LOA",
		6: "STUDENT_ENROLLMENT_STATUS_TEMPORARY",
		7: "STUDENT_ENROLLMENT_STATUS_NON_POTENTIAL",
	}
	StudentEnrollmentStatus_value = map[string]int32{
		"STUDENT_ENROLLMENT_STATUS_NONE":          0,
		"STUDENT_ENROLLMENT_STATUS_POTENTIAL":     1,
		"STUDENT_ENROLLMENT_STATUS_ENROLLED":      2,
		"STUDENT_ENROLLMENT_STATUS_WITHDRAWN":     3,
		"STUDENT_ENROLLMENT_STATUS_GRADUATED":     4,
		"STUDENT_ENROLLMENT_STATUS_LOA":           5,
		"STUDENT_ENROLLMENT_STATUS_TEMPORARY":     6,
		"STUDENT_ENROLLMENT_STATUS_NON_POTENTIAL": 7,
	}
)

func (x StudentEnrollmentStatus) Enum() *StudentEnrollmentStatus {
	p := new(StudentEnrollmentStatus)
	*p = x
	return p
}

func (x StudentEnrollmentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudentEnrollmentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_enums_proto_enumTypes[2].Descriptor()
}

func (StudentEnrollmentStatus) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_enums_proto_enumTypes[2]
}

func (x StudentEnrollmentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudentEnrollmentStatus.Descriptor instead.
func (StudentEnrollmentStatus) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_enums_proto_rawDescGZIP(), []int{2}
}

type Gender int32

const (
	Gender_NONE   Gender = 0
	Gender_MALE   Gender = 1
	Gender_FEMALE Gender = 2
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "NONE",
		1: "MALE",
		2: "FEMALE",
	}
	Gender_value = map[string]int32{
		"NONE":   0,
		"MALE":   1,
		"FEMALE": 2,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_enums_proto_enumTypes[3].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_enums_proto_enumTypes[3]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_enums_proto_rawDescGZIP(), []int{3}
}

type AddressType int32

const (
	AddressType_HOME_ADDRESS    AddressType = 0
	AddressType_BILLING_ADDRESS AddressType = 1
)

// Enum value maps for AddressType.
var (
	AddressType_name = map[int32]string{
		0: "HOME_ADDRESS",
		1: "BILLING_ADDRESS",
	}
	AddressType_value = map[string]int32{
		"HOME_ADDRESS":    0,
		"BILLING_ADDRESS": 1,
	}
)

func (x AddressType) Enum() *AddressType {
	p := new(AddressType)
	*p = x
	return p
}

func (x AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_enums_proto_enumTypes[4].Descriptor()
}

func (AddressType) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_enums_proto_enumTypes[4]
}

func (x AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressType.Descriptor instead.
func (AddressType) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_enums_proto_rawDescGZIP(), []int{4}
}

type UserTagType int32

const (
	UserTagType_USER_TAG_TYPE_NONE             UserTagType = 0
	UserTagType_USER_TAG_TYPE_STUDENT          UserTagType = 1
	UserTagType_USER_TAG_TYPE_PARENT           UserTagType = 2
	UserTagType_USER_TAG_TYPE_STUDENT_DISCOUNT UserTagType = 3
	UserTagType_USER_TAG_TYPE_PARENT_DISCOUNT  UserTagType = 4
	UserTagType_USER_TAG_TYPE_STAFF            UserTagType = 5
)

// Enum value maps for UserTagType.
var (
	UserTagType_name = map[int32]string{
		0: "USER_TAG_TYPE_NONE",
		1: "USER_TAG_TYPE_STUDENT",
		2: "USER_TAG_TYPE_PARENT",
		3: "USER_TAG_TYPE_STUDENT_DISCOUNT",
		4: "USER_TAG_TYPE_PARENT_DISCOUNT",
		5: "USER_TAG_TYPE_STAFF",
	}
	UserTagType_value = map[string]int32{
		"USER_TAG_TYPE_NONE":             0,
		"USER_TAG_TYPE_STUDENT":          1,
		"USER_TAG_TYPE_PARENT":           2,
		"USER_TAG_TYPE_STUDENT_DISCOUNT": 3,
		"USER_TAG_TYPE_PARENT_DISCOUNT":  4,
		"USER_TAG_TYPE_STAFF":            5,
	}
)

func (x UserTagType) Enum() *UserTagType {
	p := new(UserTagType)
	*p = x
	return p
}

func (x UserTagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserTagType) Descriptor() protoreflect.EnumDescriptor {
	return file_usermgmt_v2_enums_proto_enumTypes[5].Descriptor()
}

func (UserTagType) Type() protoreflect.EnumType {
	return &file_usermgmt_v2_enums_proto_enumTypes[5]
}

func (x UserTagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserTagType.Descriptor instead.
func (UserTagType) EnumDescriptor() ([]byte, []int) {
	return file_usermgmt_v2_enums_proto_rawDescGZIP(), []int{5}
}

var File_usermgmt_v2_enums_proto protoreflect.FileDescriptor

var file_usermgmt_v2_enums_proto_rawDesc = []byte{
	0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x32, 0x2a, 0xae, 0x03, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x54, 0x55, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x03, 0x12, 0x14, 0x0a,
	0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x41, 0x44, 0x4d, 0x49,
	0x4e, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54,
	0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x07,
	0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x08, 0x12, 0x1a,
	0x0a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x41, 0x4c,
	0x45, 0x53, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x41, 0x4c, 0x45, 0x53, 0x5f, 0x53,
	0x54, 0x41, 0x46, 0x46, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43, 0x53, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x0b, 0x12,
	0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43, 0x53,
	0x5f, 0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x0c, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x43, 0x48, 0x4f, 0x4f, 0x4c, 0x5f, 0x41, 0x44,
	0x4d, 0x49, 0x4e, 0x10, 0x0d, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x53, 0x43, 0x48, 0x4f, 0x4f, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x46, 0x46,
	0x10, 0x0e, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41,
	0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x0f, 0x2a, 0x98, 0x02, 0x0a, 0x12, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x1c,
	0x0a, 0x18, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a,
	0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53,
	0x48, 0x49, 0x50, 0x5f, 0x46, 0x41, 0x54, 0x48, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a,
	0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53,
	0x48, 0x49, 0x50, 0x5f, 0x4d, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f,
	0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53,
	0x48, 0x49, 0x50, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x46, 0x41, 0x54, 0x48, 0x45, 0x52, 0x10,
	0x03, 0x12, 0x23, 0x0a, 0x1f, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x4c, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x4d, 0x4f,
	0x54, 0x48, 0x45, 0x52, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59,
	0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x55, 0x4e,
	0x43, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f,
	0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x41, 0x55, 0x4e,
	0x54, 0x10, 0x06, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52,
	0x10, 0x07, 0x2a, 0xd9, 0x02, 0x0a, 0x17, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x1e, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4e,
	0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x50, 0x4f, 0x54, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x53,
	0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x45,
	0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x4e, 0x10, 0x03, 0x12, 0x27, 0x0a, 0x23,
	0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x47, 0x52, 0x41, 0x44, 0x55, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54,
	0x5f, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4c, 0x4f, 0x41, 0x10, 0x05, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x54, 0x55, 0x44,
	0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x52, 0x41, 0x52, 0x59, 0x10,
	0x06, 0x12, 0x2b, 0x0a, 0x27, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4e, 0x52,
	0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e,
	0x4f, 0x4e, 0x5f, 0x50, 0x4f, 0x54, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x07, 0x2a, 0x28,
	0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0x34, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x48, 0x4f, 0x4d, 0x45, 0x5f,
	0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x49, 0x4c,
	0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x2a, 0xba,
	0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54,
	0x41, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x55,
	0x44, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x03, 0x12,
	0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x05, 0x42, 0x3c, 0x5a, 0x3a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69,
	0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67,
	0x6d, 0x74, 0x2f, 0x76, 0x32, 0x3b, 0x75, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_usermgmt_v2_enums_proto_rawDescOnce sync.Once
	file_usermgmt_v2_enums_proto_rawDescData = file_usermgmt_v2_enums_proto_rawDesc
)

func file_usermgmt_v2_enums_proto_rawDescGZIP() []byte {
	file_usermgmt_v2_enums_proto_rawDescOnce.Do(func() {
		file_usermgmt_v2_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_usermgmt_v2_enums_proto_rawDescData)
	})
	return file_usermgmt_v2_enums_proto_rawDescData
}

var file_usermgmt_v2_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_usermgmt_v2_enums_proto_goTypes = []interface{}{
	(UserGroup)(0),               // 0: usermgmt.v2.UserGroup
	(FamilyRelationship)(0),      // 1: usermgmt.v2.FamilyRelationship
	(StudentEnrollmentStatus)(0), // 2: usermgmt.v2.StudentEnrollmentStatus
	(Gender)(0),                  // 3: usermgmt.v2.Gender
	(AddressType)(0),             // 4: usermgmt.v2.AddressType
	(UserTagType)(0),             // 5: usermgmt.v2.UserTagType
}
var file_usermgmt_v2_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_usermgmt_v2_enums_proto_init() }
func file_usermgmt_v2_enums_proto_init() {
	if File_usermgmt_v2_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_usermgmt_v2_enums_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_usermgmt_v2_enums_proto_goTypes,
		DependencyIndexes: file_usermgmt_v2_enums_proto_depIdxs,
		EnumInfos:         file_usermgmt_v2_enums_proto_enumTypes,
	}.Build()
	File_usermgmt_v2_enums_proto = out.File
	file_usermgmt_v2_enums_proto_rawDesc = nil
	file_usermgmt_v2_enums_proto_goTypes = nil
	file_usermgmt_v2_enums_proto_depIdxs = nil
}
