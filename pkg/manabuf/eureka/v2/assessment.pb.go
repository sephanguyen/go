// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: eureka/v2/assessment.proto

package epb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SessionIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId           string `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	LearningMaterialId string `protobuf:"bytes,2,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
	UserId             string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SessionIdentity) Reset() {
	*x = SessionIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionIdentity) ProtoMessage() {}

func (x *SessionIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionIdentity.ProtoReflect.Descriptor instead.
func (*SessionIdentity) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{0}
}

func (x *SessionIdentity) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *SessionIdentity) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

func (x *SessionIdentity) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetAssessmentSignedRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionIdentity *SessionIdentity `protobuf:"bytes,1,opt,name=session_identity,json=sessionIdentity,proto3" json:"session_identity,omitempty"`
	Domain          string           `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Config          string           `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetAssessmentSignedRequestRequest) Reset() {
	*x = GetAssessmentSignedRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssessmentSignedRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssessmentSignedRequestRequest) ProtoMessage() {}

func (x *GetAssessmentSignedRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssessmentSignedRequestRequest.ProtoReflect.Descriptor instead.
func (*GetAssessmentSignedRequestRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{1}
}

func (x *GetAssessmentSignedRequestRequest) GetSessionIdentity() *SessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *GetAssessmentSignedRequestRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetAssessmentSignedRequestRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type GetAssessmentSignedRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedRequest string `protobuf:"bytes,1,opt,name=signed_request,json=signedRequest,proto3" json:"signed_request,omitempty"`
}

func (x *GetAssessmentSignedRequestResponse) Reset() {
	*x = GetAssessmentSignedRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssessmentSignedRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssessmentSignedRequestResponse) ProtoMessage() {}

func (x *GetAssessmentSignedRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssessmentSignedRequestResponse.ProtoReflect.Descriptor instead.
func (*GetAssessmentSignedRequestResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{2}
}

func (x *GetAssessmentSignedRequestResponse) GetSignedRequest() string {
	if x != nil {
		return x.SignedRequest
	}
	return ""
}

type GetLearningMaterialStatusesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId            string   `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	LearningMaterialIds []string `protobuf:"bytes,3,rep,name=learning_material_ids,json=learningMaterialIds,proto3" json:"learning_material_ids,omitempty"`
}

func (x *GetLearningMaterialStatusesRequest) Reset() {
	*x = GetLearningMaterialStatusesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLearningMaterialStatusesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLearningMaterialStatusesRequest) ProtoMessage() {}

func (x *GetLearningMaterialStatusesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLearningMaterialStatusesRequest.ProtoReflect.Descriptor instead.
func (*GetLearningMaterialStatusesRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{3}
}

func (x *GetLearningMaterialStatusesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLearningMaterialStatusesRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *GetLearningMaterialStatusesRequest) GetLearningMaterialIds() []string {
	if x != nil {
		return x.LearningMaterialIds
	}
	return nil
}

type GetLearningMaterialStatusesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statuses []*GetLearningMaterialStatusesResponse_LearningMaterialStatus `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
}

func (x *GetLearningMaterialStatusesResponse) Reset() {
	*x = GetLearningMaterialStatusesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLearningMaterialStatusesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLearningMaterialStatusesResponse) ProtoMessage() {}

func (x *GetLearningMaterialStatusesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLearningMaterialStatusesResponse.ProtoReflect.Descriptor instead.
func (*GetLearningMaterialStatusesResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{4}
}

func (x *GetLearningMaterialStatusesResponse) GetStatuses() []*GetLearningMaterialStatusesResponse_LearningMaterialStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type ListAssessmentSubmissionResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionIdentity *SessionIdentity `protobuf:"bytes,1,opt,name=session_identity,json=sessionIdentity,proto3" json:"session_identity,omitempty"`
}

func (x *ListAssessmentSubmissionResultRequest) Reset() {
	*x = ListAssessmentSubmissionResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssessmentSubmissionResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssessmentSubmissionResultRequest) ProtoMessage() {}

func (x *ListAssessmentSubmissionResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssessmentSubmissionResultRequest.ProtoReflect.Descriptor instead.
func (*ListAssessmentSubmissionResultRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{5}
}

func (x *ListAssessmentSubmissionResultRequest) GetSessionIdentity() *SessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

type AssessmentSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId               string                  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TotalPoint              uint32                  `protobuf:"varint,2,opt,name=total_point,json=totalPoint,proto3" json:"total_point,omitempty"`                     // to be deleted since the next prod version
	TotalGradedPoint        uint32                  `protobuf:"varint,3,opt,name=total_graded_point,json=totalGradedPoint,proto3" json:"total_graded_point,omitempty"` // to be deleted since the next prod version
	AssessmentSessionStatus AssessmentSessionStatus `protobuf:"varint,4,opt,name=assessment_session_status,json=assessmentSessionStatus,proto3,enum=eureka.v2.AssessmentSessionStatus" json:"assessment_session_status,omitempty"`
	CreatedAt               *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CompletedAt             *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	GradingStatus           GradingStatus           `protobuf:"varint,7,opt,name=grading_status,json=gradingStatus,proto3,enum=eureka.v2.GradingStatus" json:"grading_status,omitempty"`
	FeedbackSessionId       string                  `protobuf:"bytes,8,opt,name=feedback_session_id,json=feedbackSessionId,proto3" json:"feedback_session_id,omitempty"`
	FeedbackBy              string                  `protobuf:"bytes,9,opt,name=feedback_by,json=feedbackBy,proto3" json:"feedback_by,omitempty"`
	MaxScore                uint32                  `protobuf:"varint,10,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	GradedScore             uint32                  `protobuf:"varint,11,opt,name=graded_score,json=gradedScore,proto3" json:"graded_score,omitempty"`
	SubmissionId            string                  `protobuf:"bytes,12,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
}

func (x *AssessmentSubmission) Reset() {
	*x = AssessmentSubmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssessmentSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssessmentSubmission) ProtoMessage() {}

func (x *AssessmentSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssessmentSubmission.ProtoReflect.Descriptor instead.
func (*AssessmentSubmission) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{6}
}

func (x *AssessmentSubmission) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AssessmentSubmission) GetTotalPoint() uint32 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *AssessmentSubmission) GetTotalGradedPoint() uint32 {
	if x != nil {
		return x.TotalGradedPoint
	}
	return 0
}

func (x *AssessmentSubmission) GetAssessmentSessionStatus() AssessmentSessionStatus {
	if x != nil {
		return x.AssessmentSessionStatus
	}
	return AssessmentSessionStatus_ASSESSMENT_SESSION_STATUS_NONE
}

func (x *AssessmentSubmission) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AssessmentSubmission) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *AssessmentSubmission) GetGradingStatus() GradingStatus {
	if x != nil {
		return x.GradingStatus
	}
	return GradingStatus_GRADING_STATUS_NOT_MARKED
}

func (x *AssessmentSubmission) GetFeedbackSessionId() string {
	if x != nil {
		return x.FeedbackSessionId
	}
	return ""
}

func (x *AssessmentSubmission) GetFeedbackBy() string {
	if x != nil {
		return x.FeedbackBy
	}
	return ""
}

func (x *AssessmentSubmission) GetMaxScore() uint32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *AssessmentSubmission) GetGradedScore() uint32 {
	if x != nil {
		return x.GradedScore
	}
	return 0
}

func (x *AssessmentSubmission) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type ListAssessmentSubmissionResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssessmentSubmissions []*AssessmentSubmission `protobuf:"bytes,1,rep,name=assessment_submissions,json=assessmentSubmissions,proto3" json:"assessment_submissions,omitempty"`
}

func (x *ListAssessmentSubmissionResultResponse) Reset() {
	*x = ListAssessmentSubmissionResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssessmentSubmissionResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssessmentSubmissionResultResponse) ProtoMessage() {}

func (x *ListAssessmentSubmissionResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssessmentSubmissionResultResponse.ProtoReflect.Descriptor instead.
func (*ListAssessmentSubmissionResultResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{7}
}

func (x *ListAssessmentSubmissionResultResponse) GetAssessmentSubmissions() []*AssessmentSubmission {
	if x != nil {
		return x.AssessmentSubmissions
	}
	return nil
}

type CompleteAssessmentSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *CompleteAssessmentSessionRequest) Reset() {
	*x = CompleteAssessmentSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteAssessmentSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteAssessmentSessionRequest) ProtoMessage() {}

func (x *CompleteAssessmentSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteAssessmentSessionRequest.ProtoReflect.Descriptor instead.
func (*CompleteAssessmentSessionRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{8}
}

func (x *CompleteAssessmentSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CompleteAssessmentSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteAssessmentSessionResponse) Reset() {
	*x = CompleteAssessmentSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteAssessmentSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteAssessmentSessionResponse) ProtoMessage() {}

func (x *CompleteAssessmentSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteAssessmentSessionResponse.ProtoReflect.Descriptor instead.
func (*CompleteAssessmentSessionResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{9}
}

type GetAssessmentSubmissionDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId string `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
}

func (x *GetAssessmentSubmissionDetailRequest) Reset() {
	*x = GetAssessmentSubmissionDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssessmentSubmissionDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssessmentSubmissionDetailRequest) ProtoMessage() {}

func (x *GetAssessmentSubmissionDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssessmentSubmissionDetailRequest.ProtoReflect.Descriptor instead.
func (*GetAssessmentSubmissionDetailRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{10}
}

func (x *GetAssessmentSubmissionDetailRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type GetAssessmentSubmissionDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId      string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	CompletedAt       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	MarkedAt          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=marked_at,json=markedAt,proto3" json:"marked_at,omitempty"`
	GradingStatus     GradingStatus          `protobuf:"varint,4,opt,name=grading_status,json=gradingStatus,proto3,enum=eureka.v2.GradingStatus" json:"grading_status,omitempty"`
	AllocatedMarkerId string                 `protobuf:"bytes,5,opt,name=allocated_marker_id,json=allocatedMarkerId,proto3" json:"allocated_marker_id,omitempty"`
	MaxScore          uint32                 `protobuf:"varint,6,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	GradedScore       uint32                 `protobuf:"varint,7,opt,name=graded_score,json=gradedScore,proto3" json:"graded_score,omitempty"`
	StudentSessionId  string                 `protobuf:"bytes,8,opt,name=student_session_id,json=studentSessionId,proto3" json:"student_session_id,omitempty"`
	FeedbackSessionId string                 `protobuf:"bytes,9,opt,name=feedback_session_id,json=feedbackSessionId,proto3" json:"feedback_session_id,omitempty"`
	FeedbackBy        string                 `protobuf:"bytes,10,opt,name=feedback_by,json=feedbackBy,proto3" json:"feedback_by,omitempty"`
	MarkedBy          string                 `protobuf:"bytes,11,opt,name=marked_by,json=markedBy,proto3" json:"marked_by,omitempty"`
	StudentId         string                 `protobuf:"bytes,12,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *GetAssessmentSubmissionDetailResponse) Reset() {
	*x = GetAssessmentSubmissionDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssessmentSubmissionDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssessmentSubmissionDetailResponse) ProtoMessage() {}

func (x *GetAssessmentSubmissionDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssessmentSubmissionDetailResponse.ProtoReflect.Descriptor instead.
func (*GetAssessmentSubmissionDetailResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{11}
}

func (x *GetAssessmentSubmissionDetailResponse) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *GetAssessmentSubmissionDetailResponse) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *GetAssessmentSubmissionDetailResponse) GetMarkedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.MarkedAt
	}
	return nil
}

func (x *GetAssessmentSubmissionDetailResponse) GetGradingStatus() GradingStatus {
	if x != nil {
		return x.GradingStatus
	}
	return GradingStatus_GRADING_STATUS_NOT_MARKED
}

func (x *GetAssessmentSubmissionDetailResponse) GetAllocatedMarkerId() string {
	if x != nil {
		return x.AllocatedMarkerId
	}
	return ""
}

func (x *GetAssessmentSubmissionDetailResponse) GetMaxScore() uint32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *GetAssessmentSubmissionDetailResponse) GetGradedScore() uint32 {
	if x != nil {
		return x.GradedScore
	}
	return 0
}

func (x *GetAssessmentSubmissionDetailResponse) GetStudentSessionId() string {
	if x != nil {
		return x.StudentSessionId
	}
	return ""
}

func (x *GetAssessmentSubmissionDetailResponse) GetFeedbackSessionId() string {
	if x != nil {
		return x.FeedbackSessionId
	}
	return ""
}

func (x *GetAssessmentSubmissionDetailResponse) GetFeedbackBy() string {
	if x != nil {
		return x.FeedbackBy
	}
	return ""
}

func (x *GetAssessmentSubmissionDetailResponse) GetMarkedBy() string {
	if x != nil {
		return x.MarkedBy
	}
	return ""
}

func (x *GetAssessmentSubmissionDetailResponse) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type AllocateMarkerSubmissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllocateMarkerSubmissions []*AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission `protobuf:"bytes,1,rep,name=allocate_marker_submissions,json=allocateMarkerSubmissions,proto3" json:"allocate_marker_submissions,omitempty"`
}

func (x *AllocateMarkerSubmissionsRequest) Reset() {
	*x = AllocateMarkerSubmissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateMarkerSubmissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateMarkerSubmissionsRequest) ProtoMessage() {}

func (x *AllocateMarkerSubmissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateMarkerSubmissionsRequest.ProtoReflect.Descriptor instead.
func (*AllocateMarkerSubmissionsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{12}
}

func (x *AllocateMarkerSubmissionsRequest) GetAllocateMarkerSubmissions() []*AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission {
	if x != nil {
		return x.AllocateMarkerSubmissions
	}
	return nil
}

type AllocateMarkerSubmissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllocateMarkerSubmissionsResponse) Reset() {
	*x = AllocateMarkerSubmissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateMarkerSubmissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateMarkerSubmissionsResponse) ProtoMessage() {}

func (x *AllocateMarkerSubmissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateMarkerSubmissionsResponse.ProtoReflect.Descriptor instead.
func (*AllocateMarkerSubmissionsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{13}
}

type UpdateManualGradingSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId string                                         `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	ToStatus     GradingStatus                                  `protobuf:"varint,2,opt,name=to_status,json=toStatus,proto3,enum=eureka.v2.GradingStatus" json:"to_status,omitempty"`
	Scores       []*UpdateManualGradingSubmissionRequest_Scores `protobuf:"bytes,3,rep,name=scores,proto3" json:"scores,omitempty"`
}

func (x *UpdateManualGradingSubmissionRequest) Reset() {
	*x = UpdateManualGradingSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManualGradingSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManualGradingSubmissionRequest) ProtoMessage() {}

func (x *UpdateManualGradingSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManualGradingSubmissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateManualGradingSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateManualGradingSubmissionRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *UpdateManualGradingSubmissionRequest) GetToStatus() GradingStatus {
	if x != nil {
		return x.ToStatus
	}
	return GradingStatus_GRADING_STATUS_NOT_MARKED
}

func (x *UpdateManualGradingSubmissionRequest) GetScores() []*UpdateManualGradingSubmissionRequest_Scores {
	if x != nil {
		return x.Scores
	}
	return nil
}

type UpdateManualGradingSubmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateManualGradingSubmissionResponse) Reset() {
	*x = UpdateManualGradingSubmissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManualGradingSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManualGradingSubmissionResponse) ProtoMessage() {}

func (x *UpdateManualGradingSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManualGradingSubmissionResponse.ProtoReflect.Descriptor instead.
func (*UpdateManualGradingSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{15}
}

type ListSubmissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging              *v1.Paging             `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	SearchCriteria      string                 `protobuf:"bytes,2,opt,name=search_criteria,json=searchCriteria,proto3" json:"search_criteria,omitempty"`
	CourseId            string                 `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ClassIds            []string               `protobuf:"bytes,4,rep,name=class_ids,json=classIds,proto3" json:"class_ids,omitempty"`
	StartDate           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	GradingStatusFilter GradingStatusFilter    `protobuf:"varint,7,opt,name=grading_status_filter,json=gradingStatusFilter,proto3,enum=eureka.v2.GradingStatusFilter" json:"grading_status_filter,omitempty"`
}

func (x *ListSubmissionsRequest) Reset() {
	*x = ListSubmissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubmissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsRequest) ProtoMessage() {}

func (x *ListSubmissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsRequest.ProtoReflect.Descriptor instead.
func (*ListSubmissionsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{16}
}

func (x *ListSubmissionsRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListSubmissionsRequest) GetSearchCriteria() string {
	if x != nil {
		return x.SearchCriteria
	}
	return ""
}

func (x *ListSubmissionsRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ListSubmissionsRequest) GetClassIds() []string {
	if x != nil {
		return x.ClassIds
	}
	return nil
}

func (x *ListSubmissionsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListSubmissionsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListSubmissionsRequest) GetGradingStatusFilter() GradingStatusFilter {
	if x != nil {
		return x.GradingStatusFilter
	}
	return GradingStatusFilter_GRADING_STATUS_FILTER_ALL
}

type ListSubmissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId   string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	LoId           string                 `protobuf:"bytes,2,opt,name=lo_id,json=loId,proto3" json:"lo_id,omitempty"`
	LoName         string                 `protobuf:"bytes,3,opt,name=lo_name,json=loName,proto3" json:"lo_name,omitempty"`
	StudentId      string                 `protobuf:"bytes,4,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId       string                 `protobuf:"bytes,5,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	GradingStatus  GradingStatus          `protobuf:"varint,6,opt,name=grading_status,json=gradingStatus,proto3,enum=eureka.v2.GradingStatus" json:"grading_status,omitempty"`
	SubmissionDate *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=submission_date,json=submissionDate,proto3" json:"submission_date,omitempty"`
	MarkedDate     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=marked_date,json=markedDate,proto3" json:"marked_date,omitempty"`
}

func (x *ListSubmissionItem) Reset() {
	*x = ListSubmissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubmissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionItem) ProtoMessage() {}

func (x *ListSubmissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionItem.ProtoReflect.Descriptor instead.
func (*ListSubmissionItem) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{17}
}

func (x *ListSubmissionItem) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *ListSubmissionItem) GetLoId() string {
	if x != nil {
		return x.LoId
	}
	return ""
}

func (x *ListSubmissionItem) GetLoName() string {
	if x != nil {
		return x.LoName
	}
	return ""
}

func (x *ListSubmissionItem) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ListSubmissionItem) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ListSubmissionItem) GetGradingStatus() GradingStatus {
	if x != nil {
		return x.GradingStatus
	}
	return GradingStatus_GRADING_STATUS_NOT_MARKED
}

func (x *ListSubmissionItem) GetSubmissionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmissionDate
	}
	return nil
}

func (x *ListSubmissionItem) GetMarkedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.MarkedDate
	}
	return nil
}

type SubmissionsCountByStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	All        uint32 `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	NotMarked  uint32 `protobuf:"varint,2,opt,name=not_marked,json=notMarked,proto3" json:"not_marked,omitempty"`
	InProgress uint32 `protobuf:"varint,3,opt,name=in_progress,json=inProgress,proto3" json:"in_progress,omitempty"`
	Marked     uint32 `protobuf:"varint,4,opt,name=marked,proto3" json:"marked,omitempty"`
	Returned   uint32 `protobuf:"varint,5,opt,name=returned,proto3" json:"returned,omitempty"`
}

func (x *SubmissionsCountByStatus) Reset() {
	*x = SubmissionsCountByStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionsCountByStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionsCountByStatus) ProtoMessage() {}

func (x *SubmissionsCountByStatus) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionsCountByStatus.ProtoReflect.Descriptor instead.
func (*SubmissionsCountByStatus) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{18}
}

func (x *SubmissionsCountByStatus) GetAll() uint32 {
	if x != nil {
		return x.All
	}
	return 0
}

func (x *SubmissionsCountByStatus) GetNotMarked() uint32 {
	if x != nil {
		return x.NotMarked
	}
	return 0
}

func (x *SubmissionsCountByStatus) GetInProgress() uint32 {
	if x != nil {
		return x.InProgress
	}
	return 0
}

func (x *SubmissionsCountByStatus) GetMarked() uint32 {
	if x != nil {
		return x.Marked
	}
	return 0
}

func (x *SubmissionsCountByStatus) GetReturned() uint32 {
	if x != nil {
		return x.Returned
	}
	return 0
}

type ListSubmissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousPage             *v1.Paging                `protobuf:"bytes,1,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	NextPage                 *v1.Paging                `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	ListSubmissions          []*ListSubmissionItem     `protobuf:"bytes,3,rep,name=list_submissions,json=listSubmissions,proto3" json:"list_submissions,omitempty"`
	SubmissionsCountByStatus *SubmissionsCountByStatus `protobuf:"bytes,4,opt,name=submissions_count_by_status,json=submissionsCountByStatus,proto3" json:"submissions_count_by_status,omitempty"`
}

func (x *ListSubmissionsResponse) Reset() {
	*x = ListSubmissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubmissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsResponse) ProtoMessage() {}

func (x *ListSubmissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsResponse.ProtoReflect.Descriptor instead.
func (*ListSubmissionsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{19}
}

func (x *ListSubmissionsResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

func (x *ListSubmissionsResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ListSubmissionsResponse) GetListSubmissions() []*ListSubmissionItem {
	if x != nil {
		return x.ListSubmissions
	}
	return nil
}

func (x *ListSubmissionsResponse) GetSubmissionsCountByStatus() *SubmissionsCountByStatus {
	if x != nil {
		return x.SubmissionsCountByStatus
	}
	return nil
}

type StudyPlanAssessmentSessionIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemId    string `protobuf:"bytes,1,opt,name=study_plan_item_id,json=studyPlanItemId,proto3" json:"study_plan_item_id,omitempty"`
	LearningMaterialId string `protobuf:"bytes,2,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
	UserId             string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *StudyPlanAssessmentSessionIdentity) Reset() {
	*x = StudyPlanAssessmentSessionIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanAssessmentSessionIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanAssessmentSessionIdentity) ProtoMessage() {}

func (x *StudyPlanAssessmentSessionIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanAssessmentSessionIdentity.ProtoReflect.Descriptor instead.
func (*StudyPlanAssessmentSessionIdentity) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{20}
}

func (x *StudyPlanAssessmentSessionIdentity) GetStudyPlanItemId() string {
	if x != nil {
		return x.StudyPlanItemId
	}
	return ""
}

func (x *StudyPlanAssessmentSessionIdentity) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

func (x *StudyPlanAssessmentSessionIdentity) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetStudyPlanAssessmentSignedRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionIdentity *StudyPlanAssessmentSessionIdentity `protobuf:"bytes,1,opt,name=session_identity,json=sessionIdentity,proto3" json:"session_identity,omitempty"`
	Domain          string                              `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Config          string                              `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetStudyPlanAssessmentSignedRequestRequest) Reset() {
	*x = GetStudyPlanAssessmentSignedRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudyPlanAssessmentSignedRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyPlanAssessmentSignedRequestRequest) ProtoMessage() {}

func (x *GetStudyPlanAssessmentSignedRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyPlanAssessmentSignedRequestRequest.ProtoReflect.Descriptor instead.
func (*GetStudyPlanAssessmentSignedRequestRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{21}
}

func (x *GetStudyPlanAssessmentSignedRequestRequest) GetSessionIdentity() *StudyPlanAssessmentSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

func (x *GetStudyPlanAssessmentSignedRequestRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetStudyPlanAssessmentSignedRequestRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type GetStudyPlanAssessmentSignedRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedRequest string `protobuf:"bytes,1,opt,name=signed_request,json=signedRequest,proto3" json:"signed_request,omitempty"`
}

func (x *GetStudyPlanAssessmentSignedRequestResponse) Reset() {
	*x = GetStudyPlanAssessmentSignedRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudyPlanAssessmentSignedRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyPlanAssessmentSignedRequestResponse) ProtoMessage() {}

func (x *GetStudyPlanAssessmentSignedRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyPlanAssessmentSignedRequestResponse.ProtoReflect.Descriptor instead.
func (*GetStudyPlanAssessmentSignedRequestResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{22}
}

func (x *GetStudyPlanAssessmentSignedRequestResponse) GetSignedRequest() string {
	if x != nil {
		return x.SignedRequest
	}
	return ""
}

type ListStudyPlanAssessmentSubmissionResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionIdentity *StudyPlanAssessmentSessionIdentity `protobuf:"bytes,1,opt,name=session_identity,json=sessionIdentity,proto3" json:"session_identity,omitempty"`
}

func (x *ListStudyPlanAssessmentSubmissionResultRequest) Reset() {
	*x = ListStudyPlanAssessmentSubmissionResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudyPlanAssessmentSubmissionResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudyPlanAssessmentSubmissionResultRequest) ProtoMessage() {}

func (x *ListStudyPlanAssessmentSubmissionResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudyPlanAssessmentSubmissionResultRequest.ProtoReflect.Descriptor instead.
func (*ListStudyPlanAssessmentSubmissionResultRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{23}
}

func (x *ListStudyPlanAssessmentSubmissionResultRequest) GetSessionIdentity() *StudyPlanAssessmentSessionIdentity {
	if x != nil {
		return x.SessionIdentity
	}
	return nil
}

type ListStudyPlanAssessmentSubmissionResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssessmentSubmissions []*AssessmentSubmission `protobuf:"bytes,1,rep,name=assessment_submissions,json=assessmentSubmissions,proto3" json:"assessment_submissions,omitempty"`
}

func (x *ListStudyPlanAssessmentSubmissionResultResponse) Reset() {
	*x = ListStudyPlanAssessmentSubmissionResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudyPlanAssessmentSubmissionResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudyPlanAssessmentSubmissionResultResponse) ProtoMessage() {}

func (x *ListStudyPlanAssessmentSubmissionResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudyPlanAssessmentSubmissionResultResponse.ProtoReflect.Descriptor instead.
func (*ListStudyPlanAssessmentSubmissionResultResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{24}
}

func (x *ListStudyPlanAssessmentSubmissionResultResponse) GetAssessmentSubmissions() []*AssessmentSubmission {
	if x != nil {
		return x.AssessmentSubmissions
	}
	return nil
}

type CompleteStudyPlanAssessmentSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *CompleteStudyPlanAssessmentSessionRequest) Reset() {
	*x = CompleteStudyPlanAssessmentSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteStudyPlanAssessmentSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteStudyPlanAssessmentSessionRequest) ProtoMessage() {}

func (x *CompleteStudyPlanAssessmentSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteStudyPlanAssessmentSessionRequest.ProtoReflect.Descriptor instead.
func (*CompleteStudyPlanAssessmentSessionRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{25}
}

func (x *CompleteStudyPlanAssessmentSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CompleteStudyPlanAssessmentSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteStudyPlanAssessmentSessionResponse) Reset() {
	*x = CompleteStudyPlanAssessmentSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteStudyPlanAssessmentSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteStudyPlanAssessmentSessionResponse) ProtoMessage() {}

func (x *CompleteStudyPlanAssessmentSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteStudyPlanAssessmentSessionResponse.ProtoReflect.Descriptor instead.
func (*CompleteStudyPlanAssessmentSessionResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{26}
}

type GetLearningMaterialStatusesResponse_LearningMaterialStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningMaterialId string `protobuf:"bytes,1,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
	IsCompleted        bool   `protobuf:"varint,2,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
}

func (x *GetLearningMaterialStatusesResponse_LearningMaterialStatus) Reset() {
	*x = GetLearningMaterialStatusesResponse_LearningMaterialStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLearningMaterialStatusesResponse_LearningMaterialStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLearningMaterialStatusesResponse_LearningMaterialStatus) ProtoMessage() {}

func (x *GetLearningMaterialStatusesResponse_LearningMaterialStatus) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLearningMaterialStatusesResponse_LearningMaterialStatus.ProtoReflect.Descriptor instead.
func (*GetLearningMaterialStatusesResponse_LearningMaterialStatus) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetLearningMaterialStatusesResponse_LearningMaterialStatus) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

func (x *GetLearningMaterialStatusesResponse_LearningMaterialStatus) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

type AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId    string `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	AllocatedUserId string `protobuf:"bytes,2,opt,name=allocated_user_id,json=allocatedUserId,proto3" json:"allocated_user_id,omitempty"`
}

func (x *AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission) Reset() {
	*x = AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission) ProtoMessage() {}

func (x *AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission.ProtoReflect.Descriptor instead.
func (*AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{12, 0}
}

func (x *AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission) GetAllocatedUserId() string {
	if x != nil {
		return x.AllocatedUserId
	}
	return ""
}

type UpdateManualGradingSubmissionRequest_Scores struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReponseId string `protobuf:"bytes,1,opt,name=reponse_id,json=reponseId,proto3" json:"reponse_id,omitempty"`
	Score     uint32 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	MaxScore  uint32 `protobuf:"varint,3,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
}

func (x *UpdateManualGradingSubmissionRequest_Scores) Reset() {
	*x = UpdateManualGradingSubmissionRequest_Scores{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v2_assessment_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManualGradingSubmissionRequest_Scores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManualGradingSubmissionRequest_Scores) ProtoMessage() {}

func (x *UpdateManualGradingSubmissionRequest_Scores) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v2_assessment_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManualGradingSubmissionRequest_Scores.ProtoReflect.Descriptor instead.
func (*UpdateManualGradingSubmissionRequest_Scores) Descriptor() ([]byte, []int) {
	return file_eureka_v2_assessment_proto_rawDescGZIP(), []int{14, 0}
}

func (x *UpdateManualGradingSubmissionRequest_Scores) GetReponseId() string {
	if x != nil {
		return x.ReponseId
	}
	return ""
}

func (x *UpdateManualGradingSubmissionRequest_Scores) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UpdateManualGradingSubmissionRequest_Scores) GetMaxScore() uint32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

var File_eureka_v2_assessment_proto protoreflect.FileDescriptor

var file_eureka_v2_assessment_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x1a, 0x15, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f,
	0x76, 0x32, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x0f, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x4b, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8e,
	0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x22,
	0xf7, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x1a, 0x6d, 0x0a, 0x16, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x6e, 0x0a, 0x25, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xd5, 0x04, 0x0a, 0x14, 0x41, 0x73,
	0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x5e, 0x0a, 0x19, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x17, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x67, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x67, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x80, 0x01, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x16,
	0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x41, 0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x24,
	0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xb0, 0x04, 0x0a, 0x25, 0x47, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x3f, 0x0a, 0x0e, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x62, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x96, 0x02, 0x0a,
	0x20, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x84, 0x01, 0x0a, 0x1b, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x6b, 0x0a, 0x18, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x24, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x4e, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x1a,
	0x5a, 0x0a, 0x06, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x27, 0x0a, 0x25, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xec, 0x02, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x52, 0x0a, 0x15, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x13,
	0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0xe6, 0x02, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x13, 0x0a, 0x05, 0x6c, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x67, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x67, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xa0, 0x01, 0x0a,
	0x18, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x6f, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6e, 0x6f, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x22,
	0xaf, 0x02, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x6c, 0x69,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a,
	0x1b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x18, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x9c, 0x01, 0x0a, 0x22, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xb6, 0x01, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x58, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x54, 0x0a, 0x2b, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x8a, 0x01, 0x0a, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x58, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x89, 0x01, 0x0a,
	0x2f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73,
	0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x15, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4a, 0x0a, 0x29, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x2a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xb6, 0x0b, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x2e, 0x65, 0x75, 0x72,
	0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01,
	0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x30, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x39, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x91, 0x01, 0x0a, 0x22, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x19, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x47, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f,
	0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x58, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69,
	0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2f, 0x76, 0x32, 0x3b, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eureka_v2_assessment_proto_rawDescOnce sync.Once
	file_eureka_v2_assessment_proto_rawDescData = file_eureka_v2_assessment_proto_rawDesc
)

func file_eureka_v2_assessment_proto_rawDescGZIP() []byte {
	file_eureka_v2_assessment_proto_rawDescOnce.Do(func() {
		file_eureka_v2_assessment_proto_rawDescData = protoimpl.X.CompressGZIP(file_eureka_v2_assessment_proto_rawDescData)
	})
	return file_eureka_v2_assessment_proto_rawDescData
}

var file_eureka_v2_assessment_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_eureka_v2_assessment_proto_goTypes = []interface{}{
	(*SessionIdentity)(nil),                                            // 0: eureka.v2.SessionIdentity
	(*GetAssessmentSignedRequestRequest)(nil),                          // 1: eureka.v2.GetAssessmentSignedRequestRequest
	(*GetAssessmentSignedRequestResponse)(nil),                         // 2: eureka.v2.GetAssessmentSignedRequestResponse
	(*GetLearningMaterialStatusesRequest)(nil),                         // 3: eureka.v2.GetLearningMaterialStatusesRequest
	(*GetLearningMaterialStatusesResponse)(nil),                        // 4: eureka.v2.GetLearningMaterialStatusesResponse
	(*ListAssessmentSubmissionResultRequest)(nil),                      // 5: eureka.v2.ListAssessmentSubmissionResultRequest
	(*AssessmentSubmission)(nil),                                       // 6: eureka.v2.AssessmentSubmission
	(*ListAssessmentSubmissionResultResponse)(nil),                     // 7: eureka.v2.ListAssessmentSubmissionResultResponse
	(*CompleteAssessmentSessionRequest)(nil),                           // 8: eureka.v2.CompleteAssessmentSessionRequest
	(*CompleteAssessmentSessionResponse)(nil),                          // 9: eureka.v2.CompleteAssessmentSessionResponse
	(*GetAssessmentSubmissionDetailRequest)(nil),                       // 10: eureka.v2.GetAssessmentSubmissionDetailRequest
	(*GetAssessmentSubmissionDetailResponse)(nil),                      // 11: eureka.v2.GetAssessmentSubmissionDetailResponse
	(*AllocateMarkerSubmissionsRequest)(nil),                           // 12: eureka.v2.AllocateMarkerSubmissionsRequest
	(*AllocateMarkerSubmissionsResponse)(nil),                          // 13: eureka.v2.AllocateMarkerSubmissionsResponse
	(*UpdateManualGradingSubmissionRequest)(nil),                       // 14: eureka.v2.UpdateManualGradingSubmissionRequest
	(*UpdateManualGradingSubmissionResponse)(nil),                      // 15: eureka.v2.UpdateManualGradingSubmissionResponse
	(*ListSubmissionsRequest)(nil),                                     // 16: eureka.v2.ListSubmissionsRequest
	(*ListSubmissionItem)(nil),                                         // 17: eureka.v2.ListSubmissionItem
	(*SubmissionsCountByStatus)(nil),                                   // 18: eureka.v2.SubmissionsCountByStatus
	(*ListSubmissionsResponse)(nil),                                    // 19: eureka.v2.ListSubmissionsResponse
	(*StudyPlanAssessmentSessionIdentity)(nil),                         // 20: eureka.v2.StudyPlanAssessmentSessionIdentity
	(*GetStudyPlanAssessmentSignedRequestRequest)(nil),                 // 21: eureka.v2.GetStudyPlanAssessmentSignedRequestRequest
	(*GetStudyPlanAssessmentSignedRequestResponse)(nil),                // 22: eureka.v2.GetStudyPlanAssessmentSignedRequestResponse
	(*ListStudyPlanAssessmentSubmissionResultRequest)(nil),             // 23: eureka.v2.ListStudyPlanAssessmentSubmissionResultRequest
	(*ListStudyPlanAssessmentSubmissionResultResponse)(nil),            // 24: eureka.v2.ListStudyPlanAssessmentSubmissionResultResponse
	(*CompleteStudyPlanAssessmentSessionRequest)(nil),                  // 25: eureka.v2.CompleteStudyPlanAssessmentSessionRequest
	(*CompleteStudyPlanAssessmentSessionResponse)(nil),                 // 26: eureka.v2.CompleteStudyPlanAssessmentSessionResponse
	(*GetLearningMaterialStatusesResponse_LearningMaterialStatus)(nil), // 27: eureka.v2.GetLearningMaterialStatusesResponse.LearningMaterialStatus
	(*AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission)(nil),  // 28: eureka.v2.AllocateMarkerSubmissionsRequest.AllocateMarkerSubmission
	(*UpdateManualGradingSubmissionRequest_Scores)(nil),                // 29: eureka.v2.UpdateManualGradingSubmissionRequest.Scores
	(AssessmentSessionStatus)(0),                                       // 30: eureka.v2.AssessmentSessionStatus
	(*timestamppb.Timestamp)(nil),                                      // 31: google.protobuf.Timestamp
	(GradingStatus)(0),                                                 // 32: eureka.v2.GradingStatus
	(*v1.Paging)(nil),                                                  // 33: common.v1.Paging
	(GradingStatusFilter)(0),                                           // 34: eureka.v2.GradingStatusFilter
}
var file_eureka_v2_assessment_proto_depIdxs = []int32{
	0,  // 0: eureka.v2.GetAssessmentSignedRequestRequest.session_identity:type_name -> eureka.v2.SessionIdentity
	27, // 1: eureka.v2.GetLearningMaterialStatusesResponse.statuses:type_name -> eureka.v2.GetLearningMaterialStatusesResponse.LearningMaterialStatus
	0,  // 2: eureka.v2.ListAssessmentSubmissionResultRequest.session_identity:type_name -> eureka.v2.SessionIdentity
	30, // 3: eureka.v2.AssessmentSubmission.assessment_session_status:type_name -> eureka.v2.AssessmentSessionStatus
	31, // 4: eureka.v2.AssessmentSubmission.created_at:type_name -> google.protobuf.Timestamp
	31, // 5: eureka.v2.AssessmentSubmission.completed_at:type_name -> google.protobuf.Timestamp
	32, // 6: eureka.v2.AssessmentSubmission.grading_status:type_name -> eureka.v2.GradingStatus
	6,  // 7: eureka.v2.ListAssessmentSubmissionResultResponse.assessment_submissions:type_name -> eureka.v2.AssessmentSubmission
	31, // 8: eureka.v2.GetAssessmentSubmissionDetailResponse.completed_at:type_name -> google.protobuf.Timestamp
	31, // 9: eureka.v2.GetAssessmentSubmissionDetailResponse.marked_at:type_name -> google.protobuf.Timestamp
	32, // 10: eureka.v2.GetAssessmentSubmissionDetailResponse.grading_status:type_name -> eureka.v2.GradingStatus
	28, // 11: eureka.v2.AllocateMarkerSubmissionsRequest.allocate_marker_submissions:type_name -> eureka.v2.AllocateMarkerSubmissionsRequest.AllocateMarkerSubmission
	32, // 12: eureka.v2.UpdateManualGradingSubmissionRequest.to_status:type_name -> eureka.v2.GradingStatus
	29, // 13: eureka.v2.UpdateManualGradingSubmissionRequest.scores:type_name -> eureka.v2.UpdateManualGradingSubmissionRequest.Scores
	33, // 14: eureka.v2.ListSubmissionsRequest.paging:type_name -> common.v1.Paging
	31, // 15: eureka.v2.ListSubmissionsRequest.start_date:type_name -> google.protobuf.Timestamp
	31, // 16: eureka.v2.ListSubmissionsRequest.end_date:type_name -> google.protobuf.Timestamp
	34, // 17: eureka.v2.ListSubmissionsRequest.grading_status_filter:type_name -> eureka.v2.GradingStatusFilter
	32, // 18: eureka.v2.ListSubmissionItem.grading_status:type_name -> eureka.v2.GradingStatus
	31, // 19: eureka.v2.ListSubmissionItem.submission_date:type_name -> google.protobuf.Timestamp
	31, // 20: eureka.v2.ListSubmissionItem.marked_date:type_name -> google.protobuf.Timestamp
	33, // 21: eureka.v2.ListSubmissionsResponse.previous_page:type_name -> common.v1.Paging
	33, // 22: eureka.v2.ListSubmissionsResponse.next_page:type_name -> common.v1.Paging
	17, // 23: eureka.v2.ListSubmissionsResponse.list_submissions:type_name -> eureka.v2.ListSubmissionItem
	18, // 24: eureka.v2.ListSubmissionsResponse.submissions_count_by_status:type_name -> eureka.v2.SubmissionsCountByStatus
	20, // 25: eureka.v2.GetStudyPlanAssessmentSignedRequestRequest.session_identity:type_name -> eureka.v2.StudyPlanAssessmentSessionIdentity
	20, // 26: eureka.v2.ListStudyPlanAssessmentSubmissionResultRequest.session_identity:type_name -> eureka.v2.StudyPlanAssessmentSessionIdentity
	6,  // 27: eureka.v2.ListStudyPlanAssessmentSubmissionResultResponse.assessment_submissions:type_name -> eureka.v2.AssessmentSubmission
	1,  // 28: eureka.v2.AssessmentService.GetAssessmentSignedRequest:input_type -> eureka.v2.GetAssessmentSignedRequestRequest
	21, // 29: eureka.v2.AssessmentService.GetStudyPlanAssessmentSignedRequest:input_type -> eureka.v2.GetStudyPlanAssessmentSignedRequestRequest
	3,  // 30: eureka.v2.AssessmentService.GetLearningMaterialStatuses:input_type -> eureka.v2.GetLearningMaterialStatusesRequest
	10, // 31: eureka.v2.AssessmentService.GetAssessmentSubmissionDetail:input_type -> eureka.v2.GetAssessmentSubmissionDetailRequest
	5,  // 32: eureka.v2.AssessmentService.ListAssessmentSubmissionResult:input_type -> eureka.v2.ListAssessmentSubmissionResultRequest
	23, // 33: eureka.v2.AssessmentService.ListStudyPlanAssessmentSubmissionResult:input_type -> eureka.v2.ListStudyPlanAssessmentSubmissionResultRequest
	8,  // 34: eureka.v2.AssessmentService.CompleteAssessmentSession:input_type -> eureka.v2.CompleteAssessmentSessionRequest
	25, // 35: eureka.v2.AssessmentService.CompleteStudyPlanAssessmentSession:input_type -> eureka.v2.CompleteStudyPlanAssessmentSessionRequest
	12, // 36: eureka.v2.AssessmentService.AllocateMarkerSubmissions:input_type -> eureka.v2.AllocateMarkerSubmissionsRequest
	14, // 37: eureka.v2.AssessmentService.UpdateManualGradingSubmission:input_type -> eureka.v2.UpdateManualGradingSubmissionRequest
	16, // 38: eureka.v2.AssessmentService.ListSubmissions:input_type -> eureka.v2.ListSubmissionsRequest
	2,  // 39: eureka.v2.AssessmentService.GetAssessmentSignedRequest:output_type -> eureka.v2.GetAssessmentSignedRequestResponse
	22, // 40: eureka.v2.AssessmentService.GetStudyPlanAssessmentSignedRequest:output_type -> eureka.v2.GetStudyPlanAssessmentSignedRequestResponse
	4,  // 41: eureka.v2.AssessmentService.GetLearningMaterialStatuses:output_type -> eureka.v2.GetLearningMaterialStatusesResponse
	11, // 42: eureka.v2.AssessmentService.GetAssessmentSubmissionDetail:output_type -> eureka.v2.GetAssessmentSubmissionDetailResponse
	7,  // 43: eureka.v2.AssessmentService.ListAssessmentSubmissionResult:output_type -> eureka.v2.ListAssessmentSubmissionResultResponse
	24, // 44: eureka.v2.AssessmentService.ListStudyPlanAssessmentSubmissionResult:output_type -> eureka.v2.ListStudyPlanAssessmentSubmissionResultResponse
	9,  // 45: eureka.v2.AssessmentService.CompleteAssessmentSession:output_type -> eureka.v2.CompleteAssessmentSessionResponse
	26, // 46: eureka.v2.AssessmentService.CompleteStudyPlanAssessmentSession:output_type -> eureka.v2.CompleteStudyPlanAssessmentSessionResponse
	13, // 47: eureka.v2.AssessmentService.AllocateMarkerSubmissions:output_type -> eureka.v2.AllocateMarkerSubmissionsResponse
	15, // 48: eureka.v2.AssessmentService.UpdateManualGradingSubmission:output_type -> eureka.v2.UpdateManualGradingSubmissionResponse
	19, // 49: eureka.v2.AssessmentService.ListSubmissions:output_type -> eureka.v2.ListSubmissionsResponse
	39, // [39:50] is the sub-list for method output_type
	28, // [28:39] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_eureka_v2_assessment_proto_init() }
func file_eureka_v2_assessment_proto_init() {
	if File_eureka_v2_assessment_proto != nil {
		return
	}
	file_eureka_v2_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eureka_v2_assessment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssessmentSignedRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssessmentSignedRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLearningMaterialStatusesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLearningMaterialStatusesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssessmentSubmissionResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssessmentSubmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssessmentSubmissionResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteAssessmentSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteAssessmentSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssessmentSubmissionDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssessmentSubmissionDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateMarkerSubmissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateMarkerSubmissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManualGradingSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManualGradingSubmissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubmissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubmissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionsCountByStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubmissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanAssessmentSessionIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudyPlanAssessmentSignedRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudyPlanAssessmentSignedRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudyPlanAssessmentSubmissionResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudyPlanAssessmentSubmissionResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteStudyPlanAssessmentSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteStudyPlanAssessmentSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLearningMaterialStatusesResponse_LearningMaterialStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateMarkerSubmissionsRequest_AllocateMarkerSubmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v2_assessment_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManualGradingSubmissionRequest_Scores); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eureka_v2_assessment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eureka_v2_assessment_proto_goTypes,
		DependencyIndexes: file_eureka_v2_assessment_proto_depIdxs,
		MessageInfos:      file_eureka_v2_assessment_proto_msgTypes,
	}.Build()
	File_eureka_v2_assessment_proto = out.File
	file_eureka_v2_assessment_proto_rawDesc = nil
	file_eureka_v2_assessment_proto_goTypes = nil
	file_eureka_v2_assessment_proto_depIdxs = nil
}
