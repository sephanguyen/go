// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package epb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// StudentStudyPlanServiceClient is the client API for StudentStudyPlanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StudentStudyPlanServiceClient interface {
	ListStudentStudyPlan(ctx context.Context, in *ListStudentStudyPlanRequest, opts ...grpc.CallOption) (*ListStudentStudyPlanResponse, error)
	GetStudentStudyPlanStatus(ctx context.Context, in *GetStudentStudyPlanStatusRequest, opts ...grpc.CallOption) (*GetStudentStudyPlanStatusResponse, error)
	ListStudentStudyPlanItem(ctx context.Context, in *ListStudentStudyPlanItemRequest, opts ...grpc.CallOption) (*ListStudentStudyPlanItemResponse, error)
}

type studentStudyPlanServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStudentStudyPlanServiceClient(cc grpc.ClientConnInterface) StudentStudyPlanServiceClient {
	return &studentStudyPlanServiceClient{cc}
}

func (c *studentStudyPlanServiceClient) ListStudentStudyPlan(ctx context.Context, in *ListStudentStudyPlanRequest, opts ...grpc.CallOption) (*ListStudentStudyPlanResponse, error) {
	out := new(ListStudentStudyPlanResponse)
	err := c.cc.Invoke(ctx, "/eureka.v2.StudentStudyPlanService/ListStudentStudyPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentStudyPlanServiceClient) GetStudentStudyPlanStatus(ctx context.Context, in *GetStudentStudyPlanStatusRequest, opts ...grpc.CallOption) (*GetStudentStudyPlanStatusResponse, error) {
	out := new(GetStudentStudyPlanStatusResponse)
	err := c.cc.Invoke(ctx, "/eureka.v2.StudentStudyPlanService/GetStudentStudyPlanStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentStudyPlanServiceClient) ListStudentStudyPlanItem(ctx context.Context, in *ListStudentStudyPlanItemRequest, opts ...grpc.CallOption) (*ListStudentStudyPlanItemResponse, error) {
	out := new(ListStudentStudyPlanItemResponse)
	err := c.cc.Invoke(ctx, "/eureka.v2.StudentStudyPlanService/ListStudentStudyPlanItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StudentStudyPlanServiceServer is the server API for StudentStudyPlanService service.
// All implementations should embed UnimplementedStudentStudyPlanServiceServer
// for forward compatibility
type StudentStudyPlanServiceServer interface {
	ListStudentStudyPlan(context.Context, *ListStudentStudyPlanRequest) (*ListStudentStudyPlanResponse, error)
	GetStudentStudyPlanStatus(context.Context, *GetStudentStudyPlanStatusRequest) (*GetStudentStudyPlanStatusResponse, error)
	ListStudentStudyPlanItem(context.Context, *ListStudentStudyPlanItemRequest) (*ListStudentStudyPlanItemResponse, error)
}

// UnimplementedStudentStudyPlanServiceServer should be embedded to have forward compatible implementations.
type UnimplementedStudentStudyPlanServiceServer struct {
}

func (UnimplementedStudentStudyPlanServiceServer) ListStudentStudyPlan(context.Context, *ListStudentStudyPlanRequest) (*ListStudentStudyPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStudentStudyPlan not implemented")
}
func (UnimplementedStudentStudyPlanServiceServer) GetStudentStudyPlanStatus(context.Context, *GetStudentStudyPlanStatusRequest) (*GetStudentStudyPlanStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudentStudyPlanStatus not implemented")
}
func (UnimplementedStudentStudyPlanServiceServer) ListStudentStudyPlanItem(context.Context, *ListStudentStudyPlanItemRequest) (*ListStudentStudyPlanItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStudentStudyPlanItem not implemented")
}

// UnsafeStudentStudyPlanServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StudentStudyPlanServiceServer will
// result in compilation errors.
type UnsafeStudentStudyPlanServiceServer interface {
	mustEmbedUnimplementedStudentStudyPlanServiceServer()
}

func RegisterStudentStudyPlanServiceServer(s grpc.ServiceRegistrar, srv StudentStudyPlanServiceServer) {
	s.RegisterService(&_StudentStudyPlanService_serviceDesc, srv)
}

func _StudentStudyPlanService_ListStudentStudyPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStudentStudyPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentStudyPlanServiceServer).ListStudentStudyPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eureka.v2.StudentStudyPlanService/ListStudentStudyPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentStudyPlanServiceServer).ListStudentStudyPlan(ctx, req.(*ListStudentStudyPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentStudyPlanService_GetStudentStudyPlanStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentStudyPlanStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentStudyPlanServiceServer).GetStudentStudyPlanStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eureka.v2.StudentStudyPlanService/GetStudentStudyPlanStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentStudyPlanServiceServer).GetStudentStudyPlanStatus(ctx, req.(*GetStudentStudyPlanStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentStudyPlanService_ListStudentStudyPlanItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStudentStudyPlanItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentStudyPlanServiceServer).ListStudentStudyPlanItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eureka.v2.StudentStudyPlanService/ListStudentStudyPlanItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentStudyPlanServiceServer).ListStudentStudyPlanItem(ctx, req.(*ListStudentStudyPlanItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StudentStudyPlanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eureka.v2.StudentStudyPlanService",
	HandlerType: (*StudentStudyPlanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListStudentStudyPlan",
			Handler:    _StudentStudyPlanService_ListStudentStudyPlan_Handler,
		},
		{
			MethodName: "GetStudentStudyPlanStatus",
			Handler:    _StudentStudyPlanService_GetStudentStudyPlanStatus_Handler,
		},
		{
			MethodName: "ListStudentStudyPlanItem",
			Handler:    _StudentStudyPlanService_ListStudentStudyPlanItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eureka/v2/student_study_plan.proto",
}
