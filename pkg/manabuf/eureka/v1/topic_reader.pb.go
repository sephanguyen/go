// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: eureka/v1/topic_reader.proto

package epb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StudyPlanItemFilter int32

const (
	StudyPlanItemFilter_STUDY_PLAN_ITEM_FILTER_NONE      StudyPlanItemFilter = 0
	StudyPlanItemFilter_STUDY_PLAN_ITEM_FILTER_AVAILABLE StudyPlanItemFilter = 1
)

// Enum value maps for StudyPlanItemFilter.
var (
	StudyPlanItemFilter_name = map[int32]string{
		0: "STUDY_PLAN_ITEM_FILTER_NONE",
		1: "STUDY_PLAN_ITEM_FILTER_AVAILABLE",
	}
	StudyPlanItemFilter_value = map[string]int32{
		"STUDY_PLAN_ITEM_FILTER_NONE":      0,
		"STUDY_PLAN_ITEM_FILTER_AVAILABLE": 1,
	}
)

func (x StudyPlanItemFilter) Enum() *StudyPlanItemFilter {
	p := new(StudyPlanItemFilter)
	*p = x
	return p
}

func (x StudyPlanItemFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudyPlanItemFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_eureka_v1_topic_reader_proto_enumTypes[0].Descriptor()
}

func (StudyPlanItemFilter) Type() protoreflect.EnumType {
	return &file_eureka_v1_topic_reader_proto_enumTypes[0]
}

func (x StudyPlanItemFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudyPlanItemFilter.Descriptor instead.
func (StudyPlanItemFilter) EnumDescriptor() ([]byte, []int) {
	return file_eureka_v1_topic_reader_proto_rawDescGZIP(), []int{0}
}

type ListToDoItemsByTopicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId         *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	TopicIds            []string                `protobuf:"bytes,2,rep,name=topic_ids,json=topicIds,proto3" json:"topic_ids,omitempty"`
	StudyPlanItemFilter StudyPlanItemFilter     `protobuf:"varint,3,opt,name=studyPlanItemFilter,proto3,enum=eureka.v1.StudyPlanItemFilter" json:"studyPlanItemFilter,omitempty"`
}

func (x *ListToDoItemsByTopicsRequest) Reset() {
	*x = ListToDoItemsByTopicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_topic_reader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListToDoItemsByTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToDoItemsByTopicsRequest) ProtoMessage() {}

func (x *ListToDoItemsByTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_topic_reader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToDoItemsByTopicsRequest.ProtoReflect.Descriptor instead.
func (*ListToDoItemsByTopicsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_topic_reader_proto_rawDescGZIP(), []int{0}
}

func (x *ListToDoItemsByTopicsRequest) GetStudyPlanId() *wrapperspb.StringValue {
	if x != nil {
		return x.StudyPlanId
	}
	return nil
}

func (x *ListToDoItemsByTopicsRequest) GetTopicIds() []string {
	if x != nil {
		return x.TopicIds
	}
	return nil
}

func (x *ListToDoItemsByTopicsRequest) GetStudyPlanItemFilter() StudyPlanItemFilter {
	if x != nil {
		return x.StudyPlanItemFilter
	}
	return StudyPlanItemFilter_STUDY_PLAN_ITEM_FILTER_NONE
}

type ListToDoItemsByTopicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ListToDoItemsByTopicsResponse_ToDoItemsByTopic `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListToDoItemsByTopicsResponse) Reset() {
	*x = ListToDoItemsByTopicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_topic_reader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListToDoItemsByTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToDoItemsByTopicsResponse) ProtoMessage() {}

func (x *ListToDoItemsByTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_topic_reader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToDoItemsByTopicsResponse.ProtoReflect.Descriptor instead.
func (*ListToDoItemsByTopicsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_topic_reader_proto_rawDescGZIP(), []int{1}
}

func (x *ListToDoItemsByTopicsResponse) GetItems() []*ListToDoItemsByTopicsResponse_ToDoItemsByTopic {
	if x != nil {
		return x.Items
	}
	return nil
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_topic_reader_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_topic_reader_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_eureka_v1_topic_reader_proto_rawDescGZIP(), []int{2}
}

func (x *Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Country       Country                 `protobuf:"varint,3,opt,name=country,proto3,enum=eureka.v1.Country" json:"country,omitempty"`
	Grade         string                  `protobuf:"bytes,4,opt,name=grade,proto3" json:"grade,omitempty"`
	Subject       Subject                 `protobuf:"varint,5,opt,name=subject,proto3,enum=eureka.v1.Subject" json:"subject,omitempty"`
	Type          TopicType               `protobuf:"varint,6,opt,name=type,proto3,enum=eureka.v1.TopicType" json:"type,omitempty"`
	UpdatedAt     *timestamppb.Timestamp  `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt     *timestamppb.Timestamp  `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status        TopicStatus             `protobuf:"varint,9,opt,name=status,proto3,enum=eureka.v1.TopicStatus" json:"status,omitempty"`
	DisplayOrder  int32                   `protobuf:"varint,10,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	PublishedAt   *timestamppb.Timestamp  `protobuf:"bytes,11,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	TotalLos      int32                   `protobuf:"varint,12,opt,name=total_los,json=totalLos,proto3" json:"total_los,omitempty"`
	ChapterId     string                  `protobuf:"bytes,13,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	SchoolId      int32                   `protobuf:"varint,14,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	IconUrl       string                  `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	Instruction   string                  `protobuf:"bytes,16,opt,name=instruction,proto3" json:"instruction,omitempty"`
	Attachments   []*Attachment           `protobuf:"bytes,17,rep,name=attachments,proto3" json:"attachments,omitempty"`
	CopiedTopicId *wrapperspb.StringValue `protobuf:"bytes,18,opt,name=copied_topic_id,json=copiedTopicId,proto3" json:"copied_topic_id,omitempty"`
	EssayRequired bool                    `protobuf:"varint,19,opt,name=essay_required,json=essayRequired,proto3" json:"essay_required,omitempty"`
}

func (x *Topic) Reset() {
	*x = Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_topic_reader_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_topic_reader_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_eureka_v1_topic_reader_proto_rawDescGZIP(), []int{3}
}

func (x *Topic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Topic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Topic) GetCountry() Country {
	if x != nil {
		return x.Country
	}
	return Country_COUNTRY_NONE
}

func (x *Topic) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *Topic) GetSubject() Subject {
	if x != nil {
		return x.Subject
	}
	return Subject_SUBJECT_NONE
}

func (x *Topic) GetType() TopicType {
	if x != nil {
		return x.Type
	}
	return TopicType_TOPIC_TYPE_NONE
}

func (x *Topic) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Topic) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Topic) GetStatus() TopicStatus {
	if x != nil {
		return x.Status
	}
	return TopicStatus_TOPIC_STATUS_NONE
}

func (x *Topic) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

func (x *Topic) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *Topic) GetTotalLos() int32 {
	if x != nil {
		return x.TotalLos
	}
	return 0
}

func (x *Topic) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *Topic) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *Topic) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Topic) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *Topic) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Topic) GetCopiedTopicId() *wrapperspb.StringValue {
	if x != nil {
		return x.CopiedTopicId
	}
	return nil
}

func (x *Topic) GetEssayRequired() bool {
	if x != nil {
		return x.EssayRequired
	}
	return false
}

type RetrieveTopicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicIds []string `protobuf:"bytes,1,rep,name=topic_ids,json=topicIds,proto3" json:"topic_ids,omitempty"`
}

func (x *RetrieveTopicsRequest) Reset() {
	*x = RetrieveTopicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_topic_reader_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTopicsRequest) ProtoMessage() {}

func (x *RetrieveTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_topic_reader_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTopicsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveTopicsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_topic_reader_proto_rawDescGZIP(), []int{4}
}

func (x *RetrieveTopicsRequest) GetTopicIds() []string {
	if x != nil {
		return x.TopicIds
	}
	return nil
}

type RetrieveTopicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics []*Topic `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *RetrieveTopicsResponse) Reset() {
	*x = RetrieveTopicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_topic_reader_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTopicsResponse) ProtoMessage() {}

func (x *RetrieveTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_topic_reader_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTopicsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveTopicsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_topic_reader_proto_rawDescGZIP(), []int{5}
}

func (x *RetrieveTopicsResponse) GetTopics() []*Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ListToDoItemsByTopicsResponse_ToDoItemsByTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId   string      `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	TodoItems []*ToDoItem `protobuf:"bytes,2,rep,name=todo_items,json=todoItems,proto3" json:"todo_items,omitempty"`
}

func (x *ListToDoItemsByTopicsResponse_ToDoItemsByTopic) Reset() {
	*x = ListToDoItemsByTopicsResponse_ToDoItemsByTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_topic_reader_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListToDoItemsByTopicsResponse_ToDoItemsByTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToDoItemsByTopicsResponse_ToDoItemsByTopic) ProtoMessage() {}

func (x *ListToDoItemsByTopicsResponse_ToDoItemsByTopic) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_topic_reader_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToDoItemsByTopicsResponse_ToDoItemsByTopic.ProtoReflect.Descriptor instead.
func (*ListToDoItemsByTopicsResponse_ToDoItemsByTopic) Descriptor() ([]byte, []int) {
	return file_eureka_v1_topic_reader_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListToDoItemsByTopicsResponse_ToDoItemsByTopic) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *ListToDoItemsByTopicsResponse_ToDoItemsByTopic) GetTodoItems() []*ToDoItem {
	if x != nil {
		return x.TodoItems
	}
	return nil
}

var File_eureka_v1_topic_reader_proto protoreflect.FileDescriptor

var file_eureka_v1_topic_reader_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf,
	0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x40, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x50,
	0x0a, 0x13, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x13, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xd3, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x44, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x61, 0x0a, 0x10, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x74, 0x6f, 0x64, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x74, 0x6f, 0x64,
	0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x32, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x8d, 0x06, 0x0a, 0x05, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x75, 0x72,
	0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x44, 0x0a,
	0x0f, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x73, 0x73, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x73, 0x73,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x34, 0x0a, 0x15, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73,
	0x22, 0x42, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x75, 0x72,
	0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x06, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x2a, 0x5c, 0x0a, 0x13, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x1b, 0x53,
	0x54, 0x55, 0x44, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x46,
	0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20,
	0x53, 0x54, 0x55, 0x44, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f,
	0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x32, 0xd7, 0x01, 0x0a, 0x12, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x12, 0x27, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x44, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x20, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62,
	0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eureka_v1_topic_reader_proto_rawDescOnce sync.Once
	file_eureka_v1_topic_reader_proto_rawDescData = file_eureka_v1_topic_reader_proto_rawDesc
)

func file_eureka_v1_topic_reader_proto_rawDescGZIP() []byte {
	file_eureka_v1_topic_reader_proto_rawDescOnce.Do(func() {
		file_eureka_v1_topic_reader_proto_rawDescData = protoimpl.X.CompressGZIP(file_eureka_v1_topic_reader_proto_rawDescData)
	})
	return file_eureka_v1_topic_reader_proto_rawDescData
}

var file_eureka_v1_topic_reader_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eureka_v1_topic_reader_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_eureka_v1_topic_reader_proto_goTypes = []interface{}{
	(StudyPlanItemFilter)(0),                               // 0: eureka.v1.StudyPlanItemFilter
	(*ListToDoItemsByTopicsRequest)(nil),                   // 1: eureka.v1.ListToDoItemsByTopicsRequest
	(*ListToDoItemsByTopicsResponse)(nil),                  // 2: eureka.v1.ListToDoItemsByTopicsResponse
	(*Attachment)(nil),                                     // 3: eureka.v1.Attachment
	(*Topic)(nil),                                          // 4: eureka.v1.Topic
	(*RetrieveTopicsRequest)(nil),                          // 5: eureka.v1.RetrieveTopicsRequest
	(*RetrieveTopicsResponse)(nil),                         // 6: eureka.v1.RetrieveTopicsResponse
	(*ListToDoItemsByTopicsResponse_ToDoItemsByTopic)(nil), // 7: eureka.v1.ListToDoItemsByTopicsResponse.ToDoItemsByTopic
	(*wrapperspb.StringValue)(nil),                         // 8: google.protobuf.StringValue
	(Country)(0),                                           // 9: eureka.v1.Country
	(Subject)(0),                                           // 10: eureka.v1.Subject
	(TopicType)(0),                                         // 11: eureka.v1.TopicType
	(*timestamppb.Timestamp)(nil),                          // 12: google.protobuf.Timestamp
	(TopicStatus)(0),                                       // 13: eureka.v1.TopicStatus
	(*ToDoItem)(nil),                                       // 14: eureka.v1.ToDoItem
}
var file_eureka_v1_topic_reader_proto_depIdxs = []int32{
	8,  // 0: eureka.v1.ListToDoItemsByTopicsRequest.study_plan_id:type_name -> google.protobuf.StringValue
	0,  // 1: eureka.v1.ListToDoItemsByTopicsRequest.studyPlanItemFilter:type_name -> eureka.v1.StudyPlanItemFilter
	7,  // 2: eureka.v1.ListToDoItemsByTopicsResponse.items:type_name -> eureka.v1.ListToDoItemsByTopicsResponse.ToDoItemsByTopic
	9,  // 3: eureka.v1.Topic.country:type_name -> eureka.v1.Country
	10, // 4: eureka.v1.Topic.subject:type_name -> eureka.v1.Subject
	11, // 5: eureka.v1.Topic.type:type_name -> eureka.v1.TopicType
	12, // 6: eureka.v1.Topic.updated_at:type_name -> google.protobuf.Timestamp
	12, // 7: eureka.v1.Topic.created_at:type_name -> google.protobuf.Timestamp
	13, // 8: eureka.v1.Topic.status:type_name -> eureka.v1.TopicStatus
	12, // 9: eureka.v1.Topic.published_at:type_name -> google.protobuf.Timestamp
	3,  // 10: eureka.v1.Topic.attachments:type_name -> eureka.v1.Attachment
	8,  // 11: eureka.v1.Topic.copied_topic_id:type_name -> google.protobuf.StringValue
	4,  // 12: eureka.v1.RetrieveTopicsResponse.topics:type_name -> eureka.v1.Topic
	14, // 13: eureka.v1.ListToDoItemsByTopicsResponse.ToDoItemsByTopic.todo_items:type_name -> eureka.v1.ToDoItem
	1,  // 14: eureka.v1.TopicReaderService.ListToDoItemsByTopics:input_type -> eureka.v1.ListToDoItemsByTopicsRequest
	5,  // 15: eureka.v1.TopicReaderService.RetrieveTopics:input_type -> eureka.v1.RetrieveTopicsRequest
	2,  // 16: eureka.v1.TopicReaderService.ListToDoItemsByTopics:output_type -> eureka.v1.ListToDoItemsByTopicsResponse
	6,  // 17: eureka.v1.TopicReaderService.RetrieveTopics:output_type -> eureka.v1.RetrieveTopicsResponse
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_eureka_v1_topic_reader_proto_init() }
func file_eureka_v1_topic_reader_proto_init() {
	if File_eureka_v1_topic_reader_proto != nil {
		return
	}
	file_eureka_v1_assignments_proto_init()
	file_eureka_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eureka_v1_topic_reader_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListToDoItemsByTopicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_topic_reader_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListToDoItemsByTopicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_topic_reader_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_topic_reader_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_topic_reader_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTopicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_topic_reader_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTopicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_topic_reader_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListToDoItemsByTopicsResponse_ToDoItemsByTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eureka_v1_topic_reader_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eureka_v1_topic_reader_proto_goTypes,
		DependencyIndexes: file_eureka_v1_topic_reader_proto_depIdxs,
		EnumInfos:         file_eureka_v1_topic_reader_proto_enumTypes,
		MessageInfos:      file_eureka_v1_topic_reader_proto_msgTypes,
	}.Build()
	File_eureka_v1_topic_reader_proto = out.File
	file_eureka_v1_topic_reader_proto_rawDesc = nil
	file_eureka_v1_topic_reader_proto_goTypes = nil
	file_eureka_v1_topic_reader_proto_depIdxs = nil
}
