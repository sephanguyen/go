// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: eureka/v1/course_reader.proto

package epb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RetrieveLOsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string   `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	TopicIds         []string `protobuf:"bytes,2,rep,name=topic_ids,json=topicIds,proto3" json:"topic_ids,omitempty"`
	WithCompleteness bool     `protobuf:"varint,3,opt,name=with_completeness,json=withCompleteness,proto3" json:"with_completeness,omitempty"`
	// either topic_ids or lo_ids can be existed
	LoIds                []string `protobuf:"bytes,4,rep,name=lo_ids,json=loIds,proto3" json:"lo_ids,omitempty"`
	WithAchievementCrown bool     `protobuf:"varint,5,opt,name=with_achievement_crown,json=withAchievementCrown,proto3" json:"with_achievement_crown,omitempty"`
}

func (x *RetrieveLOsRequest) Reset() {
	*x = RetrieveLOsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLOsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLOsRequest) ProtoMessage() {}

func (x *RetrieveLOsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLOsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveLOsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{0}
}

func (x *RetrieveLOsRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *RetrieveLOsRequest) GetTopicIds() []string {
	if x != nil {
		return x.TopicIds
	}
	return nil
}

func (x *RetrieveLOsRequest) GetWithCompleteness() bool {
	if x != nil {
		return x.WithCompleteness
	}
	return false
}

func (x *RetrieveLOsRequest) GetLoIds() []string {
	if x != nil {
		return x.LoIds
	}
	return nil
}

func (x *RetrieveLOsRequest) GetWithAchievementCrown() bool {
	if x != nil {
		return x.WithAchievementCrown
	}
	return false
}

type RetrieveLOsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningObjectives []*v1.LearningObjective `protobuf:"bytes,1,rep,name=learning_objectives,json=learningObjectives,proto3" json:"learning_objectives,omitempty"`
	Completenesses     []*v1.Completenes       `protobuf:"bytes,2,rep,name=completenesses,proto3" json:"completenesses,omitempty"`                                                                                                                // correspond to list of LO, value in range of [0,100]
	TotalQuestions     map[string]int32        `protobuf:"bytes,3,rep,name=total_questions,json=totalQuestions,proto3" json:"total_questions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // lo id => total questions
	Crowns             []v1.AchievementCrown   `protobuf:"varint,4,rep,packed,name=crowns,proto3,enum=common.v1.AchievementCrown" json:"crowns,omitempty"`                                                                                        // correspond to list of LO, value in range of [0,100]
}

func (x *RetrieveLOsResponse) Reset() {
	*x = RetrieveLOsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLOsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLOsResponse) ProtoMessage() {}

func (x *RetrieveLOsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLOsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveLOsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{1}
}

func (x *RetrieveLOsResponse) GetLearningObjectives() []*v1.LearningObjective {
	if x != nil {
		return x.LearningObjectives
	}
	return nil
}

func (x *RetrieveLOsResponse) GetCompletenesses() []*v1.Completenes {
	if x != nil {
		return x.Completenesses
	}
	return nil
}

func (x *RetrieveLOsResponse) GetTotalQuestions() map[string]int32 {
	if x != nil {
		return x.TotalQuestions
	}
	return nil
}

func (x *RetrieveLOsResponse) GetCrowns() []v1.AchievementCrown {
	if x != nil {
		return x.Crowns
	}
	return nil
}

type ListClassByCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId    string   `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`          // required
	LocationIds []string `protobuf:"bytes,2,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"` // options
}

func (x *ListClassByCourseRequest) Reset() {
	*x = ListClassByCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClassByCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClassByCourseRequest) ProtoMessage() {}

func (x *ListClassByCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClassByCourseRequest.ProtoReflect.Descriptor instead.
func (*ListClassByCourseRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{2}
}

func (x *ListClassByCourseRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ListClassByCourseRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type ListClassByCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassIds []string `protobuf:"bytes,1,rep,name=class_ids,json=classIds,proto3" json:"class_ids,omitempty"`
}

func (x *ListClassByCourseResponse) Reset() {
	*x = ListClassByCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClassByCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClassByCourseResponse) ProtoMessage() {}

func (x *ListClassByCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClassByCourseResponse.ProtoReflect.Descriptor instead.
func (*ListClassByCourseResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{3}
}

func (x *ListClassByCourseResponse) GetClassIds() []string {
	if x != nil {
		return x.ClassIds
	}
	return nil
}

type ListStudentByCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId   string     `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	SearchText string     `protobuf:"bytes,2,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"`
	Paging     *v1.Paging `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *ListStudentByCourseRequest) Reset() {
	*x = ListStudentByCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentByCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentByCourseRequest) ProtoMessage() {}

func (x *ListStudentByCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentByCourseRequest.ProtoReflect.Descriptor instead.
func (*ListStudentByCourseRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{4}
}

func (x *ListStudentByCourseRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ListStudentByCourseRequest) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

func (x *ListStudentByCourseRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type ListStudentByCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*v1.BasicProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
	NextPage *v1.Paging         `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
}

func (x *ListStudentByCourseResponse) Reset() {
	*x = ListStudentByCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentByCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentByCourseResponse) ProtoMessage() {}

func (x *ListStudentByCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentByCourseResponse.ProtoReflect.Descriptor instead.
func (*ListStudentByCourseResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{5}
}

func (x *ListStudentByCourseResponse) GetProfiles() []*v1.BasicProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *ListStudentByCourseResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

type ListStudentIDsByCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseIds []string   `protobuf:"bytes,1,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	Paging    *v1.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *ListStudentIDsByCourseRequest) Reset() {
	*x = ListStudentIDsByCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentIDsByCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentIDsByCourseRequest) ProtoMessage() {}

func (x *ListStudentIDsByCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentIDsByCourseRequest.ProtoReflect.Descriptor instead.
func (*ListStudentIDsByCourseRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{6}
}

func (x *ListStudentIDsByCourseRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *ListStudentIDsByCourseRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type ListStudentIDsByCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentCourses []*ListStudentIDsByCourseResponse_StudentCourses `protobuf:"bytes,1,rep,name=student_courses,json=studentCourses,proto3" json:"student_courses,omitempty"`
	NextPage       *v1.Paging                                       `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
}

func (x *ListStudentIDsByCourseResponse) Reset() {
	*x = ListStudentIDsByCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentIDsByCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentIDsByCourseResponse) ProtoMessage() {}

func (x *ListStudentIDsByCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentIDsByCourseResponse.ProtoReflect.Descriptor instead.
func (*ListStudentIDsByCourseResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{7}
}

func (x *ListStudentIDsByCourseResponse) GetStudentCourses() []*ListStudentIDsByCourseResponse_StudentCourses {
	if x != nil {
		return x.StudentCourses
	}
	return nil
}

func (x *ListStudentIDsByCourseResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

type ListCourseIDsByStudentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentIds     []string `protobuf:"bytes,1,rep,name=student_ids,json=studentIds,proto3" json:"student_ids,omitempty"`
	OrganizationId string   `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *ListCourseIDsByStudentsRequest) Reset() {
	*x = ListCourseIDsByStudentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseIDsByStudentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseIDsByStudentsRequest) ProtoMessage() {}

func (x *ListCourseIDsByStudentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseIDsByStudentsRequest.ProtoReflect.Descriptor instead.
func (*ListCourseIDsByStudentsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{8}
}

func (x *ListCourseIDsByStudentsRequest) GetStudentIds() []string {
	if x != nil {
		return x.StudentIds
	}
	return nil
}

func (x *ListCourseIDsByStudentsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type ListCourseIDsByStudentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentCourses []*ListCourseIDsByStudentsResponse_StudentCourses `protobuf:"bytes,1,rep,name=student_courses,json=studentCourses,proto3" json:"student_courses,omitempty"`
}

func (x *ListCourseIDsByStudentsResponse) Reset() {
	*x = ListCourseIDsByStudentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseIDsByStudentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseIDsByStudentsResponse) ProtoMessage() {}

func (x *ListCourseIDsByStudentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseIDsByStudentsResponse.ProtoReflect.Descriptor instead.
func (*ListCourseIDsByStudentsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{9}
}

func (x *ListCourseIDsByStudentsResponse) GetStudentCourses() []*ListCourseIDsByStudentsResponse_StudentCourses {
	if x != nil {
		return x.StudentCourses
	}
	return nil
}

type ListStudentIDsByCourseV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseIds []string `protobuf:"bytes,1,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	SchoolId  int32    `protobuf:"varint,2,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
}

func (x *ListStudentIDsByCourseV2Request) Reset() {
	*x = ListStudentIDsByCourseV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentIDsByCourseV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentIDsByCourseV2Request) ProtoMessage() {}

func (x *ListStudentIDsByCourseV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentIDsByCourseV2Request.ProtoReflect.Descriptor instead.
func (*ListStudentIDsByCourseV2Request) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{10}
}

func (x *ListStudentIDsByCourseV2Request) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *ListStudentIDsByCourseV2Request) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

type ListStudentIDsByCourseV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentCourses *ListStudentIDsByCourseV2Response_StudentCourses `protobuf:"bytes,1,opt,name=student_courses,json=studentCourses,proto3" json:"student_courses,omitempty"`
}

func (x *ListStudentIDsByCourseV2Response) Reset() {
	*x = ListStudentIDsByCourseV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentIDsByCourseV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentIDsByCourseV2Response) ProtoMessage() {}

func (x *ListStudentIDsByCourseV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentIDsByCourseV2Response.ProtoReflect.Descriptor instead.
func (*ListStudentIDsByCourseV2Response) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{11}
}

func (x *ListStudentIDsByCourseV2Response) GetStudentCourses() *ListStudentIDsByCourseV2Response_StudentCourses {
	if x != nil {
		return x.StudentCourses
	}
	return nil
}

type ListTopicsByStudyPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging      *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	StudyPlanId string     `protobuf:"bytes,2,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
}

func (x *ListTopicsByStudyPlanRequest) Reset() {
	*x = ListTopicsByStudyPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTopicsByStudyPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsByStudyPlanRequest) ProtoMessage() {}

func (x *ListTopicsByStudyPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsByStudyPlanRequest.ProtoReflect.Descriptor instead.
func (*ListTopicsByStudyPlanRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{12}
}

func (x *ListTopicsByStudyPlanRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListTopicsByStudyPlanRequest) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

type ListTopicsByStudyPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage *v1.Paging  `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Items    []*v1.Topic `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTopicsByStudyPlanResponse) Reset() {
	*x = ListTopicsByStudyPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTopicsByStudyPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsByStudyPlanResponse) ProtoMessage() {}

func (x *ListTopicsByStudyPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsByStudyPlanResponse.ProtoReflect.Descriptor instead.
func (*ListTopicsByStudyPlanResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{13}
}

func (x *ListTopicsByStudyPlanResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ListTopicsByStudyPlanResponse) GetItems() []*v1.Topic {
	if x != nil {
		return x.Items
	}
	return nil
}

type RetrieveCourseStatisticRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId    string `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StudyPlanId string `protobuf:"bytes,2,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	ClassId     string `protobuf:"bytes,3,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
}

func (x *RetrieveCourseStatisticRequest) Reset() {
	*x = RetrieveCourseStatisticRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCourseStatisticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCourseStatisticRequest) ProtoMessage() {}

func (x *RetrieveCourseStatisticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCourseStatisticRequest.ProtoReflect.Descriptor instead.
func (*RetrieveCourseStatisticRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{14}
}

func (x *RetrieveCourseStatisticRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *RetrieveCourseStatisticRequest) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *RetrieveCourseStatisticRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

type RetrieveCourseStatisticResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseStatisticItems []*RetrieveCourseStatisticResponse_CourseStatisticItem `protobuf:"bytes,1,rep,name=course_statistic_items,json=courseStatisticItems,proto3" json:"course_statistic_items,omitempty"`
}

func (x *RetrieveCourseStatisticResponse) Reset() {
	*x = RetrieveCourseStatisticResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCourseStatisticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCourseStatisticResponse) ProtoMessage() {}

func (x *RetrieveCourseStatisticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCourseStatisticResponse.ProtoReflect.Descriptor instead.
func (*RetrieveCourseStatisticResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{15}
}

func (x *RetrieveCourseStatisticResponse) GetCourseStatisticItems() []*RetrieveCourseStatisticResponse_CourseStatisticItem {
	if x != nil {
		return x.CourseStatisticItems
	}
	return nil
}

type RetrieveCourseStatisticRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId      string   `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StudyPlanId   string   `protobuf:"bytes,2,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	ClassId       []string `protobuf:"bytes,3,rep,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	StudentTagIds []string `protobuf:"bytes,4,rep,name=student_tag_ids,json=studentTagIds,proto3" json:"student_tag_ids,omitempty"`
	SchoolIds     []string `protobuf:"bytes,5,rep,name=school_ids,json=schoolIds,proto3" json:"school_ids,omitempty"`
}

func (x *RetrieveCourseStatisticRequestV2) Reset() {
	*x = RetrieveCourseStatisticRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCourseStatisticRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCourseStatisticRequestV2) ProtoMessage() {}

func (x *RetrieveCourseStatisticRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCourseStatisticRequestV2.ProtoReflect.Descriptor instead.
func (*RetrieveCourseStatisticRequestV2) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{16}
}

func (x *RetrieveCourseStatisticRequestV2) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *RetrieveCourseStatisticRequestV2) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *RetrieveCourseStatisticRequestV2) GetClassId() []string {
	if x != nil {
		return x.ClassId
	}
	return nil
}

func (x *RetrieveCourseStatisticRequestV2) GetStudentTagIds() []string {
	if x != nil {
		return x.StudentTagIds
	}
	return nil
}

func (x *RetrieveCourseStatisticRequestV2) GetSchoolIds() []string {
	if x != nil {
		return x.SchoolIds
	}
	return nil
}

type RetrieveCourseStatisticResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicStatistic []*RetrieveCourseStatisticResponseV2_TopicStatistic `protobuf:"bytes,1,rep,name=topic_statistic,json=topicStatistic,proto3" json:"topic_statistic,omitempty"`
}

func (x *RetrieveCourseStatisticResponseV2) Reset() {
	*x = RetrieveCourseStatisticResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCourseStatisticResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCourseStatisticResponseV2) ProtoMessage() {}

func (x *RetrieveCourseStatisticResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCourseStatisticResponseV2.ProtoReflect.Descriptor instead.
func (*RetrieveCourseStatisticResponseV2) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{17}
}

func (x *RetrieveCourseStatisticResponseV2) GetTopicStatistic() []*RetrieveCourseStatisticResponseV2_TopicStatistic {
	if x != nil {
		return x.TopicStatistic
	}
	return nil
}

type GetLOsByCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId []string   `protobuf:"bytes,1,rep,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Paging   *v1.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *GetLOsByCourseRequest) Reset() {
	*x = GetLOsByCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLOsByCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLOsByCourseRequest) ProtoMessage() {}

func (x *GetLOsByCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLOsByCourseRequest.ProtoReflect.Descriptor instead.
func (*GetLOsByCourseRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{18}
}

func (x *GetLOsByCourseRequest) GetCourseId() []string {
	if x != nil {
		return x.CourseId
	}
	return nil
}

func (x *GetLOsByCourseRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type GetLOsByCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LOs        []*GetLOsByCourseResponse_LearningObject `protobuf:"bytes,1,rep,name=LOs,proto3" json:"LOs,omitempty"`
	NextPage   *v1.Paging                               `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	TotalItems int32                                    `protobuf:"varint,3,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
}

func (x *GetLOsByCourseResponse) Reset() {
	*x = GetLOsByCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLOsByCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLOsByCourseResponse) ProtoMessage() {}

func (x *GetLOsByCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLOsByCourseResponse.ProtoReflect.Descriptor instead.
func (*GetLOsByCourseResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{19}
}

func (x *GetLOsByCourseResponse) GetLOs() []*GetLOsByCourseResponse_LearningObject {
	if x != nil {
		return x.LOs
	}
	return nil
}

func (x *GetLOsByCourseResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *GetLOsByCourseResponse) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

type GetStudentsAccessPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationIds []string `protobuf:"bytes,1,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	StudentIds  []string `protobuf:"bytes,2,rep,name=student_ids,json=studentIds,proto3" json:"student_ids,omitempty"`
	CourseIds   []string `protobuf:"bytes,3,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
}

func (x *GetStudentsAccessPathRequest) Reset() {
	*x = GetStudentsAccessPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentsAccessPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentsAccessPathRequest) ProtoMessage() {}

func (x *GetStudentsAccessPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentsAccessPathRequest.ProtoReflect.Descriptor instead.
func (*GetStudentsAccessPathRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{20}
}

func (x *GetStudentsAccessPathRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *GetStudentsAccessPathRequest) GetStudentIds() []string {
	if x != nil {
		return x.StudentIds
	}
	return nil
}

func (x *GetStudentsAccessPathRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

type GetStudentsAccessPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseStudentAccesssPaths []*GetStudentsAccessPathResponse_CourseStudentAccessPathObject `protobuf:"bytes,1,rep,name=course_student_accesss_paths,json=courseStudentAccesssPaths,proto3" json:"course_student_accesss_paths,omitempty"`
}

func (x *GetStudentsAccessPathResponse) Reset() {
	*x = GetStudentsAccessPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentsAccessPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentsAccessPathResponse) ProtoMessage() {}

func (x *GetStudentsAccessPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentsAccessPathResponse.ProtoReflect.Descriptor instead.
func (*GetStudentsAccessPathResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{21}
}

func (x *GetStudentsAccessPathResponse) GetCourseStudentAccesssPaths() []*GetStudentsAccessPathResponse_CourseStudentAccessPathObject {
	if x != nil {
		return x.CourseStudentAccesssPaths
	}
	return nil
}

type ListStudentIDsByCourseResponse_StudentCourses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string   `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseIds []string `protobuf:"bytes,2,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
}

func (x *ListStudentIDsByCourseResponse_StudentCourses) Reset() {
	*x = ListStudentIDsByCourseResponse_StudentCourses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentIDsByCourseResponse_StudentCourses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentIDsByCourseResponse_StudentCourses) ProtoMessage() {}

func (x *ListStudentIDsByCourseResponse_StudentCourses) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentIDsByCourseResponse_StudentCourses.ProtoReflect.Descriptor instead.
func (*ListStudentIDsByCourseResponse_StudentCourses) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListStudentIDsByCourseResponse_StudentCourses) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ListStudentIDsByCourseResponse_StudentCourses) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

type ListCourseIDsByStudentsResponse_StudentCourses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string   `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseIds []string `protobuf:"bytes,2,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
}

func (x *ListCourseIDsByStudentsResponse_StudentCourses) Reset() {
	*x = ListCourseIDsByStudentsResponse_StudentCourses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseIDsByStudentsResponse_StudentCourses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseIDsByStudentsResponse_StudentCourses) ProtoMessage() {}

func (x *ListCourseIDsByStudentsResponse_StudentCourses) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseIDsByStudentsResponse_StudentCourses.ProtoReflect.Descriptor instead.
func (*ListCourseIDsByStudentsResponse_StudentCourses) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListCourseIDsByStudentsResponse_StudentCourses) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ListCourseIDsByStudentsResponse_StudentCourses) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

type ListStudentIDsByCourseV2Response_StudentCourses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string   `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseIds []string `protobuf:"bytes,2,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
}

func (x *ListStudentIDsByCourseV2Response_StudentCourses) Reset() {
	*x = ListStudentIDsByCourseV2Response_StudentCourses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudentIDsByCourseV2Response_StudentCourses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentIDsByCourseV2Response_StudentCourses) ProtoMessage() {}

func (x *ListStudentIDsByCourseV2Response_StudentCourses) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentIDsByCourseV2Response_StudentCourses.ProtoReflect.Descriptor instead.
func (*ListStudentIDsByCourseV2Response_StudentCourses) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListStudentIDsByCourseV2Response_StudentCourses) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ListStudentIDsByCourseV2Response_StudentCourses) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

type RetrieveCourseStatisticResponse_CourseStatisticItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId                     string                                                                            `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	CompletedStudent            int32                                                                             `protobuf:"varint,2,opt,name=completed_student,json=completedStudent,proto3" json:"completed_student,omitempty"`
	TotalAssignedStudent        int32                                                                             `protobuf:"varint,3,opt,name=total_assigned_student,json=totalAssignedStudent,proto3" json:"total_assigned_student,omitempty"`
	AverageScore                int32                                                                             `protobuf:"varint,4,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
	StudyPlanItemStatisticItems []*RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem `protobuf:"bytes,5,rep,name=study_plan_item_statistic_items,json=studyPlanItemStatisticItems,proto3" json:"study_plan_item_statistic_items,omitempty"`
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem) Reset() {
	*x = RetrieveCourseStatisticResponse_CourseStatisticItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCourseStatisticResponse_CourseStatisticItem) ProtoMessage() {}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCourseStatisticResponse_CourseStatisticItem.ProtoReflect.Descriptor instead.
func (*RetrieveCourseStatisticResponse_CourseStatisticItem) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{15, 0}
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem) GetCompletedStudent() int32 {
	if x != nil {
		return x.CompletedStudent
	}
	return 0
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem) GetTotalAssignedStudent() int32 {
	if x != nil {
		return x.TotalAssignedStudent
	}
	return 0
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem) GetAverageScore() int32 {
	if x != nil {
		return x.AverageScore
	}
	return 0
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem) GetStudyPlanItemStatisticItems() []*RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem {
	if x != nil {
		return x.StudyPlanItemStatisticItems
	}
	return nil
}

type RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemId      string `protobuf:"bytes,1,opt,name=study_plan_item_id,json=studyPlanItemId,proto3" json:"study_plan_item_id,omitempty"`
	CompletedStudent     int32  `protobuf:"varint,2,opt,name=completed_student,json=completedStudent,proto3" json:"completed_student,omitempty"`
	TotalAssignedStudent int32  `protobuf:"varint,3,opt,name=total_assigned_student,json=totalAssignedStudent,proto3" json:"total_assigned_student,omitempty"`
	AverageScore         int32  `protobuf:"varint,4,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem) Reset() {
	*x = RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem) ProtoMessage() {
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem.ProtoReflect.Descriptor instead.
func (*RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{15, 0, 0}
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem) GetStudyPlanItemId() string {
	if x != nil {
		return x.StudyPlanItemId
	}
	return ""
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem) GetCompletedStudent() int32 {
	if x != nil {
		return x.CompletedStudent
	}
	return 0
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem) GetTotalAssignedStudent() int32 {
	if x != nil {
		return x.TotalAssignedStudent
	}
	return 0
}

func (x *RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem) GetAverageScore() int32 {
	if x != nil {
		return x.AverageScore
	}
	return 0
}

type RetrieveCourseStatisticResponseV2_TopicStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId                   string                                                                        `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	CompletedStudent          int32                                                                         `protobuf:"varint,2,opt,name=completed_student,json=completedStudent,proto3" json:"completed_student,omitempty"`
	TotalAssignedStudent      int32                                                                         `protobuf:"varint,3,opt,name=total_assigned_student,json=totalAssignedStudent,proto3" json:"total_assigned_student,omitempty"`
	AverageScore              int32                                                                         `protobuf:"varint,4,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
	LearningMaterialStatistic []*RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic `protobuf:"bytes,5,rep,name=learning_material_statistic,json=learningMaterialStatistic,proto3" json:"learning_material_statistic,omitempty"`
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic) Reset() {
	*x = RetrieveCourseStatisticResponseV2_TopicStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCourseStatisticResponseV2_TopicStatistic) ProtoMessage() {}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCourseStatisticResponseV2_TopicStatistic.ProtoReflect.Descriptor instead.
func (*RetrieveCourseStatisticResponseV2_TopicStatistic) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{17, 0}
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic) GetCompletedStudent() int32 {
	if x != nil {
		return x.CompletedStudent
	}
	return 0
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic) GetTotalAssignedStudent() int32 {
	if x != nil {
		return x.TotalAssignedStudent
	}
	return 0
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic) GetAverageScore() int32 {
	if x != nil {
		return x.AverageScore
	}
	return 0
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic) GetLearningMaterialStatistic() []*RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic {
	if x != nil {
		return x.LearningMaterialStatistic
	}
	return nil
}

type RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemId      string `protobuf:"bytes,1,opt,name=study_plan_item_id,json=studyPlanItemId,proto3" json:"study_plan_item_id,omitempty"`
	CompletedStudent     int32  `protobuf:"varint,2,opt,name=completed_student,json=completedStudent,proto3" json:"completed_student,omitempty"`
	TotalAssignedStudent int32  `protobuf:"varint,3,opt,name=total_assigned_student,json=totalAssignedStudent,proto3" json:"total_assigned_student,omitempty"`
	AverageScore         int32  `protobuf:"varint,4,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
	LearningMaterialId   string `protobuf:"bytes,5,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) Reset() {
	*x = RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) ProtoMessage() {}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic.ProtoReflect.Descriptor instead.
func (*RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{17, 0, 0}
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) GetStudyPlanItemId() string {
	if x != nil {
		return x.StudyPlanItemId
	}
	return ""
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) GetCompletedStudent() int32 {
	if x != nil {
		return x.CompletedStudent
	}
	return 0
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) GetTotalAssignedStudent() int32 {
	if x != nil {
		return x.TotalAssignedStudent
	}
	return 0
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) GetAverageScore() int32 {
	if x != nil {
		return x.AverageScore
	}
	return 0
}

func (x *RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

type GetLOsByCourseResponse_LearningObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId         string `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	TopicName          string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	LoName             string `protobuf:"bytes,3,opt,name=lo_name,json=loName,proto3" json:"lo_name,omitempty"`
	LearningMaterialId string `protobuf:"bytes,4,opt,name=learning_material_id,json=learningMaterialId,proto3" json:"learning_material_id,omitempty"`
}

func (x *GetLOsByCourseResponse_LearningObject) Reset() {
	*x = GetLOsByCourseResponse_LearningObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLOsByCourseResponse_LearningObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLOsByCourseResponse_LearningObject) ProtoMessage() {}

func (x *GetLOsByCourseResponse_LearningObject) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLOsByCourseResponse_LearningObject.ProtoReflect.Descriptor instead.
func (*GetLOsByCourseResponse_LearningObject) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{19, 0}
}

func (x *GetLOsByCourseResponse_LearningObject) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *GetLOsByCourseResponse_LearningObject) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *GetLOsByCourseResponse_LearningObject) GetLoName() string {
	if x != nil {
		return x.LoName
	}
	return ""
}

func (x *GetLOsByCourseResponse_LearningObject) GetLearningMaterialId() string {
	if x != nil {
		return x.LearningMaterialId
	}
	return ""
}

type GetStudentsAccessPathResponse_CourseStudentAccessPathObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseStudentId string `protobuf:"bytes,1,opt,name=course_student_id,json=courseStudentId,proto3" json:"course_student_id,omitempty"`
	StudentId       string `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId        string `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *GetStudentsAccessPathResponse_CourseStudentAccessPathObject) Reset() {
	*x = GetStudentsAccessPathResponse_CourseStudentAccessPathObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_course_reader_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentsAccessPathResponse_CourseStudentAccessPathObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentsAccessPathResponse_CourseStudentAccessPathObject) ProtoMessage() {}

func (x *GetStudentsAccessPathResponse_CourseStudentAccessPathObject) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_course_reader_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentsAccessPathResponse_CourseStudentAccessPathObject.ProtoReflect.Descriptor instead.
func (*GetStudentsAccessPathResponse_CourseStudentAccessPathObject) Descriptor() ([]byte, []int) {
	return file_eureka_v1_course_reader_proto_rawDescGZIP(), []int{21, 0}
}

func (x *GetStudentsAccessPathResponse_CourseStudentAccessPathObject) GetCourseStudentId() string {
	if x != nil {
		return x.CourseStudentId
	}
	return ""
}

func (x *GetStudentsAccessPathResponse_CourseStudentAccessPathObject) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GetStudentsAccessPathResponse_CourseStudentAccessPathObject) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

var File_eureka_v1_course_reader_proto protoreflect.FileDescriptor

var file_eureka_v1_course_reader_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xca, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x4f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x77,
	0x69, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x6f, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x6f, 0x77, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x77, 0x69, 0x74, 0x68, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x22, 0xf9, 0x02, 0x0a,
	0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x12, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x6e,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x6e, 0x65, 0x73, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x6e, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x4c, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x33, 0x0a, 0x06, 0x63, 0x72, 0x6f, 0x77, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x52, 0x06, 0x63,
	0x72, 0x6f, 0x77, 0x6e, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x73, 0x22, 0x85,
	0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x82, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x1d, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x83, 0x02, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x0e, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x09,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x4e, 0x0a, 0x0e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x22, 0x6a, 0x0a, 0x1e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x73, 0x42, 0x79, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x73, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0f,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x73, 0x42,
	0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73,
	0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73,
	0x1a, 0x4e, 0x0a, 0x0e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73,
	0x22, 0x5d, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22,
	0xd7, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x0e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x1c, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x7c, 0x0a, 0x1e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x22,
	0xc8, 0x05, 0x0a, 0x1f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x16, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xae, 0x04, 0x0a, 0x13, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x1f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59,
	0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x1b, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xd1, 0x01, 0x0a, 0x1a, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x20, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67,
	0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x73, 0x22, 0xdc, 0x05, 0x0a, 0x21, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x64, 0x0a, 0x0f, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0e,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x1a, 0xd0,
	0x04, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x1b, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x65, 0x75, 0x72,
	0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x52, 0x19, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x1a, 0x82, 0x02, 0x0a,
	0x19, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x22, 0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x4f, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x22, 0xcb, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x4f, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x03, 0x4c, 0x4f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x75, 0x72,
	0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x4f, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x03, 0x4c, 0x4f,
	0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0x9b, 0x01, 0x0a, 0x0e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64,
	0x22, 0x81, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x73, 0x22, 0xb3, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x1c, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e,
	0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x19, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x73,
	0x1a, 0x87, 0x01, 0x0a, 0x1d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x32, 0x9e, 0x09, 0x0a, 0x13, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x4f,
	0x73, 0x12, 0x1d, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x4f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x27, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x12, 0x23, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x12, 0x28, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x75, 0x72,
	0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x44, 0x73, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x29, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x73, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x44, 0x73, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x56, 0x32, 0x12, 0x2a, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x70,
	0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x29, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x76, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x32, 0x12, 0x2b, 0x2e,
	0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x2c, 0x2e, 0x65, 0x75, 0x72,
	0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c,
	0x4f, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x20, 0x2e, 0x65, 0x75, 0x72,
	0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x4f, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x4f, 0x73, 0x42,
	0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x27, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69,
	0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2f, 0x76, 0x31, 0x3b, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eureka_v1_course_reader_proto_rawDescOnce sync.Once
	file_eureka_v1_course_reader_proto_rawDescData = file_eureka_v1_course_reader_proto_rawDesc
)

func file_eureka_v1_course_reader_proto_rawDescGZIP() []byte {
	file_eureka_v1_course_reader_proto_rawDescOnce.Do(func() {
		file_eureka_v1_course_reader_proto_rawDescData = protoimpl.X.CompressGZIP(file_eureka_v1_course_reader_proto_rawDescData)
	})
	return file_eureka_v1_course_reader_proto_rawDescData
}

var file_eureka_v1_course_reader_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_eureka_v1_course_reader_proto_goTypes = []interface{}{
	(*RetrieveLOsRequest)(nil),                                  // 0: eureka.v1.RetrieveLOsRequest
	(*RetrieveLOsResponse)(nil),                                 // 1: eureka.v1.RetrieveLOsResponse
	(*ListClassByCourseRequest)(nil),                            // 2: eureka.v1.ListClassByCourseRequest
	(*ListClassByCourseResponse)(nil),                           // 3: eureka.v1.ListClassByCourseResponse
	(*ListStudentByCourseRequest)(nil),                          // 4: eureka.v1.ListStudentByCourseRequest
	(*ListStudentByCourseResponse)(nil),                         // 5: eureka.v1.ListStudentByCourseResponse
	(*ListStudentIDsByCourseRequest)(nil),                       // 6: eureka.v1.ListStudentIDsByCourseRequest
	(*ListStudentIDsByCourseResponse)(nil),                      // 7: eureka.v1.ListStudentIDsByCourseResponse
	(*ListCourseIDsByStudentsRequest)(nil),                      // 8: eureka.v1.ListCourseIDsByStudentsRequest
	(*ListCourseIDsByStudentsResponse)(nil),                     // 9: eureka.v1.ListCourseIDsByStudentsResponse
	(*ListStudentIDsByCourseV2Request)(nil),                     // 10: eureka.v1.ListStudentIDsByCourseV2Request
	(*ListStudentIDsByCourseV2Response)(nil),                    // 11: eureka.v1.ListStudentIDsByCourseV2Response
	(*ListTopicsByStudyPlanRequest)(nil),                        // 12: eureka.v1.ListTopicsByStudyPlanRequest
	(*ListTopicsByStudyPlanResponse)(nil),                       // 13: eureka.v1.ListTopicsByStudyPlanResponse
	(*RetrieveCourseStatisticRequest)(nil),                      // 14: eureka.v1.RetrieveCourseStatisticRequest
	(*RetrieveCourseStatisticResponse)(nil),                     // 15: eureka.v1.RetrieveCourseStatisticResponse
	(*RetrieveCourseStatisticRequestV2)(nil),                    // 16: eureka.v1.RetrieveCourseStatisticRequestV2
	(*RetrieveCourseStatisticResponseV2)(nil),                   // 17: eureka.v1.RetrieveCourseStatisticResponseV2
	(*GetLOsByCourseRequest)(nil),                               // 18: eureka.v1.GetLOsByCourseRequest
	(*GetLOsByCourseResponse)(nil),                              // 19: eureka.v1.GetLOsByCourseResponse
	(*GetStudentsAccessPathRequest)(nil),                        // 20: eureka.v1.GetStudentsAccessPathRequest
	(*GetStudentsAccessPathResponse)(nil),                       // 21: eureka.v1.GetStudentsAccessPathResponse
	nil,                                                         // 22: eureka.v1.RetrieveLOsResponse.TotalQuestionsEntry
	(*ListStudentIDsByCourseResponse_StudentCourses)(nil),       // 23: eureka.v1.ListStudentIDsByCourseResponse.StudentCourses
	(*ListCourseIDsByStudentsResponse_StudentCourses)(nil),      // 24: eureka.v1.ListCourseIDsByStudentsResponse.StudentCourses
	(*ListStudentIDsByCourseV2Response_StudentCourses)(nil),     // 25: eureka.v1.ListStudentIDsByCourseV2Response.StudentCourses
	(*RetrieveCourseStatisticResponse_CourseStatisticItem)(nil), // 26: eureka.v1.RetrieveCourseStatisticResponse.CourseStatisticItem
	(*RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem)(nil), // 27: eureka.v1.RetrieveCourseStatisticResponse.CourseStatisticItem.StudyPlanItemStatisticItem
	(*RetrieveCourseStatisticResponseV2_TopicStatistic)(nil),                               // 28: eureka.v1.RetrieveCourseStatisticResponseV2.TopicStatistic
	(*RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic)(nil),     // 29: eureka.v1.RetrieveCourseStatisticResponseV2.TopicStatistic.LearningMaterialStatistic
	(*GetLOsByCourseResponse_LearningObject)(nil),                                          // 30: eureka.v1.GetLOsByCourseResponse.LearningObject
	(*GetStudentsAccessPathResponse_CourseStudentAccessPathObject)(nil),                    // 31: eureka.v1.GetStudentsAccessPathResponse.CourseStudentAccessPathObject
	(*v1.LearningObjective)(nil),                                                           // 32: common.v1.LearningObjective
	(*v1.Completenes)(nil),                                                                 // 33: common.v1.Completenes
	(v1.AchievementCrown)(0),                                                               // 34: common.v1.AchievementCrown
	(*v1.Paging)(nil),                                                                      // 35: common.v1.Paging
	(*v1.BasicProfile)(nil),                                                                // 36: common.v1.BasicProfile
	(*v1.Topic)(nil),                                                                       // 37: common.v1.Topic
}
var file_eureka_v1_course_reader_proto_depIdxs = []int32{
	32, // 0: eureka.v1.RetrieveLOsResponse.learning_objectives:type_name -> common.v1.LearningObjective
	33, // 1: eureka.v1.RetrieveLOsResponse.completenesses:type_name -> common.v1.Completenes
	22, // 2: eureka.v1.RetrieveLOsResponse.total_questions:type_name -> eureka.v1.RetrieveLOsResponse.TotalQuestionsEntry
	34, // 3: eureka.v1.RetrieveLOsResponse.crowns:type_name -> common.v1.AchievementCrown
	35, // 4: eureka.v1.ListStudentByCourseRequest.paging:type_name -> common.v1.Paging
	36, // 5: eureka.v1.ListStudentByCourseResponse.profiles:type_name -> common.v1.BasicProfile
	35, // 6: eureka.v1.ListStudentByCourseResponse.next_page:type_name -> common.v1.Paging
	35, // 7: eureka.v1.ListStudentIDsByCourseRequest.paging:type_name -> common.v1.Paging
	23, // 8: eureka.v1.ListStudentIDsByCourseResponse.student_courses:type_name -> eureka.v1.ListStudentIDsByCourseResponse.StudentCourses
	35, // 9: eureka.v1.ListStudentIDsByCourseResponse.next_page:type_name -> common.v1.Paging
	24, // 10: eureka.v1.ListCourseIDsByStudentsResponse.student_courses:type_name -> eureka.v1.ListCourseIDsByStudentsResponse.StudentCourses
	25, // 11: eureka.v1.ListStudentIDsByCourseV2Response.student_courses:type_name -> eureka.v1.ListStudentIDsByCourseV2Response.StudentCourses
	35, // 12: eureka.v1.ListTopicsByStudyPlanRequest.paging:type_name -> common.v1.Paging
	35, // 13: eureka.v1.ListTopicsByStudyPlanResponse.next_page:type_name -> common.v1.Paging
	37, // 14: eureka.v1.ListTopicsByStudyPlanResponse.items:type_name -> common.v1.Topic
	26, // 15: eureka.v1.RetrieveCourseStatisticResponse.course_statistic_items:type_name -> eureka.v1.RetrieveCourseStatisticResponse.CourseStatisticItem
	28, // 16: eureka.v1.RetrieveCourseStatisticResponseV2.topic_statistic:type_name -> eureka.v1.RetrieveCourseStatisticResponseV2.TopicStatistic
	35, // 17: eureka.v1.GetLOsByCourseRequest.paging:type_name -> common.v1.Paging
	30, // 18: eureka.v1.GetLOsByCourseResponse.LOs:type_name -> eureka.v1.GetLOsByCourseResponse.LearningObject
	35, // 19: eureka.v1.GetLOsByCourseResponse.next_page:type_name -> common.v1.Paging
	31, // 20: eureka.v1.GetStudentsAccessPathResponse.course_student_accesss_paths:type_name -> eureka.v1.GetStudentsAccessPathResponse.CourseStudentAccessPathObject
	27, // 21: eureka.v1.RetrieveCourseStatisticResponse.CourseStatisticItem.study_plan_item_statistic_items:type_name -> eureka.v1.RetrieveCourseStatisticResponse.CourseStatisticItem.StudyPlanItemStatisticItem
	29, // 22: eureka.v1.RetrieveCourseStatisticResponseV2.TopicStatistic.learning_material_statistic:type_name -> eureka.v1.RetrieveCourseStatisticResponseV2.TopicStatistic.LearningMaterialStatistic
	0,  // 23: eureka.v1.CourseReaderService.RetrieveLOs:input_type -> eureka.v1.RetrieveLOsRequest
	12, // 24: eureka.v1.CourseReaderService.ListTopicsByStudyPlan:input_type -> eureka.v1.ListTopicsByStudyPlanRequest
	2,  // 25: eureka.v1.CourseReaderService.ListClassByCourse:input_type -> eureka.v1.ListClassByCourseRequest
	4,  // 26: eureka.v1.CourseReaderService.ListStudentByCourse:input_type -> eureka.v1.ListStudentByCourseRequest
	6,  // 27: eureka.v1.CourseReaderService.ListStudentIDsByCourse:input_type -> eureka.v1.ListStudentIDsByCourseRequest
	8,  // 28: eureka.v1.CourseReaderService.ListCourseIDsByStudents:input_type -> eureka.v1.ListCourseIDsByStudentsRequest
	10, // 29: eureka.v1.CourseReaderService.ListStudentIDsByCourseV2:input_type -> eureka.v1.ListStudentIDsByCourseV2Request
	14, // 30: eureka.v1.CourseReaderService.RetrieveCourseStatistic:input_type -> eureka.v1.RetrieveCourseStatisticRequest
	16, // 31: eureka.v1.CourseReaderService.RetrieveCourseStatisticV2:input_type -> eureka.v1.RetrieveCourseStatisticRequestV2
	18, // 32: eureka.v1.CourseReaderService.GetLOsByCourse:input_type -> eureka.v1.GetLOsByCourseRequest
	20, // 33: eureka.v1.CourseReaderService.GetStudentsAccessPath:input_type -> eureka.v1.GetStudentsAccessPathRequest
	1,  // 34: eureka.v1.CourseReaderService.RetrieveLOs:output_type -> eureka.v1.RetrieveLOsResponse
	13, // 35: eureka.v1.CourseReaderService.ListTopicsByStudyPlan:output_type -> eureka.v1.ListTopicsByStudyPlanResponse
	3,  // 36: eureka.v1.CourseReaderService.ListClassByCourse:output_type -> eureka.v1.ListClassByCourseResponse
	5,  // 37: eureka.v1.CourseReaderService.ListStudentByCourse:output_type -> eureka.v1.ListStudentByCourseResponse
	7,  // 38: eureka.v1.CourseReaderService.ListStudentIDsByCourse:output_type -> eureka.v1.ListStudentIDsByCourseResponse
	9,  // 39: eureka.v1.CourseReaderService.ListCourseIDsByStudents:output_type -> eureka.v1.ListCourseIDsByStudentsResponse
	11, // 40: eureka.v1.CourseReaderService.ListStudentIDsByCourseV2:output_type -> eureka.v1.ListStudentIDsByCourseV2Response
	15, // 41: eureka.v1.CourseReaderService.RetrieveCourseStatistic:output_type -> eureka.v1.RetrieveCourseStatisticResponse
	17, // 42: eureka.v1.CourseReaderService.RetrieveCourseStatisticV2:output_type -> eureka.v1.RetrieveCourseStatisticResponseV2
	19, // 43: eureka.v1.CourseReaderService.GetLOsByCourse:output_type -> eureka.v1.GetLOsByCourseResponse
	21, // 44: eureka.v1.CourseReaderService.GetStudentsAccessPath:output_type -> eureka.v1.GetStudentsAccessPathResponse
	34, // [34:45] is the sub-list for method output_type
	23, // [23:34] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_eureka_v1_course_reader_proto_init() }
func file_eureka_v1_course_reader_proto_init() {
	if File_eureka_v1_course_reader_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eureka_v1_course_reader_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLOsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLOsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClassByCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClassByCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentByCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentByCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentIDsByCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentIDsByCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseIDsByStudentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseIDsByStudentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentIDsByCourseV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentIDsByCourseV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTopicsByStudyPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTopicsByStudyPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCourseStatisticRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCourseStatisticResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCourseStatisticRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCourseStatisticResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLOsByCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLOsByCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentsAccessPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentsAccessPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentIDsByCourseResponse_StudentCourses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseIDsByStudentsResponse_StudentCourses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudentIDsByCourseV2Response_StudentCourses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCourseStatisticResponse_CourseStatisticItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCourseStatisticResponse_CourseStatisticItem_StudyPlanItemStatisticItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCourseStatisticResponseV2_TopicStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCourseStatisticResponseV2_TopicStatistic_LearningMaterialStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLOsByCourseResponse_LearningObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_course_reader_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudentsAccessPathResponse_CourseStudentAccessPathObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eureka_v1_course_reader_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eureka_v1_course_reader_proto_goTypes,
		DependencyIndexes: file_eureka_v1_course_reader_proto_depIdxs,
		MessageInfos:      file_eureka_v1_course_reader_proto_msgTypes,
	}.Build()
	File_eureka_v1_course_reader_proto = out.File
	file_eureka_v1_course_reader_proto_rawDesc = nil
	file_eureka_v1_course_reader_proto_goTypes = nil
	file_eureka_v1_course_reader_proto_depIdxs = nil
}
