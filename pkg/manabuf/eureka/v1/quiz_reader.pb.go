// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: eureka/v1/quiz_reader.proto

package epb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RetrieveTotalQuizLOsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoIds []string `protobuf:"bytes,1,rep,name=lo_ids,json=loIds,proto3" json:"lo_ids,omitempty"`
}

func (x *RetrieveTotalQuizLOsRequest) Reset() {
	*x = RetrieveTotalQuizLOsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_quiz_reader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTotalQuizLOsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTotalQuizLOsRequest) ProtoMessage() {}

func (x *RetrieveTotalQuizLOsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_quiz_reader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTotalQuizLOsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveTotalQuizLOsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_quiz_reader_proto_rawDescGZIP(), []int{0}
}

func (x *RetrieveTotalQuizLOsRequest) GetLoIds() []string {
	if x != nil {
		return x.LoIds
	}
	return nil
}

type RetrieveTotalQuizLOsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LosTotalQuiz []*RetrieveTotalQuizLOsResponse_LoWithTotalQuiz `protobuf:"bytes,1,rep,name=los_total_quiz,json=losTotalQuiz,proto3" json:"los_total_quiz,omitempty"`
}

func (x *RetrieveTotalQuizLOsResponse) Reset() {
	*x = RetrieveTotalQuizLOsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_quiz_reader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTotalQuizLOsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTotalQuizLOsResponse) ProtoMessage() {}

func (x *RetrieveTotalQuizLOsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_quiz_reader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTotalQuizLOsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveTotalQuizLOsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_quiz_reader_proto_rawDescGZIP(), []int{1}
}

func (x *RetrieveTotalQuizLOsResponse) GetLosTotalQuiz() []*RetrieveTotalQuizLOsResponse_LoWithTotalQuiz {
	if x != nil {
		return x.LosTotalQuiz
	}
	return nil
}

type RetrieveQuizTestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemId []string `protobuf:"bytes,1,rep,name=study_plan_item_id,json=studyPlanItemId,proto3" json:"study_plan_item_id,omitempty"`
	IsCompleted     bool     `protobuf:"varint,2,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
}

func (x *RetrieveQuizTestsRequest) Reset() {
	*x = RetrieveQuizTestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_quiz_reader_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveQuizTestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveQuizTestsRequest) ProtoMessage() {}

func (x *RetrieveQuizTestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_quiz_reader_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveQuizTestsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveQuizTestsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_quiz_reader_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveQuizTestsRequest) GetStudyPlanItemId() []string {
	if x != nil {
		return x.StudyPlanItemId
	}
	return nil
}

func (x *RetrieveQuizTestsRequest) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

type RetrieveQuizTestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items         map[string]*v1.QuizTests `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HighestCrown  AchievementCrown         `protobuf:"varint,2,opt,name=highest_crown,json=highestCrown,proto3,enum=eureka.v1.AchievementCrown" json:"highest_crown,omitempty"`
	TotalAttempts int32                    `protobuf:"varint,3,opt,name=total_attempts,json=totalAttempts,proto3" json:"total_attempts,omitempty"` //only count for the origin attempts, not retry attempts
	HighestScore  *v1.HighestQuizScore     `protobuf:"bytes,4,opt,name=highest_score,json=highestScore,proto3" json:"highest_score,omitempty"`
}

func (x *RetrieveQuizTestsResponse) Reset() {
	*x = RetrieveQuizTestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_quiz_reader_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveQuizTestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveQuizTestsResponse) ProtoMessage() {}

func (x *RetrieveQuizTestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_quiz_reader_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveQuizTestsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveQuizTestsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_quiz_reader_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveQuizTestsResponse) GetItems() map[string]*v1.QuizTests {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RetrieveQuizTestsResponse) GetHighestCrown() AchievementCrown {
	if x != nil {
		return x.HighestCrown
	}
	return AchievementCrown_ACHIEVEMENT_CROWN_NONE
}

func (x *RetrieveQuizTestsResponse) GetTotalAttempts() int32 {
	if x != nil {
		return x.TotalAttempts
	}
	return 0
}

func (x *RetrieveQuizTestsResponse) GetHighestScore() *v1.HighestQuizScore {
	if x != nil {
		return x.HighestScore
	}
	return nil
}

type RetrieveSubmissionHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetId  string     `protobuf:"bytes,1,opt,name=set_id,json=setId,proto3" json:"set_id,omitempty"`
	Paging *v1.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *RetrieveSubmissionHistoryRequest) Reset() {
	*x = RetrieveSubmissionHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_quiz_reader_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveSubmissionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSubmissionHistoryRequest) ProtoMessage() {}

func (x *RetrieveSubmissionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_quiz_reader_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSubmissionHistoryRequest.ProtoReflect.Descriptor instead.
func (*RetrieveSubmissionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_quiz_reader_proto_rawDescGZIP(), []int{4}
}

func (x *RetrieveSubmissionHistoryRequest) GetSetId() string {
	if x != nil {
		return x.SetId
	}
	return ""
}

func (x *RetrieveSubmissionHistoryRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type RetrieveSubmissionHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs           []*v1.AnswerLog     `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	NextPage       *v1.Paging          `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	QuestionGroups []*v1.QuestionGroup `protobuf:"bytes,3,rep,name=question_groups,json=questionGroups,proto3" json:"question_groups,omitempty"`
}

func (x *RetrieveSubmissionHistoryResponse) Reset() {
	*x = RetrieveSubmissionHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_quiz_reader_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveSubmissionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSubmissionHistoryResponse) ProtoMessage() {}

func (x *RetrieveSubmissionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_quiz_reader_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSubmissionHistoryResponse.ProtoReflect.Descriptor instead.
func (*RetrieveSubmissionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_quiz_reader_proto_rawDescGZIP(), []int{5}
}

func (x *RetrieveSubmissionHistoryResponse) GetLogs() []*v1.AnswerLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *RetrieveSubmissionHistoryResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveSubmissionHistoryResponse) GetQuestionGroups() []*v1.QuestionGroup {
	if x != nil {
		return x.QuestionGroups
	}
	return nil
}

type ListQuizzesOfLORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoId   string     `protobuf:"bytes,1,opt,name=lo_id,json=loId,proto3" json:"lo_id,omitempty"`
	Paging *v1.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *ListQuizzesOfLORequest) Reset() {
	*x = ListQuizzesOfLORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_quiz_reader_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuizzesOfLORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuizzesOfLORequest) ProtoMessage() {}

func (x *ListQuizzesOfLORequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_quiz_reader_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuizzesOfLORequest.ProtoReflect.Descriptor instead.
func (*ListQuizzesOfLORequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_quiz_reader_proto_rawDescGZIP(), []int{6}
}

func (x *ListQuizzesOfLORequest) GetLoId() string {
	if x != nil {
		return x.LoId
	}
	return ""
}

func (x *ListQuizzesOfLORequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type ListQuizzesOfLOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs           []*v1.AnswerLog     `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	NextPage       *v1.Paging          `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	QuestionGroups []*v1.QuestionGroup `protobuf:"bytes,3,rep,name=question_groups,json=questionGroups,proto3" json:"question_groups,omitempty"`
}

func (x *ListQuizzesOfLOResponse) Reset() {
	*x = ListQuizzesOfLOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_quiz_reader_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuizzesOfLOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuizzesOfLOResponse) ProtoMessage() {}

func (x *ListQuizzesOfLOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_quiz_reader_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuizzesOfLOResponse.ProtoReflect.Descriptor instead.
func (*ListQuizzesOfLOResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_quiz_reader_proto_rawDescGZIP(), []int{7}
}

func (x *ListQuizzesOfLOResponse) GetLogs() []*v1.AnswerLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ListQuizzesOfLOResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ListQuizzesOfLOResponse) GetQuestionGroups() []*v1.QuestionGroup {
	if x != nil {
		return x.QuestionGroups
	}
	return nil
}

type RetrieveTotalQuizLOsResponse_LoWithTotalQuiz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoId      string `protobuf:"bytes,1,opt,name=lo_id,json=loId,proto3" json:"lo_id,omitempty"`
	TotalQuiz int32  `protobuf:"varint,2,opt,name=total_quiz,json=totalQuiz,proto3" json:"total_quiz,omitempty"`
}

func (x *RetrieveTotalQuizLOsResponse_LoWithTotalQuiz) Reset() {
	*x = RetrieveTotalQuizLOsResponse_LoWithTotalQuiz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_quiz_reader_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTotalQuizLOsResponse_LoWithTotalQuiz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTotalQuizLOsResponse_LoWithTotalQuiz) ProtoMessage() {}

func (x *RetrieveTotalQuizLOsResponse_LoWithTotalQuiz) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_quiz_reader_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTotalQuizLOsResponse_LoWithTotalQuiz.ProtoReflect.Descriptor instead.
func (*RetrieveTotalQuizLOsResponse_LoWithTotalQuiz) Descriptor() ([]byte, []int) {
	return file_eureka_v1_quiz_reader_proto_rawDescGZIP(), []int{1, 0}
}

func (x *RetrieveTotalQuizLOsResponse_LoWithTotalQuiz) GetLoId() string {
	if x != nil {
		return x.LoId
	}
	return ""
}

func (x *RetrieveTotalQuizLOsResponse_LoWithTotalQuiz) GetTotalQuiz() int32 {
	if x != nil {
		return x.TotalQuiz
	}
	return 0
}

var File_eureka_v1_quiz_reader_proto protoreflect.FileDescriptor

var file_eureka_v1_quiz_reader_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x69, 0x7a,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x69, 0x7a, 0x4c, 0x4f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x49, 0x64, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x1c, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x69, 0x7a, 0x4c,
	0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x6c, 0x6f,
	0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x69, 0x7a, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x69, 0x7a,
	0x4c, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x0c, 0x6c, 0x6f, 0x73,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x69, 0x7a, 0x1a, 0x45, 0x0a, 0x0f, 0x4c, 0x6f, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x13, 0x0a, 0x05,
	0x6c, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x69, 0x7a, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x69, 0x7a,
	0x22, 0x6a, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x51, 0x75, 0x69, 0x7a,
	0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x12,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xdd, 0x02, 0x0a,
	0x19, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x54, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x51, 0x75,
	0x69, 0x7a, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x40, 0x0a, 0x0d, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x6f,
	0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x6f, 0x77, 0x6e, 0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x43, 0x72,
	0x6f, 0x77, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x68, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0c,
	0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x4e, 0x0a, 0x0a,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x64, 0x0a, 0x20,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x22, 0xc0, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f,
	0x67, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x58, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69,
	0x7a, 0x7a, 0x65, 0x73, 0x4f, 0x66, 0x4c, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x13, 0x0a, 0x05, 0x6c, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x6f, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22,
	0xb6, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x4f,
	0x66, 0x4c, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x32, 0xae, 0x03, 0x0a, 0x11, 0x51, 0x75, 0x69,
	0x7a, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e,
	0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x54, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x51, 0x75, 0x69,
	0x7a, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67,
	0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51,
	0x75, 0x69, 0x7a, 0x4c, 0x4f, 0x73, 0x12, 0x26, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x51, 0x75, 0x69, 0x7a, 0x4c, 0x4f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x69, 0x7a, 0x4c, 0x4f, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x4f, 0x66,
	0x4c, 0x4f, 0x12, 0x21, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x4f, 0x66, 0x4c, 0x4f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x4f, 0x66, 0x4c,
	0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76,
	0x31, 0x3b, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eureka_v1_quiz_reader_proto_rawDescOnce sync.Once
	file_eureka_v1_quiz_reader_proto_rawDescData = file_eureka_v1_quiz_reader_proto_rawDesc
)

func file_eureka_v1_quiz_reader_proto_rawDescGZIP() []byte {
	file_eureka_v1_quiz_reader_proto_rawDescOnce.Do(func() {
		file_eureka_v1_quiz_reader_proto_rawDescData = protoimpl.X.CompressGZIP(file_eureka_v1_quiz_reader_proto_rawDescData)
	})
	return file_eureka_v1_quiz_reader_proto_rawDescData
}

var file_eureka_v1_quiz_reader_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_eureka_v1_quiz_reader_proto_goTypes = []interface{}{
	(*RetrieveTotalQuizLOsRequest)(nil),                  // 0: eureka.v1.RetrieveTotalQuizLOsRequest
	(*RetrieveTotalQuizLOsResponse)(nil),                 // 1: eureka.v1.RetrieveTotalQuizLOsResponse
	(*RetrieveQuizTestsRequest)(nil),                     // 2: eureka.v1.RetrieveQuizTestsRequest
	(*RetrieveQuizTestsResponse)(nil),                    // 3: eureka.v1.RetrieveQuizTestsResponse
	(*RetrieveSubmissionHistoryRequest)(nil),             // 4: eureka.v1.RetrieveSubmissionHistoryRequest
	(*RetrieveSubmissionHistoryResponse)(nil),            // 5: eureka.v1.RetrieveSubmissionHistoryResponse
	(*ListQuizzesOfLORequest)(nil),                       // 6: eureka.v1.ListQuizzesOfLORequest
	(*ListQuizzesOfLOResponse)(nil),                      // 7: eureka.v1.ListQuizzesOfLOResponse
	(*RetrieveTotalQuizLOsResponse_LoWithTotalQuiz)(nil), // 8: eureka.v1.RetrieveTotalQuizLOsResponse.LoWithTotalQuiz
	nil,                         // 9: eureka.v1.RetrieveQuizTestsResponse.ItemsEntry
	(AchievementCrown)(0),       // 10: eureka.v1.AchievementCrown
	(*v1.HighestQuizScore)(nil), // 11: common.v1.HighestQuizScore
	(*v1.Paging)(nil),           // 12: common.v1.Paging
	(*v1.AnswerLog)(nil),        // 13: common.v1.AnswerLog
	(*v1.QuestionGroup)(nil),    // 14: common.v1.QuestionGroup
	(*v1.QuizTests)(nil),        // 15: common.v1.QuizTests
}
var file_eureka_v1_quiz_reader_proto_depIdxs = []int32{
	8,  // 0: eureka.v1.RetrieveTotalQuizLOsResponse.los_total_quiz:type_name -> eureka.v1.RetrieveTotalQuizLOsResponse.LoWithTotalQuiz
	9,  // 1: eureka.v1.RetrieveQuizTestsResponse.items:type_name -> eureka.v1.RetrieveQuizTestsResponse.ItemsEntry
	10, // 2: eureka.v1.RetrieveQuizTestsResponse.highest_crown:type_name -> eureka.v1.AchievementCrown
	11, // 3: eureka.v1.RetrieveQuizTestsResponse.highest_score:type_name -> common.v1.HighestQuizScore
	12, // 4: eureka.v1.RetrieveSubmissionHistoryRequest.paging:type_name -> common.v1.Paging
	13, // 5: eureka.v1.RetrieveSubmissionHistoryResponse.logs:type_name -> common.v1.AnswerLog
	12, // 6: eureka.v1.RetrieveSubmissionHistoryResponse.next_page:type_name -> common.v1.Paging
	14, // 7: eureka.v1.RetrieveSubmissionHistoryResponse.question_groups:type_name -> common.v1.QuestionGroup
	12, // 8: eureka.v1.ListQuizzesOfLORequest.paging:type_name -> common.v1.Paging
	13, // 9: eureka.v1.ListQuizzesOfLOResponse.logs:type_name -> common.v1.AnswerLog
	12, // 10: eureka.v1.ListQuizzesOfLOResponse.next_page:type_name -> common.v1.Paging
	14, // 11: eureka.v1.ListQuizzesOfLOResponse.question_groups:type_name -> common.v1.QuestionGroup
	15, // 12: eureka.v1.RetrieveQuizTestsResponse.ItemsEntry.value:type_name -> common.v1.QuizTests
	2,  // 13: eureka.v1.QuizReaderService.RetrieveQuizTests:input_type -> eureka.v1.RetrieveQuizTestsRequest
	0,  // 14: eureka.v1.QuizReaderService.RetrieveTotalQuizLOs:input_type -> eureka.v1.RetrieveTotalQuizLOsRequest
	4,  // 15: eureka.v1.QuizReaderService.RetrieveSubmissionHistory:input_type -> eureka.v1.RetrieveSubmissionHistoryRequest
	6,  // 16: eureka.v1.QuizReaderService.ListQuizzesOfLO:input_type -> eureka.v1.ListQuizzesOfLORequest
	3,  // 17: eureka.v1.QuizReaderService.RetrieveQuizTests:output_type -> eureka.v1.RetrieveQuizTestsResponse
	1,  // 18: eureka.v1.QuizReaderService.RetrieveTotalQuizLOs:output_type -> eureka.v1.RetrieveTotalQuizLOsResponse
	5,  // 19: eureka.v1.QuizReaderService.RetrieveSubmissionHistory:output_type -> eureka.v1.RetrieveSubmissionHistoryResponse
	7,  // 20: eureka.v1.QuizReaderService.ListQuizzesOfLO:output_type -> eureka.v1.ListQuizzesOfLOResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_eureka_v1_quiz_reader_proto_init() }
func file_eureka_v1_quiz_reader_proto_init() {
	if File_eureka_v1_quiz_reader_proto != nil {
		return
	}
	file_eureka_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eureka_v1_quiz_reader_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTotalQuizLOsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_quiz_reader_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTotalQuizLOsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_quiz_reader_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveQuizTestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_quiz_reader_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveQuizTestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_quiz_reader_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveSubmissionHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_quiz_reader_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveSubmissionHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_quiz_reader_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuizzesOfLORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_quiz_reader_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuizzesOfLOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_quiz_reader_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTotalQuizLOsResponse_LoWithTotalQuiz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eureka_v1_quiz_reader_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eureka_v1_quiz_reader_proto_goTypes,
		DependencyIndexes: file_eureka_v1_quiz_reader_proto_depIdxs,
		MessageInfos:      file_eureka_v1_quiz_reader_proto_msgTypes,
	}.Build()
	File_eureka_v1_quiz_reader_proto = out.File
	file_eureka_v1_quiz_reader_proto_rawDesc = nil
	file_eureka_v1_quiz_reader_proto_goTypes = nil
	file_eureka_v1_quiz_reader_proto_depIdxs = nil
}
