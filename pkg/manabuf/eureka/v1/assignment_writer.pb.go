// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: eureka/v1/assignment_writer.proto

package epb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UpdateType int32

const (
	UpdateType_UPDATE_START_DATE_END_DATE UpdateType = 0
	UpdateType_UPDATE_START_DATE          UpdateType = 1
	UpdateType_UPDATE_END_DATE            UpdateType = 2
)

// Enum value maps for UpdateType.
var (
	UpdateType_name = map[int32]string{
		0: "UPDATE_START_DATE_END_DATE",
		1: "UPDATE_START_DATE",
		2: "UPDATE_END_DATE",
	}
	UpdateType_value = map[string]int32{
		"UPDATE_START_DATE_END_DATE": 0,
		"UPDATE_START_DATE":          1,
		"UPDATE_END_DATE":            2,
	}
)

func (x UpdateType) Enum() *UpdateType {
	p := new(UpdateType)
	*p = x
	return p
}

func (x UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_eureka_v1_assignment_writer_proto_enumTypes[0].Descriptor()
}

func (UpdateType) Type() protoreflect.EnumType {
	return &file_eureka_v1_assignment_writer_proto_enumTypes[0]
}

func (x UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateType.Descriptor instead.
func (UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{0}
}

type UpsertStudyPlansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlans []*UpsertStudyPlansRequest_StudyPlan `protobuf:"bytes,1,rep,name=study_plans,json=studyPlans,proto3" json:"study_plans,omitempty"`
}

func (x *UpsertStudyPlansRequest) Reset() {
	*x = UpsertStudyPlansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStudyPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStudyPlansRequest) ProtoMessage() {}

func (x *UpsertStudyPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStudyPlansRequest.ProtoReflect.Descriptor instead.
func (*UpsertStudyPlansRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertStudyPlansRequest) GetStudyPlans() []*UpsertStudyPlansRequest_StudyPlan {
	if x != nil {
		return x.StudyPlans
	}
	return nil
}

type UpsertStudyPlansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanIds []string `protobuf:"bytes,1,rep,name=study_plan_ids,json=studyPlanIds,proto3" json:"study_plan_ids,omitempty"`
}

func (x *UpsertStudyPlansResponse) Reset() {
	*x = UpsertStudyPlansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStudyPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStudyPlansResponse) ProtoMessage() {}

func (x *UpsertStudyPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStudyPlansResponse.ProtoReflect.Descriptor instead.
func (*UpsertStudyPlansResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertStudyPlansResponse) GetStudyPlanIds() []string {
	if x != nil {
		return x.StudyPlanIds
	}
	return nil
}

type UpsertAssignmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignments []*Assignment `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
}

func (x *UpsertAssignmentsRequest) Reset() {
	*x = UpsertAssignmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAssignmentsRequest) ProtoMessage() {}

func (x *UpsertAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*UpsertAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertAssignmentsRequest) GetAssignments() []*Assignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type UpsertAssignmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentIds []string `protobuf:"bytes,1,rep,name=assignment_ids,json=assignmentIds,proto3" json:"assignment_ids,omitempty"`
}

func (x *UpsertAssignmentsResponse) Reset() {
	*x = UpsertAssignmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAssignmentsResponse) ProtoMessage() {}

func (x *UpsertAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*UpsertAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{3}
}

func (x *UpsertAssignmentsResponse) GetAssignmentIds() []string {
	if x != nil {
		return x.AssignmentIds
	}
	return nil
}

type StudentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentIds []string `protobuf:"bytes,1,rep,name=student_ids,json=studentIds,proto3" json:"student_ids,omitempty"`
}

func (x *StudentList) Reset() {
	*x = StudentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentList) ProtoMessage() {}

func (x *StudentList) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentList.ProtoReflect.Descriptor instead.
func (*StudentList) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{4}
}

func (x *StudentList) GetStudentIds() []string {
	if x != nil {
		return x.StudentIds
	}
	return nil
}

type AssignStudyPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId string `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	// Types that are assignable to Data:
	//
	//	*AssignStudyPlanRequest_CourseId
	//	*AssignStudyPlanRequest_ClassId
	//	*AssignStudyPlanRequest_StudentId
	Data isAssignStudyPlanRequest_Data `protobuf_oneof:"data"`
}

func (x *AssignStudyPlanRequest) Reset() {
	*x = AssignStudyPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignStudyPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignStudyPlanRequest) ProtoMessage() {}

func (x *AssignStudyPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignStudyPlanRequest.ProtoReflect.Descriptor instead.
func (*AssignStudyPlanRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{5}
}

func (x *AssignStudyPlanRequest) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (m *AssignStudyPlanRequest) GetData() isAssignStudyPlanRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *AssignStudyPlanRequest) GetCourseId() string {
	if x, ok := x.GetData().(*AssignStudyPlanRequest_CourseId); ok {
		return x.CourseId
	}
	return ""
}

func (x *AssignStudyPlanRequest) GetClassId() int32 {
	if x, ok := x.GetData().(*AssignStudyPlanRequest_ClassId); ok {
		return x.ClassId
	}
	return 0
}

func (x *AssignStudyPlanRequest) GetStudentId() string {
	if x, ok := x.GetData().(*AssignStudyPlanRequest_StudentId); ok {
		return x.StudentId
	}
	return ""
}

type isAssignStudyPlanRequest_Data interface {
	isAssignStudyPlanRequest_Data()
}

type AssignStudyPlanRequest_CourseId struct {
	CourseId string `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3,oneof"`
}

type AssignStudyPlanRequest_ClassId struct {
	ClassId int32 `protobuf:"varint,3,opt,name=class_id,json=classId,proto3,oneof"`
}

type AssignStudyPlanRequest_StudentId struct {
	StudentId string `protobuf:"bytes,4,opt,name=student_id,json=studentId,proto3,oneof"`
}

func (*AssignStudyPlanRequest_CourseId) isAssignStudyPlanRequest_Data() {}

func (*AssignStudyPlanRequest_ClassId) isAssignStudyPlanRequest_Data() {}

func (*AssignStudyPlanRequest_StudentId) isAssignStudyPlanRequest_Data() {}

type AssignStudyPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssignStudyPlanResponse) Reset() {
	*x = AssignStudyPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignStudyPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignStudyPlanResponse) ProtoMessage() {}

func (x *AssignStudyPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignStudyPlanResponse.ProtoReflect.Descriptor instead.
func (*AssignStudyPlanResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{6}
}

type UpsertStudyPlanItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItems []*StudyPlanItem `protobuf:"bytes,1,rep,name=study_plan_items,json=studyPlanItems,proto3" json:"study_plan_items,omitempty"`
}

func (x *UpsertStudyPlanItemRequest) Reset() {
	*x = UpsertStudyPlanItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStudyPlanItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStudyPlanItemRequest) ProtoMessage() {}

func (x *UpsertStudyPlanItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStudyPlanItemRequest.ProtoReflect.Descriptor instead.
func (*UpsertStudyPlanItemRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{7}
}

func (x *UpsertStudyPlanItemRequest) GetStudyPlanItems() []*StudyPlanItem {
	if x != nil {
		return x.StudyPlanItems
	}
	return nil
}

type UpsertStudyPlanItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIds []string `protobuf:"bytes,1,rep,name=study_plan_item_ids,json=studyPlanItemIds,proto3" json:"study_plan_item_ids,omitempty"`
}

func (x *UpsertStudyPlanItemResponse) Reset() {
	*x = UpsertStudyPlanItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStudyPlanItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStudyPlanItemResponse) ProtoMessage() {}

func (x *UpsertStudyPlanItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStudyPlanItemResponse.ProtoReflect.Descriptor instead.
func (*UpsertStudyPlanItemResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{8}
}

func (x *UpsertStudyPlanItemResponse) GetStudyPlanItemIds() []string {
	if x != nil {
		return x.StudyPlanItemIds
	}
	return nil
}

type ScheduleStudyPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemId string `protobuf:"bytes,1,opt,name=study_plan_item_id,json=studyPlanItemId,proto3" json:"study_plan_item_id,omitempty"`
	// Types that are assignable to Item:
	//
	//	*ScheduleStudyPlan_AssignmentId
	//	*ScheduleStudyPlan_LoId
	//	*ScheduleStudyPlan_LessonId
	Item isScheduleStudyPlan_Item `protobuf_oneof:"item"`
}

func (x *ScheduleStudyPlan) Reset() {
	*x = ScheduleStudyPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleStudyPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleStudyPlan) ProtoMessage() {}

func (x *ScheduleStudyPlan) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleStudyPlan.ProtoReflect.Descriptor instead.
func (*ScheduleStudyPlan) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{9}
}

func (x *ScheduleStudyPlan) GetStudyPlanItemId() string {
	if x != nil {
		return x.StudyPlanItemId
	}
	return ""
}

func (m *ScheduleStudyPlan) GetItem() isScheduleStudyPlan_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *ScheduleStudyPlan) GetAssignmentId() string {
	if x, ok := x.GetItem().(*ScheduleStudyPlan_AssignmentId); ok {
		return x.AssignmentId
	}
	return ""
}

func (x *ScheduleStudyPlan) GetLoId() string {
	if x, ok := x.GetItem().(*ScheduleStudyPlan_LoId); ok {
		return x.LoId
	}
	return ""
}

func (x *ScheduleStudyPlan) GetLessonId() string {
	if x, ok := x.GetItem().(*ScheduleStudyPlan_LessonId); ok {
		return x.LessonId
	}
	return ""
}

type isScheduleStudyPlan_Item interface {
	isScheduleStudyPlan_Item()
}

type ScheduleStudyPlan_AssignmentId struct {
	AssignmentId string `protobuf:"bytes,2,opt,name=assignment_id,json=assignmentId,proto3,oneof"`
}

type ScheduleStudyPlan_LoId struct {
	LoId string `protobuf:"bytes,3,opt,name=lo_id,json=loId,proto3,oneof"`
}

type ScheduleStudyPlan_LessonId struct {
	LessonId string `protobuf:"bytes,4,opt,name=lesson_id,json=lessonId,proto3,oneof"`
}

func (*ScheduleStudyPlan_AssignmentId) isScheduleStudyPlan_Item() {}

func (*ScheduleStudyPlan_LoId) isScheduleStudyPlan_Item() {}

func (*ScheduleStudyPlan_LessonId) isScheduleStudyPlan_Item() {}

type ScheduleStudyPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule []*ScheduleStudyPlan `protobuf:"bytes,1,rep,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *ScheduleStudyPlanRequest) Reset() {
	*x = ScheduleStudyPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleStudyPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleStudyPlanRequest) ProtoMessage() {}

func (x *ScheduleStudyPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleStudyPlanRequest.ProtoReflect.Descriptor instead.
func (*ScheduleStudyPlanRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{10}
}

func (x *ScheduleStudyPlanRequest) GetSchedule() []*ScheduleStudyPlan {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type ScheduleStudyPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScheduleStudyPlanResponse) Reset() {
	*x = ScheduleStudyPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleStudyPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleStudyPlanResponse) ProtoMessage() {}

func (x *ScheduleStudyPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleStudyPlanResponse.ProtoReflect.Descriptor instead.
func (*ScheduleStudyPlanResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{11}
}

type DeleteAssignmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentIds []string `protobuf:"bytes,1,rep,name=assignment_ids,json=assignmentIds,proto3" json:"assignment_ids,omitempty"`
}

func (x *DeleteAssignmentsRequest) Reset() {
	*x = DeleteAssignmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssignmentsRequest) ProtoMessage() {}

func (x *DeleteAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteAssignmentsRequest) GetAssignmentIds() []string {
	if x != nil {
		return x.AssignmentIds
	}
	return nil
}

type DeleteAssignmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAssignmentsResponse) Reset() {
	*x = DeleteAssignmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssignmentsResponse) ProtoMessage() {}

func (x *DeleteAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*DeleteAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{13}
}

type EditAssignmentTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItemIds []string               `protobuf:"bytes,1,rep,name=study_plan_item_ids,json=studyPlanItemIds,proto3" json:"study_plan_item_ids,omitempty"`
	StudentId        string                 `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StartDate        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	UpdateType       UpdateType             `protobuf:"varint,5,opt,name=update_type,json=updateType,proto3,enum=eureka.v1.UpdateType" json:"update_type,omitempty"`
}

func (x *EditAssignmentTimeRequest) Reset() {
	*x = EditAssignmentTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAssignmentTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAssignmentTimeRequest) ProtoMessage() {}

func (x *EditAssignmentTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAssignmentTimeRequest.ProtoReflect.Descriptor instead.
func (*EditAssignmentTimeRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{14}
}

func (x *EditAssignmentTimeRequest) GetStudyPlanItemIds() []string {
	if x != nil {
		return x.StudyPlanItemIds
	}
	return nil
}

func (x *EditAssignmentTimeRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *EditAssignmentTimeRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *EditAssignmentTimeRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *EditAssignmentTimeRequest) GetUpdateType() UpdateType {
	if x != nil {
		return x.UpdateType
	}
	return UpdateType_UPDATE_START_DATE_END_DATE
}

type EditAssignmentTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditAssignmentTimeResponse) Reset() {
	*x = EditAssignmentTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAssignmentTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAssignmentTimeResponse) ProtoMessage() {}

func (x *EditAssignmentTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAssignmentTimeResponse.ProtoReflect.Descriptor instead.
func (*EditAssignmentTimeResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{15}
}

type AssignAssignmentsToTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId    string                                        `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Assignment []*AssignAssignmentsToTopicRequest_Assignment `protobuf:"bytes,4,rep,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *AssignAssignmentsToTopicRequest) Reset() {
	*x = AssignAssignmentsToTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignAssignmentsToTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignAssignmentsToTopicRequest) ProtoMessage() {}

func (x *AssignAssignmentsToTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignAssignmentsToTopicRequest.ProtoReflect.Descriptor instead.
func (*AssignAssignmentsToTopicRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{16}
}

func (x *AssignAssignmentsToTopicRequest) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *AssignAssignmentsToTopicRequest) GetAssignment() []*AssignAssignmentsToTopicRequest_Assignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type AssignAssignmentsToTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssignAssignmentsToTopicResponse) Reset() {
	*x = AssignAssignmentsToTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignAssignmentsToTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignAssignmentsToTopicResponse) ProtoMessage() {}

func (x *AssignAssignmentsToTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignAssignmentsToTopicResponse.ProtoReflect.Descriptor instead.
func (*AssignAssignmentsToTopicResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{17}
}

type UpsertAssignmentsDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignments []*Assignment `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
}

func (x *UpsertAssignmentsDataRequest) Reset() {
	*x = UpsertAssignmentsDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAssignmentsDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAssignmentsDataRequest) ProtoMessage() {}

func (x *UpsertAssignmentsDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAssignmentsDataRequest.ProtoReflect.Descriptor instead.
func (*UpsertAssignmentsDataRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{18}
}

func (x *UpsertAssignmentsDataRequest) GetAssignments() []*Assignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type UpsertAdHocAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId     string                 `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId      string                 `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ChapterName   string                 `protobuf:"bytes,3,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	TopicName     string                 `protobuf:"bytes,4,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	BookName      string                 `protobuf:"bytes,5,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	StudyPlanName string                 `protobuf:"bytes,6,opt,name=study_plan_name,json=studyPlanName,proto3" json:"study_plan_name,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Assignment    *Assignment            `protobuf:"bytes,9,opt,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *UpsertAdHocAssignmentRequest) Reset() {
	*x = UpsertAdHocAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAdHocAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAdHocAssignmentRequest) ProtoMessage() {}

func (x *UpsertAdHocAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAdHocAssignmentRequest.ProtoReflect.Descriptor instead.
func (*UpsertAdHocAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{19}
}

func (x *UpsertAdHocAssignmentRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpsertAdHocAssignmentRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpsertAdHocAssignmentRequest) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *UpsertAdHocAssignmentRequest) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *UpsertAdHocAssignmentRequest) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *UpsertAdHocAssignmentRequest) GetStudyPlanName() string {
	if x != nil {
		return x.StudyPlanName
	}
	return ""
}

func (x *UpsertAdHocAssignmentRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpsertAdHocAssignmentRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *UpsertAdHocAssignmentRequest) GetAssignment() *Assignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type UpsertAdHocAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId string `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
}

func (x *UpsertAdHocAssignmentResponse) Reset() {
	*x = UpsertAdHocAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertAdHocAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAdHocAssignmentResponse) ProtoMessage() {}

func (x *UpsertAdHocAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAdHocAssignmentResponse.ProtoReflect.Descriptor instead.
func (*UpsertAdHocAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{20}
}

func (x *UpsertAdHocAssignmentResponse) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

type UpsertStudyPlansRequest_StudyPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	SchoolId    int32                   `protobuf:"varint,2,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	Name        string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type        StudyPlanType           `protobuf:"varint,4,opt,name=type,proto3,enum=eureka.v1.StudyPlanType" json:"type,omitempty"`
	Country     v1.Country              `protobuf:"varint,5,opt,name=country,proto3,enum=common.v1.Country" json:"country,omitempty"`
	CourseId    string                  `protobuf:"bytes,6,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	BookId      string                  `protobuf:"bytes,7,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *UpsertStudyPlansRequest_StudyPlan) Reset() {
	*x = UpsertStudyPlansRequest_StudyPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStudyPlansRequest_StudyPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStudyPlansRequest_StudyPlan) ProtoMessage() {}

func (x *UpsertStudyPlansRequest_StudyPlan) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStudyPlansRequest_StudyPlan.ProtoReflect.Descriptor instead.
func (*UpsertStudyPlansRequest_StudyPlan) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UpsertStudyPlansRequest_StudyPlan) GetStudyPlanId() *wrapperspb.StringValue {
	if x != nil {
		return x.StudyPlanId
	}
	return nil
}

func (x *UpsertStudyPlansRequest_StudyPlan) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *UpsertStudyPlansRequest_StudyPlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertStudyPlansRequest_StudyPlan) GetType() StudyPlanType {
	if x != nil {
		return x.Type
	}
	return StudyPlanType_STUDY_PLAN_TYPE_NONE
}

func (x *UpsertStudyPlansRequest_StudyPlan) GetCountry() v1.Country {
	if x != nil {
		return x.Country
	}
	return v1.Country_COUNTRY_NONE
}

func (x *UpsertStudyPlansRequest_StudyPlan) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpsertStudyPlansRequest_StudyPlan) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

type AssignAssignmentsToTopicRequest_Assignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId string `protobuf:"bytes,2,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	DisplayOrder int32  `protobuf:"varint,3,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
}

func (x *AssignAssignmentsToTopicRequest_Assignment) Reset() {
	*x = AssignAssignmentsToTopicRequest_Assignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignment_writer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignAssignmentsToTopicRequest_Assignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignAssignmentsToTopicRequest_Assignment) ProtoMessage() {}

func (x *AssignAssignmentsToTopicRequest_Assignment) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignment_writer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignAssignmentsToTopicRequest_Assignment.ProtoReflect.Descriptor instead.
func (*AssignAssignmentsToTopicRequest_Assignment) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignment_writer_proto_rawDescGZIP(), []int{16, 0}
}

func (x *AssignAssignmentsToTopicRequest_Assignment) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *AssignAssignmentsToTopicRequest_Assignment) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

var File_eureka_v1_assignment_writer_proto protoreflect.FileDescriptor

var file_eureka_v1_assignment_writer_proto_rawDesc = []byte{
	0x0a, 0x21, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x15,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x73, 0x1a, 0x90, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x40, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x18, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x53, 0x0a, 0x18, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x19,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x2e, 0x0a, 0x0b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73,
	0x22, 0xa1, 0x01, 0x0a, 0x16, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x06, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x60, 0x0a, 0x1a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a,
	0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x4c, 0x0a, 0x1b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x13, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22,
	0xa5, 0x01, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x05, 0x6c, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x42,
	0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x54, 0x0a, 0x18, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x1b, 0x0a,
	0x19, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x1b, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x02, 0x0a, 0x19, 0x45,
	0x64, 0x69, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x1c, 0x0a, 0x1a, 0x45, 0x64, 0x69, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xeb,
	0x01, 0x0a, 0x1f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x55, 0x0a,
	0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54,
	0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x56, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x22, 0x0a, 0x20,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x54, 0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x57, 0x0a, 0x1c, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8a, 0x03, 0x0a, 0x1c, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x48, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x35, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x1d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x41, 0x64, 0x48, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x2a, 0x58, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x45, 0x4e, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x5f,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x32, 0xb9, 0x06, 0x0a, 0x19, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x21, 0x2e,
	0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x65, 0x75, 0x72,
	0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x18, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x2a, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x54, 0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x15,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x11, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x41, 0x64, 0x48, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x27, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x41, 0x64, 0x48, 0x6f, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x64, 0x48, 0x6f, 0x63,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eureka_v1_assignment_writer_proto_rawDescOnce sync.Once
	file_eureka_v1_assignment_writer_proto_rawDescData = file_eureka_v1_assignment_writer_proto_rawDesc
)

func file_eureka_v1_assignment_writer_proto_rawDescGZIP() []byte {
	file_eureka_v1_assignment_writer_proto_rawDescOnce.Do(func() {
		file_eureka_v1_assignment_writer_proto_rawDescData = protoimpl.X.CompressGZIP(file_eureka_v1_assignment_writer_proto_rawDescData)
	})
	return file_eureka_v1_assignment_writer_proto_rawDescData
}

var file_eureka_v1_assignment_writer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eureka_v1_assignment_writer_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_eureka_v1_assignment_writer_proto_goTypes = []interface{}{
	(UpdateType)(0),                                    // 0: eureka.v1.UpdateType
	(*UpsertStudyPlansRequest)(nil),                    // 1: eureka.v1.UpsertStudyPlansRequest
	(*UpsertStudyPlansResponse)(nil),                   // 2: eureka.v1.UpsertStudyPlansResponse
	(*UpsertAssignmentsRequest)(nil),                   // 3: eureka.v1.UpsertAssignmentsRequest
	(*UpsertAssignmentsResponse)(nil),                  // 4: eureka.v1.UpsertAssignmentsResponse
	(*StudentList)(nil),                                // 5: eureka.v1.StudentList
	(*AssignStudyPlanRequest)(nil),                     // 6: eureka.v1.AssignStudyPlanRequest
	(*AssignStudyPlanResponse)(nil),                    // 7: eureka.v1.AssignStudyPlanResponse
	(*UpsertStudyPlanItemRequest)(nil),                 // 8: eureka.v1.UpsertStudyPlanItemRequest
	(*UpsertStudyPlanItemResponse)(nil),                // 9: eureka.v1.UpsertStudyPlanItemResponse
	(*ScheduleStudyPlan)(nil),                          // 10: eureka.v1.ScheduleStudyPlan
	(*ScheduleStudyPlanRequest)(nil),                   // 11: eureka.v1.ScheduleStudyPlanRequest
	(*ScheduleStudyPlanResponse)(nil),                  // 12: eureka.v1.ScheduleStudyPlanResponse
	(*DeleteAssignmentsRequest)(nil),                   // 13: eureka.v1.DeleteAssignmentsRequest
	(*DeleteAssignmentsResponse)(nil),                  // 14: eureka.v1.DeleteAssignmentsResponse
	(*EditAssignmentTimeRequest)(nil),                  // 15: eureka.v1.EditAssignmentTimeRequest
	(*EditAssignmentTimeResponse)(nil),                 // 16: eureka.v1.EditAssignmentTimeResponse
	(*AssignAssignmentsToTopicRequest)(nil),            // 17: eureka.v1.AssignAssignmentsToTopicRequest
	(*AssignAssignmentsToTopicResponse)(nil),           // 18: eureka.v1.AssignAssignmentsToTopicResponse
	(*UpsertAssignmentsDataRequest)(nil),               // 19: eureka.v1.UpsertAssignmentsDataRequest
	(*UpsertAdHocAssignmentRequest)(nil),               // 20: eureka.v1.UpsertAdHocAssignmentRequest
	(*UpsertAdHocAssignmentResponse)(nil),              // 21: eureka.v1.UpsertAdHocAssignmentResponse
	(*UpsertStudyPlansRequest_StudyPlan)(nil),          // 22: eureka.v1.UpsertStudyPlansRequest.StudyPlan
	(*AssignAssignmentsToTopicRequest_Assignment)(nil), // 23: eureka.v1.AssignAssignmentsToTopicRequest.Assignment
	(*Assignment)(nil),                                 // 24: eureka.v1.Assignment
	(*StudyPlanItem)(nil),                              // 25: eureka.v1.StudyPlanItem
	(*timestamppb.Timestamp)(nil),                      // 26: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil),                     // 27: google.protobuf.StringValue
	(StudyPlanType)(0),                                 // 28: eureka.v1.StudyPlanType
	(v1.Country)(0),                                    // 29: common.v1.Country
	(*emptypb.Empty)(nil),                              // 30: google.protobuf.Empty
}
var file_eureka_v1_assignment_writer_proto_depIdxs = []int32{
	22, // 0: eureka.v1.UpsertStudyPlansRequest.study_plans:type_name -> eureka.v1.UpsertStudyPlansRequest.StudyPlan
	24, // 1: eureka.v1.UpsertAssignmentsRequest.assignments:type_name -> eureka.v1.Assignment
	25, // 2: eureka.v1.UpsertStudyPlanItemRequest.study_plan_items:type_name -> eureka.v1.StudyPlanItem
	10, // 3: eureka.v1.ScheduleStudyPlanRequest.schedule:type_name -> eureka.v1.ScheduleStudyPlan
	26, // 4: eureka.v1.EditAssignmentTimeRequest.start_date:type_name -> google.protobuf.Timestamp
	26, // 5: eureka.v1.EditAssignmentTimeRequest.end_date:type_name -> google.protobuf.Timestamp
	0,  // 6: eureka.v1.EditAssignmentTimeRequest.update_type:type_name -> eureka.v1.UpdateType
	23, // 7: eureka.v1.AssignAssignmentsToTopicRequest.assignment:type_name -> eureka.v1.AssignAssignmentsToTopicRequest.Assignment
	24, // 8: eureka.v1.UpsertAssignmentsDataRequest.assignments:type_name -> eureka.v1.Assignment
	26, // 9: eureka.v1.UpsertAdHocAssignmentRequest.start_date:type_name -> google.protobuf.Timestamp
	26, // 10: eureka.v1.UpsertAdHocAssignmentRequest.end_date:type_name -> google.protobuf.Timestamp
	24, // 11: eureka.v1.UpsertAdHocAssignmentRequest.assignment:type_name -> eureka.v1.Assignment
	27, // 12: eureka.v1.UpsertStudyPlansRequest.StudyPlan.study_plan_id:type_name -> google.protobuf.StringValue
	28, // 13: eureka.v1.UpsertStudyPlansRequest.StudyPlan.type:type_name -> eureka.v1.StudyPlanType
	29, // 14: eureka.v1.UpsertStudyPlansRequest.StudyPlan.country:type_name -> common.v1.Country
	8,  // 15: eureka.v1.AssignmentModifierService.UpsertStudyPlanItem:input_type -> eureka.v1.UpsertStudyPlanItemRequest
	6,  // 16: eureka.v1.AssignmentModifierService.AssignStudyPlan:input_type -> eureka.v1.AssignStudyPlanRequest
	13, // 17: eureka.v1.AssignmentModifierService.DeleteAssignments:input_type -> eureka.v1.DeleteAssignmentsRequest
	15, // 18: eureka.v1.AssignmentModifierService.EditAssignmentTime:input_type -> eureka.v1.EditAssignmentTimeRequest
	17, // 19: eureka.v1.AssignmentModifierService.AssignAssignmentsToTopic:input_type -> eureka.v1.AssignAssignmentsToTopicRequest
	19, // 20: eureka.v1.AssignmentModifierService.UpsertAssignmentsData:input_type -> eureka.v1.UpsertAssignmentsDataRequest
	3,  // 21: eureka.v1.AssignmentModifierService.UpsertAssignments:input_type -> eureka.v1.UpsertAssignmentsRequest
	20, // 22: eureka.v1.AssignmentModifierService.UpsertAdHocAssignment:input_type -> eureka.v1.UpsertAdHocAssignmentRequest
	9,  // 23: eureka.v1.AssignmentModifierService.UpsertStudyPlanItem:output_type -> eureka.v1.UpsertStudyPlanItemResponse
	7,  // 24: eureka.v1.AssignmentModifierService.AssignStudyPlan:output_type -> eureka.v1.AssignStudyPlanResponse
	14, // 25: eureka.v1.AssignmentModifierService.DeleteAssignments:output_type -> eureka.v1.DeleteAssignmentsResponse
	16, // 26: eureka.v1.AssignmentModifierService.EditAssignmentTime:output_type -> eureka.v1.EditAssignmentTimeResponse
	18, // 27: eureka.v1.AssignmentModifierService.AssignAssignmentsToTopic:output_type -> eureka.v1.AssignAssignmentsToTopicResponse
	30, // 28: eureka.v1.AssignmentModifierService.UpsertAssignmentsData:output_type -> google.protobuf.Empty
	4,  // 29: eureka.v1.AssignmentModifierService.UpsertAssignments:output_type -> eureka.v1.UpsertAssignmentsResponse
	21, // 30: eureka.v1.AssignmentModifierService.UpsertAdHocAssignment:output_type -> eureka.v1.UpsertAdHocAssignmentResponse
	23, // [23:31] is the sub-list for method output_type
	15, // [15:23] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_eureka_v1_assignment_writer_proto_init() }
func file_eureka_v1_assignment_writer_proto_init() {
	if File_eureka_v1_assignment_writer_proto != nil {
		return
	}
	file_eureka_v1_assignments_proto_init()
	file_eureka_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eureka_v1_assignment_writer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStudyPlansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStudyPlansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAssignmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAssignmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignStudyPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignStudyPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStudyPlanItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStudyPlanItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleStudyPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleStudyPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleStudyPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAssignmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAssignmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAssignmentTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAssignmentTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignAssignmentsToTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignAssignmentsToTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAssignmentsDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAdHocAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertAdHocAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStudyPlansRequest_StudyPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignment_writer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignAssignmentsToTopicRequest_Assignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eureka_v1_assignment_writer_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AssignStudyPlanRequest_CourseId)(nil),
		(*AssignStudyPlanRequest_ClassId)(nil),
		(*AssignStudyPlanRequest_StudentId)(nil),
	}
	file_eureka_v1_assignment_writer_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ScheduleStudyPlan_AssignmentId)(nil),
		(*ScheduleStudyPlan_LoId)(nil),
		(*ScheduleStudyPlan_LessonId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eureka_v1_assignment_writer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eureka_v1_assignment_writer_proto_goTypes,
		DependencyIndexes: file_eureka_v1_assignment_writer_proto_depIdxs,
		EnumInfos:         file_eureka_v1_assignment_writer_proto_enumTypes,
		MessageInfos:      file_eureka_v1_assignment_writer_proto_msgTypes,
	}.Build()
	File_eureka_v1_assignment_writer_proto = out.File
	file_eureka_v1_assignment_writer_proto_rawDesc = nil
	file_eureka_v1_assignment_writer_proto_goTypes = nil
	file_eureka_v1_assignment_writer_proto_depIdxs = nil
}
