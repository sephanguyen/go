// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package epb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// ImageToTextClient is the client API for ImageToText service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ImageToTextClient interface {
	DetectFormula(ctx context.Context, in *DetectFormulaRequest, opts ...grpc.CallOption) (*DetectFormulaResponse, error)
}

type imageToTextClient struct {
	cc grpc.ClientConnInterface
}

func NewImageToTextClient(cc grpc.ClientConnInterface) ImageToTextClient {
	return &imageToTextClient{cc}
}

func (c *imageToTextClient) DetectFormula(ctx context.Context, in *DetectFormulaRequest, opts ...grpc.CallOption) (*DetectFormulaResponse, error) {
	out := new(DetectFormulaResponse)
	err := c.cc.Invoke(ctx, "/eureka.v1.ImageToText/DetectFormula", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageToTextServer is the server API for ImageToText service.
// All implementations should embed UnimplementedImageToTextServer
// for forward compatibility
type ImageToTextServer interface {
	DetectFormula(context.Context, *DetectFormulaRequest) (*DetectFormulaResponse, error)
}

// UnimplementedImageToTextServer should be embedded to have forward compatible implementations.
type UnimplementedImageToTextServer struct {
}

func (UnimplementedImageToTextServer) DetectFormula(context.Context, *DetectFormulaRequest) (*DetectFormulaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetectFormula not implemented")
}

// UnsafeImageToTextServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ImageToTextServer will
// result in compilation errors.
type UnsafeImageToTextServer interface {
	mustEmbedUnimplementedImageToTextServer()
}

func RegisterImageToTextServer(s grpc.ServiceRegistrar, srv ImageToTextServer) {
	s.RegisterService(&_ImageToText_serviceDesc, srv)
}

func _ImageToText_DetectFormula_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetectFormulaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageToTextServer).DetectFormula(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eureka.v1.ImageToText/DetectFormula",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageToTextServer).DetectFormula(ctx, req.(*DetectFormulaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImageToText_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eureka.v1.ImageToText",
	HandlerType: (*ImageToTextServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DetectFormula",
			Handler:    _ImageToText_DetectFormula_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eureka/v1/image_to_text.proto",
}
