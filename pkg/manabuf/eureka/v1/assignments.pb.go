// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: eureka/v1/assignments.proto

package epb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StudyPlanItemStatus int32

const (
	StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_NONE     StudyPlanItemStatus = 0
	StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_ACTIVE   StudyPlanItemStatus = 1
	StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_ARCHIVED StudyPlanItemStatus = 2
)

// Enum value maps for StudyPlanItemStatus.
var (
	StudyPlanItemStatus_name = map[int32]string{
		0: "STUDY_PLAN_ITEM_STATUS_NONE",
		1: "STUDY_PLAN_ITEM_STATUS_ACTIVE",
		2: "STUDY_PLAN_ITEM_STATUS_ARCHIVED",
	}
	StudyPlanItemStatus_value = map[string]int32{
		"STUDY_PLAN_ITEM_STATUS_NONE":     0,
		"STUDY_PLAN_ITEM_STATUS_ACTIVE":   1,
		"STUDY_PLAN_ITEM_STATUS_ARCHIVED": 2,
	}
)

func (x StudyPlanItemStatus) Enum() *StudyPlanItemStatus {
	p := new(StudyPlanItemStatus)
	*p = x
	return p
}

func (x StudyPlanItemStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudyPlanItemStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_eureka_v1_assignments_proto_enumTypes[0].Descriptor()
}

func (StudyPlanItemStatus) Type() protoreflect.EnumType {
	return &file_eureka_v1_assignments_proto_enumTypes[0]
}

func (x StudyPlanItemStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudyPlanItemStatus.Descriptor instead.
func (StudyPlanItemStatus) EnumDescriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{0}
}

type SubmissionUnderstandingLevel int32

const (
	SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_NONE    SubmissionUnderstandingLevel = 0
	SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_SAD     SubmissionUnderstandingLevel = 1
	SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_NEUTRAL SubmissionUnderstandingLevel = 2
	SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_HAPPY   SubmissionUnderstandingLevel = 3
)

// Enum value maps for SubmissionUnderstandingLevel.
var (
	SubmissionUnderstandingLevel_name = map[int32]string{
		0: "SUBMISSION_UNDERSTANDING_LEVEL_NONE",
		1: "SUBMISSION_UNDERSTANDING_LEVEL_SAD",
		2: "SUBMISSION_UNDERSTANDING_LEVEL_NEUTRAL",
		3: "SUBMISSION_UNDERSTANDING_LEVEL_HAPPY",
	}
	SubmissionUnderstandingLevel_value = map[string]int32{
		"SUBMISSION_UNDERSTANDING_LEVEL_NONE":    0,
		"SUBMISSION_UNDERSTANDING_LEVEL_SAD":     1,
		"SUBMISSION_UNDERSTANDING_LEVEL_NEUTRAL": 2,
		"SUBMISSION_UNDERSTANDING_LEVEL_HAPPY":   3,
	}
)

func (x SubmissionUnderstandingLevel) Enum() *SubmissionUnderstandingLevel {
	p := new(SubmissionUnderstandingLevel)
	*p = x
	return p
}

func (x SubmissionUnderstandingLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubmissionUnderstandingLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_eureka_v1_assignments_proto_enumTypes[1].Descriptor()
}

func (SubmissionUnderstandingLevel) Type() protoreflect.EnumType {
	return &file_eureka_v1_assignments_proto_enumTypes[1]
}

func (x SubmissionUnderstandingLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubmissionUnderstandingLevel.Descriptor instead.
func (SubmissionUnderstandingLevel) EnumDescriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{1}
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment  string               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	Duration *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Comment) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type AssignmentSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowLateSubmission       bool `protobuf:"varint,1,opt,name=allow_late_submission,json=allowLateSubmission,proto3" json:"allow_late_submission,omitempty"`
	AllowResubmission         bool `protobuf:"varint,2,opt,name=allow_resubmission,json=allowResubmission,proto3" json:"allow_resubmission,omitempty"`
	RequireAttachment         bool `protobuf:"varint,3,opt,name=require_attachment,json=requireAttachment,proto3" json:"require_attachment,omitempty"`
	RequireAssignmentNote     bool `protobuf:"varint,4,opt,name=require_assignment_note,json=requireAssignmentNote,proto3" json:"require_assignment_note,omitempty"`
	RequireVideoSubmission    bool `protobuf:"varint,5,opt,name=require_video_submission,json=requireVideoSubmission,proto3" json:"require_video_submission,omitempty"`
	RequireCompleteDate       bool `protobuf:"varint,6,opt,name=require_complete_date,json=requireCompleteDate,proto3" json:"require_complete_date,omitempty"`
	RequireDuration           bool `protobuf:"varint,7,opt,name=require_duration,json=requireDuration,proto3" json:"require_duration,omitempty"`
	RequireCorrectness        bool `protobuf:"varint,8,opt,name=require_correctness,json=requireCorrectness,proto3" json:"require_correctness,omitempty"`
	RequireUnderstandingLevel bool `protobuf:"varint,9,opt,name=require_understanding_level,json=requireUnderstandingLevel,proto3" json:"require_understanding_level,omitempty"`
}

func (x *AssignmentSetting) Reset() {
	*x = AssignmentSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentSetting) ProtoMessage() {}

func (x *AssignmentSetting) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentSetting.ProtoReflect.Descriptor instead.
func (*AssignmentSetting) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{1}
}

func (x *AssignmentSetting) GetAllowLateSubmission() bool {
	if x != nil {
		return x.AllowLateSubmission
	}
	return false
}

func (x *AssignmentSetting) GetAllowResubmission() bool {
	if x != nil {
		return x.AllowResubmission
	}
	return false
}

func (x *AssignmentSetting) GetRequireAttachment() bool {
	if x != nil {
		return x.RequireAttachment
	}
	return false
}

func (x *AssignmentSetting) GetRequireAssignmentNote() bool {
	if x != nil {
		return x.RequireAssignmentNote
	}
	return false
}

func (x *AssignmentSetting) GetRequireVideoSubmission() bool {
	if x != nil {
		return x.RequireVideoSubmission
	}
	return false
}

func (x *AssignmentSetting) GetRequireCompleteDate() bool {
	if x != nil {
		return x.RequireCompleteDate
	}
	return false
}

func (x *AssignmentSetting) GetRequireDuration() bool {
	if x != nil {
		return x.RequireDuration
	}
	return false
}

func (x *AssignmentSetting) GetRequireCorrectness() bool {
	if x != nil {
		return x.RequireCorrectness
	}
	return false
}

func (x *AssignmentSetting) GetRequireUnderstandingLevel() bool {
	if x != nil {
		return x.RequireUnderstandingLevel
	}
	return false
}

type CheckListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	IsChecked bool   `protobuf:"varint,2,opt,name=is_checked,json=isChecked,proto3" json:"is_checked,omitempty"`
}

func (x *CheckListItem) Reset() {
	*x = CheckListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckListItem) ProtoMessage() {}

func (x *CheckListItem) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckListItem.ProtoReflect.Descriptor instead.
func (*CheckListItem) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{2}
}

func (x *CheckListItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CheckListItem) GetIsChecked() bool {
	if x != nil {
		return x.IsChecked
	}
	return false
}

type CheckList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CheckListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CheckList) Reset() {
	*x = CheckList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckList) ProtoMessage() {}

func (x *CheckList) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckList.ProtoReflect.Descriptor instead.
func (*CheckList) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{3}
}

func (x *CheckList) GetItems() []*CheckListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type AssignmentContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string   `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	LoId    []string `protobuf:"bytes,2,rep,name=lo_id,json=loId,proto3" json:"lo_id,omitempty"`
}

func (x *AssignmentContent) Reset() {
	*x = AssignmentContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentContent) ProtoMessage() {}

func (x *AssignmentContent) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentContent.ProtoReflect.Descriptor instead.
func (*AssignmentContent) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{4}
}

func (x *AssignmentContent) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *AssignmentContent) GetLoId() []string {
	if x != nil {
		return x.LoId
	}
	return nil
}

type AssignmentEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*AssignmentEvent_Assigned_
	//	*AssignmentEvent_Returned_
	//	*AssignmentEvent_Submitted_
	//	*AssignmentEvent_Updated_
	Event isAssignmentEvent_Event `protobuf_oneof:"event"`
}

func (x *AssignmentEvent) Reset() {
	*x = AssignmentEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentEvent) ProtoMessage() {}

func (x *AssignmentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentEvent.ProtoReflect.Descriptor instead.
func (*AssignmentEvent) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{5}
}

func (m *AssignmentEvent) GetEvent() isAssignmentEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *AssignmentEvent) GetAssigned() *AssignmentEvent_Assigned {
	if x, ok := x.GetEvent().(*AssignmentEvent_Assigned_); ok {
		return x.Assigned
	}
	return nil
}

func (x *AssignmentEvent) GetReturned() *AssignmentEvent_Returned {
	if x, ok := x.GetEvent().(*AssignmentEvent_Returned_); ok {
		return x.Returned
	}
	return nil
}

func (x *AssignmentEvent) GetSubmitted() *AssignmentEvent_Submitted {
	if x, ok := x.GetEvent().(*AssignmentEvent_Submitted_); ok {
		return x.Submitted
	}
	return nil
}

func (x *AssignmentEvent) GetUpdated() *AssignmentEvent_Updated {
	if x, ok := x.GetEvent().(*AssignmentEvent_Updated_); ok {
		return x.Updated
	}
	return nil
}

type isAssignmentEvent_Event interface {
	isAssignmentEvent_Event()
}

type AssignmentEvent_Assigned_ struct {
	Assigned *AssignmentEvent_Assigned `protobuf:"bytes,1,opt,name=assigned,proto3,oneof"`
}

type AssignmentEvent_Returned_ struct {
	Returned *AssignmentEvent_Returned `protobuf:"bytes,2,opt,name=returned,proto3,oneof"`
}

type AssignmentEvent_Submitted_ struct {
	Submitted *AssignmentEvent_Submitted `protobuf:"bytes,3,opt,name=submitted,proto3,oneof"`
}

type AssignmentEvent_Updated_ struct {
	Updated *AssignmentEvent_Updated `protobuf:"bytes,4,opt,name=updated,proto3,oneof"`
}

func (*AssignmentEvent_Assigned_) isAssignmentEvent_Event() {}

func (*AssignmentEvent_Returned_) isAssignmentEvent_Event() {}

func (*AssignmentEvent_Submitted_) isAssignmentEvent_Event() {}

func (*AssignmentEvent_Updated_) isAssignmentEvent_Event() {}

type Assignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId     string             `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	Content          *AssignmentContent `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Attachments      []string           `protobuf:"bytes,3,rep,name=attachments,proto3" json:"attachments,omitempty"`
	AssignmentType   AssignmentType     `protobuf:"varint,4,opt,name=assignment_type,json=assignmentType,proto3,enum=eureka.v1.AssignmentType" json:"assignment_type,omitempty"`
	Setting          *AssignmentSetting `protobuf:"bytes,5,opt,name=setting,proto3" json:"setting,omitempty"`
	AssignmentStatus AssignmentStatus   `protobuf:"varint,6,opt,name=assignment_status,json=assignmentStatus,proto3,enum=eureka.v1.AssignmentStatus" json:"assignment_status,omitempty"`
	CheckList        *CheckList         `protobuf:"bytes,7,opt,name=check_list,json=checkList,proto3" json:"check_list,omitempty"`
	MaxGrade         int64              `protobuf:"varint,8,opt,name=max_grade,json=maxGrade,proto3" json:"max_grade,omitempty"`
	Instruction      string             `protobuf:"bytes,9,opt,name=instruction,proto3" json:"instruction,omitempty"`
	Name             string             `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	RequiredGrade    bool               `protobuf:"varint,11,opt,name=required_grade,json=requiredGrade,proto3" json:"required_grade,omitempty"`
	DisplayOrder     int32              `protobuf:"varint,12,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
}

func (x *Assignment) Reset() {
	*x = Assignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignment) ProtoMessage() {}

func (x *Assignment) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignment.ProtoReflect.Descriptor instead.
func (*Assignment) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{6}
}

func (x *Assignment) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *Assignment) GetContent() *AssignmentContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Assignment) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Assignment) GetAssignmentType() AssignmentType {
	if x != nil {
		return x.AssignmentType
	}
	return AssignmentType_ASSIGNMENT_TYPE_NONE
}

func (x *Assignment) GetSetting() *AssignmentSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *Assignment) GetAssignmentStatus() AssignmentStatus {
	if x != nil {
		return x.AssignmentStatus
	}
	return AssignmentStatus_ASSIGNMENT_STATUS_NONE
}

func (x *Assignment) GetCheckList() *CheckList {
	if x != nil {
		return x.CheckList
	}
	return nil
}

func (x *Assignment) GetMaxGrade() int64 {
	if x != nil {
		return x.MaxGrade
	}
	return 0
}

func (x *Assignment) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *Assignment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Assignment) GetRequiredGrade() bool {
	if x != nil {
		return x.RequiredGrade
	}
	return false
}

func (x *Assignment) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

type ContentStructure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId  string `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	BookId    string `protobuf:"bytes,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	ChapterId string `protobuf:"bytes,3,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	TopicId   string `protobuf:"bytes,4,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	// Types that are assignable to ItemId:
	//
	//	*ContentStructure_AssignmentId
	//	*ContentStructure_LoId
	ItemId isContentStructure_ItemId `protobuf_oneof:"item_id"`
}

func (x *ContentStructure) Reset() {
	*x = ContentStructure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentStructure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentStructure) ProtoMessage() {}

func (x *ContentStructure) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentStructure.ProtoReflect.Descriptor instead.
func (*ContentStructure) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{7}
}

func (x *ContentStructure) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ContentStructure) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *ContentStructure) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *ContentStructure) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (m *ContentStructure) GetItemId() isContentStructure_ItemId {
	if m != nil {
		return m.ItemId
	}
	return nil
}

func (x *ContentStructure) GetAssignmentId() *wrapperspb.StringValue {
	if x, ok := x.GetItemId().(*ContentStructure_AssignmentId); ok {
		return x.AssignmentId
	}
	return nil
}

func (x *ContentStructure) GetLoId() *wrapperspb.StringValue {
	if x, ok := x.GetItemId().(*ContentStructure_LoId); ok {
		return x.LoId
	}
	return nil
}

type isContentStructure_ItemId interface {
	isContentStructure_ItemId()
}

type ContentStructure_AssignmentId struct {
	AssignmentId *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=assignment_id,json=assignmentId,proto3,oneof"`
}

type ContentStructure_LoId struct {
	LoId *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=lo_id,json=loId,proto3,oneof"`
}

func (*ContentStructure_AssignmentId) isContentStructure_ItemId() {}

func (*ContentStructure_LoId) isContentStructure_ItemId() {}

type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItem *StudyPlanItem `protobuf:"bytes,1,opt,name=study_plan_item,json=studyPlanItem,proto3" json:"study_plan_item,omitempty"`
	ResourceId    string         `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Type          ContentType    `protobuf:"varint,3,opt,name=type,proto3,enum=eureka.v1.ContentType" json:"type,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{8}
}

func (x *Content) GetStudyPlanItem() *StudyPlanItem {
	if x != nil {
		return x.StudyPlanItem
	}
	return nil
}

func (x *Content) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Content) GetType() ContentType {
	if x != nil {
		return x.Type
	}
	return ContentType_CONTENT_TYPE_NONE
}

type AssignmentWithDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignment    *Assignment    `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
	StudyPlanItem *StudyPlanItem `protobuf:"bytes,2,opt,name=study_plan_item,json=studyPlanItem,proto3" json:"study_plan_item,omitempty"`
}

func (x *AssignmentWithDate) Reset() {
	*x = AssignmentWithDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentWithDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentWithDate) ProtoMessage() {}

func (x *AssignmentWithDate) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentWithDate.ProtoReflect.Descriptor instead.
func (*AssignmentWithDate) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{9}
}

func (x *AssignmentWithDate) GetAssignment() *Assignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

func (x *AssignmentWithDate) GetStudyPlanItem() *StudyPlanItem {
	if x != nil {
		return x.StudyPlanItem
	}
	return nil
}

type StudyPlanItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId             string                 `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	StudyPlanItemId         string                 `protobuf:"bytes,2,opt,name=study_plan_item_id,json=studyPlanItemId,proto3" json:"study_plan_item_id,omitempty"`
	AvailableFrom           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=available_from,json=availableFrom,proto3" json:"available_from,omitempty"`
	AvailableTo             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=available_to,json=availableTo,proto3" json:"available_to,omitempty"`
	StartDate               *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate                 *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	ContentStructure        *ContentStructure      `protobuf:"bytes,7,opt,name=content_structure,json=contentStructure,proto3" json:"content_structure,omitempty"`
	CompletedAt             *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	DisplayOrder            int32                  `protobuf:"varint,9,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	ContentStructureFlatten string                 `protobuf:"bytes,10,opt,name=content_structure_flatten,json=contentStructureFlatten,proto3" json:"content_structure_flatten,omitempty"`
	Status                  StudyPlanItemStatus    `protobuf:"varint,11,opt,name=status,proto3,enum=eureka.v1.StudyPlanItemStatus" json:"status,omitempty"`
	SchoolDate              *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=school_date,json=schoolDate,proto3" json:"school_date,omitempty"`
}

func (x *StudyPlanItem) Reset() {
	*x = StudyPlanItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlanItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlanItem) ProtoMessage() {}

func (x *StudyPlanItem) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlanItem.ProtoReflect.Descriptor instead.
func (*StudyPlanItem) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{10}
}

func (x *StudyPlanItem) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *StudyPlanItem) GetStudyPlanItemId() string {
	if x != nil {
		return x.StudyPlanItemId
	}
	return ""
}

func (x *StudyPlanItem) GetAvailableFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableFrom
	}
	return nil
}

func (x *StudyPlanItem) GetAvailableTo() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableTo
	}
	return nil
}

func (x *StudyPlanItem) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *StudyPlanItem) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *StudyPlanItem) GetContentStructure() *ContentStructure {
	if x != nil {
		return x.ContentStructure
	}
	return nil
}

func (x *StudyPlanItem) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *StudyPlanItem) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

func (x *StudyPlanItem) GetContentStructureFlatten() string {
	if x != nil {
		return x.ContentStructureFlatten
	}
	return ""
}

func (x *StudyPlanItem) GetStatus() StudyPlanItemStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanItemStatus_STUDY_PLAN_ITEM_STATUS_NONE
}

func (x *StudyPlanItem) GetSchoolDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SchoolDate
	}
	return nil
}

type ToDoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanItem *StudyPlanItem `protobuf:"bytes,1,opt,name=study_plan_item,json=studyPlanItem,proto3" json:"study_plan_item,omitempty"`
	ResourceId    string         `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Type          ToDoItemType   `protobuf:"varint,3,opt,name=type,proto3,enum=eureka.v1.ToDoItemType" json:"type,omitempty"`
	Status        ToDoStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=eureka.v1.ToDoStatus" json:"status,omitempty"`
}

func (x *ToDoItem) Reset() {
	*x = ToDoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToDoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToDoItem) ProtoMessage() {}

func (x *ToDoItem) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToDoItem.ProtoReflect.Descriptor instead.
func (*ToDoItem) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{11}
}

func (x *ToDoItem) GetStudyPlanItem() *StudyPlanItem {
	if x != nil {
		return x.StudyPlanItem
	}
	return nil
}

func (x *ToDoItem) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ToDoItem) GetType() ToDoItemType {
	if x != nil {
		return x.Type
	}
	return ToDoItemType_TO_DO_ITEM_TYPE_NONE
}

func (x *ToDoItem) GetStatus() ToDoStatus {
	if x != nil {
		return x.Status
	}
	return ToDoStatus_TO_DO_STATUS_NONE
}

type StudentSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId    string `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	AssignmentId    string `protobuf:"bytes,2,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	StudyPlanItemId string `protobuf:"bytes,3,opt,name=study_plan_item_id,json=studyPlanItemId,proto3" json:"study_plan_item_id,omitempty"`
	StudentId       string `protobuf:"bytes,4,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Note            string `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
	// array of media id
	SubmissionContent []*SubmissionContent   `protobuf:"bytes,6,rep,name=submission_content,json=submissionContent,proto3" json:"submission_content,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status            SubmissionStatus       `protobuf:"varint,9,opt,name=status,proto3,enum=eureka.v1.SubmissionStatus" json:"status,omitempty"`
	// empty if not grade yet
	SubmissionGradeId  *wrapperspb.StringValue      `protobuf:"bytes,10,opt,name=submission_grade_id,json=submissionGradeId,proto3" json:"submission_grade_id,omitempty"`
	CourseId           string                       `protobuf:"bytes,11,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StartDate          *timestamppb.Timestamp       `protobuf:"bytes,12,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate            *timestamppb.Timestamp       `protobuf:"bytes,13,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	CompleteDate       *timestamppb.Timestamp       `protobuf:"bytes,14,opt,name=complete_date,json=completeDate,proto3" json:"complete_date,omitempty"`
	Duration           int32                        `protobuf:"varint,15,opt,name=duration,proto3" json:"duration,omitempty"`
	CorrectScore       float32                      `protobuf:"fixed32,16,opt,name=correct_score,json=correctScore,proto3" json:"correct_score,omitempty"`
	TotalScore         float32                      `protobuf:"fixed32,17,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
	UnderstandingLevel SubmissionUnderstandingLevel `protobuf:"varint,18,opt,name=understanding_level,json=understandingLevel,proto3,enum=eureka.v1.SubmissionUnderstandingLevel" json:"understanding_level,omitempty"`
}

func (x *StudentSubmission) Reset() {
	*x = StudentSubmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentSubmission) ProtoMessage() {}

func (x *StudentSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentSubmission.ProtoReflect.Descriptor instead.
func (*StudentSubmission) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{12}
}

func (x *StudentSubmission) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *StudentSubmission) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *StudentSubmission) GetStudyPlanItemId() string {
	if x != nil {
		return x.StudyPlanItemId
	}
	return ""
}

func (x *StudentSubmission) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *StudentSubmission) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *StudentSubmission) GetSubmissionContent() []*SubmissionContent {
	if x != nil {
		return x.SubmissionContent
	}
	return nil
}

func (x *StudentSubmission) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *StudentSubmission) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *StudentSubmission) GetStatus() SubmissionStatus {
	if x != nil {
		return x.Status
	}
	return SubmissionStatus_SUBMISSION_STATUS_NONE
}

func (x *StudentSubmission) GetSubmissionGradeId() *wrapperspb.StringValue {
	if x != nil {
		return x.SubmissionGradeId
	}
	return nil
}

func (x *StudentSubmission) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *StudentSubmission) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *StudentSubmission) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *StudentSubmission) GetCompleteDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CompleteDate
	}
	return nil
}

func (x *StudentSubmission) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *StudentSubmission) GetCorrectScore() float32 {
	if x != nil {
		return x.CorrectScore
	}
	return 0
}

func (x *StudentSubmission) GetTotalScore() float32 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *StudentSubmission) GetUnderstandingLevel() SubmissionUnderstandingLevel {
	if x != nil {
		return x.UnderstandingLevel
	}
	return SubmissionUnderstandingLevel_SUBMISSION_UNDERSTANDING_LEVEL_NONE
}

type StudyPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyPlanId         string          `protobuf:"bytes,1,opt,name=study_plan_id,json=studyPlanId,proto3" json:"study_plan_id,omitempty"`
	Name                string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BookId              string          `protobuf:"bytes,3,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Status              StudyPlanStatus `protobuf:"varint,4,opt,name=status,proto3,enum=eureka.v1.StudyPlanStatus" json:"status,omitempty"`
	TrackSchoolProgress bool            `protobuf:"varint,5,opt,name=track_school_progress,json=trackSchoolProgress,proto3" json:"track_school_progress,omitempty"`
	Grades              []int32         `protobuf:"varint,6,rep,packed,name=grades,proto3" json:"grades,omitempty"`
}

func (x *StudyPlan) Reset() {
	*x = StudyPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyPlan) ProtoMessage() {}

func (x *StudyPlan) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyPlan.ProtoReflect.Descriptor instead.
func (*StudyPlan) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{13}
}

func (x *StudyPlan) GetStudyPlanId() string {
	if x != nil {
		return x.StudyPlanId
	}
	return ""
}

func (x *StudyPlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StudyPlan) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *StudyPlan) GetStatus() StudyPlanStatus {
	if x != nil {
		return x.Status
	}
	return StudyPlanStatus_STUDY_PLAN_STATUS_NONE
}

func (x *StudyPlan) GetTrackSchoolProgress() bool {
	if x != nil {
		return x.TrackSchoolProgress
	}
	return false
}

func (x *StudyPlan) GetGrades() []int32 {
	if x != nil {
		return x.Grades
	}
	return nil
}

type SubmissionContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitMediaId     string `protobuf:"bytes,1,opt,name=submit_media_id,json=submitMediaId,proto3" json:"submit_media_id,omitempty"`
	AttachmentMediaId string `protobuf:"bytes,2,opt,name=attachment_media_id,json=attachmentMediaId,proto3" json:"attachment_media_id,omitempty"`
}

func (x *SubmissionContent) Reset() {
	*x = SubmissionContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionContent) ProtoMessage() {}

func (x *SubmissionContent) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionContent.ProtoReflect.Descriptor instead.
func (*SubmissionContent) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{14}
}

func (x *SubmissionContent) GetSubmitMediaId() string {
	if x != nil {
		return x.SubmitMediaId
	}
	return ""
}

func (x *SubmissionContent) GetAttachmentMediaId() string {
	if x != nil {
		return x.AttachmentMediaId
	}
	return ""
}

type SubmissionGrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId string               `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Note         string               `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	Grade        float64              `protobuf:"fixed64,3,opt,name=grade,proto3" json:"grade,omitempty"`
	GradeContent []*SubmissionContent `protobuf:"bytes,4,rep,name=grade_content,json=gradeContent,proto3" json:"grade_content,omitempty"`
}

func (x *SubmissionGrade) Reset() {
	*x = SubmissionGrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionGrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionGrade) ProtoMessage() {}

func (x *SubmissionGrade) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionGrade.ProtoReflect.Descriptor instead.
func (*SubmissionGrade) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{15}
}

func (x *SubmissionGrade) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *SubmissionGrade) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *SubmissionGrade) GetGrade() float64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *SubmissionGrade) GetGradeContent() []*SubmissionContent {
	if x != nil {
		return x.GradeContent
	}
	return nil
}

type AssignmentEvent_Assigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId string `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	ClassId      int32  `protobuf:"varint,2,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	// student_ids is null when teacher assigns for whole class
	// and not null when teacher assigns for students in class.
	StudentIds []string `protobuf:"bytes,3,rep,name=student_ids,json=studentIds,proto3" json:"student_ids,omitempty"`
}

func (x *AssignmentEvent_Assigned) Reset() {
	*x = AssignmentEvent_Assigned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentEvent_Assigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentEvent_Assigned) ProtoMessage() {}

func (x *AssignmentEvent_Assigned) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentEvent_Assigned.ProtoReflect.Descriptor instead.
func (*AssignmentEvent_Assigned) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{5, 0}
}

func (x *AssignmentEvent_Assigned) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *AssignmentEvent_Assigned) GetClassId() int32 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *AssignmentEvent_Assigned) GetStudentIds() []string {
	if x != nil {
		return x.StudentIds
	}
	return nil
}

type AssignmentEvent_Returned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId string  `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	GivenScore   float32 `protobuf:"fixed32,2,opt,name=given_score,json=givenScore,proto3" json:"given_score,omitempty"`
	TotalScore   float32 `protobuf:"fixed32,3,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
}

func (x *AssignmentEvent_Returned) Reset() {
	*x = AssignmentEvent_Returned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentEvent_Returned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentEvent_Returned) ProtoMessage() {}

func (x *AssignmentEvent_Returned) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentEvent_Returned.ProtoReflect.Descriptor instead.
func (*AssignmentEvent_Returned) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{5, 1}
}

func (x *AssignmentEvent_Returned) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *AssignmentEvent_Returned) GetGivenScore() float32 {
	if x != nil {
		return x.GivenScore
	}
	return 0
}

func (x *AssignmentEvent_Returned) GetTotalScore() float32 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

// student submitted assignment
type AssignmentEvent_Submitted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId string `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
}

func (x *AssignmentEvent_Submitted) Reset() {
	*x = AssignmentEvent_Submitted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentEvent_Submitted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentEvent_Submitted) ProtoMessage() {}

func (x *AssignmentEvent_Submitted) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentEvent_Submitted.ProtoReflect.Descriptor instead.
func (*AssignmentEvent_Submitted) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{5, 2}
}

func (x *AssignmentEvent_Submitted) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

// teacher update start date, end date
type AssignmentEvent_Updated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId string                 `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	StartDate    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *AssignmentEvent_Updated) Reset() {
	*x = AssignmentEvent_Updated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eureka_v1_assignments_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentEvent_Updated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentEvent_Updated) ProtoMessage() {}

func (x *AssignmentEvent_Updated) ProtoReflect() protoreflect.Message {
	mi := &file_eureka_v1_assignments_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentEvent_Updated.ProtoReflect.Descriptor instead.
func (*AssignmentEvent_Updated) Descriptor() ([]byte, []int) {
	return file_eureka_v1_assignments_proto_rawDescGZIP(), []int{5, 3}
}

func (x *AssignmentEvent_Updated) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *AssignmentEvent_Updated) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *AssignmentEvent_Updated) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

var File_eureka_v1_assignments_proto protoreflect.FileDescriptor

var file_eureka_v1_assignments_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5a, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe7, 0x03, 0x0a,
	0x11, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x18,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x48, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64,
	0x22, 0x3b, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x43, 0x0a,
	0x11, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x13, 0x0a,
	0x05, 0x6c, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f,
	0x49, 0x64, 0x22, 0xdb, 0x05, 0x0a, 0x0f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x1a, 0x6b, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x1a,
	0x71, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x1a, 0x30, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x1a, 0xa0, 0x01, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0xa5, 0x04, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x42,
	0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x11, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x10, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78,
	0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x87, 0x02, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x43, 0x0a,
	0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x6c, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x00, 0x52, 0x04, 0x6c, 0x6f, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x40,
	0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8d, 0x01,
	0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xb3, 0x05,
	0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x41, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x36,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44,
	0x61, 0x74, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x08, 0x54, 0x6f, 0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x40, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x75, 0x72, 0x65,
	0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x44, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x44,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x8f, 0x07, 0x0a, 0x11, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12,
	0x4b, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x75,
	0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x72,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x12, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0xdc, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x22, 0x6b, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x22, 0xa3, 0x01,
	0x0a, 0x0f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x41, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2a, 0x7e, 0x0a, 0x13, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54,
	0x55, 0x44, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x53,
	0x54, 0x55, 0x44, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x23,
	0x0a, 0x1f, 0x53, 0x54, 0x55, 0x44, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x49, 0x54, 0x45,
	0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45,
	0x44, 0x10, 0x02, 0x2a, 0xc5, 0x01, 0x0a, 0x1c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x26, 0x0a,
	0x22, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x45,
	0x52, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x53, 0x41, 0x44, 0x10, 0x01, 0x12, 0x2a, 0x0a, 0x26, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4e, 0x45, 0x55, 0x54, 0x52, 0x41, 0x4c, 0x10,
	0x02, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x4e, 0x44, 0x45, 0x52, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x48, 0x41, 0x50, 0x50, 0x59, 0x10, 0x03, 0x42, 0x3a, 0x5a, 0x38, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69,
	0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x75, 0x72, 0x65, 0x6b, 0x61,
	0x2f, 0x76, 0x31, 0x3b, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eureka_v1_assignments_proto_rawDescOnce sync.Once
	file_eureka_v1_assignments_proto_rawDescData = file_eureka_v1_assignments_proto_rawDesc
)

func file_eureka_v1_assignments_proto_rawDescGZIP() []byte {
	file_eureka_v1_assignments_proto_rawDescOnce.Do(func() {
		file_eureka_v1_assignments_proto_rawDescData = protoimpl.X.CompressGZIP(file_eureka_v1_assignments_proto_rawDescData)
	})
	return file_eureka_v1_assignments_proto_rawDescData
}

var file_eureka_v1_assignments_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eureka_v1_assignments_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_eureka_v1_assignments_proto_goTypes = []interface{}{
	(StudyPlanItemStatus)(0),          // 0: eureka.v1.StudyPlanItemStatus
	(SubmissionUnderstandingLevel)(0), // 1: eureka.v1.SubmissionUnderstandingLevel
	(*Comment)(nil),                   // 2: eureka.v1.Comment
	(*AssignmentSetting)(nil),         // 3: eureka.v1.AssignmentSetting
	(*CheckListItem)(nil),             // 4: eureka.v1.CheckListItem
	(*CheckList)(nil),                 // 5: eureka.v1.CheckList
	(*AssignmentContent)(nil),         // 6: eureka.v1.AssignmentContent
	(*AssignmentEvent)(nil),           // 7: eureka.v1.AssignmentEvent
	(*Assignment)(nil),                // 8: eureka.v1.Assignment
	(*ContentStructure)(nil),          // 9: eureka.v1.ContentStructure
	(*Content)(nil),                   // 10: eureka.v1.Content
	(*AssignmentWithDate)(nil),        // 11: eureka.v1.AssignmentWithDate
	(*StudyPlanItem)(nil),             // 12: eureka.v1.StudyPlanItem
	(*ToDoItem)(nil),                  // 13: eureka.v1.ToDoItem
	(*StudentSubmission)(nil),         // 14: eureka.v1.StudentSubmission
	(*StudyPlan)(nil),                 // 15: eureka.v1.StudyPlan
	(*SubmissionContent)(nil),         // 16: eureka.v1.SubmissionContent
	(*SubmissionGrade)(nil),           // 17: eureka.v1.SubmissionGrade
	(*AssignmentEvent_Assigned)(nil),  // 18: eureka.v1.AssignmentEvent.Assigned
	(*AssignmentEvent_Returned)(nil),  // 19: eureka.v1.AssignmentEvent.Returned
	(*AssignmentEvent_Submitted)(nil), // 20: eureka.v1.AssignmentEvent.Submitted
	(*AssignmentEvent_Updated)(nil),   // 21: eureka.v1.AssignmentEvent.Updated
	(*durationpb.Duration)(nil),       // 22: google.protobuf.Duration
	(AssignmentType)(0),               // 23: eureka.v1.AssignmentType
	(AssignmentStatus)(0),             // 24: eureka.v1.AssignmentStatus
	(*wrapperspb.StringValue)(nil),    // 25: google.protobuf.StringValue
	(ContentType)(0),                  // 26: eureka.v1.ContentType
	(*timestamppb.Timestamp)(nil),     // 27: google.protobuf.Timestamp
	(ToDoItemType)(0),                 // 28: eureka.v1.ToDoItemType
	(ToDoStatus)(0),                   // 29: eureka.v1.ToDoStatus
	(SubmissionStatus)(0),             // 30: eureka.v1.SubmissionStatus
	(StudyPlanStatus)(0),              // 31: eureka.v1.StudyPlanStatus
}
var file_eureka_v1_assignments_proto_depIdxs = []int32{
	22, // 0: eureka.v1.Comment.duration:type_name -> google.protobuf.Duration
	4,  // 1: eureka.v1.CheckList.items:type_name -> eureka.v1.CheckListItem
	18, // 2: eureka.v1.AssignmentEvent.assigned:type_name -> eureka.v1.AssignmentEvent.Assigned
	19, // 3: eureka.v1.AssignmentEvent.returned:type_name -> eureka.v1.AssignmentEvent.Returned
	20, // 4: eureka.v1.AssignmentEvent.submitted:type_name -> eureka.v1.AssignmentEvent.Submitted
	21, // 5: eureka.v1.AssignmentEvent.updated:type_name -> eureka.v1.AssignmentEvent.Updated
	6,  // 6: eureka.v1.Assignment.content:type_name -> eureka.v1.AssignmentContent
	23, // 7: eureka.v1.Assignment.assignment_type:type_name -> eureka.v1.AssignmentType
	3,  // 8: eureka.v1.Assignment.setting:type_name -> eureka.v1.AssignmentSetting
	24, // 9: eureka.v1.Assignment.assignment_status:type_name -> eureka.v1.AssignmentStatus
	5,  // 10: eureka.v1.Assignment.check_list:type_name -> eureka.v1.CheckList
	25, // 11: eureka.v1.ContentStructure.assignment_id:type_name -> google.protobuf.StringValue
	25, // 12: eureka.v1.ContentStructure.lo_id:type_name -> google.protobuf.StringValue
	12, // 13: eureka.v1.Content.study_plan_item:type_name -> eureka.v1.StudyPlanItem
	26, // 14: eureka.v1.Content.type:type_name -> eureka.v1.ContentType
	8,  // 15: eureka.v1.AssignmentWithDate.assignment:type_name -> eureka.v1.Assignment
	12, // 16: eureka.v1.AssignmentWithDate.study_plan_item:type_name -> eureka.v1.StudyPlanItem
	27, // 17: eureka.v1.StudyPlanItem.available_from:type_name -> google.protobuf.Timestamp
	27, // 18: eureka.v1.StudyPlanItem.available_to:type_name -> google.protobuf.Timestamp
	27, // 19: eureka.v1.StudyPlanItem.start_date:type_name -> google.protobuf.Timestamp
	27, // 20: eureka.v1.StudyPlanItem.end_date:type_name -> google.protobuf.Timestamp
	9,  // 21: eureka.v1.StudyPlanItem.content_structure:type_name -> eureka.v1.ContentStructure
	27, // 22: eureka.v1.StudyPlanItem.completed_at:type_name -> google.protobuf.Timestamp
	0,  // 23: eureka.v1.StudyPlanItem.status:type_name -> eureka.v1.StudyPlanItemStatus
	27, // 24: eureka.v1.StudyPlanItem.school_date:type_name -> google.protobuf.Timestamp
	12, // 25: eureka.v1.ToDoItem.study_plan_item:type_name -> eureka.v1.StudyPlanItem
	28, // 26: eureka.v1.ToDoItem.type:type_name -> eureka.v1.ToDoItemType
	29, // 27: eureka.v1.ToDoItem.status:type_name -> eureka.v1.ToDoStatus
	16, // 28: eureka.v1.StudentSubmission.submission_content:type_name -> eureka.v1.SubmissionContent
	27, // 29: eureka.v1.StudentSubmission.created_at:type_name -> google.protobuf.Timestamp
	27, // 30: eureka.v1.StudentSubmission.updated_at:type_name -> google.protobuf.Timestamp
	30, // 31: eureka.v1.StudentSubmission.status:type_name -> eureka.v1.SubmissionStatus
	25, // 32: eureka.v1.StudentSubmission.submission_grade_id:type_name -> google.protobuf.StringValue
	27, // 33: eureka.v1.StudentSubmission.start_date:type_name -> google.protobuf.Timestamp
	27, // 34: eureka.v1.StudentSubmission.end_date:type_name -> google.protobuf.Timestamp
	27, // 35: eureka.v1.StudentSubmission.complete_date:type_name -> google.protobuf.Timestamp
	1,  // 36: eureka.v1.StudentSubmission.understanding_level:type_name -> eureka.v1.SubmissionUnderstandingLevel
	31, // 37: eureka.v1.StudyPlan.status:type_name -> eureka.v1.StudyPlanStatus
	16, // 38: eureka.v1.SubmissionGrade.grade_content:type_name -> eureka.v1.SubmissionContent
	27, // 39: eureka.v1.AssignmentEvent.Updated.start_date:type_name -> google.protobuf.Timestamp
	27, // 40: eureka.v1.AssignmentEvent.Updated.end_date:type_name -> google.protobuf.Timestamp
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_eureka_v1_assignments_proto_init() }
func file_eureka_v1_assignments_proto_init() {
	if File_eureka_v1_assignments_proto != nil {
		return
	}
	file_eureka_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eureka_v1_assignments_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentStructure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentWithDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlanItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToDoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentSubmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionGrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentEvent_Assigned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentEvent_Returned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentEvent_Submitted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eureka_v1_assignments_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentEvent_Updated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eureka_v1_assignments_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AssignmentEvent_Assigned_)(nil),
		(*AssignmentEvent_Returned_)(nil),
		(*AssignmentEvent_Submitted_)(nil),
		(*AssignmentEvent_Updated_)(nil),
	}
	file_eureka_v1_assignments_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ContentStructure_AssignmentId)(nil),
		(*ContentStructure_LoId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eureka_v1_assignments_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eureka_v1_assignments_proto_goTypes,
		DependencyIndexes: file_eureka_v1_assignments_proto_depIdxs,
		EnumInfos:         file_eureka_v1_assignments_proto_enumTypes,
		MessageInfos:      file_eureka_v1_assignments_proto_msgTypes,
	}.Build()
	File_eureka_v1_assignments_proto = out.File
	file_eureka_v1_assignments_proto_rawDesc = nil
	file_eureka_v1_assignments_proto_goTypes = nil
	file_eureka_v1_assignments_proto_depIdxs = nil
}
