// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package tpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// LessonChatModifierServiceClient is the client API for LessonChatModifierService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LessonChatModifierServiceClient interface {
	CreateLiveLessonPrivateConversation(ctx context.Context, in *CreateLiveLessonPrivateConversationRequest, opts ...grpc.CallOption) (*CreateLiveLessonPrivateConversationResponse, error)
}

type lessonChatModifierServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLessonChatModifierServiceClient(cc grpc.ClientConnInterface) LessonChatModifierServiceClient {
	return &lessonChatModifierServiceClient{cc}
}

func (c *lessonChatModifierServiceClient) CreateLiveLessonPrivateConversation(ctx context.Context, in *CreateLiveLessonPrivateConversationRequest, opts ...grpc.CallOption) (*CreateLiveLessonPrivateConversationResponse, error) {
	out := new(CreateLiveLessonPrivateConversationResponse)
	err := c.cc.Invoke(ctx, "/tom.v1.LessonChatModifierService/CreateLiveLessonPrivateConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LessonChatModifierServiceServer is the server API for LessonChatModifierService service.
// All implementations should embed UnimplementedLessonChatModifierServiceServer
// for forward compatibility
type LessonChatModifierServiceServer interface {
	CreateLiveLessonPrivateConversation(context.Context, *CreateLiveLessonPrivateConversationRequest) (*CreateLiveLessonPrivateConversationResponse, error)
}

// UnimplementedLessonChatModifierServiceServer should be embedded to have forward compatible implementations.
type UnimplementedLessonChatModifierServiceServer struct {
}

func (UnimplementedLessonChatModifierServiceServer) CreateLiveLessonPrivateConversation(context.Context, *CreateLiveLessonPrivateConversationRequest) (*CreateLiveLessonPrivateConversationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLiveLessonPrivateConversation not implemented")
}

// UnsafeLessonChatModifierServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LessonChatModifierServiceServer will
// result in compilation errors.
type UnsafeLessonChatModifierServiceServer interface {
	mustEmbedUnimplementedLessonChatModifierServiceServer()
}

func RegisterLessonChatModifierServiceServer(s grpc.ServiceRegistrar, srv LessonChatModifierServiceServer) {
	s.RegisterService(&_LessonChatModifierService_serviceDesc, srv)
}

func _LessonChatModifierService_CreateLiveLessonPrivateConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLiveLessonPrivateConversationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LessonChatModifierServiceServer).CreateLiveLessonPrivateConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tom.v1.LessonChatModifierService/CreateLiveLessonPrivateConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LessonChatModifierServiceServer).CreateLiveLessonPrivateConversation(ctx, req.(*CreateLiveLessonPrivateConversationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LessonChatModifierService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tom.v1.LessonChatModifierService",
	HandlerType: (*LessonChatModifierServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLiveLessonPrivateConversation",
			Handler:    _LessonChatModifierService_CreateLiveLessonPrivateConversation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tom/v1/lesson_chat_modifier.proto",
}
