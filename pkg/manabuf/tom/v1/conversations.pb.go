// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: tom/v1/conversations.proto

package tpb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId      string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	UserId         string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// may be contain CodesMessageType if MessageType == event or button
	Content        string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	UrlMedia       string                 `protobuf:"bytes,5,opt,name=url_media,json=urlMedia,proto3" json:"url_media,omitempty"`
	Type           MessageType            `protobuf:"varint,6,opt,name=type,proto3,enum=tom.v1.MessageType" json:"type,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LocalMessageId string                 `protobuf:"bytes,8,opt,name=local_message_id,json=localMessageId,proto3" json:"local_message_id,omitempty"`
	TargetUser     string                 `protobuf:"bytes,9,opt,name=target_user,json=targetUser,proto3" json:"target_user,omitempty"`
	IsDeleted      bool                   `protobuf:"varint,10,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	DeletedBy      string                 `protobuf:"bytes,11,opt,name=deleted_by,json=deletedBy,proto3" json:"deleted_by,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *MessageResponse) Reset() {
	*x = MessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_conversations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageResponse) ProtoMessage() {}

func (x *MessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_conversations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageResponse.ProtoReflect.Descriptor instead.
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_conversations_proto_rawDescGZIP(), []int{0}
}

func (x *MessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageResponse) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *MessageResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageResponse) GetUrlMedia() string {
	if x != nil {
		return x.UrlMedia
	}
	return ""
}

func (x *MessageResponse) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MESSAGE_TYPE_TEXT
}

func (x *MessageResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MessageResponse) GetLocalMessageId() string {
	if x != nil {
		return x.LocalMessageId
	}
	return ""
}

func (x *MessageResponse) GetTargetUser() string {
	if x != nil {
		return x.TargetUser
	}
	return ""
}

func (x *MessageResponse) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *MessageResponse) GetDeletedBy() string {
	if x != nil {
		return x.DeletedBy
	}
	return ""
}

func (x *MessageResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type EventPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventPing) Reset() {
	*x = EventPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_conversations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPing) ProtoMessage() {}

func (x *EventPing) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_conversations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPing.ProtoReflect.Descriptor instead.
func (*EventPing) Descriptor() ([]byte, []int) {
	return file_tom_v1_conversations_proto_rawDescGZIP(), []int{1}
}

type EventDeleteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	MessageId      string `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	DeletedBy      string `protobuf:"bytes,3,opt,name=deleted_by,json=deletedBy,proto3" json:"deleted_by,omitempty"`
}

func (x *EventDeleteMessage) Reset() {
	*x = EventDeleteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_conversations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDeleteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDeleteMessage) ProtoMessage() {}

func (x *EventDeleteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_conversations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDeleteMessage.ProtoReflect.Descriptor instead.
func (*EventDeleteMessage) Descriptor() ([]byte, []int) {
	return file_tom_v1_conversations_proto_rawDescGZIP(), []int{2}
}

func (x *EventDeleteMessage) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *EventDeleteMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *EventDeleteMessage) GetDeletedBy() string {
	if x != nil {
		return x.DeletedBy
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*Event_EventNewMessage
	//	*Event_EventDeleteMessage
	//	*Event_EventPing
	Event isEvent_Event `protobuf_oneof:"event"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_conversations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_conversations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_tom_v1_conversations_proto_rawDescGZIP(), []int{3}
}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *Event) GetEventNewMessage() *MessageResponse {
	if x, ok := x.GetEvent().(*Event_EventNewMessage); ok {
		return x.EventNewMessage
	}
	return nil
}

func (x *Event) GetEventDeleteMessage() *EventDeleteMessage {
	if x, ok := x.GetEvent().(*Event_EventDeleteMessage); ok {
		return x.EventDeleteMessage
	}
	return nil
}

func (x *Event) GetEventPing() *EventPing {
	if x, ok := x.GetEvent().(*Event_EventPing); ok {
		return x.EventPing
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_EventNewMessage struct {
	EventNewMessage *MessageResponse `protobuf:"bytes,1,opt,name=event_new_message,json=eventNewMessage,proto3,oneof"`
}

type Event_EventDeleteMessage struct {
	EventDeleteMessage *EventDeleteMessage `protobuf:"bytes,2,opt,name=event_delete_message,json=eventDeleteMessage,proto3,oneof"`
}

type Event_EventPing struct {
	EventPing *EventPing `protobuf:"bytes,3,opt,name=event_ping,json=eventPing,proto3,oneof"`
}

func (*Event_EventNewMessage) isEvent_Event() {}

func (*Event_EventDeleteMessage) isEvent_Event() {}

func (*Event_EventPing) isEvent_Event() {}

type StreamingEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*StreamingEventResponse_EventNewMessage
	//	*StreamingEventResponse_EventDeleteMessage
	//	*StreamingEventResponse_EventPing
	Event isStreamingEventResponse_Event `protobuf_oneof:"event"`
}

func (x *StreamingEventResponse) Reset() {
	*x = StreamingEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_conversations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingEventResponse) ProtoMessage() {}

func (x *StreamingEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_conversations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingEventResponse.ProtoReflect.Descriptor instead.
func (*StreamingEventResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_conversations_proto_rawDescGZIP(), []int{4}
}

func (m *StreamingEventResponse) GetEvent() isStreamingEventResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *StreamingEventResponse) GetEventNewMessage() *MessageResponse {
	if x, ok := x.GetEvent().(*StreamingEventResponse_EventNewMessage); ok {
		return x.EventNewMessage
	}
	return nil
}

func (x *StreamingEventResponse) GetEventDeleteMessage() *EventDeleteMessage {
	if x, ok := x.GetEvent().(*StreamingEventResponse_EventDeleteMessage); ok {
		return x.EventDeleteMessage
	}
	return nil
}

func (x *StreamingEventResponse) GetEventPing() *EventPing {
	if x, ok := x.GetEvent().(*StreamingEventResponse_EventPing); ok {
		return x.EventPing
	}
	return nil
}

type isStreamingEventResponse_Event interface {
	isStreamingEventResponse_Event()
}

type StreamingEventResponse_EventNewMessage struct {
	EventNewMessage *MessageResponse `protobuf:"bytes,1,opt,name=event_new_message,json=eventNewMessage,proto3,oneof"`
}

type StreamingEventResponse_EventDeleteMessage struct {
	EventDeleteMessage *EventDeleteMessage `protobuf:"bytes,2,opt,name=event_delete_message,json=eventDeleteMessage,proto3,oneof"`
}

type StreamingEventResponse_EventPing struct {
	EventPing *EventPing `protobuf:"bytes,3,opt,name=event_ping,json=eventPing,proto3,oneof"`
}

func (*StreamingEventResponse_EventNewMessage) isStreamingEventResponse_Event() {}

func (*StreamingEventResponse_EventDeleteMessage) isStreamingEventResponse_Event() {}

func (*StreamingEventResponse_EventPing) isStreamingEventResponse_Event() {}

type Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// Deprecated: Do not use.
	CoachId   string `protobuf:"bytes,2,opt,name=coach_id,json=coachId,proto3" json:"coach_id,omitempty"`
	StudentId string `protobuf:"bytes,3,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	// Deprecated: Do not use.
	GuestIds    []string         `protobuf:"bytes,4,rep,name=guest_ids,json=guestIds,proto3" json:"guest_ids,omitempty"`
	Seen        bool             `protobuf:"varint,5,opt,name=seen,proto3" json:"seen,omitempty"`
	LastMessage *MessageResponse `protobuf:"bytes,6,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	// Deprecated: Do not use.
	TutorId           string             `protobuf:"bytes,7,opt,name=tutor_id,json=tutorId,proto3" json:"tutor_id,omitempty"`
	StudentQuestionId string             `protobuf:"bytes,8,opt,name=student_question_id,json=studentQuestionId,proto3" json:"student_question_id,omitempty"`
	Status            ConversationStatus `protobuf:"varint,9,opt,name=status,proto3,enum=tom.v1.ConversationStatus" json:"status,omitempty"`
	// Deprecated: Do not use.
	PreviousCoachIds          []string                  `protobuf:"bytes,10,rep,name=previous_coach_ids,json=previousCoachIds,proto3" json:"previous_coach_ids,omitempty"`
	Users                     []*Conversation_User      `protobuf:"bytes,11,rep,name=users,proto3" json:"users,omitempty"`
	ClassId                   uint32                    `protobuf:"varint,12,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	ConversationType          ConversationType          `protobuf:"varint,13,opt,name=conversation_type,json=conversationType,proto3,enum=tom.v1.ConversationType" json:"conversation_type,omitempty"`
	TeacherConversationStatus TeacherConversationStatus `protobuf:"varint,14,opt,name=teacher_conversation_status,json=teacherConversationStatus,proto3,enum=tom.v1.TeacherConversationStatus" json:"teacher_conversation_status,omitempty"`
	ConversationName          string                    `protobuf:"bytes,15,opt,name=conversation_name,json=conversationName,proto3" json:"conversation_name,omitempty"`
	IsReplied                 bool                      `protobuf:"varint,16,opt,name=is_replied,json=isReplied,proto3" json:"is_replied,omitempty"`
	Owner                     string                    `protobuf:"bytes,17,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_conversations_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_conversations_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_tom_v1_conversations_proto_rawDescGZIP(), []int{5}
}

func (x *Conversation) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

// Deprecated: Do not use.
func (x *Conversation) GetCoachId() string {
	if x != nil {
		return x.CoachId
	}
	return ""
}

func (x *Conversation) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

// Deprecated: Do not use.
func (x *Conversation) GetGuestIds() []string {
	if x != nil {
		return x.GuestIds
	}
	return nil
}

func (x *Conversation) GetSeen() bool {
	if x != nil {
		return x.Seen
	}
	return false
}

func (x *Conversation) GetLastMessage() *MessageResponse {
	if x != nil {
		return x.LastMessage
	}
	return nil
}

// Deprecated: Do not use.
func (x *Conversation) GetTutorId() string {
	if x != nil {
		return x.TutorId
	}
	return ""
}

func (x *Conversation) GetStudentQuestionId() string {
	if x != nil {
		return x.StudentQuestionId
	}
	return ""
}

func (x *Conversation) GetStatus() ConversationStatus {
	if x != nil {
		return x.Status
	}
	return ConversationStatus_CONVERSATION_STATUS_NONE
}

// Deprecated: Do not use.
func (x *Conversation) GetPreviousCoachIds() []string {
	if x != nil {
		return x.PreviousCoachIds
	}
	return nil
}

func (x *Conversation) GetUsers() []*Conversation_User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Conversation) GetClassId() uint32 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *Conversation) GetConversationType() ConversationType {
	if x != nil {
		return x.ConversationType
	}
	return ConversationType_CONVERSATION_CLASS
}

func (x *Conversation) GetTeacherConversationStatus() TeacherConversationStatus {
	if x != nil {
		return x.TeacherConversationStatus
	}
	return TeacherConversationStatus_TEACHER_CONVERSATION_STATUS_NONE
}

func (x *Conversation) GetConversationName() string {
	if x != nil {
		return x.ConversationName
	}
	return ""
}

func (x *Conversation) GetIsReplied() bool {
	if x != nil {
		return x.IsReplied
	}
	return false
}

func (x *Conversation) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

// only for server
type InternalSendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds     []string        `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	ReceiveHost map[string]bool `protobuf:"bytes,2,rep,name=receive_host,json=receiveHost,proto3" json:"receive_host,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Event       *Event          `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *InternalSendMessageRequest) Reset() {
	*x = InternalSendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_conversations_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalSendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalSendMessageRequest) ProtoMessage() {}

func (x *InternalSendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_conversations_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalSendMessageRequest.ProtoReflect.Descriptor instead.
func (*InternalSendMessageRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_conversations_proto_rawDescGZIP(), []int{6}
}

func (x *InternalSendMessageRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *InternalSendMessageRequest) GetReceiveHost() map[string]bool {
	if x != nil {
		return x.ReceiveHost
	}
	return nil
}

func (x *InternalSendMessageRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type Conversation_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Group     v1.UserGroup           `protobuf:"varint,2,opt,name=group,proto3,enum=common.v1.UserGroup" json:"group,omitempty"`
	IsPresent bool                   `protobuf:"varint,3,opt,name=is_present,json=isPresent,proto3" json:"is_present,omitempty"`
	SeenAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=seen_at,json=seenAt,proto3" json:"seen_at,omitempty"`
}

func (x *Conversation_User) Reset() {
	*x = Conversation_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_conversations_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conversation_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation_User) ProtoMessage() {}

func (x *Conversation_User) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_conversations_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation_User.ProtoReflect.Descriptor instead.
func (*Conversation_User) Descriptor() ([]byte, []int) {
	return file_tom_v1_conversations_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Conversation_User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Conversation_User) GetGroup() v1.UserGroup {
	if x != nil {
		return x.Group
	}
	return v1.UserGroup_USER_GROUP_NONE
}

func (x *Conversation_User) GetIsPresent() bool {
	if x != nil {
		return x.IsPresent
	}
	return false
}

func (x *Conversation_User) GetSeenAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SeenAt
	}
	return nil
}

var File_tom_v1_conversations_proto protoreflect.FileDescriptor

var file_tom_v1_conversations_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x74, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x12, 0x74, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x03, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x72, 0x6c, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x72, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12,
	0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x50, 0x69, 0x6e, 0x67, 0x22, 0x7b, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x22, 0xdb, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4e, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x12,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0xec, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x4e, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x12, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x50, 0x69, 0x6e, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x8c,
	0x07, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x63, 0x6f, 0x61, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07,
	0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x09, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x65, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x08, 0x74, 0x75, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x74,
	0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x12, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x61, 0x0a, 0x1b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x19, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x1a, 0x96, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x65, 0x65, 0x6e,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x73, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x22, 0xf4, 0x01,
	0x0a, 0x1a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x56, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x1a, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tom_v1_conversations_proto_rawDescOnce sync.Once
	file_tom_v1_conversations_proto_rawDescData = file_tom_v1_conversations_proto_rawDesc
)

func file_tom_v1_conversations_proto_rawDescGZIP() []byte {
	file_tom_v1_conversations_proto_rawDescOnce.Do(func() {
		file_tom_v1_conversations_proto_rawDescData = protoimpl.X.CompressGZIP(file_tom_v1_conversations_proto_rawDescData)
	})
	return file_tom_v1_conversations_proto_rawDescData
}

var file_tom_v1_conversations_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_tom_v1_conversations_proto_goTypes = []interface{}{
	(*MessageResponse)(nil),            // 0: tom.v1.MessageResponse
	(*EventPing)(nil),                  // 1: tom.v1.EventPing
	(*EventDeleteMessage)(nil),         // 2: tom.v1.EventDeleteMessage
	(*Event)(nil),                      // 3: tom.v1.Event
	(*StreamingEventResponse)(nil),     // 4: tom.v1.StreamingEventResponse
	(*Conversation)(nil),               // 5: tom.v1.Conversation
	(*InternalSendMessageRequest)(nil), // 6: tom.v1.InternalSendMessageRequest
	(*Conversation_User)(nil),          // 7: tom.v1.Conversation.User
	nil,                                // 8: tom.v1.InternalSendMessageRequest.ReceiveHostEntry
	(MessageType)(0),                   // 9: tom.v1.MessageType
	(*timestamppb.Timestamp)(nil),      // 10: google.protobuf.Timestamp
	(ConversationStatus)(0),            // 11: tom.v1.ConversationStatus
	(ConversationType)(0),              // 12: tom.v1.ConversationType
	(TeacherConversationStatus)(0),     // 13: tom.v1.TeacherConversationStatus
	(v1.UserGroup)(0),                  // 14: common.v1.UserGroup
}
var file_tom_v1_conversations_proto_depIdxs = []int32{
	9,  // 0: tom.v1.MessageResponse.type:type_name -> tom.v1.MessageType
	10, // 1: tom.v1.MessageResponse.created_at:type_name -> google.protobuf.Timestamp
	10, // 2: tom.v1.MessageResponse.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 3: tom.v1.Event.event_new_message:type_name -> tom.v1.MessageResponse
	2,  // 4: tom.v1.Event.event_delete_message:type_name -> tom.v1.EventDeleteMessage
	1,  // 5: tom.v1.Event.event_ping:type_name -> tom.v1.EventPing
	0,  // 6: tom.v1.StreamingEventResponse.event_new_message:type_name -> tom.v1.MessageResponse
	2,  // 7: tom.v1.StreamingEventResponse.event_delete_message:type_name -> tom.v1.EventDeleteMessage
	1,  // 8: tom.v1.StreamingEventResponse.event_ping:type_name -> tom.v1.EventPing
	0,  // 9: tom.v1.Conversation.last_message:type_name -> tom.v1.MessageResponse
	11, // 10: tom.v1.Conversation.status:type_name -> tom.v1.ConversationStatus
	7,  // 11: tom.v1.Conversation.users:type_name -> tom.v1.Conversation.User
	12, // 12: tom.v1.Conversation.conversation_type:type_name -> tom.v1.ConversationType
	13, // 13: tom.v1.Conversation.teacher_conversation_status:type_name -> tom.v1.TeacherConversationStatus
	8,  // 14: tom.v1.InternalSendMessageRequest.receive_host:type_name -> tom.v1.InternalSendMessageRequest.ReceiveHostEntry
	3,  // 15: tom.v1.InternalSendMessageRequest.event:type_name -> tom.v1.Event
	14, // 16: tom.v1.Conversation.User.group:type_name -> common.v1.UserGroup
	10, // 17: tom.v1.Conversation.User.seen_at:type_name -> google.protobuf.Timestamp
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_tom_v1_conversations_proto_init() }
func file_tom_v1_conversations_proto_init() {
	if File_tom_v1_conversations_proto != nil {
		return
	}
	file_tom_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tom_v1_conversations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_conversations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_conversations_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDeleteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_conversations_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_conversations_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_conversations_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_conversations_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalSendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_conversations_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conversation_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tom_v1_conversations_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Event_EventNewMessage)(nil),
		(*Event_EventDeleteMessage)(nil),
		(*Event_EventPing)(nil),
	}
	file_tom_v1_conversations_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*StreamingEventResponse_EventNewMessage)(nil),
		(*StreamingEventResponse_EventDeleteMessage)(nil),
		(*StreamingEventResponse_EventPing)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tom_v1_conversations_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tom_v1_conversations_proto_goTypes,
		DependencyIndexes: file_tom_v1_conversations_proto_depIdxs,
		MessageInfos:      file_tom_v1_conversations_proto_msgTypes,
	}.Build()
	File_tom_v1_conversations_proto = out.File
	file_tom_v1_conversations_proto_rawDesc = nil
	file_tom_v1_conversations_proto_goTypes = nil
	file_tom_v1_conversations_proto_depIdxs = nil
}
