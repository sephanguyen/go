// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: tom/v1/chat_reader.proto

package tpb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListConversationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	// optional
	ClassId uint32 `protobuf:"varint,2,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
}

func (x *ListConversationsRequest) Reset() {
	*x = ListConversationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsRequest) ProtoMessage() {}

func (x *ListConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsRequest.ProtoReflect.Descriptor instead.
func (*ListConversationsRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{0}
}

func (x *ListConversationsRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListConversationsRequest) GetClassId() uint32 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

type ListConversationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage *v1.Paging      `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Items    []*Conversation `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListConversationsResponse) Reset() {
	*x = ListConversationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsResponse) ProtoMessage() {}

func (x *ListConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsResponse.ProtoReflect.Descriptor instead.
func (*ListConversationsResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{1}
}

func (x *ListConversationsResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ListConversationsResponse) GetItems() []*Conversation {
	if x != nil {
		return x.Items
	}
	return nil
}

type ConversationByStudentQuestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentQuestionIds []string `protobuf:"bytes,1,rep,name=student_question_ids,json=studentQuestionIds,proto3" json:"student_question_ids,omitempty"`
}

func (x *ConversationByStudentQuestionsRequest) Reset() {
	*x = ConversationByStudentQuestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationByStudentQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationByStudentQuestionsRequest) ProtoMessage() {}

func (x *ConversationByStudentQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationByStudentQuestionsRequest.ProtoReflect.Descriptor instead.
func (*ConversationByStudentQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{2}
}

func (x *ConversationByStudentQuestionsRequest) GetStudentQuestionIds() []string {
	if x != nil {
		return x.StudentQuestionIds
	}
	return nil
}

type ConversationByStudentQuestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversations []*Conversation `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
}

func (x *ConversationByStudentQuestionsResponse) Reset() {
	*x = ConversationByStudentQuestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationByStudentQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationByStudentQuestionsResponse) ProtoMessage() {}

func (x *ConversationByStudentQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationByStudentQuestionsResponse.ProtoReflect.Descriptor instead.
func (*ConversationByStudentQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{3}
}

func (x *ConversationByStudentQuestionsResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type ConversationByClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging  *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	ClassId uint32     `protobuf:"varint,2,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
}

func (x *ConversationByClassRequest) Reset() {
	*x = ConversationByClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationByClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationByClassRequest) ProtoMessage() {}

func (x *ConversationByClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationByClassRequest.ProtoReflect.Descriptor instead.
func (*ConversationByClassRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{4}
}

func (x *ConversationByClassRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ConversationByClassRequest) GetClassId() uint32 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

type ConversationByClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage *v1.Paging      `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Items    []*Conversation `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ConversationByClassResponse) Reset() {
	*x = ConversationByClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationByClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationByClassResponse) ProtoMessage() {}

func (x *ConversationByClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationByClassResponse.ProtoReflect.Descriptor instead.
func (*ConversationByClassResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{5}
}

func (x *ConversationByClassResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ConversationByClassResponse) GetItems() []*Conversation {
	if x != nil {
		return x.Items
	}
	return nil
}

type RetrieveConversationMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging         *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	ConversationId string     `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
}

func (x *RetrieveConversationMessagesRequest) Reset() {
	*x = RetrieveConversationMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveConversationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveConversationMessagesRequest) ProtoMessage() {}

func (x *RetrieveConversationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveConversationMessagesRequest.ProtoReflect.Descriptor instead.
func (*RetrieveConversationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{6}
}

func (x *RetrieveConversationMessagesRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RetrieveConversationMessagesRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type RetrieveConversationMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage *v1.Paging         `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Items    []*MessageResponse `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RetrieveConversationMessagesResponse) Reset() {
	*x = RetrieveConversationMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveConversationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveConversationMessagesResponse) ProtoMessage() {}

func (x *RetrieveConversationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveConversationMessagesResponse.ProtoReflect.Descriptor instead.
func (*RetrieveConversationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{7}
}

func (x *RetrieveConversationMessagesResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveConversationMessagesResponse) GetItems() []*MessageResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type PushedNotificationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body     string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Data     *structpb.Struct       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	PushedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=pushed_at,json=pushedAt,proto3" json:"pushed_at,omitempty"`
}

func (x *PushedNotificationMessage) Reset() {
	*x = PushedNotificationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushedNotificationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushedNotificationMessage) ProtoMessage() {}

func (x *PushedNotificationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushedNotificationMessage.ProtoReflect.Descriptor instead.
func (*PushedNotificationMessage) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{8}
}

func (x *PushedNotificationMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PushedNotificationMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *PushedNotificationMessage) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PushedNotificationMessage) GetPushedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PushedAt
	}
	return nil
}

type RetrievePushedNotificationMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging      *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	DeviceToken string     `protobuf:"bytes,2,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
}

func (x *RetrievePushedNotificationMessagesRequest) Reset() {
	*x = RetrievePushedNotificationMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePushedNotificationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePushedNotificationMessagesRequest) ProtoMessage() {}

func (x *RetrievePushedNotificationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePushedNotificationMessagesRequest.ProtoReflect.Descriptor instead.
func (*RetrievePushedNotificationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{9}
}

func (x *RetrievePushedNotificationMessagesRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RetrievePushedNotificationMessagesRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

type RetrievePushedNotificationMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage *v1.Paging                   `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Items    []*PushedNotificationMessage `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RetrievePushedNotificationMessagesResponse) Reset() {
	*x = RetrievePushedNotificationMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePushedNotificationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePushedNotificationMessagesResponse) ProtoMessage() {}

func (x *RetrievePushedNotificationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePushedNotificationMessagesResponse.ProtoReflect.Descriptor instead.
func (*RetrievePushedNotificationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{10}
}

func (x *RetrievePushedNotificationMessagesResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrievePushedNotificationMessagesResponse) GetItems() []*PushedNotificationMessage {
	if x != nil {
		return x.Items
	}
	return nil
}

type AutoCoachCustomMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	UrlMedia string `protobuf:"bytes,2,opt,name=url_media,json=urlMedia,proto3" json:"url_media,omitempty"`
}

func (x *AutoCoachCustomMessageRequest) Reset() {
	*x = AutoCoachCustomMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoCoachCustomMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoCoachCustomMessageRequest) ProtoMessage() {}

func (x *AutoCoachCustomMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoCoachCustomMessageRequest.ProtoReflect.Descriptor instead.
func (*AutoCoachCustomMessageRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{11}
}

func (x *AutoCoachCustomMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AutoCoachCustomMessageRequest) GetUrlMedia() string {
	if x != nil {
		return x.UrlMedia
	}
	return ""
}

type AutoCoachCustomMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *AutoCoachCustomMessageResponse) Reset() {
	*x = AutoCoachCustomMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoCoachCustomMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoCoachCustomMessageResponse) ProtoMessage() {}

func (x *AutoCoachCustomMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoCoachCustomMessageResponse.ProtoReflect.Descriptor instead.
func (*AutoCoachCustomMessageResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{12}
}

func (x *AutoCoachCustomMessageResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type TotalUserInConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // optional, if nil will use 2 field below
	LessonId       string `protobuf:"bytes,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *TotalUserInConversationRequest) Reset() {
	*x = TotalUserInConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalUserInConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalUserInConversationRequest) ProtoMessage() {}

func (x *TotalUserInConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalUserInConversationRequest.ProtoReflect.Descriptor instead.
func (*TotalUserInConversationRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{13}
}

func (x *TotalUserInConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *TotalUserInConversationRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type TotalUserInConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalUser uint32 `protobuf:"varint,1,opt,name=total_user,json=totalUser,proto3" json:"total_user,omitempty"`
}

func (x *TotalUserInConversationResponse) Reset() {
	*x = TotalUserInConversationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalUserInConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalUserInConversationResponse) ProtoMessage() {}

func (x *TotalUserInConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalUserInConversationResponse.ProtoReflect.Descriptor instead.
func (*TotalUserInConversationResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{14}
}

func (x *TotalUserInConversationResponse) GetTotalUser() uint32 {
	if x != nil {
		return x.TotalUser
	}
	return 0
}

type ConversationByLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging   *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	LessonId string     `protobuf:"bytes,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *ConversationByLessonRequest) Reset() {
	*x = ConversationByLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationByLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationByLessonRequest) ProtoMessage() {}

func (x *ConversationByLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationByLessonRequest.ProtoReflect.Descriptor instead.
func (*ConversationByLessonRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{15}
}

func (x *ConversationByLessonRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ConversationByLessonRequest) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type ConversationByLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage *v1.Paging      `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Items    []*Conversation `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ConversationByLessonResponse) Reset() {
	*x = ConversationByLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationByLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationByLessonResponse) ProtoMessage() {}

func (x *ConversationByLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationByLessonResponse.ProtoReflect.Descriptor instead.
func (*ConversationByLessonResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{16}
}

func (x *ConversationByLessonResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ConversationByLessonResponse) GetItems() []*Conversation {
	if x != nil {
		return x.Items
	}
	return nil
}

type ConversationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationEventId string                  `protobuf:"bytes,1,opt,name=conversation_event_id,json=conversationEventId,proto3" json:"conversation_event_id,omitempty"`
	ConversationId      string                  `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	UserId              string                  `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventType           ConversationEventType   `protobuf:"varint,4,opt,name=event_type,json=eventType,proto3,enum=tom.v1.ConversationEventType" json:"event_type,omitempty"`
	Status              ConversationEventStatus `protobuf:"varint,5,opt,name=status,proto3,enum=tom.v1.ConversationEventStatus" json:"status,omitempty"`
	CreatedAt           *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp  `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ConversationEvent) Reset() {
	*x = ConversationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationEvent) ProtoMessage() {}

func (x *ConversationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationEvent.ProtoReflect.Descriptor instead.
func (*ConversationEvent) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{17}
}

func (x *ConversationEvent) GetConversationEventId() string {
	if x != nil {
		return x.ConversationEventId
	}
	return ""
}

func (x *ConversationEvent) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ConversationEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConversationEvent) GetEventType() ConversationEventType {
	if x != nil {
		return x.EventType
	}
	return ConversationEventType_CONVERSATION_EVENT_TYPE_NONE
}

func (x *ConversationEvent) GetStatus() ConversationEventStatus {
	if x != nil {
		return x.Status
	}
	return ConversationEventStatus_CONVERSATION_EVENT_STATUS_NONE
}

func (x *ConversationEvent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConversationEvent) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type RetrieveConversationEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging         *v1.Paging              `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	ConversationId string                  `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	EventType      ConversationEventType   `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=tom.v1.ConversationEventType" json:"event_type,omitempty"`
	Status         ConversationEventStatus `protobuf:"varint,4,opt,name=status,proto3,enum=tom.v1.ConversationEventStatus" json:"status,omitempty"`
}

func (x *RetrieveConversationEventsRequest) Reset() {
	*x = RetrieveConversationEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveConversationEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveConversationEventsRequest) ProtoMessage() {}

func (x *RetrieveConversationEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveConversationEventsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveConversationEventsRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{18}
}

func (x *RetrieveConversationEventsRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RetrieveConversationEventsRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *RetrieveConversationEventsRequest) GetEventType() ConversationEventType {
	if x != nil {
		return x.EventType
	}
	return ConversationEventType_CONVERSATION_EVENT_TYPE_NONE
}

func (x *RetrieveConversationEventsRequest) GetStatus() ConversationEventStatus {
	if x != nil {
		return x.Status
	}
	return ConversationEventStatus_CONVERSATION_EVENT_STATUS_NONE
}

type RetrieveConversationEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage           *v1.Paging           `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	ConversationEvents []*ConversationEvent `protobuf:"bytes,2,rep,name=conversation_events,json=conversationEvents,proto3" json:"conversation_events,omitempty"`
}

func (x *RetrieveConversationEventsResponse) Reset() {
	*x = RetrieveConversationEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveConversationEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveConversationEventsResponse) ProtoMessage() {}

func (x *RetrieveConversationEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveConversationEventsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveConversationEventsResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{19}
}

func (x *RetrieveConversationEventsResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveConversationEventsResponse) GetConversationEvents() []*ConversationEvent {
	if x != nil {
		return x.ConversationEvents
	}
	return nil
}

type RetrieveConversationMemberLatestEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId        string                  `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	UserId                string                  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ConversationEventType []ConversationEventType `protobuf:"varint,3,rep,packed,name=conversation_event_type,json=conversationEventType,proto3,enum=tom.v1.ConversationEventType" json:"conversation_event_type,omitempty"`
}

func (x *RetrieveConversationMemberLatestEventRequest) Reset() {
	*x = RetrieveConversationMemberLatestEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveConversationMemberLatestEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveConversationMemberLatestEventRequest) ProtoMessage() {}

func (x *RetrieveConversationMemberLatestEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveConversationMemberLatestEventRequest.ProtoReflect.Descriptor instead.
func (*RetrieveConversationMemberLatestEventRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{20}
}

func (x *RetrieveConversationMemberLatestEventRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *RetrieveConversationMemberLatestEventRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RetrieveConversationMemberLatestEventRequest) GetConversationEventType() []ConversationEventType {
	if x != nil {
		return x.ConversationEventType
	}
	return nil
}

type RetrieveConversationMemberLatestEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastEvent *ConversationEvent `protobuf:"bytes,1,opt,name=last_event,json=lastEvent,proto3" json:"last_event,omitempty"`
}

func (x *RetrieveConversationMemberLatestEventResponse) Reset() {
	*x = RetrieveConversationMemberLatestEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveConversationMemberLatestEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveConversationMemberLatestEventResponse) ProtoMessage() {}

func (x *RetrieveConversationMemberLatestEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveConversationMemberLatestEventResponse.ProtoReflect.Descriptor instead.
func (*RetrieveConversationMemberLatestEventResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{21}
}

func (x *RetrieveConversationMemberLatestEventResponse) GetLastEvent() *ConversationEvent {
	if x != nil {
		return x.LastEvent
	}
	return nil
}

type ListConversationsInSchoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging        *v1.Paging                `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	CourseIds     []string                  `protobuf:"bytes,2,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	Name          *wrapperspb.StringValue   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type          []ConversationType        `protobuf:"varint,4,rep,packed,name=type,proto3,enum=tom.v1.ConversationType" json:"type,omitempty"`
	TeacherStatus TeacherConversationStatus `protobuf:"varint,5,opt,name=teacher_status,json=teacherStatus,proto3,enum=tom.v1.TeacherConversationStatus" json:"teacher_status,omitempty"`
	JoinStatus    ConversationJoinStatus    `protobuf:"varint,6,opt,name=join_status,json=joinStatus,proto3,enum=tom.v1.ConversationJoinStatus" json:"join_status,omitempty"`
	LocationIds   []string                  `protobuf:"bytes,7,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *ListConversationsInSchoolRequest) Reset() {
	*x = ListConversationsInSchoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationsInSchoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsInSchoolRequest) ProtoMessage() {}

func (x *ListConversationsInSchoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsInSchoolRequest.ProtoReflect.Descriptor instead.
func (*ListConversationsInSchoolRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{22}
}

func (x *ListConversationsInSchoolRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListConversationsInSchoolRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *ListConversationsInSchoolRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ListConversationsInSchoolRequest) GetType() []ConversationType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ListConversationsInSchoolRequest) GetTeacherStatus() TeacherConversationStatus {
	if x != nil {
		return x.TeacherStatus
	}
	return TeacherConversationStatus_TEACHER_CONVERSATION_STATUS_NONE
}

func (x *ListConversationsInSchoolRequest) GetJoinStatus() ConversationJoinStatus {
	if x != nil {
		return x.JoinStatus
	}
	return ConversationJoinStatus_CONVERSATION_JOIN_STATUS_NONE
}

func (x *ListConversationsInSchoolRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type ListConversationsInSchoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage *v1.Paging      `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	Items    []*Conversation `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListConversationsInSchoolResponse) Reset() {
	*x = ListConversationsInSchoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationsInSchoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsInSchoolResponse) ProtoMessage() {}

func (x *ListConversationsInSchoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsInSchoolResponse.ProtoReflect.Descriptor instead.
func (*ListConversationsInSchoolResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{23}
}

func (x *ListConversationsInSchoolResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *ListConversationsInSchoolResponse) GetItems() []*Conversation {
	if x != nil {
		return x.Items
	}
	return nil
}

type RetrieveTotalUnreadMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RetrieveTotalUnreadMessageRequest) Reset() {
	*x = RetrieveTotalUnreadMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTotalUnreadMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTotalUnreadMessageRequest) ProtoMessage() {}

func (x *RetrieveTotalUnreadMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTotalUnreadMessageRequest.ProtoReflect.Descriptor instead.
func (*RetrieveTotalUnreadMessageRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{24}
}

func (x *RetrieveTotalUnreadMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RetrieveTotalUnreadMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalUnreadMessages int64 `protobuf:"varint,1,opt,name=total_unread_messages,json=totalUnreadMessages,proto3" json:"total_unread_messages,omitempty"`
}

func (x *RetrieveTotalUnreadMessageResponse) Reset() {
	*x = RetrieveTotalUnreadMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTotalUnreadMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTotalUnreadMessageResponse) ProtoMessage() {}

func (x *RetrieveTotalUnreadMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTotalUnreadMessageResponse.ProtoReflect.Descriptor instead.
func (*RetrieveTotalUnreadMessageResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{25}
}

func (x *RetrieveTotalUnreadMessageResponse) GetTotalUnreadMessages() int64 {
	if x != nil {
		return x.TotalUnreadMessages
	}
	return 0
}

type RetrieveTotalUnreadConversationsWithLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationIds []string `protobuf:"bytes,1,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *RetrieveTotalUnreadConversationsWithLocationsRequest) Reset() {
	*x = RetrieveTotalUnreadConversationsWithLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTotalUnreadConversationsWithLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTotalUnreadConversationsWithLocationsRequest) ProtoMessage() {}

func (x *RetrieveTotalUnreadConversationsWithLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTotalUnreadConversationsWithLocationsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveTotalUnreadConversationsWithLocationsRequest) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{26}
}

func (x *RetrieveTotalUnreadConversationsWithLocationsRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type RetrieveTotalUnreadConversationsWithLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalUnreadConversations int64 `protobuf:"varint,1,opt,name=total_unread_conversations,json=totalUnreadConversations,proto3" json:"total_unread_conversations,omitempty"`
}

func (x *RetrieveTotalUnreadConversationsWithLocationsResponse) Reset() {
	*x = RetrieveTotalUnreadConversationsWithLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTotalUnreadConversationsWithLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTotalUnreadConversationsWithLocationsResponse) ProtoMessage() {}

func (x *RetrieveTotalUnreadConversationsWithLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTotalUnreadConversationsWithLocationsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveTotalUnreadConversationsWithLocationsResponse) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{27}
}

func (x *RetrieveTotalUnreadConversationsWithLocationsResponse) GetTotalUnreadConversations() int64 {
	if x != nil {
		return x.TotalUnreadConversations
	}
	return 0
}

type GetConversationV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
}

func (x *GetConversationV2Request) Reset() {
	*x = GetConversationV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationV2Request) ProtoMessage() {}

func (x *GetConversationV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationV2Request.ProtoReflect.Descriptor instead.
func (*GetConversationV2Request) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{28}
}

func (x *GetConversationV2Request) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type GetConversationV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversation *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
}

func (x *GetConversationV2Response) Reset() {
	*x = GetConversationV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tom_v1_chat_reader_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationV2Response) ProtoMessage() {}

func (x *GetConversationV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_tom_v1_chat_reader_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationV2Response.ProtoReflect.Descriptor instead.
func (*GetConversationV2Response) Descriptor() ([]byte, []int) {
	return file_tom_v1_chat_reader_proto_rawDescGZIP(), []int{29}
}

func (x *GetConversationV2Response) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

var File_tom_v1_chat_reader_proto protoreflect.FileDescriptor

var file_tom_v1_chat_reader_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x1a, 0x12, 0x74, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x74, 0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x22, 0x77, 0x0a,
	0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x25, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x22, 0x64, 0x0a, 0x26, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x62, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x1b, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x79, 0x0a, 0x23, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x85, 0x01, 0x0a, 0x24, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x19, 0x50, 0x75,
	0x73, 0x68, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x37,
	0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70,
	0x75, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x22, 0x79, 0x0a, 0x29, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x2a, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x56, 0x0a, 0x1d, 0x41, 0x75,
	0x74, 0x6f, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x72, 0x6c, 0x5f, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x72, 0x6c, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x22, 0x40, 0x0a, 0x1e, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66,
	0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x66, 0x75, 0x6c, 0x22, 0x66, 0x0a, 0x1e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x1f,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x22, 0x65,
	0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xf6, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x74, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x21, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x22,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xc7,
	0x01, 0x0a, 0x2c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x55, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x69, 0x0a, 0x2d, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0xfa, 0x02, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x74, 0x6f, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0b,
	0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x22, 0x7f, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x3c, 0x0a, 0x21, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x58, 0x0a, 0x22, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x34, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x22, 0x75, 0x0a, 0x35, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x43, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x55, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x83, 0x0f, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x20, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x1c, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x73, 0x0a, 0x1a, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x29, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x1e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x2e, 0x74, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x22, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x12, 0x23, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x25, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x8b, 0x01, 0x0a, 0x22, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x74,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x25, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x2e,
	0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x28, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x49, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x26,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x1a, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x74, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x72, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x56, 0x32, 0x12,
	0x28, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0xac, 0x01, 0x0a, 0x2d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x12, 0x20, 0x2e, 0x74, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x6f, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x6f, 0x6d, 0x2f,
	0x76, 0x31, 0x3b, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tom_v1_chat_reader_proto_rawDescOnce sync.Once
	file_tom_v1_chat_reader_proto_rawDescData = file_tom_v1_chat_reader_proto_rawDesc
)

func file_tom_v1_chat_reader_proto_rawDescGZIP() []byte {
	file_tom_v1_chat_reader_proto_rawDescOnce.Do(func() {
		file_tom_v1_chat_reader_proto_rawDescData = protoimpl.X.CompressGZIP(file_tom_v1_chat_reader_proto_rawDescData)
	})
	return file_tom_v1_chat_reader_proto_rawDescData
}

var file_tom_v1_chat_reader_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_tom_v1_chat_reader_proto_goTypes = []interface{}{
	(*ListConversationsRequest)(nil),                              // 0: tom.v1.ListConversationsRequest
	(*ListConversationsResponse)(nil),                             // 1: tom.v1.ListConversationsResponse
	(*ConversationByStudentQuestionsRequest)(nil),                 // 2: tom.v1.ConversationByStudentQuestionsRequest
	(*ConversationByStudentQuestionsResponse)(nil),                // 3: tom.v1.ConversationByStudentQuestionsResponse
	(*ConversationByClassRequest)(nil),                            // 4: tom.v1.ConversationByClassRequest
	(*ConversationByClassResponse)(nil),                           // 5: tom.v1.ConversationByClassResponse
	(*RetrieveConversationMessagesRequest)(nil),                   // 6: tom.v1.RetrieveConversationMessagesRequest
	(*RetrieveConversationMessagesResponse)(nil),                  // 7: tom.v1.RetrieveConversationMessagesResponse
	(*PushedNotificationMessage)(nil),                             // 8: tom.v1.PushedNotificationMessage
	(*RetrievePushedNotificationMessagesRequest)(nil),             // 9: tom.v1.RetrievePushedNotificationMessagesRequest
	(*RetrievePushedNotificationMessagesResponse)(nil),            // 10: tom.v1.RetrievePushedNotificationMessagesResponse
	(*AutoCoachCustomMessageRequest)(nil),                         // 11: tom.v1.AutoCoachCustomMessageRequest
	(*AutoCoachCustomMessageResponse)(nil),                        // 12: tom.v1.AutoCoachCustomMessageResponse
	(*TotalUserInConversationRequest)(nil),                        // 13: tom.v1.TotalUserInConversationRequest
	(*TotalUserInConversationResponse)(nil),                       // 14: tom.v1.TotalUserInConversationResponse
	(*ConversationByLessonRequest)(nil),                           // 15: tom.v1.ConversationByLessonRequest
	(*ConversationByLessonResponse)(nil),                          // 16: tom.v1.ConversationByLessonResponse
	(*ConversationEvent)(nil),                                     // 17: tom.v1.ConversationEvent
	(*RetrieveConversationEventsRequest)(nil),                     // 18: tom.v1.RetrieveConversationEventsRequest
	(*RetrieveConversationEventsResponse)(nil),                    // 19: tom.v1.RetrieveConversationEventsResponse
	(*RetrieveConversationMemberLatestEventRequest)(nil),          // 20: tom.v1.RetrieveConversationMemberLatestEventRequest
	(*RetrieveConversationMemberLatestEventResponse)(nil),         // 21: tom.v1.RetrieveConversationMemberLatestEventResponse
	(*ListConversationsInSchoolRequest)(nil),                      // 22: tom.v1.ListConversationsInSchoolRequest
	(*ListConversationsInSchoolResponse)(nil),                     // 23: tom.v1.ListConversationsInSchoolResponse
	(*RetrieveTotalUnreadMessageRequest)(nil),                     // 24: tom.v1.RetrieveTotalUnreadMessageRequest
	(*RetrieveTotalUnreadMessageResponse)(nil),                    // 25: tom.v1.RetrieveTotalUnreadMessageResponse
	(*RetrieveTotalUnreadConversationsWithLocationsRequest)(nil),  // 26: tom.v1.RetrieveTotalUnreadConversationsWithLocationsRequest
	(*RetrieveTotalUnreadConversationsWithLocationsResponse)(nil), // 27: tom.v1.RetrieveTotalUnreadConversationsWithLocationsResponse
	(*GetConversationV2Request)(nil),                              // 28: tom.v1.GetConversationV2Request
	(*GetConversationV2Response)(nil),                             // 29: tom.v1.GetConversationV2Response
	(*v1.Paging)(nil),                                             // 30: common.v1.Paging
	(*Conversation)(nil),                                          // 31: tom.v1.Conversation
	(*MessageResponse)(nil),                                       // 32: tom.v1.MessageResponse
	(*structpb.Struct)(nil),                                       // 33: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),                                 // 34: google.protobuf.Timestamp
	(ConversationEventType)(0),                                    // 35: tom.v1.ConversationEventType
	(ConversationEventStatus)(0),                                  // 36: tom.v1.ConversationEventStatus
	(*wrapperspb.StringValue)(nil),                                // 37: google.protobuf.StringValue
	(ConversationType)(0),                                         // 38: tom.v1.ConversationType
	(TeacherConversationStatus)(0),                                // 39: tom.v1.TeacherConversationStatus
	(ConversationJoinStatus)(0),                                   // 40: tom.v1.ConversationJoinStatus
}
var file_tom_v1_chat_reader_proto_depIdxs = []int32{
	30, // 0: tom.v1.ListConversationsRequest.paging:type_name -> common.v1.Paging
	30, // 1: tom.v1.ListConversationsResponse.next_page:type_name -> common.v1.Paging
	31, // 2: tom.v1.ListConversationsResponse.items:type_name -> tom.v1.Conversation
	31, // 3: tom.v1.ConversationByStudentQuestionsResponse.conversations:type_name -> tom.v1.Conversation
	30, // 4: tom.v1.ConversationByClassRequest.paging:type_name -> common.v1.Paging
	30, // 5: tom.v1.ConversationByClassResponse.next_page:type_name -> common.v1.Paging
	31, // 6: tom.v1.ConversationByClassResponse.items:type_name -> tom.v1.Conversation
	30, // 7: tom.v1.RetrieveConversationMessagesRequest.paging:type_name -> common.v1.Paging
	30, // 8: tom.v1.RetrieveConversationMessagesResponse.next_page:type_name -> common.v1.Paging
	32, // 9: tom.v1.RetrieveConversationMessagesResponse.items:type_name -> tom.v1.MessageResponse
	33, // 10: tom.v1.PushedNotificationMessage.data:type_name -> google.protobuf.Struct
	34, // 11: tom.v1.PushedNotificationMessage.pushed_at:type_name -> google.protobuf.Timestamp
	30, // 12: tom.v1.RetrievePushedNotificationMessagesRequest.paging:type_name -> common.v1.Paging
	30, // 13: tom.v1.RetrievePushedNotificationMessagesResponse.next_page:type_name -> common.v1.Paging
	8,  // 14: tom.v1.RetrievePushedNotificationMessagesResponse.items:type_name -> tom.v1.PushedNotificationMessage
	30, // 15: tom.v1.ConversationByLessonRequest.paging:type_name -> common.v1.Paging
	30, // 16: tom.v1.ConversationByLessonResponse.next_page:type_name -> common.v1.Paging
	31, // 17: tom.v1.ConversationByLessonResponse.items:type_name -> tom.v1.Conversation
	35, // 18: tom.v1.ConversationEvent.event_type:type_name -> tom.v1.ConversationEventType
	36, // 19: tom.v1.ConversationEvent.status:type_name -> tom.v1.ConversationEventStatus
	34, // 20: tom.v1.ConversationEvent.created_at:type_name -> google.protobuf.Timestamp
	34, // 21: tom.v1.ConversationEvent.updated_at:type_name -> google.protobuf.Timestamp
	30, // 22: tom.v1.RetrieveConversationEventsRequest.paging:type_name -> common.v1.Paging
	35, // 23: tom.v1.RetrieveConversationEventsRequest.event_type:type_name -> tom.v1.ConversationEventType
	36, // 24: tom.v1.RetrieveConversationEventsRequest.status:type_name -> tom.v1.ConversationEventStatus
	30, // 25: tom.v1.RetrieveConversationEventsResponse.next_page:type_name -> common.v1.Paging
	17, // 26: tom.v1.RetrieveConversationEventsResponse.conversation_events:type_name -> tom.v1.ConversationEvent
	35, // 27: tom.v1.RetrieveConversationMemberLatestEventRequest.conversation_event_type:type_name -> tom.v1.ConversationEventType
	17, // 28: tom.v1.RetrieveConversationMemberLatestEventResponse.last_event:type_name -> tom.v1.ConversationEvent
	30, // 29: tom.v1.ListConversationsInSchoolRequest.paging:type_name -> common.v1.Paging
	37, // 30: tom.v1.ListConversationsInSchoolRequest.name:type_name -> google.protobuf.StringValue
	38, // 31: tom.v1.ListConversationsInSchoolRequest.type:type_name -> tom.v1.ConversationType
	39, // 32: tom.v1.ListConversationsInSchoolRequest.teacher_status:type_name -> tom.v1.TeacherConversationStatus
	40, // 33: tom.v1.ListConversationsInSchoolRequest.join_status:type_name -> tom.v1.ConversationJoinStatus
	30, // 34: tom.v1.ListConversationsInSchoolResponse.next_page:type_name -> common.v1.Paging
	31, // 35: tom.v1.ListConversationsInSchoolResponse.items:type_name -> tom.v1.Conversation
	31, // 36: tom.v1.GetConversationV2Response.conversation:type_name -> tom.v1.Conversation
	0,  // 37: tom.v1.ChatReaderService.ListConversations:input_type -> tom.v1.ListConversationsRequest
	6,  // 38: tom.v1.ChatReaderService.RetrieveConversationMessages:input_type -> tom.v1.RetrieveConversationMessagesRequest
	18, // 39: tom.v1.ChatReaderService.RetrieveConversationEvents:input_type -> tom.v1.RetrieveConversationEventsRequest
	2,  // 40: tom.v1.ChatReaderService.ConversationByStudentQuestions:input_type -> tom.v1.ConversationByStudentQuestionsRequest
	4,  // 41: tom.v1.ChatReaderService.ConversationByClass:input_type -> tom.v1.ConversationByClassRequest
	15, // 42: tom.v1.ChatReaderService.ConversationByLesson:input_type -> tom.v1.ConversationByLessonRequest
	13, // 43: tom.v1.ChatReaderService.TotalUserInConversation:input_type -> tom.v1.TotalUserInConversationRequest
	11, // 44: tom.v1.ChatReaderService.AutoCoachCustomMessage:input_type -> tom.v1.AutoCoachCustomMessageRequest
	9,  // 45: tom.v1.ChatReaderService.RetrievePushedNotificationMessages:input_type -> tom.v1.RetrievePushedNotificationMessagesRequest
	20, // 46: tom.v1.ChatReaderService.RetrieveConversationMemberLatestEvent:input_type -> tom.v1.RetrieveConversationMemberLatestEventRequest
	22, // 47: tom.v1.ChatReaderService.ListConversationsInSchool:input_type -> tom.v1.ListConversationsInSchoolRequest
	22, // 48: tom.v1.ChatReaderService.ListConversationsInSchoolWithLocations:input_type -> tom.v1.ListConversationsInSchoolRequest
	24, // 49: tom.v1.ChatReaderService.RetrieveTotalUnreadMessage:input_type -> tom.v1.RetrieveTotalUnreadMessageRequest
	22, // 50: tom.v1.ChatReaderService.ListConversationsInSchoolV2:input_type -> tom.v1.ListConversationsInSchoolRequest
	26, // 51: tom.v1.ChatReaderService.RetrieveTotalUnreadConversationsWithLocations:input_type -> tom.v1.RetrieveTotalUnreadConversationsWithLocationsRequest
	28, // 52: tom.v1.ChatReaderService.GetConversationV2:input_type -> tom.v1.GetConversationV2Request
	1,  // 53: tom.v1.ChatReaderService.ListConversations:output_type -> tom.v1.ListConversationsResponse
	7,  // 54: tom.v1.ChatReaderService.RetrieveConversationMessages:output_type -> tom.v1.RetrieveConversationMessagesResponse
	19, // 55: tom.v1.ChatReaderService.RetrieveConversationEvents:output_type -> tom.v1.RetrieveConversationEventsResponse
	3,  // 56: tom.v1.ChatReaderService.ConversationByStudentQuestions:output_type -> tom.v1.ConversationByStudentQuestionsResponse
	5,  // 57: tom.v1.ChatReaderService.ConversationByClass:output_type -> tom.v1.ConversationByClassResponse
	16, // 58: tom.v1.ChatReaderService.ConversationByLesson:output_type -> tom.v1.ConversationByLessonResponse
	14, // 59: tom.v1.ChatReaderService.TotalUserInConversation:output_type -> tom.v1.TotalUserInConversationResponse
	12, // 60: tom.v1.ChatReaderService.AutoCoachCustomMessage:output_type -> tom.v1.AutoCoachCustomMessageResponse
	10, // 61: tom.v1.ChatReaderService.RetrievePushedNotificationMessages:output_type -> tom.v1.RetrievePushedNotificationMessagesResponse
	21, // 62: tom.v1.ChatReaderService.RetrieveConversationMemberLatestEvent:output_type -> tom.v1.RetrieveConversationMemberLatestEventResponse
	23, // 63: tom.v1.ChatReaderService.ListConversationsInSchool:output_type -> tom.v1.ListConversationsInSchoolResponse
	23, // 64: tom.v1.ChatReaderService.ListConversationsInSchoolWithLocations:output_type -> tom.v1.ListConversationsInSchoolResponse
	25, // 65: tom.v1.ChatReaderService.RetrieveTotalUnreadMessage:output_type -> tom.v1.RetrieveTotalUnreadMessageResponse
	23, // 66: tom.v1.ChatReaderService.ListConversationsInSchoolV2:output_type -> tom.v1.ListConversationsInSchoolResponse
	27, // 67: tom.v1.ChatReaderService.RetrieveTotalUnreadConversationsWithLocations:output_type -> tom.v1.RetrieveTotalUnreadConversationsWithLocationsResponse
	29, // 68: tom.v1.ChatReaderService.GetConversationV2:output_type -> tom.v1.GetConversationV2Response
	53, // [53:69] is the sub-list for method output_type
	37, // [37:53] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_tom_v1_chat_reader_proto_init() }
func file_tom_v1_chat_reader_proto_init() {
	if File_tom_v1_chat_reader_proto != nil {
		return
	}
	file_tom_v1_enums_proto_init()
	file_tom_v1_conversations_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tom_v1_chat_reader_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationByStudentQuestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationByStudentQuestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationByClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationByClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveConversationMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveConversationMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushedNotificationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePushedNotificationMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePushedNotificationMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoCoachCustomMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoCoachCustomMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalUserInConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalUserInConversationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationByLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationByLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveConversationEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveConversationEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveConversationMemberLatestEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveConversationMemberLatestEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationsInSchoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationsInSchoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTotalUnreadMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTotalUnreadMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTotalUnreadConversationsWithLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTotalUnreadConversationsWithLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tom_v1_chat_reader_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tom_v1_chat_reader_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tom_v1_chat_reader_proto_goTypes,
		DependencyIndexes: file_tom_v1_chat_reader_proto_depIdxs,
		MessageInfos:      file_tom_v1_chat_reader_proto_msgTypes,
	}.Build()
	File_tom_v1_chat_reader_proto = out.File
	file_tom_v1_chat_reader_proto_rawDesc = nil
	file_tom_v1_chat_reader_proto_goTypes = nil
	file_tom_v1_chat_reader_proto_depIdxs = nil
}
