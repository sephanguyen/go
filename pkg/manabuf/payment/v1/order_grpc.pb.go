// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pmpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OrderServiceClient interface {
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error)
	CreateCustomBilling(ctx context.Context, in *CreateCustomBillingRequest, opts ...grpc.CallOption) (*CreateCustomBillingResponse, error)
	RetrieveListOfOrders(ctx context.Context, in *RetrieveListOfOrdersRequest, opts ...grpc.CallOption) (*RetrieveListOfOrdersResponse, error)
	RetrieveListOfBillItems(ctx context.Context, in *RetrieveListOfBillItemsRequest, opts ...grpc.CallOption) (*RetrieveListOfBillItemsResponse, error)
	RetrieveListOfOrderProducts(ctx context.Context, in *RetrieveListOfOrderProductsRequest, opts ...grpc.CallOption) (*RetrieveListOfOrderProductsResponse, error)
	RetrieveListOfOrderItems(ctx context.Context, in *RetrieveListOfOrderItemsRequest, opts ...grpc.CallOption) (*RetrieveListOfOrderItemsResponse, error)
	UpdateBillItemStatus(ctx context.Context, in *UpdateBillItemStatusRequest, opts ...grpc.CallOption) (*UpdateBillItemStatusResponse, error)
	UpdateOrderStatus(ctx context.Context, in *UpdateOrderStatusRequest, opts ...grpc.CallOption) (*UpdateOrderStatusResponse, error)
	RetrieveBillingOfOrderDetails(ctx context.Context, in *RetrieveBillingOfOrderDetailsRequest, opts ...grpc.CallOption) (*RetrieveBillingOfOrderDetailsResponse, error)
	RetrieveListOfOrderDetailProducts(ctx context.Context, in *RetrieveListOfOrderDetailProductsRequest, opts ...grpc.CallOption) (*RetrieveListOfOrderDetailProductsResponse, error)
	CreateBulkOrder(ctx context.Context, in *CreateBulkOrderRequest, opts ...grpc.CallOption) (*CreateBulkOrderResponse, error)
	VoidOrder(ctx context.Context, in *VoidOrderRequest, opts ...grpc.CallOption) (*VoidOrderResponse, error)
	GenerateBillingItems(ctx context.Context, in *GenerateBillingItemsRequest, opts ...grpc.CallOption) (*GenerateBillingItemsResponse, error)
	RetrieveRecurringProductForWithdrawal(ctx context.Context, in *RetrieveRecurringProductForWithdrawalRequest, opts ...grpc.CallOption) (*RetrieveRecurringProductForWithdrawalResponse, error)
	UpdateOrderReviewedFlag(ctx context.Context, in *UpdateOrderReviewedFlagRequest, opts ...grpc.CallOption) (*UpdateOrderReviewedFlagResponse, error)
	RetrieveListOfUniqueProductIDs(ctx context.Context, in *RetrieveListOfUniqueProductIDsRequest, opts ...grpc.CallOption) (*RetrieveListOfUniqueProductIDsResponse, error)
	RetrieveListOfUniqueProductIDForBulkOrder(ctx context.Context, in *RetrieveListOfUniqueProductIDForBulkOrderRequest, opts ...grpc.CallOption) (*RetrieveListOfUniqueProductIDForBulkOrderResponse, error)
	GetLocationsForCreatingOrder(ctx context.Context, in *GetLocationsForCreatingOrderRequest, opts ...grpc.CallOption) (*GetLocationsForCreatingOrderResponse, error)
	RetrieveListOfOrderAssociatedProductOfPackages(ctx context.Context, in *RetrieveListOfOrderAssociatedProductOfPackagesRequest, opts ...grpc.CallOption) (*RetrieveListOfOrderAssociatedProductOfPackagesResponse, error)
	RetrieveListOfProducts(ctx context.Context, in *RetrieveListOfProductsRequest, opts ...grpc.CallOption) (*RetrieveListOfProductsResponse, error)
	RetrieveStudentEnrollmentStatusByLocation(ctx context.Context, in *RetrieveStudentEnrollmentStatusByLocationRequest, opts ...grpc.CallOption) (*RetrieveStudentEnrollmentStatusByLocationResponse, error)
	RetrieveStudentEnrolledLocations(ctx context.Context, in *RetrieveStudentEnrolledLocationsRequest, opts ...grpc.CallOption) (*RetrieveStudentEnrolledLocationsResponse, error)
	GetOrgLevelStudentStatus(ctx context.Context, in *GetOrgLevelStudentStatusRequest, opts ...grpc.CallOption) (*GetOrgLevelStudentStatusResponse, error)
	RetrieveRecurringProductsOfStudentInLocation(ctx context.Context, in *RetrieveRecurringProductsOfStudentInLocationRequest, opts ...grpc.CallOption) (*RetrieveRecurringProductsOfStudentInLocationResponse, error)
}

type orderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderServiceClient(cc grpc.ClientConnInterface) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error) {
	out := new(CreateOrderResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) CreateCustomBilling(ctx context.Context, in *CreateCustomBillingRequest, opts ...grpc.CallOption) (*CreateCustomBillingResponse, error) {
	out := new(CreateCustomBillingResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/CreateCustomBilling", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveListOfOrders(ctx context.Context, in *RetrieveListOfOrdersRequest, opts ...grpc.CallOption) (*RetrieveListOfOrdersResponse, error) {
	out := new(RetrieveListOfOrdersResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveListOfOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveListOfBillItems(ctx context.Context, in *RetrieveListOfBillItemsRequest, opts ...grpc.CallOption) (*RetrieveListOfBillItemsResponse, error) {
	out := new(RetrieveListOfBillItemsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveListOfBillItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveListOfOrderProducts(ctx context.Context, in *RetrieveListOfOrderProductsRequest, opts ...grpc.CallOption) (*RetrieveListOfOrderProductsResponse, error) {
	out := new(RetrieveListOfOrderProductsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveListOfOrderProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveListOfOrderItems(ctx context.Context, in *RetrieveListOfOrderItemsRequest, opts ...grpc.CallOption) (*RetrieveListOfOrderItemsResponse, error) {
	out := new(RetrieveListOfOrderItemsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveListOfOrderItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateBillItemStatus(ctx context.Context, in *UpdateBillItemStatusRequest, opts ...grpc.CallOption) (*UpdateBillItemStatusResponse, error) {
	out := new(UpdateBillItemStatusResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/UpdateBillItemStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateOrderStatus(ctx context.Context, in *UpdateOrderStatusRequest, opts ...grpc.CallOption) (*UpdateOrderStatusResponse, error) {
	out := new(UpdateOrderStatusResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/UpdateOrderStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveBillingOfOrderDetails(ctx context.Context, in *RetrieveBillingOfOrderDetailsRequest, opts ...grpc.CallOption) (*RetrieveBillingOfOrderDetailsResponse, error) {
	out := new(RetrieveBillingOfOrderDetailsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveBillingOfOrderDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveListOfOrderDetailProducts(ctx context.Context, in *RetrieveListOfOrderDetailProductsRequest, opts ...grpc.CallOption) (*RetrieveListOfOrderDetailProductsResponse, error) {
	out := new(RetrieveListOfOrderDetailProductsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveListOfOrderDetailProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) CreateBulkOrder(ctx context.Context, in *CreateBulkOrderRequest, opts ...grpc.CallOption) (*CreateBulkOrderResponse, error) {
	out := new(CreateBulkOrderResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/CreateBulkOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) VoidOrder(ctx context.Context, in *VoidOrderRequest, opts ...grpc.CallOption) (*VoidOrderResponse, error) {
	out := new(VoidOrderResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/VoidOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GenerateBillingItems(ctx context.Context, in *GenerateBillingItemsRequest, opts ...grpc.CallOption) (*GenerateBillingItemsResponse, error) {
	out := new(GenerateBillingItemsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/GenerateBillingItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveRecurringProductForWithdrawal(ctx context.Context, in *RetrieveRecurringProductForWithdrawalRequest, opts ...grpc.CallOption) (*RetrieveRecurringProductForWithdrawalResponse, error) {
	out := new(RetrieveRecurringProductForWithdrawalResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveRecurringProductForWithdrawal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateOrderReviewedFlag(ctx context.Context, in *UpdateOrderReviewedFlagRequest, opts ...grpc.CallOption) (*UpdateOrderReviewedFlagResponse, error) {
	out := new(UpdateOrderReviewedFlagResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/UpdateOrderReviewedFlag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveListOfUniqueProductIDs(ctx context.Context, in *RetrieveListOfUniqueProductIDsRequest, opts ...grpc.CallOption) (*RetrieveListOfUniqueProductIDsResponse, error) {
	out := new(RetrieveListOfUniqueProductIDsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveListOfUniqueProductIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveListOfUniqueProductIDForBulkOrder(ctx context.Context, in *RetrieveListOfUniqueProductIDForBulkOrderRequest, opts ...grpc.CallOption) (*RetrieveListOfUniqueProductIDForBulkOrderResponse, error) {
	out := new(RetrieveListOfUniqueProductIDForBulkOrderResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveListOfUniqueProductIDForBulkOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetLocationsForCreatingOrder(ctx context.Context, in *GetLocationsForCreatingOrderRequest, opts ...grpc.CallOption) (*GetLocationsForCreatingOrderResponse, error) {
	out := new(GetLocationsForCreatingOrderResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/GetLocationsForCreatingOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveListOfOrderAssociatedProductOfPackages(ctx context.Context, in *RetrieveListOfOrderAssociatedProductOfPackagesRequest, opts ...grpc.CallOption) (*RetrieveListOfOrderAssociatedProductOfPackagesResponse, error) {
	out := new(RetrieveListOfOrderAssociatedProductOfPackagesResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveListOfOrderAssociatedProductOfPackages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveListOfProducts(ctx context.Context, in *RetrieveListOfProductsRequest, opts ...grpc.CallOption) (*RetrieveListOfProductsResponse, error) {
	out := new(RetrieveListOfProductsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveListOfProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveStudentEnrollmentStatusByLocation(ctx context.Context, in *RetrieveStudentEnrollmentStatusByLocationRequest, opts ...grpc.CallOption) (*RetrieveStudentEnrollmentStatusByLocationResponse, error) {
	out := new(RetrieveStudentEnrollmentStatusByLocationResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveStudentEnrollmentStatusByLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveStudentEnrolledLocations(ctx context.Context, in *RetrieveStudentEnrolledLocationsRequest, opts ...grpc.CallOption) (*RetrieveStudentEnrolledLocationsResponse, error) {
	out := new(RetrieveStudentEnrolledLocationsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveStudentEnrolledLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetOrgLevelStudentStatus(ctx context.Context, in *GetOrgLevelStudentStatusRequest, opts ...grpc.CallOption) (*GetOrgLevelStudentStatusResponse, error) {
	out := new(GetOrgLevelStudentStatusResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/GetOrgLevelStudentStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RetrieveRecurringProductsOfStudentInLocation(ctx context.Context, in *RetrieveRecurringProductsOfStudentInLocationRequest, opts ...grpc.CallOption) (*RetrieveRecurringProductsOfStudentInLocationResponse, error) {
	out := new(RetrieveRecurringProductsOfStudentInLocationResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.OrderService/RetrieveRecurringProductsOfStudentInLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
// All implementations should embed UnimplementedOrderServiceServer
// for forward compatibility
type OrderServiceServer interface {
	CreateOrder(context.Context, *CreateOrderRequest) (*CreateOrderResponse, error)
	CreateCustomBilling(context.Context, *CreateCustomBillingRequest) (*CreateCustomBillingResponse, error)
	RetrieveListOfOrders(context.Context, *RetrieveListOfOrdersRequest) (*RetrieveListOfOrdersResponse, error)
	RetrieveListOfBillItems(context.Context, *RetrieveListOfBillItemsRequest) (*RetrieveListOfBillItemsResponse, error)
	RetrieveListOfOrderProducts(context.Context, *RetrieveListOfOrderProductsRequest) (*RetrieveListOfOrderProductsResponse, error)
	RetrieveListOfOrderItems(context.Context, *RetrieveListOfOrderItemsRequest) (*RetrieveListOfOrderItemsResponse, error)
	UpdateBillItemStatus(context.Context, *UpdateBillItemStatusRequest) (*UpdateBillItemStatusResponse, error)
	UpdateOrderStatus(context.Context, *UpdateOrderStatusRequest) (*UpdateOrderStatusResponse, error)
	RetrieveBillingOfOrderDetails(context.Context, *RetrieveBillingOfOrderDetailsRequest) (*RetrieveBillingOfOrderDetailsResponse, error)
	RetrieveListOfOrderDetailProducts(context.Context, *RetrieveListOfOrderDetailProductsRequest) (*RetrieveListOfOrderDetailProductsResponse, error)
	CreateBulkOrder(context.Context, *CreateBulkOrderRequest) (*CreateBulkOrderResponse, error)
	VoidOrder(context.Context, *VoidOrderRequest) (*VoidOrderResponse, error)
	GenerateBillingItems(context.Context, *GenerateBillingItemsRequest) (*GenerateBillingItemsResponse, error)
	RetrieveRecurringProductForWithdrawal(context.Context, *RetrieveRecurringProductForWithdrawalRequest) (*RetrieveRecurringProductForWithdrawalResponse, error)
	UpdateOrderReviewedFlag(context.Context, *UpdateOrderReviewedFlagRequest) (*UpdateOrderReviewedFlagResponse, error)
	RetrieveListOfUniqueProductIDs(context.Context, *RetrieveListOfUniqueProductIDsRequest) (*RetrieveListOfUniqueProductIDsResponse, error)
	RetrieveListOfUniqueProductIDForBulkOrder(context.Context, *RetrieveListOfUniqueProductIDForBulkOrderRequest) (*RetrieveListOfUniqueProductIDForBulkOrderResponse, error)
	GetLocationsForCreatingOrder(context.Context, *GetLocationsForCreatingOrderRequest) (*GetLocationsForCreatingOrderResponse, error)
	RetrieveListOfOrderAssociatedProductOfPackages(context.Context, *RetrieveListOfOrderAssociatedProductOfPackagesRequest) (*RetrieveListOfOrderAssociatedProductOfPackagesResponse, error)
	RetrieveListOfProducts(context.Context, *RetrieveListOfProductsRequest) (*RetrieveListOfProductsResponse, error)
	RetrieveStudentEnrollmentStatusByLocation(context.Context, *RetrieveStudentEnrollmentStatusByLocationRequest) (*RetrieveStudentEnrollmentStatusByLocationResponse, error)
	RetrieveStudentEnrolledLocations(context.Context, *RetrieveStudentEnrolledLocationsRequest) (*RetrieveStudentEnrolledLocationsResponse, error)
	GetOrgLevelStudentStatus(context.Context, *GetOrgLevelStudentStatusRequest) (*GetOrgLevelStudentStatusResponse, error)
	RetrieveRecurringProductsOfStudentInLocation(context.Context, *RetrieveRecurringProductsOfStudentInLocationRequest) (*RetrieveRecurringProductsOfStudentInLocationResponse, error)
}

// UnimplementedOrderServiceServer should be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (UnimplementedOrderServiceServer) CreateOrder(context.Context, *CreateOrderRequest) (*CreateOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrder not implemented")
}
func (UnimplementedOrderServiceServer) CreateCustomBilling(context.Context, *CreateCustomBillingRequest) (*CreateCustomBillingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomBilling not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveListOfOrders(context.Context, *RetrieveListOfOrdersRequest) (*RetrieveListOfOrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveListOfOrders not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveListOfBillItems(context.Context, *RetrieveListOfBillItemsRequest) (*RetrieveListOfBillItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveListOfBillItems not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveListOfOrderProducts(context.Context, *RetrieveListOfOrderProductsRequest) (*RetrieveListOfOrderProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveListOfOrderProducts not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveListOfOrderItems(context.Context, *RetrieveListOfOrderItemsRequest) (*RetrieveListOfOrderItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveListOfOrderItems not implemented")
}
func (UnimplementedOrderServiceServer) UpdateBillItemStatus(context.Context, *UpdateBillItemStatusRequest) (*UpdateBillItemStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBillItemStatus not implemented")
}
func (UnimplementedOrderServiceServer) UpdateOrderStatus(context.Context, *UpdateOrderStatusRequest) (*UpdateOrderStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrderStatus not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveBillingOfOrderDetails(context.Context, *RetrieveBillingOfOrderDetailsRequest) (*RetrieveBillingOfOrderDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveBillingOfOrderDetails not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveListOfOrderDetailProducts(context.Context, *RetrieveListOfOrderDetailProductsRequest) (*RetrieveListOfOrderDetailProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveListOfOrderDetailProducts not implemented")
}
func (UnimplementedOrderServiceServer) CreateBulkOrder(context.Context, *CreateBulkOrderRequest) (*CreateBulkOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBulkOrder not implemented")
}
func (UnimplementedOrderServiceServer) VoidOrder(context.Context, *VoidOrderRequest) (*VoidOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoidOrder not implemented")
}
func (UnimplementedOrderServiceServer) GenerateBillingItems(context.Context, *GenerateBillingItemsRequest) (*GenerateBillingItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateBillingItems not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveRecurringProductForWithdrawal(context.Context, *RetrieveRecurringProductForWithdrawalRequest) (*RetrieveRecurringProductForWithdrawalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveRecurringProductForWithdrawal not implemented")
}
func (UnimplementedOrderServiceServer) UpdateOrderReviewedFlag(context.Context, *UpdateOrderReviewedFlagRequest) (*UpdateOrderReviewedFlagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrderReviewedFlag not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveListOfUniqueProductIDs(context.Context, *RetrieveListOfUniqueProductIDsRequest) (*RetrieveListOfUniqueProductIDsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveListOfUniqueProductIDs not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveListOfUniqueProductIDForBulkOrder(context.Context, *RetrieveListOfUniqueProductIDForBulkOrderRequest) (*RetrieveListOfUniqueProductIDForBulkOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveListOfUniqueProductIDForBulkOrder not implemented")
}
func (UnimplementedOrderServiceServer) GetLocationsForCreatingOrder(context.Context, *GetLocationsForCreatingOrderRequest) (*GetLocationsForCreatingOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocationsForCreatingOrder not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveListOfOrderAssociatedProductOfPackages(context.Context, *RetrieveListOfOrderAssociatedProductOfPackagesRequest) (*RetrieveListOfOrderAssociatedProductOfPackagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveListOfOrderAssociatedProductOfPackages not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveListOfProducts(context.Context, *RetrieveListOfProductsRequest) (*RetrieveListOfProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveListOfProducts not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveStudentEnrollmentStatusByLocation(context.Context, *RetrieveStudentEnrollmentStatusByLocationRequest) (*RetrieveStudentEnrollmentStatusByLocationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveStudentEnrollmentStatusByLocation not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveStudentEnrolledLocations(context.Context, *RetrieveStudentEnrolledLocationsRequest) (*RetrieveStudentEnrolledLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveStudentEnrolledLocations not implemented")
}
func (UnimplementedOrderServiceServer) GetOrgLevelStudentStatus(context.Context, *GetOrgLevelStudentStatusRequest) (*GetOrgLevelStudentStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrgLevelStudentStatus not implemented")
}
func (UnimplementedOrderServiceServer) RetrieveRecurringProductsOfStudentInLocation(context.Context, *RetrieveRecurringProductsOfStudentInLocationRequest) (*RetrieveRecurringProductsOfStudentInLocationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveRecurringProductsOfStudentInLocation not implemented")
}

// UnsafeOrderServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OrderServiceServer will
// result in compilation errors.
type UnsafeOrderServiceServer interface {
	mustEmbedUnimplementedOrderServiceServer()
}

func RegisterOrderServiceServer(s grpc.ServiceRegistrar, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_CreateCustomBilling_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomBillingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateCustomBilling(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/CreateCustomBilling",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateCustomBilling(ctx, req.(*CreateCustomBillingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveListOfOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveListOfOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveListOfOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveListOfOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveListOfOrders(ctx, req.(*RetrieveListOfOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveListOfBillItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveListOfBillItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveListOfBillItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveListOfBillItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveListOfBillItems(ctx, req.(*RetrieveListOfBillItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveListOfOrderProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveListOfOrderProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveListOfOrderProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveListOfOrderProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveListOfOrderProducts(ctx, req.(*RetrieveListOfOrderProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveListOfOrderItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveListOfOrderItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveListOfOrderItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveListOfOrderItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveListOfOrderItems(ctx, req.(*RetrieveListOfOrderItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_UpdateBillItemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBillItemStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).UpdateBillItemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/UpdateBillItemStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).UpdateBillItemStatus(ctx, req.(*UpdateBillItemStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_UpdateOrderStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).UpdateOrderStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/UpdateOrderStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).UpdateOrderStatus(ctx, req.(*UpdateOrderStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveBillingOfOrderDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveBillingOfOrderDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveBillingOfOrderDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveBillingOfOrderDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveBillingOfOrderDetails(ctx, req.(*RetrieveBillingOfOrderDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveListOfOrderDetailProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveListOfOrderDetailProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveListOfOrderDetailProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveListOfOrderDetailProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveListOfOrderDetailProducts(ctx, req.(*RetrieveListOfOrderDetailProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_CreateBulkOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBulkOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateBulkOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/CreateBulkOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateBulkOrder(ctx, req.(*CreateBulkOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_VoidOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoidOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).VoidOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/VoidOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).VoidOrder(ctx, req.(*VoidOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_GenerateBillingItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateBillingItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GenerateBillingItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/GenerateBillingItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GenerateBillingItems(ctx, req.(*GenerateBillingItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveRecurringProductForWithdrawal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRecurringProductForWithdrawalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveRecurringProductForWithdrawal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveRecurringProductForWithdrawal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveRecurringProductForWithdrawal(ctx, req.(*RetrieveRecurringProductForWithdrawalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_UpdateOrderReviewedFlag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderReviewedFlagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).UpdateOrderReviewedFlag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/UpdateOrderReviewedFlag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).UpdateOrderReviewedFlag(ctx, req.(*UpdateOrderReviewedFlagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveListOfUniqueProductIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveListOfUniqueProductIDsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveListOfUniqueProductIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveListOfUniqueProductIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveListOfUniqueProductIDs(ctx, req.(*RetrieveListOfUniqueProductIDsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveListOfUniqueProductIDForBulkOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveListOfUniqueProductIDForBulkOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveListOfUniqueProductIDForBulkOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveListOfUniqueProductIDForBulkOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveListOfUniqueProductIDForBulkOrder(ctx, req.(*RetrieveListOfUniqueProductIDForBulkOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_GetLocationsForCreatingOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocationsForCreatingOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetLocationsForCreatingOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/GetLocationsForCreatingOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetLocationsForCreatingOrder(ctx, req.(*GetLocationsForCreatingOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveListOfOrderAssociatedProductOfPackages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveListOfOrderAssociatedProductOfPackagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveListOfOrderAssociatedProductOfPackages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveListOfOrderAssociatedProductOfPackages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveListOfOrderAssociatedProductOfPackages(ctx, req.(*RetrieveListOfOrderAssociatedProductOfPackagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveListOfProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveListOfProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveListOfProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveListOfProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveListOfProducts(ctx, req.(*RetrieveListOfProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveStudentEnrollmentStatusByLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveStudentEnrollmentStatusByLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveStudentEnrollmentStatusByLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveStudentEnrollmentStatusByLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveStudentEnrollmentStatusByLocation(ctx, req.(*RetrieveStudentEnrollmentStatusByLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveStudentEnrolledLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveStudentEnrolledLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveStudentEnrolledLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveStudentEnrolledLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveStudentEnrolledLocations(ctx, req.(*RetrieveStudentEnrolledLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_GetOrgLevelStudentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrgLevelStudentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetOrgLevelStudentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/GetOrgLevelStudentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetOrgLevelStudentStatus(ctx, req.(*GetOrgLevelStudentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_RetrieveRecurringProductsOfStudentInLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRecurringProductsOfStudentInLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).RetrieveRecurringProductsOfStudentInLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.OrderService/RetrieveRecurringProductsOfStudentInLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).RetrieveRecurringProductsOfStudentInLocation(ctx, req.(*RetrieveRecurringProductsOfStudentInLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payment.v1.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _OrderService_CreateOrder_Handler,
		},
		{
			MethodName: "CreateCustomBilling",
			Handler:    _OrderService_CreateCustomBilling_Handler,
		},
		{
			MethodName: "RetrieveListOfOrders",
			Handler:    _OrderService_RetrieveListOfOrders_Handler,
		},
		{
			MethodName: "RetrieveListOfBillItems",
			Handler:    _OrderService_RetrieveListOfBillItems_Handler,
		},
		{
			MethodName: "RetrieveListOfOrderProducts",
			Handler:    _OrderService_RetrieveListOfOrderProducts_Handler,
		},
		{
			MethodName: "RetrieveListOfOrderItems",
			Handler:    _OrderService_RetrieveListOfOrderItems_Handler,
		},
		{
			MethodName: "UpdateBillItemStatus",
			Handler:    _OrderService_UpdateBillItemStatus_Handler,
		},
		{
			MethodName: "UpdateOrderStatus",
			Handler:    _OrderService_UpdateOrderStatus_Handler,
		},
		{
			MethodName: "RetrieveBillingOfOrderDetails",
			Handler:    _OrderService_RetrieveBillingOfOrderDetails_Handler,
		},
		{
			MethodName: "RetrieveListOfOrderDetailProducts",
			Handler:    _OrderService_RetrieveListOfOrderDetailProducts_Handler,
		},
		{
			MethodName: "CreateBulkOrder",
			Handler:    _OrderService_CreateBulkOrder_Handler,
		},
		{
			MethodName: "VoidOrder",
			Handler:    _OrderService_VoidOrder_Handler,
		},
		{
			MethodName: "GenerateBillingItems",
			Handler:    _OrderService_GenerateBillingItems_Handler,
		},
		{
			MethodName: "RetrieveRecurringProductForWithdrawal",
			Handler:    _OrderService_RetrieveRecurringProductForWithdrawal_Handler,
		},
		{
			MethodName: "UpdateOrderReviewedFlag",
			Handler:    _OrderService_UpdateOrderReviewedFlag_Handler,
		},
		{
			MethodName: "RetrieveListOfUniqueProductIDs",
			Handler:    _OrderService_RetrieveListOfUniqueProductIDs_Handler,
		},
		{
			MethodName: "RetrieveListOfUniqueProductIDForBulkOrder",
			Handler:    _OrderService_RetrieveListOfUniqueProductIDForBulkOrder_Handler,
		},
		{
			MethodName: "GetLocationsForCreatingOrder",
			Handler:    _OrderService_GetLocationsForCreatingOrder_Handler,
		},
		{
			MethodName: "RetrieveListOfOrderAssociatedProductOfPackages",
			Handler:    _OrderService_RetrieveListOfOrderAssociatedProductOfPackages_Handler,
		},
		{
			MethodName: "RetrieveListOfProducts",
			Handler:    _OrderService_RetrieveListOfProducts_Handler,
		},
		{
			MethodName: "RetrieveStudentEnrollmentStatusByLocation",
			Handler:    _OrderService_RetrieveStudentEnrollmentStatusByLocation_Handler,
		},
		{
			MethodName: "RetrieveStudentEnrolledLocations",
			Handler:    _OrderService_RetrieveStudentEnrolledLocations_Handler,
		},
		{
			MethodName: "GetOrgLevelStudentStatus",
			Handler:    _OrderService_GetOrgLevelStudentStatus_Handler,
		},
		{
			MethodName: "RetrieveRecurringProductsOfStudentInLocation",
			Handler:    _OrderService_RetrieveRecurringProductsOfStudentInLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payment/v1/order.proto",
}
