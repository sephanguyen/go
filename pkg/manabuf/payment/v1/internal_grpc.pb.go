// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pmpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// InternalServiceClient is the client API for InternalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InternalServiceClient interface {
	UpdateBillItemStatus(ctx context.Context, in *UpdateBillItemStatusRequest, opts ...grpc.CallOption) (*UpdateBillItemStatusResponse, error)
	UpdateStudentProductStatus(ctx context.Context, in *UpdateStudentProductStatusRequest, opts ...grpc.CallOption) (*UpdateStudentProductStatusResponse, error)
	GenerateBillingItems(ctx context.Context, in *GenerateBillingItemsRequest, opts ...grpc.CallOption) (*GenerateBillingItemsResponse, error)
	UpdateStudentCourse(ctx context.Context, in *UpdateStudentCourseRequest, opts ...grpc.CallOption) (*UpdateStudentCourseResponse, error)
	UpdateStudentPackage(ctx context.Context, in *UpdateStudentPackageForCronjobRequest, opts ...grpc.CallOption) (*UpdateStudentPackageForCronjobResponse, error)
}

type internalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInternalServiceClient(cc grpc.ClientConnInterface) InternalServiceClient {
	return &internalServiceClient{cc}
}

func (c *internalServiceClient) UpdateBillItemStatus(ctx context.Context, in *UpdateBillItemStatusRequest, opts ...grpc.CallOption) (*UpdateBillItemStatusResponse, error) {
	out := new(UpdateBillItemStatusResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.InternalService/UpdateBillItemStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalServiceClient) UpdateStudentProductStatus(ctx context.Context, in *UpdateStudentProductStatusRequest, opts ...grpc.CallOption) (*UpdateStudentProductStatusResponse, error) {
	out := new(UpdateStudentProductStatusResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.InternalService/UpdateStudentProductStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalServiceClient) GenerateBillingItems(ctx context.Context, in *GenerateBillingItemsRequest, opts ...grpc.CallOption) (*GenerateBillingItemsResponse, error) {
	out := new(GenerateBillingItemsResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.InternalService/GenerateBillingItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalServiceClient) UpdateStudentCourse(ctx context.Context, in *UpdateStudentCourseRequest, opts ...grpc.CallOption) (*UpdateStudentCourseResponse, error) {
	out := new(UpdateStudentCourseResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.InternalService/UpdateStudentCourse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalServiceClient) UpdateStudentPackage(ctx context.Context, in *UpdateStudentPackageForCronjobRequest, opts ...grpc.CallOption) (*UpdateStudentPackageForCronjobResponse, error) {
	out := new(UpdateStudentPackageForCronjobResponse)
	err := c.cc.Invoke(ctx, "/payment.v1.InternalService/UpdateStudentPackage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternalServiceServer is the server API for InternalService service.
// All implementations should embed UnimplementedInternalServiceServer
// for forward compatibility
type InternalServiceServer interface {
	UpdateBillItemStatus(context.Context, *UpdateBillItemStatusRequest) (*UpdateBillItemStatusResponse, error)
	UpdateStudentProductStatus(context.Context, *UpdateStudentProductStatusRequest) (*UpdateStudentProductStatusResponse, error)
	GenerateBillingItems(context.Context, *GenerateBillingItemsRequest) (*GenerateBillingItemsResponse, error)
	UpdateStudentCourse(context.Context, *UpdateStudentCourseRequest) (*UpdateStudentCourseResponse, error)
	UpdateStudentPackage(context.Context, *UpdateStudentPackageForCronjobRequest) (*UpdateStudentPackageForCronjobResponse, error)
}

// UnimplementedInternalServiceServer should be embedded to have forward compatible implementations.
type UnimplementedInternalServiceServer struct {
}

func (UnimplementedInternalServiceServer) UpdateBillItemStatus(context.Context, *UpdateBillItemStatusRequest) (*UpdateBillItemStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBillItemStatus not implemented")
}
func (UnimplementedInternalServiceServer) UpdateStudentProductStatus(context.Context, *UpdateStudentProductStatusRequest) (*UpdateStudentProductStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStudentProductStatus not implemented")
}
func (UnimplementedInternalServiceServer) GenerateBillingItems(context.Context, *GenerateBillingItemsRequest) (*GenerateBillingItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateBillingItems not implemented")
}
func (UnimplementedInternalServiceServer) UpdateStudentCourse(context.Context, *UpdateStudentCourseRequest) (*UpdateStudentCourseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStudentCourse not implemented")
}
func (UnimplementedInternalServiceServer) UpdateStudentPackage(context.Context, *UpdateStudentPackageForCronjobRequest) (*UpdateStudentPackageForCronjobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStudentPackage not implemented")
}

// UnsafeInternalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InternalServiceServer will
// result in compilation errors.
type UnsafeInternalServiceServer interface {
	mustEmbedUnimplementedInternalServiceServer()
}

func RegisterInternalServiceServer(s grpc.ServiceRegistrar, srv InternalServiceServer) {
	s.RegisterService(&_InternalService_serviceDesc, srv)
}

func _InternalService_UpdateBillItemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBillItemStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServiceServer).UpdateBillItemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.InternalService/UpdateBillItemStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServiceServer).UpdateBillItemStatus(ctx, req.(*UpdateBillItemStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalService_UpdateStudentProductStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStudentProductStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServiceServer).UpdateStudentProductStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.InternalService/UpdateStudentProductStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServiceServer).UpdateStudentProductStatus(ctx, req.(*UpdateStudentProductStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalService_GenerateBillingItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateBillingItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServiceServer).GenerateBillingItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.InternalService/GenerateBillingItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServiceServer).GenerateBillingItems(ctx, req.(*GenerateBillingItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalService_UpdateStudentCourse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStudentCourseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServiceServer).UpdateStudentCourse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.InternalService/UpdateStudentCourse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServiceServer).UpdateStudentCourse(ctx, req.(*UpdateStudentCourseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalService_UpdateStudentPackage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStudentPackageForCronjobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServiceServer).UpdateStudentPackage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.v1.InternalService/UpdateStudentPackage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServiceServer).UpdateStudentPackage(ctx, req.(*UpdateStudentPackageForCronjobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InternalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payment.v1.InternalService",
	HandlerType: (*InternalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateBillItemStatus",
			Handler:    _InternalService_UpdateBillItemStatus_Handler,
		},
		{
			MethodName: "UpdateStudentProductStatus",
			Handler:    _InternalService_UpdateStudentProductStatus_Handler,
		},
		{
			MethodName: "GenerateBillingItems",
			Handler:    _InternalService_GenerateBillingItems_Handler,
		},
		{
			MethodName: "UpdateStudentCourse",
			Handler:    _InternalService_UpdateStudentCourse_Handler,
		},
		{
			MethodName: "UpdateStudentPackage",
			Handler:    _InternalService_UpdateStudentPackage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payment/v1/internal.proto",
}
