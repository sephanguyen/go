// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: mastermgmt/v1/course.proto

package mpb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CourseTeachingMethod int32

const (
	CourseTeachingMethod_COURSE_TEACHING_METHOD_INDIVIDUAL CourseTeachingMethod = 0
	CourseTeachingMethod_COURSE_TEACHING_METHOD_GROUP      CourseTeachingMethod = 1
	CourseTeachingMethod_COURSE_TEACHING_METHOD_NONE       CourseTeachingMethod = 2
)

// Enum value maps for CourseTeachingMethod.
var (
	CourseTeachingMethod_name = map[int32]string{
		0: "COURSE_TEACHING_METHOD_INDIVIDUAL",
		1: "COURSE_TEACHING_METHOD_GROUP",
		2: "COURSE_TEACHING_METHOD_NONE",
	}
	CourseTeachingMethod_value = map[string]int32{
		"COURSE_TEACHING_METHOD_INDIVIDUAL": 0,
		"COURSE_TEACHING_METHOD_GROUP":      1,
		"COURSE_TEACHING_METHOD_NONE":       2,
	}
)

func (x CourseTeachingMethod) Enum() *CourseTeachingMethod {
	p := new(CourseTeachingMethod)
	*p = x
	return p
}

func (x CourseTeachingMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CourseTeachingMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_mastermgmt_v1_course_proto_enumTypes[0].Descriptor()
}

func (CourseTeachingMethod) Type() protoreflect.EnumType {
	return &file_mastermgmt_v1_course_proto_enumTypes[0]
}

func (x CourseTeachingMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CourseTeachingMethod.Descriptor instead.
func (CourseTeachingMethod) EnumDescriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{0}
}

type UpsertCoursesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*UpsertCoursesRequest_Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *UpsertCoursesRequest) Reset() {
	*x = UpsertCoursesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCoursesRequest) ProtoMessage() {}

func (x *UpsertCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCoursesRequest.ProtoReflect.Descriptor instead.
func (*UpsertCoursesRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertCoursesRequest) GetCourses() []*UpsertCoursesRequest_Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type UpsertCoursesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *UpsertCoursesResponse) Reset() {
	*x = UpsertCoursesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCoursesResponse) ProtoMessage() {}

func (x *UpsertCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCoursesResponse.ProtoReflect.Descriptor instead.
func (*UpsertCoursesResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertCoursesResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CourseTypeId string `protobuf:"bytes,3,opt,name=course_type_id,json=courseTypeId,proto3" json:"course_type_id,omitempty"`
}

func (x *Course) Reset() {
	*x = Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{2}
}

func (x *Course) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Course) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Course) GetCourseTypeId() string {
	if x != nil {
		return x.CourseTypeId
	}
	return ""
}

type GetCoursesByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseIds []string `protobuf:"bytes,1,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
}

func (x *GetCoursesByIDsRequest) Reset() {
	*x = GetCoursesByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoursesByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoursesByIDsRequest) ProtoMessage() {}

func (x *GetCoursesByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoursesByIDsRequest.ProtoReflect.Descriptor instead.
func (*GetCoursesByIDsRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{3}
}

func (x *GetCoursesByIDsRequest) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

type GetCoursesByIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *GetCoursesByIDsResponse) Reset() {
	*x = GetCoursesByIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoursesByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoursesByIDsResponse) ProtoMessage() {}

func (x *GetCoursesByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoursesByIDsResponse.ProtoReflect.Descriptor instead.
func (*GetCoursesByIDsResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{4}
}

func (x *GetCoursesByIDsResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type ImportCoursesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ImportCoursesRequest) Reset() {
	*x = ImportCoursesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportCoursesRequest) ProtoMessage() {}

func (x *ImportCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportCoursesRequest.ProtoReflect.Descriptor instead.
func (*ImportCoursesRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{5}
}

func (x *ImportCoursesRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ImportCoursesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImportCoursesResponse) Reset() {
	*x = ImportCoursesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportCoursesResponse) ProtoMessage() {}

func (x *ImportCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportCoursesResponse.ProtoReflect.Descriptor instead.
func (*ImportCoursesResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{6}
}

type ExportCoursesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportCoursesRequest) Reset() {
	*x = ExportCoursesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportCoursesRequest) ProtoMessage() {}

func (x *ExportCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportCoursesRequest.ProtoReflect.Descriptor instead.
func (*ExportCoursesRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{7}
}

type ExportCoursesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExportCoursesResponse) Reset() {
	*x = ExportCoursesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportCoursesResponse) ProtoMessage() {}

func (x *ExportCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportCoursesResponse.ProtoReflect.Descriptor instead.
func (*ExportCoursesResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{8}
}

func (x *ExportCoursesResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpsertCoursesRequest_Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Deprecated: Do not use.
	Country v1.Country `protobuf:"varint,3,opt,name=country,proto3,enum=common.v1.Country" json:"country,omitempty"`
	// Deprecated: Do not use.
	Subject v1.Subject `protobuf:"varint,4,opt,name=subject,proto3,enum=common.v1.Subject" json:"subject,omitempty"`
	// Deprecated: Do not use.
	Grade        string `protobuf:"bytes,5,opt,name=grade,proto3" json:"grade,omitempty"`
	DisplayOrder int32  `protobuf:"varint,6,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	// Deprecated: Do not use.
	SchoolId int32 `protobuf:"varint,7,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	// Deprecated: Do not use.
	BookIds        []string             `protobuf:"bytes,8,rep,name=book_ids,json=bookIds,proto3" json:"book_ids,omitempty"`
	Icon           string               `protobuf:"bytes,9,opt,name=icon,proto3" json:"icon,omitempty"`
	LocationIds    []string             `protobuf:"bytes,10,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	TeachingMethod CourseTeachingMethod `protobuf:"varint,11,opt,name=teaching_method,json=teachingMethod,proto3,enum=mastermgmt.v1.CourseTeachingMethod" json:"teaching_method,omitempty"`
	CourseType     string               `protobuf:"bytes,12,opt,name=course_type,json=courseType,proto3" json:"course_type,omitempty"`
	SubjectIds     []string             `protobuf:"bytes,13,rep,name=subject_ids,json=subjectIds,proto3" json:"subject_ids,omitempty"`
}

func (x *UpsertCoursesRequest_Course) Reset() {
	*x = UpsertCoursesRequest_Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_course_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertCoursesRequest_Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCoursesRequest_Course) ProtoMessage() {}

func (x *UpsertCoursesRequest_Course) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_course_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCoursesRequest_Course.ProtoReflect.Descriptor instead.
func (*UpsertCoursesRequest_Course) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_course_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UpsertCoursesRequest_Course) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertCoursesRequest_Course) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Do not use.
func (x *UpsertCoursesRequest_Course) GetCountry() v1.Country {
	if x != nil {
		return x.Country
	}
	return v1.Country_COUNTRY_NONE
}

// Deprecated: Do not use.
func (x *UpsertCoursesRequest_Course) GetSubject() v1.Subject {
	if x != nil {
		return x.Subject
	}
	return v1.Subject_SUBJECT_NONE
}

// Deprecated: Do not use.
func (x *UpsertCoursesRequest_Course) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *UpsertCoursesRequest_Course) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

// Deprecated: Do not use.
func (x *UpsertCoursesRequest_Course) GetSchoolId() int32 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

// Deprecated: Do not use.
func (x *UpsertCoursesRequest_Course) GetBookIds() []string {
	if x != nil {
		return x.BookIds
	}
	return nil
}

func (x *UpsertCoursesRequest_Course) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpsertCoursesRequest_Course) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *UpsertCoursesRequest_Course) GetTeachingMethod() CourseTeachingMethod {
	if x != nil {
		return x.TeachingMethod
	}
	return CourseTeachingMethod_COURSE_TEACHING_METHOD_INDIVIDUAL
}

func (x *UpsertCoursesRequest_Course) GetCourseType() string {
	if x != nil {
		return x.CourseType
	}
	return ""
}

func (x *UpsertCoursesRequest_Course) GetSubjectIds() []string {
	if x != nil {
		return x.SubjectIds
	}
	return nil
}

var File_mastermgmt_v1_course_proto protoreflect.FileDescriptor

var file_mastermgmt_v1_course_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb5, 0x04, 0x0a, 0x14, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x1a,
	0xd6, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x30, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x18, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x37, 0x0a, 0x15, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75,
	0x6c, 0x22, 0x52, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x22, 0x4a,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x14, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a,
	0x15, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x80, 0x01, 0x0a, 0x14, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x5f, 0x54, 0x45,
	0x41, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x49, 0x4e,
	0x44, 0x49, 0x56, 0x49, 0x44, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f,
	0x55, 0x52, 0x53, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45,
	0x54, 0x48, 0x4f, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b,
	0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x32, 0xef, 0x03,
	0x0a, 0x17, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x2f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x60, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x0d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x42,
	0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61,
	0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mastermgmt_v1_course_proto_rawDescOnce sync.Once
	file_mastermgmt_v1_course_proto_rawDescData = file_mastermgmt_v1_course_proto_rawDesc
)

func file_mastermgmt_v1_course_proto_rawDescGZIP() []byte {
	file_mastermgmt_v1_course_proto_rawDescOnce.Do(func() {
		file_mastermgmt_v1_course_proto_rawDescData = protoimpl.X.CompressGZIP(file_mastermgmt_v1_course_proto_rawDescData)
	})
	return file_mastermgmt_v1_course_proto_rawDescData
}

var file_mastermgmt_v1_course_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mastermgmt_v1_course_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_mastermgmt_v1_course_proto_goTypes = []interface{}{
	(CourseTeachingMethod)(0),           // 0: mastermgmt.v1.CourseTeachingMethod
	(*UpsertCoursesRequest)(nil),        // 1: mastermgmt.v1.UpsertCoursesRequest
	(*UpsertCoursesResponse)(nil),       // 2: mastermgmt.v1.UpsertCoursesResponse
	(*Course)(nil),                      // 3: mastermgmt.v1.Course
	(*GetCoursesByIDsRequest)(nil),      // 4: mastermgmt.v1.GetCoursesByIDsRequest
	(*GetCoursesByIDsResponse)(nil),     // 5: mastermgmt.v1.GetCoursesByIDsResponse
	(*ImportCoursesRequest)(nil),        // 6: mastermgmt.v1.ImportCoursesRequest
	(*ImportCoursesResponse)(nil),       // 7: mastermgmt.v1.ImportCoursesResponse
	(*ExportCoursesRequest)(nil),        // 8: mastermgmt.v1.ExportCoursesRequest
	(*ExportCoursesResponse)(nil),       // 9: mastermgmt.v1.ExportCoursesResponse
	(*UpsertCoursesRequest_Course)(nil), // 10: mastermgmt.v1.UpsertCoursesRequest.Course
	(v1.Country)(0),                     // 11: common.v1.Country
	(v1.Subject)(0),                     // 12: common.v1.Subject
}
var file_mastermgmt_v1_course_proto_depIdxs = []int32{
	10, // 0: mastermgmt.v1.UpsertCoursesRequest.courses:type_name -> mastermgmt.v1.UpsertCoursesRequest.Course
	3,  // 1: mastermgmt.v1.GetCoursesByIDsResponse.courses:type_name -> mastermgmt.v1.Course
	11, // 2: mastermgmt.v1.UpsertCoursesRequest.Course.country:type_name -> common.v1.Country
	12, // 3: mastermgmt.v1.UpsertCoursesRequest.Course.subject:type_name -> common.v1.Subject
	0,  // 4: mastermgmt.v1.UpsertCoursesRequest.Course.teaching_method:type_name -> mastermgmt.v1.CourseTeachingMethod
	1,  // 5: mastermgmt.v1.MasterDataCourseService.UpsertCourses:input_type -> mastermgmt.v1.UpsertCoursesRequest
	8,  // 6: mastermgmt.v1.MasterDataCourseService.ExportCourses:input_type -> mastermgmt.v1.ExportCoursesRequest
	4,  // 7: mastermgmt.v1.MasterDataCourseService.GetCoursesByIDs:input_type -> mastermgmt.v1.GetCoursesByIDsRequest
	6,  // 8: mastermgmt.v1.MasterDataCourseService.ImportCourses:input_type -> mastermgmt.v1.ImportCoursesRequest
	2,  // 9: mastermgmt.v1.MasterDataCourseService.UpsertCourses:output_type -> mastermgmt.v1.UpsertCoursesResponse
	9,  // 10: mastermgmt.v1.MasterDataCourseService.ExportCourses:output_type -> mastermgmt.v1.ExportCoursesResponse
	5,  // 11: mastermgmt.v1.MasterDataCourseService.GetCoursesByIDs:output_type -> mastermgmt.v1.GetCoursesByIDsResponse
	7,  // 12: mastermgmt.v1.MasterDataCourseService.ImportCourses:output_type -> mastermgmt.v1.ImportCoursesResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_mastermgmt_v1_course_proto_init() }
func file_mastermgmt_v1_course_proto_init() {
	if File_mastermgmt_v1_course_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mastermgmt_v1_course_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertCoursesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_course_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertCoursesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_course_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_course_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoursesByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_course_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoursesByIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_course_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportCoursesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_course_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportCoursesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_course_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportCoursesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_course_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportCoursesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_course_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertCoursesRequest_Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mastermgmt_v1_course_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mastermgmt_v1_course_proto_goTypes,
		DependencyIndexes: file_mastermgmt_v1_course_proto_depIdxs,
		EnumInfos:         file_mastermgmt_v1_course_proto_enumTypes,
		MessageInfos:      file_mastermgmt_v1_course_proto_msgTypes,
	}.Build()
	File_mastermgmt_v1_course_proto = out.File
	file_mastermgmt_v1_course_proto_rawDesc = nil
	file_mastermgmt_v1_course_proto_goTypes = nil
	file_mastermgmt_v1_course_proto_depIdxs = nil
}
