// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: mastermgmt/v1/schedule_class.proto

package mpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ScheduleStudentClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string                 `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudentPackageId string                 `protobuf:"bytes,2,opt,name=student_package_id,json=studentPackageId,proto3" json:"student_package_id,omitempty"`
	ClassId          string                 `protobuf:"bytes,3,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	StartTime        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CourseId         string                 `protobuf:"bytes,6,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	EffectiveDate    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
}

func (x *ScheduleStudentClassRequest) Reset() {
	*x = ScheduleStudentClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleStudentClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleStudentClassRequest) ProtoMessage() {}

func (x *ScheduleStudentClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleStudentClassRequest.ProtoReflect.Descriptor instead.
func (*ScheduleStudentClassRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduleStudentClassRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ScheduleStudentClassRequest) GetStudentPackageId() string {
	if x != nil {
		return x.StudentPackageId
	}
	return ""
}

func (x *ScheduleStudentClassRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *ScheduleStudentClassRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ScheduleStudentClassRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ScheduleStudentClassRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ScheduleStudentClassRequest) GetEffectiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

type ScheduleStudentClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *ScheduleStudentClassResponse) Reset() {
	*x = ScheduleStudentClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleStudentClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleStudentClassResponse) ProtoMessage() {}

func (x *ScheduleStudentClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleStudentClassResponse.ProtoReflect.Descriptor instead.
func (*ScheduleStudentClassResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleStudentClassResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type CancelScheduledStudentClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudentPackageId string `protobuf:"bytes,2,opt,name=student_package_id,json=studentPackageId,proto3" json:"student_package_id,omitempty"`
	ClassId          string `protobuf:"bytes,3,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	CourseId         string `protobuf:"bytes,4,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *CancelScheduledStudentClassRequest) Reset() {
	*x = CancelScheduledStudentClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelScheduledStudentClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelScheduledStudentClassRequest) ProtoMessage() {}

func (x *CancelScheduledStudentClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelScheduledStudentClassRequest.ProtoReflect.Descriptor instead.
func (*CancelScheduledStudentClassRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{2}
}

func (x *CancelScheduledStudentClassRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *CancelScheduledStudentClassRequest) GetStudentPackageId() string {
	if x != nil {
		return x.StudentPackageId
	}
	return ""
}

func (x *CancelScheduledStudentClassRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *CancelScheduledStudentClassRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

type GetReserveClassesByEffectiveDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	EffectiveDate  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
}

func (x *GetReserveClassesByEffectiveDateRequest) Reset() {
	*x = GetReserveClassesByEffectiveDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReserveClassesByEffectiveDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReserveClassesByEffectiveDateRequest) ProtoMessage() {}

func (x *GetReserveClassesByEffectiveDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReserveClassesByEffectiveDateRequest.ProtoReflect.Descriptor instead.
func (*GetReserveClassesByEffectiveDateRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{3}
}

func (x *GetReserveClassesByEffectiveDateRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetReserveClassesByEffectiveDateRequest) GetEffectiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

type GetReserveClassesByEffectiveDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReserveClasses []*GetReserveClassesByEffectiveDateResponse_ReserveClass `protobuf:"bytes,1,rep,name=reserve_classes,json=reserveClasses,proto3" json:"reserve_classes,omitempty"`
}

func (x *GetReserveClassesByEffectiveDateResponse) Reset() {
	*x = GetReserveClassesByEffectiveDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReserveClassesByEffectiveDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReserveClassesByEffectiveDateResponse) ProtoMessage() {}

func (x *GetReserveClassesByEffectiveDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReserveClassesByEffectiveDateResponse.ProtoReflect.Descriptor instead.
func (*GetReserveClassesByEffectiveDateResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{4}
}

func (x *GetReserveClassesByEffectiveDateResponse) GetReserveClasses() []*GetReserveClassesByEffectiveDateResponse_ReserveClass {
	if x != nil {
		return x.ReserveClasses
	}
	return nil
}

type DeleteReserveClassByEffectiveDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	EffectiveDate  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
}

func (x *DeleteReserveClassByEffectiveDateRequest) Reset() {
	*x = DeleteReserveClassByEffectiveDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReserveClassByEffectiveDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReserveClassByEffectiveDateRequest) ProtoMessage() {}

func (x *DeleteReserveClassByEffectiveDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReserveClassByEffectiveDateRequest.ProtoReflect.Descriptor instead.
func (*DeleteReserveClassByEffectiveDateRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteReserveClassByEffectiveDateRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *DeleteReserveClassByEffectiveDateRequest) GetEffectiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

type DeleteReserveClassByEffectiveDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *DeleteReserveClassByEffectiveDateResponse) Reset() {
	*x = DeleteReserveClassByEffectiveDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReserveClassByEffectiveDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReserveClassByEffectiveDateResponse) ProtoMessage() {}

func (x *DeleteReserveClassByEffectiveDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReserveClassByEffectiveDateResponse.ProtoReflect.Descriptor instead.
func (*DeleteReserveClassByEffectiveDateResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteReserveClassByEffectiveDateResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type CancelScheduledStudentClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *CancelScheduledStudentClassResponse) Reset() {
	*x = CancelScheduledStudentClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelScheduledStudentClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelScheduledStudentClassResponse) ProtoMessage() {}

func (x *CancelScheduledStudentClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelScheduledStudentClassResponse.ProtoReflect.Descriptor instead.
func (*CancelScheduledStudentClassResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{7}
}

func (x *CancelScheduledStudentClassResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type RetrieveScheduledStudentClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *RetrieveScheduledStudentClassRequest) Reset() {
	*x = RetrieveScheduledStudentClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveScheduledStudentClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveScheduledStudentClassRequest) ProtoMessage() {}

func (x *RetrieveScheduledStudentClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveScheduledStudentClassRequest.ProtoReflect.Descriptor instead.
func (*RetrieveScheduledStudentClassRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{8}
}

func (x *RetrieveScheduledStudentClassRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type RetrieveScheduledStudentClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduledClasses []*RetrieveScheduledStudentClassResponse_ScheduledClassInfo `protobuf:"bytes,1,rep,name=scheduled_classes,json=scheduledClasses,proto3" json:"scheduled_classes,omitempty"`
}

func (x *RetrieveScheduledStudentClassResponse) Reset() {
	*x = RetrieveScheduledStudentClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveScheduledStudentClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveScheduledStudentClassResponse) ProtoMessage() {}

func (x *RetrieveScheduledStudentClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveScheduledStudentClassResponse.ProtoReflect.Descriptor instead.
func (*RetrieveScheduledStudentClassResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{9}
}

func (x *RetrieveScheduledStudentClassResponse) GetScheduledClasses() []*RetrieveScheduledStudentClassResponse_ScheduledClassInfo {
	if x != nil {
		return x.ScheduledClasses
	}
	return nil
}

type BulkAssignStudentsToClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Students      []*BulkAssignStudentsToClassRequest_StudentInfo `protobuf:"bytes,1,rep,name=students,proto3" json:"students,omitempty"`
	ClassId       string                                          `protobuf:"bytes,2,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	EffectiveDate *timestamppb.Timestamp                          `protobuf:"bytes,3,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
}

func (x *BulkAssignStudentsToClassRequest) Reset() {
	*x = BulkAssignStudentsToClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAssignStudentsToClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAssignStudentsToClassRequest) ProtoMessage() {}

func (x *BulkAssignStudentsToClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAssignStudentsToClassRequest.ProtoReflect.Descriptor instead.
func (*BulkAssignStudentsToClassRequest) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{10}
}

func (x *BulkAssignStudentsToClassRequest) GetStudents() []*BulkAssignStudentsToClassRequest_StudentInfo {
	if x != nil {
		return x.Students
	}
	return nil
}

func (x *BulkAssignStudentsToClassRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *BulkAssignStudentsToClassRequest) GetEffectiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

type BulkAssignStudentsToClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *BulkAssignStudentsToClassResponse) Reset() {
	*x = BulkAssignStudentsToClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAssignStudentsToClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAssignStudentsToClassResponse) ProtoMessage() {}

func (x *BulkAssignStudentsToClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAssignStudentsToClassResponse.ProtoReflect.Descriptor instead.
func (*BulkAssignStudentsToClassResponse) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{11}
}

func (x *BulkAssignStudentsToClassResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type GetReserveClassesByEffectiveDateResponse_ReserveClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentPackageId string `protobuf:"bytes,1,opt,name=student_package_id,json=studentPackageId,proto3" json:"student_package_id,omitempty"`
	StudentId        string `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId         string `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	ClassId          string `protobuf:"bytes,4,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
}

func (x *GetReserveClassesByEffectiveDateResponse_ReserveClass) Reset() {
	*x = GetReserveClassesByEffectiveDateResponse_ReserveClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReserveClassesByEffectiveDateResponse_ReserveClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReserveClassesByEffectiveDateResponse_ReserveClass) ProtoMessage() {}

func (x *GetReserveClassesByEffectiveDateResponse_ReserveClass) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReserveClassesByEffectiveDateResponse_ReserveClass.ProtoReflect.Descriptor instead.
func (*GetReserveClassesByEffectiveDateResponse_ReserveClass) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetReserveClassesByEffectiveDateResponse_ReserveClass) GetStudentPackageId() string {
	if x != nil {
		return x.StudentPackageId
	}
	return ""
}

func (x *GetReserveClassesByEffectiveDateResponse_ReserveClass) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GetReserveClassesByEffectiveDateResponse_ReserveClass) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *GetReserveClassesByEffectiveDateResponse_ReserveClass) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

type RetrieveScheduledStudentClassResponse_ClassInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId string `protobuf:"bytes,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RetrieveScheduledStudentClassResponse_ClassInfo) Reset() {
	*x = RetrieveScheduledStudentClassResponse_ClassInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveScheduledStudentClassResponse_ClassInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveScheduledStudentClassResponse_ClassInfo) ProtoMessage() {}

func (x *RetrieveScheduledStudentClassResponse_ClassInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveScheduledStudentClassResponse_ClassInfo.ProtoReflect.Descriptor instead.
func (*RetrieveScheduledStudentClassResponse_ClassInfo) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{9, 0}
}

func (x *RetrieveScheduledStudentClassResponse_ClassInfo) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *RetrieveScheduledStudentClassResponse_ClassInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RetrieveScheduledStudentClassResponse_ScheduledClassInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId       string                                           `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	CourseName     string                                           `protobuf:"bytes,2,opt,name=course_name,json=courseName,proto3" json:"course_name,omitempty"`
	CurrentClass   *RetrieveScheduledStudentClassResponse_ClassInfo `protobuf:"bytes,3,opt,name=current_class,json=currentClass,proto3" json:"current_class,omitempty"`
	ScheduledClass *RetrieveScheduledStudentClassResponse_ClassInfo `protobuf:"bytes,4,opt,name=scheduled_class,json=scheduledClass,proto3" json:"scheduled_class,omitempty"`
	EffectiveDate  *timestamppb.Timestamp                           `protobuf:"bytes,5,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
}

func (x *RetrieveScheduledStudentClassResponse_ScheduledClassInfo) Reset() {
	*x = RetrieveScheduledStudentClassResponse_ScheduledClassInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveScheduledStudentClassResponse_ScheduledClassInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveScheduledStudentClassResponse_ScheduledClassInfo) ProtoMessage() {}

func (x *RetrieveScheduledStudentClassResponse_ScheduledClassInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveScheduledStudentClassResponse_ScheduledClassInfo.ProtoReflect.Descriptor instead.
func (*RetrieveScheduledStudentClassResponse_ScheduledClassInfo) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{9, 1}
}

func (x *RetrieveScheduledStudentClassResponse_ScheduledClassInfo) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *RetrieveScheduledStudentClassResponse_ScheduledClassInfo) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *RetrieveScheduledStudentClassResponse_ScheduledClassInfo) GetCurrentClass() *RetrieveScheduledStudentClassResponse_ClassInfo {
	if x != nil {
		return x.CurrentClass
	}
	return nil
}

func (x *RetrieveScheduledStudentClassResponse_ScheduledClassInfo) GetScheduledClass() *RetrieveScheduledStudentClassResponse_ClassInfo {
	if x != nil {
		return x.ScheduledClass
	}
	return nil
}

func (x *RetrieveScheduledStudentClassResponse_ScheduledClassInfo) GetEffectiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

type BulkAssignStudentsToClassRequest_StudentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string                 `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudentPackageId string                 `protobuf:"bytes,2,opt,name=student_package_id,json=studentPackageId,proto3" json:"student_package_id,omitempty"`
	CourseId         string                 `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StartTime        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *BulkAssignStudentsToClassRequest_StudentInfo) Reset() {
	*x = BulkAssignStudentsToClassRequest_StudentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAssignStudentsToClassRequest_StudentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAssignStudentsToClassRequest_StudentInfo) ProtoMessage() {}

func (x *BulkAssignStudentsToClassRequest_StudentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mastermgmt_v1_schedule_class_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAssignStudentsToClassRequest_StudentInfo.ProtoReflect.Descriptor instead.
func (*BulkAssignStudentsToClassRequest_StudentInfo) Descriptor() ([]byte, []int) {
	return file_mastermgmt_v1_schedule_class_proto_rawDescGZIP(), []int{10, 0}
}

func (x *BulkAssignStudentsToClassRequest_StudentInfo) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *BulkAssignStudentsToClassRequest_StudentInfo) GetStudentPackageId() string {
	if x != nil {
		return x.StudentPackageId
	}
	return ""
}

func (x *BulkAssignStudentsToClassRequest_StudentInfo) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *BulkAssignStudentsToClassRequest_StudentInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *BulkAssignStudentsToClassRequest_StudentInfo) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

var File_mastermgmt_v1_schedule_class_proto protoreflect.FileDescriptor

var file_mastermgmt_v1_schedule_class_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x02, 0x0a, 0x1b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x3e,
	0x0a, 0x1c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0xa9,
	0x01, 0x0a, 0x22, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x27, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x42, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x41, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6d, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0e,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x93,
	0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x28, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x79, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x4b, 0x0a,
	0x29, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x45, 0x0a, 0x23, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75,
	0x6c, 0x22, 0x45, 0x0a, 0x24, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xbf, 0x04, 0x0a, 0x25, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x74, 0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xe3, 0x02, 0x0a, 0x12, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x63, 0x0a, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x67,
	0x0a, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0xc5, 0x03, 0x0a, 0x20, 0x42,
	0x75, 0x6c, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x54, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x57, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x1a, 0xe9, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x43, 0x0a, 0x21, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x32, 0x9b, 0x04, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6f, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2a, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x84, 0x01, 0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x31, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x33, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x19, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x2f, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x62, 0x75, 0x66, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76,
	0x31, 0x3b, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mastermgmt_v1_schedule_class_proto_rawDescOnce sync.Once
	file_mastermgmt_v1_schedule_class_proto_rawDescData = file_mastermgmt_v1_schedule_class_proto_rawDesc
)

func file_mastermgmt_v1_schedule_class_proto_rawDescGZIP() []byte {
	file_mastermgmt_v1_schedule_class_proto_rawDescOnce.Do(func() {
		file_mastermgmt_v1_schedule_class_proto_rawDescData = protoimpl.X.CompressGZIP(file_mastermgmt_v1_schedule_class_proto_rawDescData)
	})
	return file_mastermgmt_v1_schedule_class_proto_rawDescData
}

var file_mastermgmt_v1_schedule_class_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_mastermgmt_v1_schedule_class_proto_goTypes = []interface{}{
	(*ScheduleStudentClassRequest)(nil),                              // 0: mastermgmt.v1.ScheduleStudentClassRequest
	(*ScheduleStudentClassResponse)(nil),                             // 1: mastermgmt.v1.ScheduleStudentClassResponse
	(*CancelScheduledStudentClassRequest)(nil),                       // 2: mastermgmt.v1.CancelScheduledStudentClassRequest
	(*GetReserveClassesByEffectiveDateRequest)(nil),                  // 3: mastermgmt.v1.GetReserveClassesByEffectiveDateRequest
	(*GetReserveClassesByEffectiveDateResponse)(nil),                 // 4: mastermgmt.v1.GetReserveClassesByEffectiveDateResponse
	(*DeleteReserveClassByEffectiveDateRequest)(nil),                 // 5: mastermgmt.v1.DeleteReserveClassByEffectiveDateRequest
	(*DeleteReserveClassByEffectiveDateResponse)(nil),                // 6: mastermgmt.v1.DeleteReserveClassByEffectiveDateResponse
	(*CancelScheduledStudentClassResponse)(nil),                      // 7: mastermgmt.v1.CancelScheduledStudentClassResponse
	(*RetrieveScheduledStudentClassRequest)(nil),                     // 8: mastermgmt.v1.RetrieveScheduledStudentClassRequest
	(*RetrieveScheduledStudentClassResponse)(nil),                    // 9: mastermgmt.v1.RetrieveScheduledStudentClassResponse
	(*BulkAssignStudentsToClassRequest)(nil),                         // 10: mastermgmt.v1.BulkAssignStudentsToClassRequest
	(*BulkAssignStudentsToClassResponse)(nil),                        // 11: mastermgmt.v1.BulkAssignStudentsToClassResponse
	(*GetReserveClassesByEffectiveDateResponse_ReserveClass)(nil),    // 12: mastermgmt.v1.GetReserveClassesByEffectiveDateResponse.ReserveClass
	(*RetrieveScheduledStudentClassResponse_ClassInfo)(nil),          // 13: mastermgmt.v1.RetrieveScheduledStudentClassResponse.ClassInfo
	(*RetrieveScheduledStudentClassResponse_ScheduledClassInfo)(nil), // 14: mastermgmt.v1.RetrieveScheduledStudentClassResponse.ScheduledClassInfo
	(*BulkAssignStudentsToClassRequest_StudentInfo)(nil),             // 15: mastermgmt.v1.BulkAssignStudentsToClassRequest.StudentInfo
	(*timestamppb.Timestamp)(nil),                                    // 16: google.protobuf.Timestamp
}
var file_mastermgmt_v1_schedule_class_proto_depIdxs = []int32{
	16, // 0: mastermgmt.v1.ScheduleStudentClassRequest.start_time:type_name -> google.protobuf.Timestamp
	16, // 1: mastermgmt.v1.ScheduleStudentClassRequest.end_time:type_name -> google.protobuf.Timestamp
	16, // 2: mastermgmt.v1.ScheduleStudentClassRequest.effective_date:type_name -> google.protobuf.Timestamp
	16, // 3: mastermgmt.v1.GetReserveClassesByEffectiveDateRequest.effective_date:type_name -> google.protobuf.Timestamp
	12, // 4: mastermgmt.v1.GetReserveClassesByEffectiveDateResponse.reserve_classes:type_name -> mastermgmt.v1.GetReserveClassesByEffectiveDateResponse.ReserveClass
	16, // 5: mastermgmt.v1.DeleteReserveClassByEffectiveDateRequest.effective_date:type_name -> google.protobuf.Timestamp
	14, // 6: mastermgmt.v1.RetrieveScheduledStudentClassResponse.scheduled_classes:type_name -> mastermgmt.v1.RetrieveScheduledStudentClassResponse.ScheduledClassInfo
	15, // 7: mastermgmt.v1.BulkAssignStudentsToClassRequest.students:type_name -> mastermgmt.v1.BulkAssignStudentsToClassRequest.StudentInfo
	16, // 8: mastermgmt.v1.BulkAssignStudentsToClassRequest.effective_date:type_name -> google.protobuf.Timestamp
	13, // 9: mastermgmt.v1.RetrieveScheduledStudentClassResponse.ScheduledClassInfo.current_class:type_name -> mastermgmt.v1.RetrieveScheduledStudentClassResponse.ClassInfo
	13, // 10: mastermgmt.v1.RetrieveScheduledStudentClassResponse.ScheduledClassInfo.scheduled_class:type_name -> mastermgmt.v1.RetrieveScheduledStudentClassResponse.ClassInfo
	16, // 11: mastermgmt.v1.RetrieveScheduledStudentClassResponse.ScheduledClassInfo.effective_date:type_name -> google.protobuf.Timestamp
	16, // 12: mastermgmt.v1.BulkAssignStudentsToClassRequest.StudentInfo.start_time:type_name -> google.protobuf.Timestamp
	16, // 13: mastermgmt.v1.BulkAssignStudentsToClassRequest.StudentInfo.end_time:type_name -> google.protobuf.Timestamp
	0,  // 14: mastermgmt.v1.ScheduleClassService.ScheduleStudentClass:input_type -> mastermgmt.v1.ScheduleStudentClassRequest
	2,  // 15: mastermgmt.v1.ScheduleClassService.CancelScheduledStudentClass:input_type -> mastermgmt.v1.CancelScheduledStudentClassRequest
	8,  // 16: mastermgmt.v1.ScheduleClassService.RetrieveScheduledStudentClass:input_type -> mastermgmt.v1.RetrieveScheduledStudentClassRequest
	10, // 17: mastermgmt.v1.ScheduleClassService.BulkAssignStudentsToClass:input_type -> mastermgmt.v1.BulkAssignStudentsToClassRequest
	1,  // 18: mastermgmt.v1.ScheduleClassService.ScheduleStudentClass:output_type -> mastermgmt.v1.ScheduleStudentClassResponse
	7,  // 19: mastermgmt.v1.ScheduleClassService.CancelScheduledStudentClass:output_type -> mastermgmt.v1.CancelScheduledStudentClassResponse
	9,  // 20: mastermgmt.v1.ScheduleClassService.RetrieveScheduledStudentClass:output_type -> mastermgmt.v1.RetrieveScheduledStudentClassResponse
	11, // 21: mastermgmt.v1.ScheduleClassService.BulkAssignStudentsToClass:output_type -> mastermgmt.v1.BulkAssignStudentsToClassResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_mastermgmt_v1_schedule_class_proto_init() }
func file_mastermgmt_v1_schedule_class_proto_init() {
	if File_mastermgmt_v1_schedule_class_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mastermgmt_v1_schedule_class_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleStudentClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleStudentClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelScheduledStudentClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReserveClassesByEffectiveDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReserveClassesByEffectiveDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReserveClassByEffectiveDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReserveClassByEffectiveDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelScheduledStudentClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveScheduledStudentClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveScheduledStudentClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAssignStudentsToClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAssignStudentsToClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReserveClassesByEffectiveDateResponse_ReserveClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveScheduledStudentClassResponse_ClassInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveScheduledStudentClassResponse_ScheduledClassInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mastermgmt_v1_schedule_class_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAssignStudentsToClassRequest_StudentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mastermgmt_v1_schedule_class_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mastermgmt_v1_schedule_class_proto_goTypes,
		DependencyIndexes: file_mastermgmt_v1_schedule_class_proto_depIdxs,
		MessageInfos:      file_mastermgmt_v1_schedule_class_proto_msgTypes,
	}.Build()
	File_mastermgmt_v1_schedule_class_proto = out.File
	file_mastermgmt_v1_schedule_class_proto_rawDesc = nil
	file_mastermgmt_v1_schedule_class_proto_goTypes = nil
	file_mastermgmt_v1_schedule_class_proto_depIdxs = nil
}
