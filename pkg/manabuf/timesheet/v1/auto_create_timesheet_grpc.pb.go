// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package tpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// AutoCreateTimesheetServiceClient is the client API for AutoCreateTimesheetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AutoCreateTimesheetServiceClient interface {
	UpdateAutoCreateTimesheetFlag(ctx context.Context, in *UpdateAutoCreateTimesheetFlagRequest, opts ...grpc.CallOption) (*UpdateAutoCreateTimesheetFlagResponse, error)
}

type autoCreateTimesheetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAutoCreateTimesheetServiceClient(cc grpc.ClientConnInterface) AutoCreateTimesheetServiceClient {
	return &autoCreateTimesheetServiceClient{cc}
}

func (c *autoCreateTimesheetServiceClient) UpdateAutoCreateTimesheetFlag(ctx context.Context, in *UpdateAutoCreateTimesheetFlagRequest, opts ...grpc.CallOption) (*UpdateAutoCreateTimesheetFlagResponse, error) {
	out := new(UpdateAutoCreateTimesheetFlagResponse)
	err := c.cc.Invoke(ctx, "/timesheet.v1.AutoCreateTimesheetService/UpdateAutoCreateTimesheetFlag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AutoCreateTimesheetServiceServer is the server API for AutoCreateTimesheetService service.
// All implementations should embed UnimplementedAutoCreateTimesheetServiceServer
// for forward compatibility
type AutoCreateTimesheetServiceServer interface {
	UpdateAutoCreateTimesheetFlag(context.Context, *UpdateAutoCreateTimesheetFlagRequest) (*UpdateAutoCreateTimesheetFlagResponse, error)
}

// UnimplementedAutoCreateTimesheetServiceServer should be embedded to have forward compatible implementations.
type UnimplementedAutoCreateTimesheetServiceServer struct {
}

func (UnimplementedAutoCreateTimesheetServiceServer) UpdateAutoCreateTimesheetFlag(context.Context, *UpdateAutoCreateTimesheetFlagRequest) (*UpdateAutoCreateTimesheetFlagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAutoCreateTimesheetFlag not implemented")
}

// UnsafeAutoCreateTimesheetServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AutoCreateTimesheetServiceServer will
// result in compilation errors.
type UnsafeAutoCreateTimesheetServiceServer interface {
	mustEmbedUnimplementedAutoCreateTimesheetServiceServer()
}

func RegisterAutoCreateTimesheetServiceServer(s grpc.ServiceRegistrar, srv AutoCreateTimesheetServiceServer) {
	s.RegisterService(&_AutoCreateTimesheetService_serviceDesc, srv)
}

func _AutoCreateTimesheetService_UpdateAutoCreateTimesheetFlag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAutoCreateTimesheetFlagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoCreateTimesheetServiceServer).UpdateAutoCreateTimesheetFlag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/timesheet.v1.AutoCreateTimesheetService/UpdateAutoCreateTimesheetFlag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoCreateTimesheetServiceServer).UpdateAutoCreateTimesheetFlag(ctx, req.(*UpdateAutoCreateTimesheetFlagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AutoCreateTimesheetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "timesheet.v1.AutoCreateTimesheetService",
	HandlerType: (*AutoCreateTimesheetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateAutoCreateTimesheetFlag",
			Handler:    _AutoCreateTimesheetService_UpdateAutoCreateTimesheetFlag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "timesheet/v1/auto_create_timesheet.proto",
}
