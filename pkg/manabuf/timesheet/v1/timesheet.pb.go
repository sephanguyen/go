// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: timesheet/v1/timesheet.proto

package tpb

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OtherWorkingHoursRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherWorkingHoursId string                 `protobuf:"bytes,1,opt,name=other_working_hours_id,json=otherWorkingHoursId,proto3" json:"other_working_hours_id,omitempty"`
	TimesheetConfigId   string                 `protobuf:"bytes,2,opt,name=timesheet_config_id,json=timesheetConfigId,proto3" json:"timesheet_config_id,omitempty"`
	StartTime           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Remarks             string                 `protobuf:"bytes,5,opt,name=remarks,proto3" json:"remarks,omitempty"`
	// Deprecated: Do not use.
	IsDelete bool `protobuf:"varint,6,opt,name=is_delete,json=isDelete,proto3" json:"is_delete,omitempty"`
}

func (x *OtherWorkingHoursRequest) Reset() {
	*x = OtherWorkingHoursRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherWorkingHoursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherWorkingHoursRequest) ProtoMessage() {}

func (x *OtherWorkingHoursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherWorkingHoursRequest.ProtoReflect.Descriptor instead.
func (*OtherWorkingHoursRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{0}
}

func (x *OtherWorkingHoursRequest) GetOtherWorkingHoursId() string {
	if x != nil {
		return x.OtherWorkingHoursId
	}
	return ""
}

func (x *OtherWorkingHoursRequest) GetTimesheetConfigId() string {
	if x != nil {
		return x.TimesheetConfigId
	}
	return ""
}

func (x *OtherWorkingHoursRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *OtherWorkingHoursRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *OtherWorkingHoursRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

// Deprecated: Do not use.
func (x *OtherWorkingHoursRequest) GetIsDelete() bool {
	if x != nil {
		return x.IsDelete
	}
	return false
}

type TransportationExpensesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransportationExpenseId string             `protobuf:"bytes,1,opt,name=transportation_expense_id,json=transportationExpenseId,proto3" json:"transportation_expense_id,omitempty"`
	Type                    TransportationType `protobuf:"varint,2,opt,name=type,proto3,enum=timesheet.v1.TransportationType" json:"type,omitempty"`
	From                    string             `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                      string             `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Amount                  int32              `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	RoundTrip               bool               `protobuf:"varint,6,opt,name=round_trip,json=roundTrip,proto3" json:"round_trip,omitempty"`
	Remarks                 string             `protobuf:"bytes,7,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *TransportationExpensesRequest) Reset() {
	*x = TransportationExpensesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportationExpensesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportationExpensesRequest) ProtoMessage() {}

func (x *TransportationExpensesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportationExpensesRequest.ProtoReflect.Descriptor instead.
func (*TransportationExpensesRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{1}
}

func (x *TransportationExpensesRequest) GetTransportationExpenseId() string {
	if x != nil {
		return x.TransportationExpenseId
	}
	return ""
}

func (x *TransportationExpensesRequest) GetType() TransportationType {
	if x != nil {
		return x.Type
	}
	return TransportationType_TYPE_INVALID
}

func (x *TransportationExpensesRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransportationExpensesRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransportationExpensesRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransportationExpensesRequest) GetRoundTrip() bool {
	if x != nil {
		return x.RoundTrip
	}
	return false
}

func (x *TransportationExpensesRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type UpdateTimesheetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimesheetId                string                           `protobuf:"bytes,1,opt,name=timesheet_id,json=timesheetId,proto3" json:"timesheet_id,omitempty"`
	Remark                     string                           `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	ListOtherWorkingHours      []*OtherWorkingHoursRequest      `protobuf:"bytes,3,rep,name=list_other_working_hours,json=listOtherWorkingHours,proto3" json:"list_other_working_hours,omitempty"`
	ListTransportationExpenses []*TransportationExpensesRequest `protobuf:"bytes,4,rep,name=list_transportation_expenses,json=listTransportationExpenses,proto3" json:"list_transportation_expenses,omitempty"`
}

func (x *UpdateTimesheetRequest) Reset() {
	*x = UpdateTimesheetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTimesheetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimesheetRequest) ProtoMessage() {}

func (x *UpdateTimesheetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimesheetRequest.ProtoReflect.Descriptor instead.
func (*UpdateTimesheetRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTimesheetRequest) GetTimesheetId() string {
	if x != nil {
		return x.TimesheetId
	}
	return ""
}

func (x *UpdateTimesheetRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateTimesheetRequest) GetListOtherWorkingHours() []*OtherWorkingHoursRequest {
	if x != nil {
		return x.ListOtherWorkingHours
	}
	return nil
}

func (x *UpdateTimesheetRequest) GetListTransportationExpenses() []*TransportationExpensesRequest {
	if x != nil {
		return x.ListTransportationExpenses
	}
	return nil
}

type UpdateTimesheetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateTimesheetResponse) Reset() {
	*x = UpdateTimesheetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTimesheetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimesheetResponse) ProtoMessage() {}

func (x *UpdateTimesheetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimesheetResponse.ProtoReflect.Descriptor instead.
func (*UpdateTimesheetResponse) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTimesheetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CreateTimesheetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffId                    string                           `protobuf:"bytes,1,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	LocationId                 string                           `protobuf:"bytes,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	TimesheetDate              *timestamppb.Timestamp           `protobuf:"bytes,3,opt,name=timesheet_date,json=timesheetDate,proto3" json:"timesheet_date,omitempty"`
	Remark                     string                           `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	ListOtherWorkingHours      []*OtherWorkingHoursRequest      `protobuf:"bytes,5,rep,name=list_other_working_hours,json=listOtherWorkingHours,proto3" json:"list_other_working_hours,omitempty"`
	ListTransportationExpenses []*TransportationExpensesRequest `protobuf:"bytes,6,rep,name=list_transportation_expenses,json=listTransportationExpenses,proto3" json:"list_transportation_expenses,omitempty"`
}

func (x *CreateTimesheetRequest) Reset() {
	*x = CreateTimesheetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTimesheetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTimesheetRequest) ProtoMessage() {}

func (x *CreateTimesheetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTimesheetRequest.ProtoReflect.Descriptor instead.
func (*CreateTimesheetRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTimesheetRequest) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *CreateTimesheetRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *CreateTimesheetRequest) GetTimesheetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TimesheetDate
	}
	return nil
}

func (x *CreateTimesheetRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateTimesheetRequest) GetListOtherWorkingHours() []*OtherWorkingHoursRequest {
	if x != nil {
		return x.ListOtherWorkingHours
	}
	return nil
}

func (x *CreateTimesheetRequest) GetListTransportationExpenses() []*TransportationExpensesRequest {
	if x != nil {
		return x.ListTransportationExpenses
	}
	return nil
}

type CreateTimesheetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimesheetId string `protobuf:"bytes,1,opt,name=timesheet_id,json=timesheetId,proto3" json:"timesheet_id,omitempty"`
}

func (x *CreateTimesheetResponse) Reset() {
	*x = CreateTimesheetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTimesheetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTimesheetResponse) ProtoMessage() {}

func (x *CreateTimesheetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTimesheetResponse.ProtoReflect.Descriptor instead.
func (*CreateTimesheetResponse) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTimesheetResponse) GetTimesheetId() string {
	if x != nil {
		return x.TimesheetId
	}
	return ""
}

type CountTimesheetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffName  string                 `protobuf:"bytes,1,opt,name=staff_name,json=staffName,proto3" json:"staff_name,omitempty"`
	LocationId string                 `protobuf:"bytes,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	StaffId    string                 `protobuf:"bytes,3,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	FromDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
}

func (x *CountTimesheetsRequest) Reset() {
	*x = CountTimesheetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountTimesheetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTimesheetsRequest) ProtoMessage() {}

func (x *CountTimesheetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTimesheetsRequest.ProtoReflect.Descriptor instead.
func (*CountTimesheetsRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{6}
}

func (x *CountTimesheetsRequest) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *CountTimesheetsRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *CountTimesheetsRequest) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *CountTimesheetsRequest) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *CountTimesheetsRequest) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

type CountTimesheetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllCount       int64 `protobuf:"varint,1,opt,name=all_count,json=allCount,proto3" json:"all_count,omitempty"`
	DraftCount     int64 `protobuf:"varint,2,opt,name=draft_count,json=draftCount,proto3" json:"draft_count,omitempty"`
	SubmittedCount int64 `protobuf:"varint,3,opt,name=submitted_count,json=submittedCount,proto3" json:"submitted_count,omitempty"`
	ApprovedCount  int64 `protobuf:"varint,4,opt,name=approved_count,json=approvedCount,proto3" json:"approved_count,omitempty"`
	ConfirmedCount int64 `protobuf:"varint,5,opt,name=confirmed_count,json=confirmedCount,proto3" json:"confirmed_count,omitempty"`
}

func (x *CountTimesheetsResponse) Reset() {
	*x = CountTimesheetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountTimesheetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTimesheetsResponse) ProtoMessage() {}

func (x *CountTimesheetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTimesheetsResponse.ProtoReflect.Descriptor instead.
func (*CountTimesheetsResponse) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{7}
}

func (x *CountTimesheetsResponse) GetAllCount() int64 {
	if x != nil {
		return x.AllCount
	}
	return 0
}

func (x *CountTimesheetsResponse) GetDraftCount() int64 {
	if x != nil {
		return x.DraftCount
	}
	return 0
}

func (x *CountTimesheetsResponse) GetSubmittedCount() int64 {
	if x != nil {
		return x.SubmittedCount
	}
	return 0
}

func (x *CountTimesheetsResponse) GetApprovedCount() int64 {
	if x != nil {
		return x.ApprovedCount
	}
	return 0
}

func (x *CountTimesheetsResponse) GetConfirmedCount() int64 {
	if x != nil {
		return x.ConfirmedCount
	}
	return 0
}

type CountTimesheetsV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffName   string                 `protobuf:"bytes,1,opt,name=staff_name,json=staffName,proto3" json:"staff_name,omitempty"`
	LocationIds []string               `protobuf:"bytes,2,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	StaffId     string                 `protobuf:"bytes,3,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	FromDate    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
}

func (x *CountTimesheetsV2Request) Reset() {
	*x = CountTimesheetsV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountTimesheetsV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTimesheetsV2Request) ProtoMessage() {}

func (x *CountTimesheetsV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTimesheetsV2Request.ProtoReflect.Descriptor instead.
func (*CountTimesheetsV2Request) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{8}
}

func (x *CountTimesheetsV2Request) GetStaffName() string {
	if x != nil {
		return x.StaffName
	}
	return ""
}

func (x *CountTimesheetsV2Request) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *CountTimesheetsV2Request) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *CountTimesheetsV2Request) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *CountTimesheetsV2Request) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

type CountTimesheetsV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllCount       int64 `protobuf:"varint,1,opt,name=all_count,json=allCount,proto3" json:"all_count,omitempty"`
	DraftCount     int64 `protobuf:"varint,2,opt,name=draft_count,json=draftCount,proto3" json:"draft_count,omitempty"`
	SubmittedCount int64 `protobuf:"varint,3,opt,name=submitted_count,json=submittedCount,proto3" json:"submitted_count,omitempty"`
	ApprovedCount  int64 `protobuf:"varint,4,opt,name=approved_count,json=approvedCount,proto3" json:"approved_count,omitempty"`
	ConfirmedCount int64 `protobuf:"varint,5,opt,name=confirmed_count,json=confirmedCount,proto3" json:"confirmed_count,omitempty"`
}

func (x *CountTimesheetsV2Response) Reset() {
	*x = CountTimesheetsV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountTimesheetsV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTimesheetsV2Response) ProtoMessage() {}

func (x *CountTimesheetsV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTimesheetsV2Response.ProtoReflect.Descriptor instead.
func (*CountTimesheetsV2Response) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{9}
}

func (x *CountTimesheetsV2Response) GetAllCount() int64 {
	if x != nil {
		return x.AllCount
	}
	return 0
}

func (x *CountTimesheetsV2Response) GetDraftCount() int64 {
	if x != nil {
		return x.DraftCount
	}
	return 0
}

func (x *CountTimesheetsV2Response) GetSubmittedCount() int64 {
	if x != nil {
		return x.SubmittedCount
	}
	return 0
}

func (x *CountTimesheetsV2Response) GetApprovedCount() int64 {
	if x != nil {
		return x.ApprovedCount
	}
	return 0
}

func (x *CountTimesheetsV2Response) GetConfirmedCount() int64 {
	if x != nil {
		return x.ConfirmedCount
	}
	return 0
}

type CountSubmittedTimesheetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationIds []string `protobuf:"bytes,1,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *CountSubmittedTimesheetsRequest) Reset() {
	*x = CountSubmittedTimesheetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSubmittedTimesheetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSubmittedTimesheetsRequest) ProtoMessage() {}

func (x *CountSubmittedTimesheetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSubmittedTimesheetsRequest.ProtoReflect.Descriptor instead.
func (*CountSubmittedTimesheetsRequest) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{10}
}

func (x *CountSubmittedTimesheetsRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type CountSubmittedTimesheetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	IsEnabled bool  `protobuf:"varint,2,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
}

func (x *CountSubmittedTimesheetsResponse) Reset() {
	*x = CountSubmittedTimesheetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timesheet_v1_timesheet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSubmittedTimesheetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSubmittedTimesheetsResponse) ProtoMessage() {}

func (x *CountSubmittedTimesheetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timesheet_v1_timesheet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSubmittedTimesheetsResponse.ProtoReflect.Descriptor instead.
func (*CountSubmittedTimesheetsResponse) Descriptor() ([]byte, []int) {
	return file_timesheet_v1_timesheet_proto_rawDescGZIP(), []int{11}
}

func (x *CountSubmittedTimesheetsResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CountSubmittedTimesheetsResponse) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

var File_timesheet_v1_timesheet_proto protoreflect.FileDescriptor

var file_timesheet_v1_timesheet_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x02, 0x0a, 0x18, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x68, 0x65, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x12, 0x1f, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x69, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x1d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x72,
	0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x72, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0xa3, 0x02,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x5f, 0x0a, 0x18, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x15, 0x6c,
	0x69, 0x73, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x12, 0x6d, 0x0a, 0x1c, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x65,
	0x6e, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x1a, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xff, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x41, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x5f, 0x0a, 0x18, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x6d, 0x0a, 0x1c, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x1a,
	0x6c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0xd0, 0x01, 0x0a,
	0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6c, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xe5, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x73, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x56, 0x32, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x1f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x73, 0x22, 0x57, 0x0a, 0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x32, 0xd3, 0x04, 0x0a, 0x10,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5e, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5e, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5e, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x64, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x73, 0x56, 0x32, 0x12, 0x26, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x73, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x56, 0x32, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb8, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x22, 0x32, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x2f, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01,
	0x2a, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_timesheet_v1_timesheet_proto_rawDescOnce sync.Once
	file_timesheet_v1_timesheet_proto_rawDescData = file_timesheet_v1_timesheet_proto_rawDesc
)

func file_timesheet_v1_timesheet_proto_rawDescGZIP() []byte {
	file_timesheet_v1_timesheet_proto_rawDescOnce.Do(func() {
		file_timesheet_v1_timesheet_proto_rawDescData = protoimpl.X.CompressGZIP(file_timesheet_v1_timesheet_proto_rawDescData)
	})
	return file_timesheet_v1_timesheet_proto_rawDescData
}

var file_timesheet_v1_timesheet_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_timesheet_v1_timesheet_proto_goTypes = []interface{}{
	(*OtherWorkingHoursRequest)(nil),         // 0: timesheet.v1.OtherWorkingHoursRequest
	(*TransportationExpensesRequest)(nil),    // 1: timesheet.v1.TransportationExpensesRequest
	(*UpdateTimesheetRequest)(nil),           // 2: timesheet.v1.UpdateTimesheetRequest
	(*UpdateTimesheetResponse)(nil),          // 3: timesheet.v1.UpdateTimesheetResponse
	(*CreateTimesheetRequest)(nil),           // 4: timesheet.v1.CreateTimesheetRequest
	(*CreateTimesheetResponse)(nil),          // 5: timesheet.v1.CreateTimesheetResponse
	(*CountTimesheetsRequest)(nil),           // 6: timesheet.v1.CountTimesheetsRequest
	(*CountTimesheetsResponse)(nil),          // 7: timesheet.v1.CountTimesheetsResponse
	(*CountTimesheetsV2Request)(nil),         // 8: timesheet.v1.CountTimesheetsV2Request
	(*CountTimesheetsV2Response)(nil),        // 9: timesheet.v1.CountTimesheetsV2Response
	(*CountSubmittedTimesheetsRequest)(nil),  // 10: timesheet.v1.CountSubmittedTimesheetsRequest
	(*CountSubmittedTimesheetsResponse)(nil), // 11: timesheet.v1.CountSubmittedTimesheetsResponse
	(*timestamppb.Timestamp)(nil),            // 12: google.protobuf.Timestamp
	(TransportationType)(0),                  // 13: timesheet.v1.TransportationType
}
var file_timesheet_v1_timesheet_proto_depIdxs = []int32{
	12, // 0: timesheet.v1.OtherWorkingHoursRequest.start_time:type_name -> google.protobuf.Timestamp
	12, // 1: timesheet.v1.OtherWorkingHoursRequest.end_time:type_name -> google.protobuf.Timestamp
	13, // 2: timesheet.v1.TransportationExpensesRequest.type:type_name -> timesheet.v1.TransportationType
	0,  // 3: timesheet.v1.UpdateTimesheetRequest.list_other_working_hours:type_name -> timesheet.v1.OtherWorkingHoursRequest
	1,  // 4: timesheet.v1.UpdateTimesheetRequest.list_transportation_expenses:type_name -> timesheet.v1.TransportationExpensesRequest
	12, // 5: timesheet.v1.CreateTimesheetRequest.timesheet_date:type_name -> google.protobuf.Timestamp
	0,  // 6: timesheet.v1.CreateTimesheetRequest.list_other_working_hours:type_name -> timesheet.v1.OtherWorkingHoursRequest
	1,  // 7: timesheet.v1.CreateTimesheetRequest.list_transportation_expenses:type_name -> timesheet.v1.TransportationExpensesRequest
	12, // 8: timesheet.v1.CountTimesheetsRequest.from_date:type_name -> google.protobuf.Timestamp
	12, // 9: timesheet.v1.CountTimesheetsRequest.to_date:type_name -> google.protobuf.Timestamp
	12, // 10: timesheet.v1.CountTimesheetsV2Request.from_date:type_name -> google.protobuf.Timestamp
	12, // 11: timesheet.v1.CountTimesheetsV2Request.to_date:type_name -> google.protobuf.Timestamp
	2,  // 12: timesheet.v1.TimesheetService.UpdateTimesheet:input_type -> timesheet.v1.UpdateTimesheetRequest
	4,  // 13: timesheet.v1.TimesheetService.CreateTimesheet:input_type -> timesheet.v1.CreateTimesheetRequest
	6,  // 14: timesheet.v1.TimesheetService.CountTimesheets:input_type -> timesheet.v1.CountTimesheetsRequest
	8,  // 15: timesheet.v1.TimesheetService.CountTimesheetsV2:input_type -> timesheet.v1.CountTimesheetsV2Request
	10, // 16: timesheet.v1.TimesheetService.CountSubmittedTimesheets:input_type -> timesheet.v1.CountSubmittedTimesheetsRequest
	3,  // 17: timesheet.v1.TimesheetService.UpdateTimesheet:output_type -> timesheet.v1.UpdateTimesheetResponse
	5,  // 18: timesheet.v1.TimesheetService.CreateTimesheet:output_type -> timesheet.v1.CreateTimesheetResponse
	7,  // 19: timesheet.v1.TimesheetService.CountTimesheets:output_type -> timesheet.v1.CountTimesheetsResponse
	9,  // 20: timesheet.v1.TimesheetService.CountTimesheetsV2:output_type -> timesheet.v1.CountTimesheetsV2Response
	11, // 21: timesheet.v1.TimesheetService.CountSubmittedTimesheets:output_type -> timesheet.v1.CountSubmittedTimesheetsResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_timesheet_v1_timesheet_proto_init() }
func file_timesheet_v1_timesheet_proto_init() {
	if File_timesheet_v1_timesheet_proto != nil {
		return
	}
	file_timesheet_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_timesheet_v1_timesheet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherWorkingHoursRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportationExpensesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTimesheetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTimesheetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTimesheetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTimesheetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountTimesheetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountTimesheetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountTimesheetsV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountTimesheetsV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSubmittedTimesheetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timesheet_v1_timesheet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSubmittedTimesheetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timesheet_v1_timesheet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timesheet_v1_timesheet_proto_goTypes,
		DependencyIndexes: file_timesheet_v1_timesheet_proto_depIdxs,
		MessageInfos:      file_timesheet_v1_timesheet_proto_msgTypes,
	}.Build()
	File_timesheet_v1_timesheet_proto = out.File
	file_timesheet_v1_timesheet_proto_rawDesc = nil
	file_timesheet_v1_timesheet_proto_goTypes = nil
	file_timesheet_v1_timesheet_proto_depIdxs = nil
}
