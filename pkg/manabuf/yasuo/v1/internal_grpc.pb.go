// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package ypb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// InternalServiceClient is the client API for InternalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InternalServiceClient interface {
	RetrievePushedNotificationMessages(ctx context.Context, in *RetrievePushedNotificationMessageRequest, opts ...grpc.CallOption) (*RetrievePushedNotificationMessageResponse, error)
}

type internalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInternalServiceClient(cc grpc.ClientConnInterface) InternalServiceClient {
	return &internalServiceClient{cc}
}

func (c *internalServiceClient) RetrievePushedNotificationMessages(ctx context.Context, in *RetrievePushedNotificationMessageRequest, opts ...grpc.CallOption) (*RetrievePushedNotificationMessageResponse, error) {
	out := new(RetrievePushedNotificationMessageResponse)
	err := c.cc.Invoke(ctx, "/yasuo.v1.InternalService/RetrievePushedNotificationMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternalServiceServer is the server API for InternalService service.
// All implementations should embed UnimplementedInternalServiceServer
// for forward compatibility
type InternalServiceServer interface {
	RetrievePushedNotificationMessages(context.Context, *RetrievePushedNotificationMessageRequest) (*RetrievePushedNotificationMessageResponse, error)
}

// UnimplementedInternalServiceServer should be embedded to have forward compatible implementations.
type UnimplementedInternalServiceServer struct {
}

func (UnimplementedInternalServiceServer) RetrievePushedNotificationMessages(context.Context, *RetrievePushedNotificationMessageRequest) (*RetrievePushedNotificationMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrievePushedNotificationMessages not implemented")
}

// UnsafeInternalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InternalServiceServer will
// result in compilation errors.
type UnsafeInternalServiceServer interface {
	mustEmbedUnimplementedInternalServiceServer()
}

func RegisterInternalServiceServer(s grpc.ServiceRegistrar, srv InternalServiceServer) {
	s.RegisterService(&_InternalService_serviceDesc, srv)
}

func _InternalService_RetrievePushedNotificationMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrievePushedNotificationMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServiceServer).RetrievePushedNotificationMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yasuo.v1.InternalService/RetrievePushedNotificationMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServiceServer).RetrievePushedNotificationMessages(ctx, req.(*RetrievePushedNotificationMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InternalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yasuo.v1.InternalService",
	HandlerType: (*InternalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RetrievePushedNotificationMessages",
			Handler:    _InternalService_RetrievePushedNotificationMessages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yasuo/v1/internal.proto",
}
