// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: invoicemgmt/v1/invoice.proto

package invoice_pb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type IssueInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	InvoiceId       int32                  `protobuf:"varint,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	PaymentMethod   PaymentMethod          `protobuf:"varint,2,opt,name=payment_method,json=paymentMethod,proto3,enum=invoicemgmt.v1.PaymentMethod" json:"payment_method,omitempty"`
	DueDate         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	ExpiryDate      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	Remarks         string                 `protobuf:"bytes,5,opt,name=remarks,proto3" json:"remarks,omitempty"`
	InvoiceIdString string                 `protobuf:"bytes,6,opt,name=invoice_id_string,json=invoiceIdString,proto3" json:"invoice_id_string,omitempty"`
}

func (x *IssueInvoiceRequest) Reset() {
	*x = IssueInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueInvoiceRequest) ProtoMessage() {}

func (x *IssueInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueInvoiceRequest.ProtoReflect.Descriptor instead.
func (*IssueInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Do not use.
func (x *IssueInvoiceRequest) GetInvoiceId() int32 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

func (x *IssueInvoiceRequest) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_DIRECT_DEBIT
}

func (x *IssueInvoiceRequest) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *IssueInvoiceRequest) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

func (x *IssueInvoiceRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *IssueInvoiceRequest) GetInvoiceIdString() string {
	if x != nil {
		return x.InvoiceIdString
	}
	return ""
}

type IssueInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *IssueInvoiceResponse) Reset() {
	*x = IssueInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueInvoiceResponse) ProtoMessage() {}

func (x *IssueInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueInvoiceResponse.ProtoReflect.Descriptor instead.
func (*IssueInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{1}
}

func (x *IssueInvoiceResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type RetrieveInvoiceRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string     `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Paging    *v1.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *RetrieveInvoiceRecordsRequest) Reset() {
	*x = RetrieveInvoiceRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceRecordsRequest) ProtoMessage() {}

func (x *RetrieveInvoiceRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceRecordsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceRecordsRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveInvoiceRecordsRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *RetrieveInvoiceRecordsRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type InvoiceRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	InvoiceId       int32                  `protobuf:"varint,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	DueDate         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	InvoiceStatus   InvoiceStatus          `protobuf:"varint,3,opt,name=invoice_status,json=invoiceStatus,proto3,enum=invoicemgmt.v1.InvoiceStatus" json:"invoice_status,omitempty"`
	Total           float64                `protobuf:"fixed64,4,opt,name=total,proto3" json:"total,omitempty"`
	InvoiceIdString string                 `protobuf:"bytes,5,opt,name=invoice_id_string,json=invoiceIdString,proto3" json:"invoice_id_string,omitempty"`
}

func (x *InvoiceRecord) Reset() {
	*x = InvoiceRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceRecord) ProtoMessage() {}

func (x *InvoiceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceRecord.ProtoReflect.Descriptor instead.
func (*InvoiceRecord) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{3}
}

// Deprecated: Do not use.
func (x *InvoiceRecord) GetInvoiceId() int32 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

func (x *InvoiceRecord) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *InvoiceRecord) GetInvoiceStatus() InvoiceStatus {
	if x != nil {
		return x.InvoiceStatus
	}
	return InvoiceStatus_DRAFT
}

func (x *InvoiceRecord) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *InvoiceRecord) GetInvoiceIdString() string {
	if x != nil {
		return x.InvoiceIdString
	}
	return ""
}

type RetrieveInvoiceRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage       *v1.Paging       `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	InvoiceRecords []*InvoiceRecord `protobuf:"bytes,2,rep,name=invoice_records,json=invoiceRecords,proto3" json:"invoice_records,omitempty"`
}

func (x *RetrieveInvoiceRecordsResponse) Reset() {
	*x = RetrieveInvoiceRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceRecordsResponse) ProtoMessage() {}

func (x *RetrieveInvoiceRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceRecordsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceRecordsResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{4}
}

func (x *RetrieveInvoiceRecordsResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveInvoiceRecordsResponse) GetInvoiceRecords() []*InvoiceRecord {
	if x != nil {
		return x.InvoiceRecords
	}
	return nil
}

type GenerateInvoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invoices []*GenerateInvoiceDetail `protobuf:"bytes,1,rep,name=invoices,proto3" json:"invoices,omitempty"`
}

func (x *GenerateInvoicesRequest) Reset() {
	*x = GenerateInvoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateInvoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoicesRequest) ProtoMessage() {}

func (x *GenerateInvoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoicesRequest.ProtoReflect.Descriptor instead.
func (*GenerateInvoicesRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateInvoicesRequest) GetInvoices() []*GenerateInvoiceDetail {
	if x != nil {
		return x.Invoices
	}
	return nil
}

type GenerateInvoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful   bool                                                     `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Errors       []*GenerateInvoicesResponse_GenerateInvoiceResponseError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	InvoicesData []*GenerateInvoicesResponse_InvoicesData                 `protobuf:"bytes,3,rep,name=invoices_data,json=invoicesData,proto3" json:"invoices_data,omitempty"`
}

func (x *GenerateInvoicesResponse) Reset() {
	*x = GenerateInvoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateInvoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoicesResponse) ProtoMessage() {}

func (x *GenerateInvoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoicesResponse.ProtoReflect.Descriptor instead.
func (*GenerateInvoicesResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{6}
}

func (x *GenerateInvoicesResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *GenerateInvoicesResponse) GetErrors() []*GenerateInvoicesResponse_GenerateInvoiceResponseError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GenerateInvoicesResponse) GetInvoicesData() []*GenerateInvoicesResponse_InvoicesData {
	if x != nil {
		return x.InvoicesData
	}
	return nil
}

type GenerateInvoiceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId   string      `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	BillItemIds []int32     `protobuf:"varint,2,rep,packed,name=bill_item_ids,json=billItemIds,proto3" json:"bill_item_ids,omitempty"`
	SubTotal    float32     `protobuf:"fixed32,3,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	Total       int32       `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	InvoiceType InvoiceType `protobuf:"varint,5,opt,name=invoice_type,json=invoiceType,proto3,enum=invoicemgmt.v1.InvoiceType" json:"invoice_type,omitempty"`
}

func (x *GenerateInvoiceDetail) Reset() {
	*x = GenerateInvoiceDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateInvoiceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoiceDetail) ProtoMessage() {}

func (x *GenerateInvoiceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoiceDetail.ProtoReflect.Descriptor instead.
func (*GenerateInvoiceDetail) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{7}
}

func (x *GenerateInvoiceDetail) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GenerateInvoiceDetail) GetBillItemIds() []int32 {
	if x != nil {
		return x.BillItemIds
	}
	return nil
}

func (x *GenerateInvoiceDetail) GetSubTotal() float32 {
	if x != nil {
		return x.SubTotal
	}
	return 0
}

func (x *GenerateInvoiceDetail) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GenerateInvoiceDetail) GetInvoiceType() InvoiceType {
	if x != nil {
		return x.InvoiceType
	}
	return InvoiceType_SCHEDULED
}

type RetrieveInvoiceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	InvoiceId       int32  `protobuf:"varint,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	InvoiceIdString string `protobuf:"bytes,2,opt,name=invoice_id_string,json=invoiceIdString,proto3" json:"invoice_id_string,omitempty"`
}

func (x *RetrieveInvoiceInfoRequest) Reset() {
	*x = RetrieveInvoiceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceInfoRequest) ProtoMessage() {}

func (x *RetrieveInvoiceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceInfoRequest.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceInfoRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Do not use.
func (x *RetrieveInvoiceInfoRequest) GetInvoiceId() int32 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

func (x *RetrieveInvoiceInfoRequest) GetInvoiceIdString() string {
	if x != nil {
		return x.InvoiceIdString
	}
	return ""
}

type RetrieveInvoiceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful  bool                           `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	DueDate     *timestamppb.Timestamp         `protobuf:"bytes,2,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	CreatedDate *timestamppb.Timestamp         `protobuf:"bytes,3,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	Status      InvoiceStatus                  `protobuf:"varint,4,opt,name=status,proto3,enum=invoicemgmt.v1.InvoiceStatus" json:"status,omitempty"`
	SubTotal    float64                        `protobuf:"fixed64,5,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	Total       float64                        `protobuf:"fixed64,6,opt,name=total,proto3" json:"total,omitempty"`
	BillItems   []*RetrieveInvoiceInfoBillItem `protobuf:"bytes,7,rep,name=bill_items,json=billItems,proto3" json:"bill_items,omitempty"`
}

func (x *RetrieveInvoiceInfoResponse) Reset() {
	*x = RetrieveInvoiceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceInfoResponse) ProtoMessage() {}

func (x *RetrieveInvoiceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceInfoResponse.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceInfoResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{9}
}

func (x *RetrieveInvoiceInfoResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *RetrieveInvoiceInfoResponse) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *RetrieveInvoiceInfoResponse) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *RetrieveInvoiceInfoResponse) GetStatus() InvoiceStatus {
	if x != nil {
		return x.Status
	}
	return InvoiceStatus_DRAFT
}

func (x *RetrieveInvoiceInfoResponse) GetSubTotal() float64 {
	if x != nil {
		return x.SubTotal
	}
	return 0
}

func (x *RetrieveInvoiceInfoResponse) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RetrieveInvoiceInfoResponse) GetBillItems() []*RetrieveInvoiceInfoBillItem {
	if x != nil {
		return x.BillItems
	}
	return nil
}

type RetrieveInvoiceInfoBillItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillItemId          int32   `protobuf:"varint,1,opt,name=bill_item_id,json=billItemId,proto3" json:"bill_item_id,omitempty"`
	Description         string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DiscountAmountType  string  `protobuf:"bytes,3,opt,name=discount_amount_type,json=discountAmountType,proto3" json:"discount_amount_type,omitempty"`
	DiscountAmountValue float64 `protobuf:"fixed64,4,opt,name=discount_amount_value,json=discountAmountValue,proto3" json:"discount_amount_value,omitempty"`
	DiscountAmount      float64 `protobuf:"fixed64,5,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	TaxPercentage       int32   `protobuf:"varint,6,opt,name=tax_percentage,json=taxPercentage,proto3" json:"tax_percentage,omitempty"`
	TaxAmount           float64 `protobuf:"fixed64,7,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	Amount              float64 `protobuf:"fixed64,8,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *RetrieveInvoiceInfoBillItem) Reset() {
	*x = RetrieveInvoiceInfoBillItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceInfoBillItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceInfoBillItem) ProtoMessage() {}

func (x *RetrieveInvoiceInfoBillItem) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceInfoBillItem.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceInfoBillItem) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{10}
}

func (x *RetrieveInvoiceInfoBillItem) GetBillItemId() int32 {
	if x != nil {
		return x.BillItemId
	}
	return 0
}

func (x *RetrieveInvoiceInfoBillItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RetrieveInvoiceInfoBillItem) GetDiscountAmountType() string {
	if x != nil {
		return x.DiscountAmountType
	}
	return ""
}

func (x *RetrieveInvoiceInfoBillItem) GetDiscountAmountValue() float64 {
	if x != nil {
		return x.DiscountAmountValue
	}
	return 0
}

func (x *RetrieveInvoiceInfoBillItem) GetDiscountAmount() float64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *RetrieveInvoiceInfoBillItem) GetTaxPercentage() int32 {
	if x != nil {
		return x.TaxPercentage
	}
	return 0
}

func (x *RetrieveInvoiceInfoBillItem) GetTaxAmount() float64 {
	if x != nil {
		return x.TaxAmount
	}
	return 0
}

func (x *RetrieveInvoiceInfoBillItem) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type VoidInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId string `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	Remarks   string `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *VoidInvoiceRequest) Reset() {
	*x = VoidInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoidInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidInvoiceRequest) ProtoMessage() {}

func (x *VoidInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidInvoiceRequest.ProtoReflect.Descriptor instead.
func (*VoidInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{11}
}

func (x *VoidInvoiceRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *VoidInvoiceRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type VoidInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *VoidInvoiceResponse) Reset() {
	*x = VoidInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoidInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidInvoiceResponse) ProtoMessage() {}

func (x *VoidInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidInvoiceResponse.ProtoReflect.Descriptor instead.
func (*VoidInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{12}
}

func (x *VoidInvoiceResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type ApproveInvoicePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId   string                 `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	PaymentDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	Remarks     string                 `protobuf:"bytes,3,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *ApproveInvoicePaymentRequest) Reset() {
	*x = ApproveInvoicePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveInvoicePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveInvoicePaymentRequest) ProtoMessage() {}

func (x *ApproveInvoicePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveInvoicePaymentRequest.ProtoReflect.Descriptor instead.
func (*ApproveInvoicePaymentRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{13}
}

func (x *ApproveInvoicePaymentRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *ApproveInvoicePaymentRequest) GetPaymentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentDate
	}
	return nil
}

func (x *ApproveInvoicePaymentRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type ApproveInvoicePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *ApproveInvoicePaymentResponse) Reset() {
	*x = ApproveInvoicePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveInvoicePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveInvoicePaymentResponse) ProtoMessage() {}

func (x *ApproveInvoicePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveInvoicePaymentResponse.ProtoReflect.Descriptor instead.
func (*ApproveInvoicePaymentResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{14}
}

func (x *ApproveInvoicePaymentResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type CancelInvoicePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remarks   string `protobuf:"bytes,1,opt,name=remarks,proto3" json:"remarks,omitempty"`
	InvoiceId string `protobuf:"bytes,2,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
}

func (x *CancelInvoicePaymentRequest) Reset() {
	*x = CancelInvoicePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelInvoicePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelInvoicePaymentRequest) ProtoMessage() {}

func (x *CancelInvoicePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelInvoicePaymentRequest.ProtoReflect.Descriptor instead.
func (*CancelInvoicePaymentRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{15}
}

func (x *CancelInvoicePaymentRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *CancelInvoicePaymentRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

type CancelInvoicePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *CancelInvoicePaymentResponse) Reset() {
	*x = CancelInvoicePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelInvoicePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelInvoicePaymentResponse) ProtoMessage() {}

func (x *CancelInvoicePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelInvoicePaymentResponse.ProtoReflect.Descriptor instead.
func (*CancelInvoicePaymentResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{16}
}

func (x *CancelInvoicePaymentResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type InvoiceScheduleCheckerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=invoice_date,json=invoiceDate,proto3" json:"invoice_date,omitempty"`
	OrganizationId string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *InvoiceScheduleCheckerRequest) Reset() {
	*x = InvoiceScheduleCheckerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceScheduleCheckerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceScheduleCheckerRequest) ProtoMessage() {}

func (x *InvoiceScheduleCheckerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceScheduleCheckerRequest.ProtoReflect.Descriptor instead.
func (*InvoiceScheduleCheckerRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{17}
}

func (x *InvoiceScheduleCheckerRequest) GetInvoiceDate() *timestamppb.Timestamp {
	if x != nil {
		return x.InvoiceDate
	}
	return nil
}

func (x *InvoiceScheduleCheckerRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type InvoiceScheduleCheckerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *InvoiceScheduleCheckerResponse) Reset() {
	*x = InvoiceScheduleCheckerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceScheduleCheckerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceScheduleCheckerResponse) ProtoMessage() {}

func (x *InvoiceScheduleCheckerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceScheduleCheckerResponse.ProtoReflect.Descriptor instead.
func (*InvoiceScheduleCheckerResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{18}
}

func (x *InvoiceScheduleCheckerResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type BulkIssueInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceIds []string `protobuf:"bytes,1,rep,name=invoice_ids,json=invoiceIds,proto3" json:"invoice_ids,omitempty"`
	// Deprecated: Do not use.
	PaymentMethod PaymentMethod `protobuf:"varint,2,opt,name=payment_method,json=paymentMethod,proto3,enum=invoicemgmt.v1.PaymentMethod" json:"payment_method,omitempty"`
	// Deprecated: Do not use.
	DueDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	// Deprecated: Do not use.
	ExpiryDate             *timestamppb.Timestamp                                 `protobuf:"bytes,4,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	ConvenienceStoreDates  *BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates `protobuf:"bytes,5,opt,name=convenience_store_dates,json=convenienceStoreDates,proto3" json:"convenience_store_dates,omitempty"`
	DirectDebitDates       *BulkIssueInvoiceRequest_BulkIssueDirectDebitDates     `protobuf:"bytes,6,opt,name=direct_debit_dates,json=directDebitDates,proto3" json:"direct_debit_dates,omitempty"`
	BulkIssuePaymentMethod BulkIssuePaymentMethod                                 `protobuf:"varint,7,opt,name=bulk_issue_payment_method,json=bulkIssuePaymentMethod,proto3,enum=invoicemgmt.v1.BulkIssuePaymentMethod" json:"bulk_issue_payment_method,omitempty"` //BULK_ISSUE_CONVENIENCE_STORE or BULK_ISSUE_DEFAULT_PAYMENT
}

func (x *BulkIssueInvoiceRequest) Reset() {
	*x = BulkIssueInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkIssueInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkIssueInvoiceRequest) ProtoMessage() {}

func (x *BulkIssueInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkIssueInvoiceRequest.ProtoReflect.Descriptor instead.
func (*BulkIssueInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{19}
}

func (x *BulkIssueInvoiceRequest) GetInvoiceIds() []string {
	if x != nil {
		return x.InvoiceIds
	}
	return nil
}

// Deprecated: Do not use.
func (x *BulkIssueInvoiceRequest) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_DIRECT_DEBIT
}

// Deprecated: Do not use.
func (x *BulkIssueInvoiceRequest) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

// Deprecated: Do not use.
func (x *BulkIssueInvoiceRequest) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

func (x *BulkIssueInvoiceRequest) GetConvenienceStoreDates() *BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates {
	if x != nil {
		return x.ConvenienceStoreDates
	}
	return nil
}

func (x *BulkIssueInvoiceRequest) GetDirectDebitDates() *BulkIssueInvoiceRequest_BulkIssueDirectDebitDates {
	if x != nil {
		return x.DirectDebitDates
	}
	return nil
}

func (x *BulkIssueInvoiceRequest) GetBulkIssuePaymentMethod() BulkIssuePaymentMethod {
	if x != nil {
		return x.BulkIssuePaymentMethod
	}
	return BulkIssuePaymentMethod_BULK_ISSUE_CONVENIENCE_STORE
}

type BulkIssueInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BulkIssueInvoiceResponse) Reset() {
	*x = BulkIssueInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkIssueInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkIssueInvoiceResponse) ProtoMessage() {}

func (x *BulkIssueInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkIssueInvoiceResponse.ProtoReflect.Descriptor instead.
func (*BulkIssueInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{20}
}

func (x *BulkIssueInvoiceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CreatePaymentRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethod         PaymentMethod                                     `protobuf:"varint,1,opt,name=payment_method,json=paymentMethod,proto3,enum=invoicemgmt.v1.PaymentMethod" json:"payment_method,omitempty"`
	PaymentIds            []string                                          `protobuf:"bytes,2,rep,name=payment_ids,json=paymentIds,proto3" json:"payment_ids,omitempty"`
	ConvenienceStoreDates *CreatePaymentRequestRequest_ConvenieceStoreDates `protobuf:"bytes,3,opt,name=convenience_store_dates,json=convenienceStoreDates,proto3" json:"convenience_store_dates,omitempty"`
	DirectDebitDates      *CreatePaymentRequestRequest_DirectDebitDates     `protobuf:"bytes,4,opt,name=direct_debit_dates,json=directDebitDates,proto3" json:"direct_debit_dates,omitempty"`
}

func (x *CreatePaymentRequestRequest) Reset() {
	*x = CreatePaymentRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequestRequest) ProtoMessage() {}

func (x *CreatePaymentRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequestRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequestRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{21}
}

func (x *CreatePaymentRequestRequest) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_DIRECT_DEBIT
}

func (x *CreatePaymentRequestRequest) GetPaymentIds() []string {
	if x != nil {
		return x.PaymentIds
	}
	return nil
}

func (x *CreatePaymentRequestRequest) GetConvenienceStoreDates() *CreatePaymentRequestRequest_ConvenieceStoreDates {
	if x != nil {
		return x.ConvenienceStoreDates
	}
	return nil
}

func (x *CreatePaymentRequestRequest) GetDirectDebitDates() *CreatePaymentRequestRequest_DirectDebitDates {
	if x != nil {
		return x.DirectDebitDates
	}
	return nil
}

type CreatePaymentRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful           bool   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	BulkPaymentRequestId string `protobuf:"bytes,2,opt,name=bulk_payment_request_id,json=bulkPaymentRequestId,proto3" json:"bulk_payment_request_id,omitempty"`
}

func (x *CreatePaymentRequestResponse) Reset() {
	*x = CreatePaymentRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequestResponse) ProtoMessage() {}

func (x *CreatePaymentRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequestResponse.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequestResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{22}
}

func (x *CreatePaymentRequestResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *CreatePaymentRequestResponse) GetBulkPaymentRequestId() string {
	if x != nil {
		return x.BulkPaymentRequestId
	}
	return ""
}

type DownloadPaymentFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentRequestFileId string `protobuf:"bytes,1,opt,name=payment_request_file_id,json=paymentRequestFileId,proto3" json:"payment_request_file_id,omitempty"`
}

func (x *DownloadPaymentFileRequest) Reset() {
	*x = DownloadPaymentFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadPaymentFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadPaymentFileRequest) ProtoMessage() {}

func (x *DownloadPaymentFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadPaymentFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadPaymentFileRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{23}
}

func (x *DownloadPaymentFileRequest) GetPaymentRequestFileId() string {
	if x != nil {
		return x.PaymentRequestFileId
	}
	return ""
}

type DownloadPaymentFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool     `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Data       []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	FileType   FileType `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3,enum=invoicemgmt.v1.FileType" json:"file_type,omitempty"`
}

func (x *DownloadPaymentFileResponse) Reset() {
	*x = DownloadPaymentFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadPaymentFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadPaymentFileResponse) ProtoMessage() {}

func (x *DownloadPaymentFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadPaymentFileResponse.ProtoReflect.Descriptor instead.
func (*DownloadPaymentFileResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{24}
}

func (x *DownloadPaymentFileResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *DownloadPaymentFileResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DownloadPaymentFileResponse) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_TXT
}

type ImportPaymentValidationDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSequenceNumber int32         `protobuf:"varint,1,opt,name=payment_sequence_number,json=paymentSequenceNumber,proto3" json:"payment_sequence_number,omitempty"`
	Result                string        `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Amount                float64       `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	StudentId             string        `protobuf:"bytes,4,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudentName           string        `protobuf:"bytes,5,opt,name=student_name,json=studentName,proto3" json:"student_name,omitempty"`
	PaymentMethod         PaymentMethod `protobuf:"varint,6,opt,name=payment_method,json=paymentMethod,proto3,enum=invoicemgmt.v1.PaymentMethod" json:"payment_method,omitempty"`
	InvoiceSequenceNumber int32         `protobuf:"varint,7,opt,name=invoice_sequence_number,json=invoiceSequenceNumber,proto3" json:"invoice_sequence_number,omitempty"`
	InvoiceId             string        `protobuf:"bytes,8,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	PaymentStatus         string        `protobuf:"bytes,9,opt,name=payment_status,json=paymentStatus,proto3" json:"payment_status,omitempty"`
}

func (x *ImportPaymentValidationDetail) Reset() {
	*x = ImportPaymentValidationDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportPaymentValidationDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPaymentValidationDetail) ProtoMessage() {}

func (x *ImportPaymentValidationDetail) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPaymentValidationDetail.ProtoReflect.Descriptor instead.
func (*ImportPaymentValidationDetail) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{25}
}

func (x *ImportPaymentValidationDetail) GetPaymentSequenceNumber() int32 {
	if x != nil {
		return x.PaymentSequenceNumber
	}
	return 0
}

func (x *ImportPaymentValidationDetail) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ImportPaymentValidationDetail) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ImportPaymentValidationDetail) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ImportPaymentValidationDetail) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *ImportPaymentValidationDetail) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_DIRECT_DEBIT
}

func (x *ImportPaymentValidationDetail) GetInvoiceSequenceNumber() int32 {
	if x != nil {
		return x.InvoiceSequenceNumber
	}
	return 0
}

func (x *ImportPaymentValidationDetail) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *ImportPaymentValidationDetail) GetPaymentStatus() string {
	if x != nil {
		return x.PaymentStatus
	}
	return ""
}

type CreateBulkPaymentValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethod          PaymentMethod          `protobuf:"varint,1,opt,name=payment_method,json=paymentMethod,proto3,enum=invoicemgmt.v1.PaymentMethod" json:"payment_method,omitempty"`
	DirectDebitPaymentDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=direct_debit_payment_date,json=directDebitPaymentDate,proto3" json:"direct_debit_payment_date,omitempty"`
	Payload                []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateBulkPaymentValidationRequest) Reset() {
	*x = CreateBulkPaymentValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkPaymentValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkPaymentValidationRequest) ProtoMessage() {}

func (x *CreateBulkPaymentValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkPaymentValidationRequest.ProtoReflect.Descriptor instead.
func (*CreateBulkPaymentValidationRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{26}
}

func (x *CreateBulkPaymentValidationRequest) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_DIRECT_DEBIT
}

func (x *CreateBulkPaymentValidationRequest) GetDirectDebitPaymentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DirectDebitPaymentDate
	}
	return nil
}

func (x *CreateBulkPaymentValidationRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CreateBulkPaymentValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentValidationDetail []*ImportPaymentValidationDetail `protobuf:"bytes,1,rep,name=payment_validation_detail,json=paymentValidationDetail,proto3" json:"payment_validation_detail,omitempty"`
	Successful              bool                             `protobuf:"varint,2,opt,name=successful,proto3" json:"successful,omitempty"`
	ValidationDate          *timestamppb.Timestamp           `protobuf:"bytes,3,opt,name=validation_date,json=validationDate,proto3" json:"validation_date,omitempty"`
	SuccessfulPayments      int32                            `protobuf:"varint,4,opt,name=successful_payments,json=successfulPayments,proto3" json:"successful_payments,omitempty"`
	PendingPayments         int32                            `protobuf:"varint,5,opt,name=pending_payments,json=pendingPayments,proto3" json:"pending_payments,omitempty"`
	FailedPayments          int32                            `protobuf:"varint,6,opt,name=failed_payments,json=failedPayments,proto3" json:"failed_payments,omitempty"`
}

func (x *CreateBulkPaymentValidationResponse) Reset() {
	*x = CreateBulkPaymentValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkPaymentValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkPaymentValidationResponse) ProtoMessage() {}

func (x *CreateBulkPaymentValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkPaymentValidationResponse.ProtoReflect.Descriptor instead.
func (*CreateBulkPaymentValidationResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{27}
}

func (x *CreateBulkPaymentValidationResponse) GetPaymentValidationDetail() []*ImportPaymentValidationDetail {
	if x != nil {
		return x.PaymentValidationDetail
	}
	return nil
}

func (x *CreateBulkPaymentValidationResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *CreateBulkPaymentValidationResponse) GetValidationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidationDate
	}
	return nil
}

func (x *CreateBulkPaymentValidationResponse) GetSuccessfulPayments() int32 {
	if x != nil {
		return x.SuccessfulPayments
	}
	return 0
}

func (x *CreateBulkPaymentValidationResponse) GetPendingPayments() int32 {
	if x != nil {
		return x.PendingPayments
	}
	return 0
}

func (x *CreateBulkPaymentValidationResponse) GetFailedPayments() int32 {
	if x != nil {
		return x.FailedPayments
	}
	return 0
}

type DownloadBulkPaymentValidationsDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BulkPaymentValidationsId string `protobuf:"bytes,1,opt,name=bulk_payment_validations_id,json=bulkPaymentValidationsId,proto3" json:"bulk_payment_validations_id,omitempty"`
}

func (x *DownloadBulkPaymentValidationsDetailRequest) Reset() {
	*x = DownloadBulkPaymentValidationsDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadBulkPaymentValidationsDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBulkPaymentValidationsDetailRequest) ProtoMessage() {}

func (x *DownloadBulkPaymentValidationsDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBulkPaymentValidationsDetailRequest.ProtoReflect.Descriptor instead.
func (*DownloadBulkPaymentValidationsDetailRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{28}
}

func (x *DownloadBulkPaymentValidationsDetailRequest) GetBulkPaymentValidationsId() string {
	if x != nil {
		return x.BulkPaymentValidationsId
	}
	return ""
}

type DownloadBulkPaymentValidationsDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentValidationDetail []*ImportPaymentValidationDetail `protobuf:"bytes,1,rep,name=payment_validation_detail,json=paymentValidationDetail,proto3" json:"payment_validation_detail,omitempty"`
	ValidationDate          *timestamppb.Timestamp           `protobuf:"bytes,2,opt,name=validation_date,json=validationDate,proto3" json:"validation_date,omitempty"`
}

func (x *DownloadBulkPaymentValidationsDetailResponse) Reset() {
	*x = DownloadBulkPaymentValidationsDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadBulkPaymentValidationsDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBulkPaymentValidationsDetailResponse) ProtoMessage() {}

func (x *DownloadBulkPaymentValidationsDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBulkPaymentValidationsDetailResponse.ProtoReflect.Descriptor instead.
func (*DownloadBulkPaymentValidationsDetailResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{29}
}

func (x *DownloadBulkPaymentValidationsDetailResponse) GetPaymentValidationDetail() []*ImportPaymentValidationDetail {
	if x != nil {
		return x.PaymentValidationDetail
	}
	return nil
}

func (x *DownloadBulkPaymentValidationsDetailResponse) GetValidationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidationDate
	}
	return nil
}

type OrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *OrderDetail) Reset() {
	*x = OrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail) ProtoMessage() {}

func (x *OrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail.ProtoReflect.Descriptor instead.
func (*OrderDetail) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{30}
}

func (x *OrderDetail) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type OrderInvoiceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId string `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	OrderId   string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	StudentId string `protobuf:"bytes,3,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *OrderInvoiceData) Reset() {
	*x = OrderInvoiceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInvoiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInvoiceData) ProtoMessage() {}

func (x *OrderInvoiceData) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInvoiceData.ProtoReflect.Descriptor instead.
func (*OrderInvoiceData) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{31}
}

func (x *OrderInvoiceData) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *OrderInvoiceData) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderInvoiceData) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type CreateInvoiceFromOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderDetails []*OrderDetail `protobuf:"bytes,1,rep,name=order_details,json=orderDetails,proto3" json:"order_details,omitempty"`
	InvoiceType  InvoiceType    `protobuf:"varint,2,opt,name=invoice_type,json=invoiceType,proto3,enum=invoicemgmt.v1.InvoiceType" json:"invoice_type,omitempty"`
}

func (x *CreateInvoiceFromOrderRequest) Reset() {
	*x = CreateInvoiceFromOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvoiceFromOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvoiceFromOrderRequest) ProtoMessage() {}

func (x *CreateInvoiceFromOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvoiceFromOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateInvoiceFromOrderRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{32}
}

func (x *CreateInvoiceFromOrderRequest) GetOrderDetails() []*OrderDetail {
	if x != nil {
		return x.OrderDetails
	}
	return nil
}

func (x *CreateInvoiceFromOrderRequest) GetInvoiceType() InvoiceType {
	if x != nil {
		return x.InvoiceType
	}
	return InvoiceType_SCHEDULED
}

type CreateInvoiceFromOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful       bool                `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	OrderInvoiceData []*OrderInvoiceData `protobuf:"bytes,2,rep,name=order_invoice_data,json=orderInvoiceData,proto3" json:"order_invoice_data,omitempty"`
}

func (x *CreateInvoiceFromOrderResponse) Reset() {
	*x = CreateInvoiceFromOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvoiceFromOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvoiceFromOrderResponse) ProtoMessage() {}

func (x *CreateInvoiceFromOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvoiceFromOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateInvoiceFromOrderResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{33}
}

func (x *CreateInvoiceFromOrderResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *CreateInvoiceFromOrderResponse) GetOrderInvoiceData() []*OrderInvoiceData {
	if x != nil {
		return x.OrderInvoiceData
	}
	return nil
}

type IssueInvoiceRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId     string                 `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	Remarks       string                 `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks,omitempty"`
	PaymentMethod PaymentMethod          `protobuf:"varint,3,opt,name=payment_method,json=paymentMethod,proto3,enum=invoicemgmt.v1.PaymentMethod" json:"payment_method,omitempty"`
	DueDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	ExpiryDate    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	Amount        float64                `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *IssueInvoiceRequestV2) Reset() {
	*x = IssueInvoiceRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueInvoiceRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueInvoiceRequestV2) ProtoMessage() {}

func (x *IssueInvoiceRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueInvoiceRequestV2.ProtoReflect.Descriptor instead.
func (*IssueInvoiceRequestV2) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{34}
}

func (x *IssueInvoiceRequestV2) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *IssueInvoiceRequestV2) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *IssueInvoiceRequestV2) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_DIRECT_DEBIT
}

func (x *IssueInvoiceRequestV2) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *IssueInvoiceRequestV2) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

func (x *IssueInvoiceRequestV2) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type IssueInvoiceResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *IssueInvoiceResponseV2) Reset() {
	*x = IssueInvoiceResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueInvoiceResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueInvoiceResponseV2) ProtoMessage() {}

func (x *IssueInvoiceResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueInvoiceResponseV2.ProtoReflect.Descriptor instead.
func (*IssueInvoiceResponseV2) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{35}
}

func (x *IssueInvoiceResponseV2) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type VoidInvoiceRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId string `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	Remarks   string `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *VoidInvoiceRequestV2) Reset() {
	*x = VoidInvoiceRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoidInvoiceRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidInvoiceRequestV2) ProtoMessage() {}

func (x *VoidInvoiceRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidInvoiceRequestV2.ProtoReflect.Descriptor instead.
func (*VoidInvoiceRequestV2) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{36}
}

func (x *VoidInvoiceRequestV2) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *VoidInvoiceRequestV2) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type VoidInvoiceResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *VoidInvoiceResponseV2) Reset() {
	*x = VoidInvoiceResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoidInvoiceResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidInvoiceResponseV2) ProtoMessage() {}

func (x *VoidInvoiceResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidInvoiceResponseV2.ProtoReflect.Descriptor instead.
func (*VoidInvoiceResponseV2) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{37}
}

func (x *VoidInvoiceResponseV2) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type BulkIssueInvoiceRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceIds             []string                                                  `protobuf:"bytes,1,rep,name=invoice_ids,json=invoiceIds,proto3" json:"invoice_ids,omitempty"`
	InvoiceType            []InvoiceType                                             `protobuf:"varint,2,rep,packed,name=invoice_type,json=invoiceType,proto3,enum=invoicemgmt.v1.InvoiceType" json:"invoice_type,omitempty"`
	ConvenienceStoreDates  *BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates `protobuf:"bytes,3,opt,name=convenience_store_dates,json=convenienceStoreDates,proto3" json:"convenience_store_dates,omitempty"`
	DirectDebitDates       *BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates      `protobuf:"bytes,4,opt,name=direct_debit_dates,json=directDebitDates,proto3" json:"direct_debit_dates,omitempty"`
	BulkIssuePaymentMethod BulkIssuePaymentMethod                                    `protobuf:"varint,5,opt,name=bulk_issue_payment_method,json=bulkIssuePaymentMethod,proto3,enum=invoicemgmt.v1.BulkIssuePaymentMethod" json:"bulk_issue_payment_method,omitempty"`
}

func (x *BulkIssueInvoiceRequestV2) Reset() {
	*x = BulkIssueInvoiceRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkIssueInvoiceRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkIssueInvoiceRequestV2) ProtoMessage() {}

func (x *BulkIssueInvoiceRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkIssueInvoiceRequestV2.ProtoReflect.Descriptor instead.
func (*BulkIssueInvoiceRequestV2) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{38}
}

func (x *BulkIssueInvoiceRequestV2) GetInvoiceIds() []string {
	if x != nil {
		return x.InvoiceIds
	}
	return nil
}

func (x *BulkIssueInvoiceRequestV2) GetInvoiceType() []InvoiceType {
	if x != nil {
		return x.InvoiceType
	}
	return nil
}

func (x *BulkIssueInvoiceRequestV2) GetConvenienceStoreDates() *BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates {
	if x != nil {
		return x.ConvenienceStoreDates
	}
	return nil
}

func (x *BulkIssueInvoiceRequestV2) GetDirectDebitDates() *BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates {
	if x != nil {
		return x.DirectDebitDates
	}
	return nil
}

func (x *BulkIssueInvoiceRequestV2) GetBulkIssuePaymentMethod() BulkIssuePaymentMethod {
	if x != nil {
		return x.BulkIssuePaymentMethod
	}
	return BulkIssuePaymentMethod_BULK_ISSUE_CONVENIENCE_STORE
}

type BulkIssueInvoiceResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BulkIssueInvoiceResponseV2) Reset() {
	*x = BulkIssueInvoiceResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkIssueInvoiceResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkIssueInvoiceResponseV2) ProtoMessage() {}

func (x *BulkIssueInvoiceResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkIssueInvoiceResponseV2.ProtoReflect.Descriptor instead.
func (*BulkIssueInvoiceResponseV2) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{39}
}

func (x *BulkIssueInvoiceResponseV2) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type InvoiceAdjustmentDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceAdjustmentId     string                  `protobuf:"bytes,1,opt,name=invoice_adjustment_id,json=invoiceAdjustmentId,proto3" json:"invoice_adjustment_id,omitempty"`
	Description             string                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Amount                  float64                 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	InvoiceAdjustmentAction InvoiceAdjustmentAction `protobuf:"varint,4,opt,name=invoice_adjustment_action,json=invoiceAdjustmentAction,proto3,enum=invoicemgmt.v1.InvoiceAdjustmentAction" json:"invoice_adjustment_action,omitempty"`
}

func (x *InvoiceAdjustmentDetail) Reset() {
	*x = InvoiceAdjustmentDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceAdjustmentDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceAdjustmentDetail) ProtoMessage() {}

func (x *InvoiceAdjustmentDetail) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceAdjustmentDetail.ProtoReflect.Descriptor instead.
func (*InvoiceAdjustmentDetail) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{40}
}

func (x *InvoiceAdjustmentDetail) GetInvoiceAdjustmentId() string {
	if x != nil {
		return x.InvoiceAdjustmentId
	}
	return ""
}

func (x *InvoiceAdjustmentDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InvoiceAdjustmentDetail) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *InvoiceAdjustmentDetail) GetInvoiceAdjustmentAction() InvoiceAdjustmentAction {
	if x != nil {
		return x.InvoiceAdjustmentAction
	}
	return InvoiceAdjustmentAction_CREATE_ADJUSTMENT
}

type UpsertInvoiceAdjustmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId                string                     `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	InvoiceSubTotal          float64                    `protobuf:"fixed64,2,opt,name=invoice_sub_total,json=invoiceSubTotal,proto3" json:"invoice_sub_total,omitempty"`
	InvoiceTotal             float64                    `protobuf:"fixed64,3,opt,name=invoice_total,json=invoiceTotal,proto3" json:"invoice_total,omitempty"`
	InvoiceAdjustmentDetails []*InvoiceAdjustmentDetail `protobuf:"bytes,4,rep,name=invoice_adjustment_details,json=invoiceAdjustmentDetails,proto3" json:"invoice_adjustment_details,omitempty"`
}

func (x *UpsertInvoiceAdjustmentsRequest) Reset() {
	*x = UpsertInvoiceAdjustmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertInvoiceAdjustmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertInvoiceAdjustmentsRequest) ProtoMessage() {}

func (x *UpsertInvoiceAdjustmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertInvoiceAdjustmentsRequest.ProtoReflect.Descriptor instead.
func (*UpsertInvoiceAdjustmentsRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{41}
}

func (x *UpsertInvoiceAdjustmentsRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *UpsertInvoiceAdjustmentsRequest) GetInvoiceSubTotal() float64 {
	if x != nil {
		return x.InvoiceSubTotal
	}
	return 0
}

func (x *UpsertInvoiceAdjustmentsRequest) GetInvoiceTotal() float64 {
	if x != nil {
		return x.InvoiceTotal
	}
	return 0
}

func (x *UpsertInvoiceAdjustmentsRequest) GetInvoiceAdjustmentDetails() []*InvoiceAdjustmentDetail {
	if x != nil {
		return x.InvoiceAdjustmentDetails
	}
	return nil
}

type UpsertInvoiceAdjustmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpsertInvoiceAdjustmentsResponse) Reset() {
	*x = UpsertInvoiceAdjustmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertInvoiceAdjustmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertInvoiceAdjustmentsResponse) ProtoMessage() {}

func (x *UpsertInvoiceAdjustmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertInvoiceAdjustmentsResponse.ProtoReflect.Descriptor instead.
func (*UpsertInvoiceAdjustmentsResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{42}
}

func (x *UpsertInvoiceAdjustmentsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RefundInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId    string       `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	RefundMethod RefundMethod `protobuf:"varint,2,opt,name=refund_method,json=refundMethod,proto3,enum=invoicemgmt.v1.RefundMethod" json:"refund_method,omitempty"`
	Amount       float64      `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Remarks      string       `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *RefundInvoiceRequest) Reset() {
	*x = RefundInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundInvoiceRequest) ProtoMessage() {}

func (x *RefundInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundInvoiceRequest.ProtoReflect.Descriptor instead.
func (*RefundInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{43}
}

func (x *RefundInvoiceRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *RefundInvoiceRequest) GetRefundMethod() RefundMethod {
	if x != nil {
		return x.RefundMethod
	}
	return RefundMethod_REFUND_CASH
}

func (x *RefundInvoiceRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RefundInvoiceRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type RefundInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
}

func (x *RefundInvoiceResponse) Reset() {
	*x = RefundInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundInvoiceResponse) ProtoMessage() {}

func (x *RefundInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundInvoiceResponse.ProtoReflect.Descriptor instead.
func (*RefundInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{44}
}

func (x *RefundInvoiceResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type InvoiceDataForInvoiceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceTypes     []InvoiceType          `protobuf:"varint,1,rep,packed,name=invoice_types,json=invoiceTypes,proto3,enum=invoicemgmt.v1.InvoiceType" json:"invoice_types,omitempty"`
	MinAmount        string                 `protobuf:"bytes,2,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	MaxAmount        string                 `protobuf:"bytes,3,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	CreatedDateFrom  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_date_from,json=createdDateFrom,proto3" json:"created_date_from,omitempty"`
	CreatedDateUntil *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_date_until,json=createdDateUntil,proto3" json:"created_date_until,omitempty"`
	InvoiceStatus    InvoiceStatus          `protobuf:"varint,6,opt,name=invoice_status,json=invoiceStatus,proto3,enum=invoicemgmt.v1.InvoiceStatus" json:"invoice_status,omitempty"`
}

func (x *InvoiceDataForInvoiceFilter) Reset() {
	*x = InvoiceDataForInvoiceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceDataForInvoiceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceDataForInvoiceFilter) ProtoMessage() {}

func (x *InvoiceDataForInvoiceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceDataForInvoiceFilter.ProtoReflect.Descriptor instead.
func (*InvoiceDataForInvoiceFilter) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{45}
}

func (x *InvoiceDataForInvoiceFilter) GetInvoiceTypes() []InvoiceType {
	if x != nil {
		return x.InvoiceTypes
	}
	return nil
}

func (x *InvoiceDataForInvoiceFilter) GetMinAmount() string {
	if x != nil {
		return x.MinAmount
	}
	return ""
}

func (x *InvoiceDataForInvoiceFilter) GetMaxAmount() string {
	if x != nil {
		return x.MaxAmount
	}
	return ""
}

func (x *InvoiceDataForInvoiceFilter) GetCreatedDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDateFrom
	}
	return nil
}

func (x *InvoiceDataForInvoiceFilter) GetCreatedDateUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDateUntil
	}
	return nil
}

func (x *InvoiceDataForInvoiceFilter) GetInvoiceStatus() InvoiceStatus {
	if x != nil {
		return x.InvoiceStatus
	}
	return InvoiceStatus_DRAFT
}

type InvoiceDataForPaymentFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethods  []PaymentMethod        `protobuf:"varint,1,rep,packed,name=payment_methods,json=paymentMethods,proto3,enum=invoicemgmt.v1.PaymentMethod" json:"payment_methods,omitempty"`
	DueDateFrom     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=due_date_from,json=dueDateFrom,proto3" json:"due_date_from,omitempty"`
	DueDateUntil    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=due_date_until,json=dueDateUntil,proto3" json:"due_date_until,omitempty"`
	ExpiryDateFrom  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiry_date_from,json=expiryDateFrom,proto3" json:"expiry_date_from,omitempty"`
	ExpiryDateUntil *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expiry_date_until,json=expiryDateUntil,proto3" json:"expiry_date_until,omitempty"`
	PaymentStatuses []PaymentStatus        `protobuf:"varint,6,rep,packed,name=payment_statuses,json=paymentStatuses,proto3,enum=invoicemgmt.v1.PaymentStatus" json:"payment_statuses,omitempty"`
	IsExported      bool                   `protobuf:"varint,7,opt,name=is_exported,json=isExported,proto3" json:"is_exported,omitempty"`
}

func (x *InvoiceDataForPaymentFilter) Reset() {
	*x = InvoiceDataForPaymentFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceDataForPaymentFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceDataForPaymentFilter) ProtoMessage() {}

func (x *InvoiceDataForPaymentFilter) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceDataForPaymentFilter.ProtoReflect.Descriptor instead.
func (*InvoiceDataForPaymentFilter) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{46}
}

func (x *InvoiceDataForPaymentFilter) GetPaymentMethods() []PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

func (x *InvoiceDataForPaymentFilter) GetDueDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDateFrom
	}
	return nil
}

func (x *InvoiceDataForPaymentFilter) GetDueDateUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDateUntil
	}
	return nil
}

func (x *InvoiceDataForPaymentFilter) GetExpiryDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDateFrom
	}
	return nil
}

func (x *InvoiceDataForPaymentFilter) GetExpiryDateUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDateUntil
	}
	return nil
}

func (x *InvoiceDataForPaymentFilter) GetPaymentStatuses() []PaymentStatus {
	if x != nil {
		return x.PaymentStatuses
	}
	return nil
}

func (x *InvoiceDataForPaymentFilter) GetIsExported() bool {
	if x != nil {
		return x.IsExported
	}
	return false
}

type RetrieveInvoiceDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentName   string                       `protobuf:"bytes,1,opt,name=student_name,json=studentName,proto3" json:"student_name,omitempty"`
	Paging        *v1.Paging                   `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	InvoiceFilter *InvoiceDataForInvoiceFilter `protobuf:"bytes,3,opt,name=invoice_filter,json=invoiceFilter,proto3" json:"invoice_filter,omitempty"`
	PaymentFilter *InvoiceDataForPaymentFilter `protobuf:"bytes,4,opt,name=payment_filter,json=paymentFilter,proto3" json:"payment_filter,omitempty"`
}

func (x *RetrieveInvoiceDataRequest) Reset() {
	*x = RetrieveInvoiceDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceDataRequest) ProtoMessage() {}

func (x *RetrieveInvoiceDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceDataRequest.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceDataRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{47}
}

func (x *RetrieveInvoiceDataRequest) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *RetrieveInvoiceDataRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RetrieveInvoiceDataRequest) GetInvoiceFilter() *InvoiceDataForInvoiceFilter {
	if x != nil {
		return x.InvoiceFilter
	}
	return nil
}

func (x *RetrieveInvoiceDataRequest) GetPaymentFilter() *InvoiceDataForPaymentFilter {
	if x != nil {
		return x.PaymentFilter
	}
	return nil
}

type InvoiceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceDataDetail        *InvoiceData_InvoiceDataDetail        `protobuf:"bytes,1,opt,name=invoice_data_detail,json=invoiceDataDetail,proto3" json:"invoice_data_detail,omitempty"`
	InvoiceDataPaymentDetail *InvoiceData_InvoiceDataPaymentDetail `protobuf:"bytes,2,opt,name=invoice_data_payment_detail,json=invoiceDataPaymentDetail,proto3" json:"invoice_data_payment_detail,omitempty"`
	StudentName              string                                `protobuf:"bytes,3,opt,name=student_name,json=studentName,proto3" json:"student_name,omitempty"`
}

func (x *InvoiceData) Reset() {
	*x = InvoiceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceData) ProtoMessage() {}

func (x *InvoiceData) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceData.ProtoReflect.Descriptor instead.
func (*InvoiceData) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{48}
}

func (x *InvoiceData) GetInvoiceDataDetail() *InvoiceData_InvoiceDataDetail {
	if x != nil {
		return x.InvoiceDataDetail
	}
	return nil
}

func (x *InvoiceData) GetInvoiceDataPaymentDetail() *InvoiceData_InvoiceDataPaymentDetail {
	if x != nil {
		return x.InvoiceDataPaymentDetail
	}
	return nil
}

func (x *InvoiceData) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

type RetrieveInvoiceDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPage     *v1.Paging     `protobuf:"bytes,1,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage *v1.Paging     `protobuf:"bytes,2,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	InvoiceData  []*InvoiceData `protobuf:"bytes,3,rep,name=invoice_data,json=invoiceData,proto3" json:"invoice_data,omitempty"`
}

func (x *RetrieveInvoiceDataResponse) Reset() {
	*x = RetrieveInvoiceDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceDataResponse) ProtoMessage() {}

func (x *RetrieveInvoiceDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceDataResponse.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceDataResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{49}
}

func (x *RetrieveInvoiceDataResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *RetrieveInvoiceDataResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

func (x *RetrieveInvoiceDataResponse) GetInvoiceData() []*InvoiceData {
	if x != nil {
		return x.InvoiceData
	}
	return nil
}

type RetrieveInvoiceStatusCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentName   string                       `protobuf:"bytes,1,opt,name=student_name,json=studentName,proto3" json:"student_name,omitempty"`
	InvoiceFilter *InvoiceDataForInvoiceFilter `protobuf:"bytes,2,opt,name=invoice_filter,json=invoiceFilter,proto3" json:"invoice_filter,omitempty"`
	PaymentFilter *InvoiceDataForPaymentFilter `protobuf:"bytes,3,opt,name=payment_filter,json=paymentFilter,proto3" json:"payment_filter,omitempty"`
}

func (x *RetrieveInvoiceStatusCountRequest) Reset() {
	*x = RetrieveInvoiceStatusCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceStatusCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceStatusCountRequest) ProtoMessage() {}

func (x *RetrieveInvoiceStatusCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceStatusCountRequest.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceStatusCountRequest) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{50}
}

func (x *RetrieveInvoiceStatusCountRequest) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *RetrieveInvoiceStatusCountRequest) GetInvoiceFilter() *InvoiceDataForInvoiceFilter {
	if x != nil {
		return x.InvoiceFilter
	}
	return nil
}

func (x *RetrieveInvoiceStatusCountRequest) GetPaymentFilter() *InvoiceDataForPaymentFilter {
	if x != nil {
		return x.PaymentFilter
	}
	return nil
}

type RetrieveInvoiceStatusCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalItems         int32                                                  `protobuf:"varint,1,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	InvoiceStatusCount *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount `protobuf:"bytes,2,opt,name=invoice_status_count,json=invoiceStatusCount,proto3" json:"invoice_status_count,omitempty"`
}

func (x *RetrieveInvoiceStatusCountResponse) Reset() {
	*x = RetrieveInvoiceStatusCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceStatusCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceStatusCountResponse) ProtoMessage() {}

func (x *RetrieveInvoiceStatusCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceStatusCountResponse.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceStatusCountResponse) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{51}
}

func (x *RetrieveInvoiceStatusCountResponse) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *RetrieveInvoiceStatusCountResponse) GetInvoiceStatusCount() *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount {
	if x != nil {
		return x.InvoiceStatusCount
	}
	return nil
}

type GenerateInvoicesResponse_InvoicesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId string `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
}

func (x *GenerateInvoicesResponse_InvoicesData) Reset() {
	*x = GenerateInvoicesResponse_InvoicesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateInvoicesResponse_InvoicesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoicesResponse_InvoicesData) ProtoMessage() {}

func (x *GenerateInvoicesResponse_InvoicesData) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoicesResponse_InvoicesData.ProtoReflect.Descriptor instead.
func (*GenerateInvoicesResponse_InvoicesData) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GenerateInvoicesResponse_InvoicesData) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

type GenerateInvoicesResponse_GenerateInvoiceResponseError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceDetail *GenerateInvoiceDetail `protobuf:"bytes,1,opt,name=invoice_detail,json=invoiceDetail,proto3" json:"invoice_detail,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GenerateInvoicesResponse_GenerateInvoiceResponseError) Reset() {
	*x = GenerateInvoicesResponse_GenerateInvoiceResponseError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateInvoicesResponse_GenerateInvoiceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoicesResponse_GenerateInvoiceResponseError) ProtoMessage() {}

func (x *GenerateInvoicesResponse_GenerateInvoiceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoicesResponse_GenerateInvoiceResponseError.ProtoReflect.Descriptor instead.
func (*GenerateInvoicesResponse_GenerateInvoiceResponseError) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{6, 1}
}

func (x *GenerateInvoicesResponse_GenerateInvoiceResponseError) GetInvoiceDetail() *GenerateInvoiceDetail {
	if x != nil {
		return x.InvoiceDetail
	}
	return nil
}

func (x *GenerateInvoicesResponse_GenerateInvoiceResponseError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DueDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	ExpiryDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
}

func (x *BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates) Reset() {
	*x = BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates) ProtoMessage() {}

func (x *BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates.ProtoReflect.Descriptor instead.
func (*BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{19, 0}
}

func (x *BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

type BulkIssueInvoiceRequest_BulkIssueDirectDebitDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DueDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	ExpiryDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
}

func (x *BulkIssueInvoiceRequest_BulkIssueDirectDebitDates) Reset() {
	*x = BulkIssueInvoiceRequest_BulkIssueDirectDebitDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkIssueInvoiceRequest_BulkIssueDirectDebitDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkIssueInvoiceRequest_BulkIssueDirectDebitDates) ProtoMessage() {}

func (x *BulkIssueInvoiceRequest_BulkIssueDirectDebitDates) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkIssueInvoiceRequest_BulkIssueDirectDebitDates.ProtoReflect.Descriptor instead.
func (*BulkIssueInvoiceRequest_BulkIssueDirectDebitDates) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{19, 1}
}

func (x *BulkIssueInvoiceRequest_BulkIssueDirectDebitDates) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *BulkIssueInvoiceRequest_BulkIssueDirectDebitDates) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

type CreatePaymentRequestRequest_ConvenieceStoreDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DueDateFrom  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=due_date_from,json=dueDateFrom,proto3" json:"due_date_from,omitempty"`
	DueDateUntil *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=due_date_until,json=dueDateUntil,proto3" json:"due_date_until,omitempty"`
}

func (x *CreatePaymentRequestRequest_ConvenieceStoreDates) Reset() {
	*x = CreatePaymentRequestRequest_ConvenieceStoreDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentRequestRequest_ConvenieceStoreDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequestRequest_ConvenieceStoreDates) ProtoMessage() {}

func (x *CreatePaymentRequestRequest_ConvenieceStoreDates) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequestRequest_ConvenieceStoreDates.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequestRequest_ConvenieceStoreDates) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{21, 0}
}

func (x *CreatePaymentRequestRequest_ConvenieceStoreDates) GetDueDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDateFrom
	}
	return nil
}

func (x *CreatePaymentRequestRequest_ConvenieceStoreDates) GetDueDateUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDateUntil
	}
	return nil
}

type CreatePaymentRequestRequest_DirectDebitDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DueDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
}

func (x *CreatePaymentRequestRequest_DirectDebitDates) Reset() {
	*x = CreatePaymentRequestRequest_DirectDebitDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentRequestRequest_DirectDebitDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequestRequest_DirectDebitDates) ProtoMessage() {}

func (x *CreatePaymentRequestRequest_DirectDebitDates) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequestRequest_DirectDebitDates.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequestRequest_DirectDebitDates) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{21, 1}
}

func (x *CreatePaymentRequestRequest_DirectDebitDates) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

type BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DueDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	ExpiryDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
}

func (x *BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates) Reset() {
	*x = BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates) ProtoMessage() {}

func (x *BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates.ProtoReflect.Descriptor instead.
func (*BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{38, 0}
}

func (x *BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

type BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DueDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	ExpiryDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
}

func (x *BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates) Reset() {
	*x = BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates) ProtoMessage() {}

func (x *BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates.ProtoReflect.Descriptor instead.
func (*BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{38, 1}
}

func (x *BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

type InvoiceData_InvoiceDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId             string                 `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	InvoiceSequenceNumber int32                  `protobuf:"varint,2,opt,name=invoice_sequence_number,json=invoiceSequenceNumber,proto3" json:"invoice_sequence_number,omitempty"`
	InvoiceStatus         InvoiceStatus          `protobuf:"varint,3,opt,name=invoice_status,json=invoiceStatus,proto3,enum=invoicemgmt.v1.InvoiceStatus" json:"invoice_status,omitempty"`
	StudentId             string                 `protobuf:"bytes,4,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	SubTotal              float64                `protobuf:"fixed64,5,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	Total                 float64                `protobuf:"fixed64,6,opt,name=total,proto3" json:"total,omitempty"`
	OutstandingBalance    float64                `protobuf:"fixed64,7,opt,name=outstanding_balance,json=outstandingBalance,proto3" json:"outstanding_balance,omitempty"`
	AmountPaid            float64                `protobuf:"fixed64,8,opt,name=amount_paid,json=amountPaid,proto3" json:"amount_paid,omitempty"`
	InvoiceType           InvoiceType            `protobuf:"varint,9,opt,name=invoice_type,json=invoiceType,proto3,enum=invoicemgmt.v1.InvoiceType" json:"invoice_type,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *InvoiceData_InvoiceDataDetail) Reset() {
	*x = InvoiceData_InvoiceDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceData_InvoiceDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceData_InvoiceDataDetail) ProtoMessage() {}

func (x *InvoiceData_InvoiceDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceData_InvoiceDataDetail.ProtoReflect.Descriptor instead.
func (*InvoiceData_InvoiceDataDetail) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{48, 0}
}

func (x *InvoiceData_InvoiceDataDetail) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *InvoiceData_InvoiceDataDetail) GetInvoiceSequenceNumber() int32 {
	if x != nil {
		return x.InvoiceSequenceNumber
	}
	return 0
}

func (x *InvoiceData_InvoiceDataDetail) GetInvoiceStatus() InvoiceStatus {
	if x != nil {
		return x.InvoiceStatus
	}
	return InvoiceStatus_DRAFT
}

func (x *InvoiceData_InvoiceDataDetail) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *InvoiceData_InvoiceDataDetail) GetSubTotal() float64 {
	if x != nil {
		return x.SubTotal
	}
	return 0
}

func (x *InvoiceData_InvoiceDataDetail) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *InvoiceData_InvoiceDataDetail) GetOutstandingBalance() float64 {
	if x != nil {
		return x.OutstandingBalance
	}
	return 0
}

func (x *InvoiceData_InvoiceDataDetail) GetAmountPaid() float64 {
	if x != nil {
		return x.AmountPaid
	}
	return 0
}

func (x *InvoiceData_InvoiceDataDetail) GetInvoiceType() InvoiceType {
	if x != nil {
		return x.InvoiceType
	}
	return InvoiceType_SCHEDULED
}

func (x *InvoiceData_InvoiceDataDetail) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type InvoiceData_InvoiceDataPaymentDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExported            bool                   `protobuf:"varint,1,opt,name=is_exported,json=isExported,proto3" json:"is_exported,omitempty"`
	PaymentDate           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	PaymentDueDate        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=payment_due_date,json=paymentDueDate,proto3" json:"payment_due_date,omitempty"`
	PaymentExpiryDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=payment_expiry_date,json=paymentExpiryDate,proto3" json:"payment_expiry_date,omitempty"`
	PaymentMethod         PaymentMethod          `protobuf:"varint,5,opt,name=payment_method,json=paymentMethod,proto3,enum=invoicemgmt.v1.PaymentMethod" json:"payment_method,omitempty"`
	PaymentStatus         PaymentStatus          `protobuf:"varint,6,opt,name=payment_status,json=paymentStatus,proto3,enum=invoicemgmt.v1.PaymentStatus" json:"payment_status,omitempty"`
	Amount                float64                `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
	PaymentId             string                 `protobuf:"bytes,8,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	PaymentSequenceNumber int32                  `protobuf:"varint,9,opt,name=payment_sequence_number,json=paymentSequenceNumber,proto3" json:"payment_sequence_number,omitempty"`
}

func (x *InvoiceData_InvoiceDataPaymentDetail) Reset() {
	*x = InvoiceData_InvoiceDataPaymentDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceData_InvoiceDataPaymentDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceData_InvoiceDataPaymentDetail) ProtoMessage() {}

func (x *InvoiceData_InvoiceDataPaymentDetail) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceData_InvoiceDataPaymentDetail.ProtoReflect.Descriptor instead.
func (*InvoiceData_InvoiceDataPaymentDetail) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{48, 1}
}

func (x *InvoiceData_InvoiceDataPaymentDetail) GetIsExported() bool {
	if x != nil {
		return x.IsExported
	}
	return false
}

func (x *InvoiceData_InvoiceDataPaymentDetail) GetPaymentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentDate
	}
	return nil
}

func (x *InvoiceData_InvoiceDataPaymentDetail) GetPaymentDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentDueDate
	}
	return nil
}

func (x *InvoiceData_InvoiceDataPaymentDetail) GetPaymentExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentExpiryDate
	}
	return nil
}

func (x *InvoiceData_InvoiceDataPaymentDetail) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_DIRECT_DEBIT
}

func (x *InvoiceData_InvoiceDataPaymentDetail) GetPaymentStatus() PaymentStatus {
	if x != nil {
		return x.PaymentStatus
	}
	return PaymentStatus_PAYMENT_PENDING
}

func (x *InvoiceData_InvoiceDataPaymentDetail) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *InvoiceData_InvoiceDataPaymentDetail) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *InvoiceData_InvoiceDataPaymentDetail) GetPaymentSequenceNumber() int32 {
	if x != nil {
		return x.PaymentSequenceNumber
	}
	return 0
}

type RetrieveInvoiceStatusCountResponse_InvoiceStatusCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPaid     int32 `protobuf:"varint,1,opt,name=total_paid,json=totalPaid,proto3" json:"total_paid,omitempty"`
	TotalVoid     int32 `protobuf:"varint,2,opt,name=total_void,json=totalVoid,proto3" json:"total_void,omitempty"`
	TotalIssued   int32 `protobuf:"varint,3,opt,name=total_issued,json=totalIssued,proto3" json:"total_issued,omitempty"`
	TotalDraft    int32 `protobuf:"varint,4,opt,name=total_draft,json=totalDraft,proto3" json:"total_draft,omitempty"`
	TotalRefunded int32 `protobuf:"varint,5,opt,name=total_refunded,json=totalRefunded,proto3" json:"total_refunded,omitempty"`
}

func (x *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) Reset() {
	*x = RetrieveInvoiceStatusCountResponse_InvoiceStatusCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) ProtoMessage() {}

func (x *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_invoicemgmt_v1_invoice_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveInvoiceStatusCountResponse_InvoiceStatusCount.ProtoReflect.Descriptor instead.
func (*RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) Descriptor() ([]byte, []int) {
	return file_invoicemgmt_v1_invoice_proto_rawDescGZIP(), []int{51, 0}
}

func (x *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) GetTotalPaid() int32 {
	if x != nil {
		return x.TotalPaid
	}
	return 0
}

func (x *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) GetTotalVoid() int32 {
	if x != nil {
		return x.TotalVoid
	}
	return 0
}

func (x *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) GetTotalIssued() int32 {
	if x != nil {
		return x.TotalIssued
	}
	return 0
}

func (x *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) GetTotalDraft() int32 {
	if x != nil {
		return x.TotalDraft
	}
	return 0
}

func (x *RetrieveInvoiceStatusCountResponse_InvoiceStatusCount) GetTotalRefunded() int32 {
	if x != nil {
		return x.TotalRefunded
	}
	return 0
}

var File_invoicemgmt_v1_invoice_proto protoreflect.FileDescriptor

var file_invoicemgmt_v1_invoice_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x02, 0x0a, 0x13, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x44, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x36, 0x0a, 0x14, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x69, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x22, 0xf1, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x44, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x98, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x22, 0x5c, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x22, 0xa9, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x5d, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x5a, 0x0a, 0x0d,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x2d, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x82, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xcd, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x69,
	0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x0c,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6b, 0x0a, 0x1a,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xe9, 0x02, 0x0a, 0x1b, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4a, 0x0a, 0x0a, 0x62, 0x69, 0x6c,
	0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x69, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xce, 0x02, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x69, 0x6c,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x69, 0x6c,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x78, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x74, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x12, 0x56, 0x6f, 0x69, 0x64, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x35, 0x0a, 0x13, 0x56, 0x6f, 0x69, 0x64, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x96, 0x01, 0x0a,
	0x1c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x3f, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x56, 0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3e,
	0x0a, 0x1c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x87,
	0x01, 0x0a, 0x1d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x1e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0xfb, 0x06, 0x0a, 0x17, 0x42,
	0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x48, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x39, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0b,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x7d, 0x0a,
	0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x12,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x62, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x10, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x62, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x61, 0x0a,
	0x19, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x16, 0x62, 0x75, 0x6c, 0x6b, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x1a, 0x93, 0x01, 0x0a, 0x1d, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x8f, 0x01, 0x0a, 0x19, 0x42, 0x75, 0x6c, 0x6b, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x62, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x42, 0x75, 0x6c, 0x6b,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xd0,
	0x04, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x78, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x63, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x6a, 0x0a, 0x12, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x62, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x10, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x62, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x98, 0x01, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x40, 0x0a, 0x0e, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x1a, 0x49, 0x0a, 0x10, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x62, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x75, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75,
	0x6c, 0x12, 0x35, 0x0a, 0x17, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x62, 0x75, 0x6c, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1a, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x88, 0x01,
	0x0a, 0x1b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x35, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8d, 0x03, 0x0a, 0x1d, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x55, 0x0a, 0x19, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f,
	0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x62, 0x69,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xfa, 0x02, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x19, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x17, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x43, 0x0a, 0x0f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2f,
	0x0a, 0x13, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x2b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x75, 0x6c, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x62, 0x75, 0x6c, 0x6b, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x64, 0x22, 0xde, 0x01, 0x0a, 0x2c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x75,
	0x6c, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x69, 0x0a, 0x19, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x17, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x43, 0x0a,
	0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x28, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x10,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x1d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3e, 0x0a,
	0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x90, 0x01,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c,
	0x12, 0x4e, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xa2, 0x02, 0x0a, 0x15, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x16, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22,
	0x4f, 0x0a, 0x14, 0x56, 0x6f, 0x69, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x22, 0x37, 0x0a, 0x15, 0x56, 0x6f, 0x69, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0xfe, 0x05, 0x0a, 0x19, 0x42, 0x75,
	0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x6e, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x71, 0x0a, 0x12, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x32, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x62, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x10, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x62, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x61,
	0x0a, 0x19, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x16, 0x62, 0x75, 0x6c, 0x6b, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x1a, 0x94, 0x01, 0x0a, 0x1e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x8f, 0x01, 0x0a, 0x19, 0x42, 0x75, 0x6c,
	0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x62, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x22, 0x36, 0x0a, 0x1a, 0x42, 0x75,
	0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x32,
	0x0a, 0x15, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x63, 0x0a, 0x19,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xf8, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x65, 0x0a, 0x1a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x18, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3c, 0x0a, 0x20,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x14, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x37, 0x0a, 0x15, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c,
	0x22, 0xf5, 0x02, 0x0a, 0x1b, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x40, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x46, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x12, 0x44, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe0, 0x03, 0x0a, 0x1b, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x40, 0x0a, 0x0e, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x74,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x12, 0x44, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x46, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x12, 0x48, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x92, 0x02, 0x0a, 0x1a,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xe0, 0x09, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x5d, 0x0a, 0x13, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x11, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x73, 0x0a, 0x1b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x18, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xcf, 0x03, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x13,
	0x6f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x6f, 0x75, 0x74, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x12, 0x3e,
	0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x87, 0x04, 0x0a, 0x18, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x13,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x44,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0xc5, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xee, 0x01, 0x0a, 0x21,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xfe, 0x02, 0x0a,
	0x22, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x77, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xbd, 0x01,
	0x0a, 0x12, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x61, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x32, 0xe4, 0x12,
	0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x59, 0x0a, 0x0c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x23, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x27, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x77, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2d, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x56,
	0x6f, 0x69, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x14, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x16,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6e, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x86, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x24, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x3b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x18, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x56, 0x32, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x26, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x5c, 0x0a, 0x0d, 0x56, 0x6f, 0x69, 0x64, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x56, 0x32, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x25, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x69, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x56, 0x32, 0x12, 0x6b, 0x0a, 0x12, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x56, 0x32, 0x12, 0x29, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x56, 0x32, 0x1a, 0x2a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32,
	0x12, 0x5c, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e,
	0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83,
	0x01, 0x0a, 0x1a, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62,
	0x75, 0x66, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76,
	0x31, 0x3b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_invoicemgmt_v1_invoice_proto_rawDescOnce sync.Once
	file_invoicemgmt_v1_invoice_proto_rawDescData = file_invoicemgmt_v1_invoice_proto_rawDesc
)

func file_invoicemgmt_v1_invoice_proto_rawDescGZIP() []byte {
	file_invoicemgmt_v1_invoice_proto_rawDescOnce.Do(func() {
		file_invoicemgmt_v1_invoice_proto_rawDescData = protoimpl.X.CompressGZIP(file_invoicemgmt_v1_invoice_proto_rawDescData)
	})
	return file_invoicemgmt_v1_invoice_proto_rawDescData
}

var file_invoicemgmt_v1_invoice_proto_msgTypes = make([]protoimpl.MessageInfo, 63)
var file_invoicemgmt_v1_invoice_proto_goTypes = []interface{}{
	(*IssueInvoiceRequest)(nil),                                      // 0: invoicemgmt.v1.IssueInvoiceRequest
	(*IssueInvoiceResponse)(nil),                                     // 1: invoicemgmt.v1.IssueInvoiceResponse
	(*RetrieveInvoiceRecordsRequest)(nil),                            // 2: invoicemgmt.v1.RetrieveInvoiceRecordsRequest
	(*InvoiceRecord)(nil),                                            // 3: invoicemgmt.v1.InvoiceRecord
	(*RetrieveInvoiceRecordsResponse)(nil),                           // 4: invoicemgmt.v1.RetrieveInvoiceRecordsResponse
	(*GenerateInvoicesRequest)(nil),                                  // 5: invoicemgmt.v1.GenerateInvoicesRequest
	(*GenerateInvoicesResponse)(nil),                                 // 6: invoicemgmt.v1.GenerateInvoicesResponse
	(*GenerateInvoiceDetail)(nil),                                    // 7: invoicemgmt.v1.GenerateInvoiceDetail
	(*RetrieveInvoiceInfoRequest)(nil),                               // 8: invoicemgmt.v1.RetrieveInvoiceInfoRequest
	(*RetrieveInvoiceInfoResponse)(nil),                              // 9: invoicemgmt.v1.RetrieveInvoiceInfoResponse
	(*RetrieveInvoiceInfoBillItem)(nil),                              // 10: invoicemgmt.v1.RetrieveInvoiceInfoBillItem
	(*VoidInvoiceRequest)(nil),                                       // 11: invoicemgmt.v1.VoidInvoiceRequest
	(*VoidInvoiceResponse)(nil),                                      // 12: invoicemgmt.v1.VoidInvoiceResponse
	(*ApproveInvoicePaymentRequest)(nil),                             // 13: invoicemgmt.v1.ApproveInvoicePaymentRequest
	(*ApproveInvoicePaymentResponse)(nil),                            // 14: invoicemgmt.v1.ApproveInvoicePaymentResponse
	(*CancelInvoicePaymentRequest)(nil),                              // 15: invoicemgmt.v1.CancelInvoicePaymentRequest
	(*CancelInvoicePaymentResponse)(nil),                             // 16: invoicemgmt.v1.CancelInvoicePaymentResponse
	(*InvoiceScheduleCheckerRequest)(nil),                            // 17: invoicemgmt.v1.InvoiceScheduleCheckerRequest
	(*InvoiceScheduleCheckerResponse)(nil),                           // 18: invoicemgmt.v1.InvoiceScheduleCheckerResponse
	(*BulkIssueInvoiceRequest)(nil),                                  // 19: invoicemgmt.v1.BulkIssueInvoiceRequest
	(*BulkIssueInvoiceResponse)(nil),                                 // 20: invoicemgmt.v1.BulkIssueInvoiceResponse
	(*CreatePaymentRequestRequest)(nil),                              // 21: invoicemgmt.v1.CreatePaymentRequestRequest
	(*CreatePaymentRequestResponse)(nil),                             // 22: invoicemgmt.v1.CreatePaymentRequestResponse
	(*DownloadPaymentFileRequest)(nil),                               // 23: invoicemgmt.v1.DownloadPaymentFileRequest
	(*DownloadPaymentFileResponse)(nil),                              // 24: invoicemgmt.v1.DownloadPaymentFileResponse
	(*ImportPaymentValidationDetail)(nil),                            // 25: invoicemgmt.v1.ImportPaymentValidationDetail
	(*CreateBulkPaymentValidationRequest)(nil),                       // 26: invoicemgmt.v1.CreateBulkPaymentValidationRequest
	(*CreateBulkPaymentValidationResponse)(nil),                      // 27: invoicemgmt.v1.CreateBulkPaymentValidationResponse
	(*DownloadBulkPaymentValidationsDetailRequest)(nil),              // 28: invoicemgmt.v1.DownloadBulkPaymentValidationsDetailRequest
	(*DownloadBulkPaymentValidationsDetailResponse)(nil),             // 29: invoicemgmt.v1.DownloadBulkPaymentValidationsDetailResponse
	(*OrderDetail)(nil),                                              // 30: invoicemgmt.v1.OrderDetail
	(*OrderInvoiceData)(nil),                                         // 31: invoicemgmt.v1.OrderInvoiceData
	(*CreateInvoiceFromOrderRequest)(nil),                            // 32: invoicemgmt.v1.CreateInvoiceFromOrderRequest
	(*CreateInvoiceFromOrderResponse)(nil),                           // 33: invoicemgmt.v1.CreateInvoiceFromOrderResponse
	(*IssueInvoiceRequestV2)(nil),                                    // 34: invoicemgmt.v1.IssueInvoiceRequestV2
	(*IssueInvoiceResponseV2)(nil),                                   // 35: invoicemgmt.v1.IssueInvoiceResponseV2
	(*VoidInvoiceRequestV2)(nil),                                     // 36: invoicemgmt.v1.VoidInvoiceRequestV2
	(*VoidInvoiceResponseV2)(nil),                                    // 37: invoicemgmt.v1.VoidInvoiceResponseV2
	(*BulkIssueInvoiceRequestV2)(nil),                                // 38: invoicemgmt.v1.BulkIssueInvoiceRequestV2
	(*BulkIssueInvoiceResponseV2)(nil),                               // 39: invoicemgmt.v1.BulkIssueInvoiceResponseV2
	(*InvoiceAdjustmentDetail)(nil),                                  // 40: invoicemgmt.v1.InvoiceAdjustmentDetail
	(*UpsertInvoiceAdjustmentsRequest)(nil),                          // 41: invoicemgmt.v1.UpsertInvoiceAdjustmentsRequest
	(*UpsertInvoiceAdjustmentsResponse)(nil),                         // 42: invoicemgmt.v1.UpsertInvoiceAdjustmentsResponse
	(*RefundInvoiceRequest)(nil),                                     // 43: invoicemgmt.v1.RefundInvoiceRequest
	(*RefundInvoiceResponse)(nil),                                    // 44: invoicemgmt.v1.RefundInvoiceResponse
	(*InvoiceDataForInvoiceFilter)(nil),                              // 45: invoicemgmt.v1.InvoiceDataForInvoiceFilter
	(*InvoiceDataForPaymentFilter)(nil),                              // 46: invoicemgmt.v1.InvoiceDataForPaymentFilter
	(*RetrieveInvoiceDataRequest)(nil),                               // 47: invoicemgmt.v1.RetrieveInvoiceDataRequest
	(*InvoiceData)(nil),                                              // 48: invoicemgmt.v1.InvoiceData
	(*RetrieveInvoiceDataResponse)(nil),                              // 49: invoicemgmt.v1.RetrieveInvoiceDataResponse
	(*RetrieveInvoiceStatusCountRequest)(nil),                        // 50: invoicemgmt.v1.RetrieveInvoiceStatusCountRequest
	(*RetrieveInvoiceStatusCountResponse)(nil),                       // 51: invoicemgmt.v1.RetrieveInvoiceStatusCountResponse
	(*GenerateInvoicesResponse_InvoicesData)(nil),                    // 52: invoicemgmt.v1.GenerateInvoicesResponse.InvoicesData
	(*GenerateInvoicesResponse_GenerateInvoiceResponseError)(nil),    // 53: invoicemgmt.v1.GenerateInvoicesResponse.GenerateInvoiceResponseError
	(*BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates)(nil),    // 54: invoicemgmt.v1.BulkIssueInvoiceRequest.BulkIssueConvenieceStoreDates
	(*BulkIssueInvoiceRequest_BulkIssueDirectDebitDates)(nil),        // 55: invoicemgmt.v1.BulkIssueInvoiceRequest.BulkIssueDirectDebitDates
	(*CreatePaymentRequestRequest_ConvenieceStoreDates)(nil),         // 56: invoicemgmt.v1.CreatePaymentRequestRequest.ConvenieceStoreDates
	(*CreatePaymentRequestRequest_DirectDebitDates)(nil),             // 57: invoicemgmt.v1.CreatePaymentRequestRequest.DirectDebitDates
	(*BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates)(nil), // 58: invoicemgmt.v1.BulkIssueInvoiceRequestV2.BulkIssueConvenienceStoreDates
	(*BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates)(nil),      // 59: invoicemgmt.v1.BulkIssueInvoiceRequestV2.BulkIssueDirectDebitDates
	(*InvoiceData_InvoiceDataDetail)(nil),                            // 60: invoicemgmt.v1.InvoiceData.InvoiceDataDetail
	(*InvoiceData_InvoiceDataPaymentDetail)(nil),                     // 61: invoicemgmt.v1.InvoiceData.InvoiceDataPaymentDetail
	(*RetrieveInvoiceStatusCountResponse_InvoiceStatusCount)(nil),    // 62: invoicemgmt.v1.RetrieveInvoiceStatusCountResponse.InvoiceStatusCount
	(PaymentMethod)(0),                                               // 63: invoicemgmt.v1.PaymentMethod
	(*timestamppb.Timestamp)(nil),                                    // 64: google.protobuf.Timestamp
	(*v1.Paging)(nil),                                                // 65: common.v1.Paging
	(InvoiceStatus)(0),                                               // 66: invoicemgmt.v1.InvoiceStatus
	(InvoiceType)(0),                                                 // 67: invoicemgmt.v1.InvoiceType
	(BulkIssuePaymentMethod)(0),                                      // 68: invoicemgmt.v1.BulkIssuePaymentMethod
	(FileType)(0),                                                    // 69: invoicemgmt.v1.FileType
	(InvoiceAdjustmentAction)(0),                                     // 70: invoicemgmt.v1.InvoiceAdjustmentAction
	(RefundMethod)(0),                                                // 71: invoicemgmt.v1.RefundMethod
	(PaymentStatus)(0),                                               // 72: invoicemgmt.v1.PaymentStatus
}
var file_invoicemgmt_v1_invoice_proto_depIdxs = []int32{
	63,  // 0: invoicemgmt.v1.IssueInvoiceRequest.payment_method:type_name -> invoicemgmt.v1.PaymentMethod
	64,  // 1: invoicemgmt.v1.IssueInvoiceRequest.due_date:type_name -> google.protobuf.Timestamp
	64,  // 2: invoicemgmt.v1.IssueInvoiceRequest.expiry_date:type_name -> google.protobuf.Timestamp
	65,  // 3: invoicemgmt.v1.RetrieveInvoiceRecordsRequest.paging:type_name -> common.v1.Paging
	64,  // 4: invoicemgmt.v1.InvoiceRecord.due_date:type_name -> google.protobuf.Timestamp
	66,  // 5: invoicemgmt.v1.InvoiceRecord.invoice_status:type_name -> invoicemgmt.v1.InvoiceStatus
	65,  // 6: invoicemgmt.v1.RetrieveInvoiceRecordsResponse.next_page:type_name -> common.v1.Paging
	3,   // 7: invoicemgmt.v1.RetrieveInvoiceRecordsResponse.invoice_records:type_name -> invoicemgmt.v1.InvoiceRecord
	7,   // 8: invoicemgmt.v1.GenerateInvoicesRequest.invoices:type_name -> invoicemgmt.v1.GenerateInvoiceDetail
	53,  // 9: invoicemgmt.v1.GenerateInvoicesResponse.errors:type_name -> invoicemgmt.v1.GenerateInvoicesResponse.GenerateInvoiceResponseError
	52,  // 10: invoicemgmt.v1.GenerateInvoicesResponse.invoices_data:type_name -> invoicemgmt.v1.GenerateInvoicesResponse.InvoicesData
	67,  // 11: invoicemgmt.v1.GenerateInvoiceDetail.invoice_type:type_name -> invoicemgmt.v1.InvoiceType
	64,  // 12: invoicemgmt.v1.RetrieveInvoiceInfoResponse.due_date:type_name -> google.protobuf.Timestamp
	64,  // 13: invoicemgmt.v1.RetrieveInvoiceInfoResponse.created_date:type_name -> google.protobuf.Timestamp
	66,  // 14: invoicemgmt.v1.RetrieveInvoiceInfoResponse.status:type_name -> invoicemgmt.v1.InvoiceStatus
	10,  // 15: invoicemgmt.v1.RetrieveInvoiceInfoResponse.bill_items:type_name -> invoicemgmt.v1.RetrieveInvoiceInfoBillItem
	64,  // 16: invoicemgmt.v1.ApproveInvoicePaymentRequest.payment_date:type_name -> google.protobuf.Timestamp
	64,  // 17: invoicemgmt.v1.InvoiceScheduleCheckerRequest.invoice_date:type_name -> google.protobuf.Timestamp
	63,  // 18: invoicemgmt.v1.BulkIssueInvoiceRequest.payment_method:type_name -> invoicemgmt.v1.PaymentMethod
	64,  // 19: invoicemgmt.v1.BulkIssueInvoiceRequest.due_date:type_name -> google.protobuf.Timestamp
	64,  // 20: invoicemgmt.v1.BulkIssueInvoiceRequest.expiry_date:type_name -> google.protobuf.Timestamp
	54,  // 21: invoicemgmt.v1.BulkIssueInvoiceRequest.convenience_store_dates:type_name -> invoicemgmt.v1.BulkIssueInvoiceRequest.BulkIssueConvenieceStoreDates
	55,  // 22: invoicemgmt.v1.BulkIssueInvoiceRequest.direct_debit_dates:type_name -> invoicemgmt.v1.BulkIssueInvoiceRequest.BulkIssueDirectDebitDates
	68,  // 23: invoicemgmt.v1.BulkIssueInvoiceRequest.bulk_issue_payment_method:type_name -> invoicemgmt.v1.BulkIssuePaymentMethod
	63,  // 24: invoicemgmt.v1.CreatePaymentRequestRequest.payment_method:type_name -> invoicemgmt.v1.PaymentMethod
	56,  // 25: invoicemgmt.v1.CreatePaymentRequestRequest.convenience_store_dates:type_name -> invoicemgmt.v1.CreatePaymentRequestRequest.ConvenieceStoreDates
	57,  // 26: invoicemgmt.v1.CreatePaymentRequestRequest.direct_debit_dates:type_name -> invoicemgmt.v1.CreatePaymentRequestRequest.DirectDebitDates
	69,  // 27: invoicemgmt.v1.DownloadPaymentFileResponse.file_type:type_name -> invoicemgmt.v1.FileType
	63,  // 28: invoicemgmt.v1.ImportPaymentValidationDetail.payment_method:type_name -> invoicemgmt.v1.PaymentMethod
	63,  // 29: invoicemgmt.v1.CreateBulkPaymentValidationRequest.payment_method:type_name -> invoicemgmt.v1.PaymentMethod
	64,  // 30: invoicemgmt.v1.CreateBulkPaymentValidationRequest.direct_debit_payment_date:type_name -> google.protobuf.Timestamp
	25,  // 31: invoicemgmt.v1.CreateBulkPaymentValidationResponse.payment_validation_detail:type_name -> invoicemgmt.v1.ImportPaymentValidationDetail
	64,  // 32: invoicemgmt.v1.CreateBulkPaymentValidationResponse.validation_date:type_name -> google.protobuf.Timestamp
	25,  // 33: invoicemgmt.v1.DownloadBulkPaymentValidationsDetailResponse.payment_validation_detail:type_name -> invoicemgmt.v1.ImportPaymentValidationDetail
	64,  // 34: invoicemgmt.v1.DownloadBulkPaymentValidationsDetailResponse.validation_date:type_name -> google.protobuf.Timestamp
	30,  // 35: invoicemgmt.v1.CreateInvoiceFromOrderRequest.order_details:type_name -> invoicemgmt.v1.OrderDetail
	67,  // 36: invoicemgmt.v1.CreateInvoiceFromOrderRequest.invoice_type:type_name -> invoicemgmt.v1.InvoiceType
	31,  // 37: invoicemgmt.v1.CreateInvoiceFromOrderResponse.order_invoice_data:type_name -> invoicemgmt.v1.OrderInvoiceData
	63,  // 38: invoicemgmt.v1.IssueInvoiceRequestV2.payment_method:type_name -> invoicemgmt.v1.PaymentMethod
	64,  // 39: invoicemgmt.v1.IssueInvoiceRequestV2.due_date:type_name -> google.protobuf.Timestamp
	64,  // 40: invoicemgmt.v1.IssueInvoiceRequestV2.expiry_date:type_name -> google.protobuf.Timestamp
	67,  // 41: invoicemgmt.v1.BulkIssueInvoiceRequestV2.invoice_type:type_name -> invoicemgmt.v1.InvoiceType
	58,  // 42: invoicemgmt.v1.BulkIssueInvoiceRequestV2.convenience_store_dates:type_name -> invoicemgmt.v1.BulkIssueInvoiceRequestV2.BulkIssueConvenienceStoreDates
	59,  // 43: invoicemgmt.v1.BulkIssueInvoiceRequestV2.direct_debit_dates:type_name -> invoicemgmt.v1.BulkIssueInvoiceRequestV2.BulkIssueDirectDebitDates
	68,  // 44: invoicemgmt.v1.BulkIssueInvoiceRequestV2.bulk_issue_payment_method:type_name -> invoicemgmt.v1.BulkIssuePaymentMethod
	70,  // 45: invoicemgmt.v1.InvoiceAdjustmentDetail.invoice_adjustment_action:type_name -> invoicemgmt.v1.InvoiceAdjustmentAction
	40,  // 46: invoicemgmt.v1.UpsertInvoiceAdjustmentsRequest.invoice_adjustment_details:type_name -> invoicemgmt.v1.InvoiceAdjustmentDetail
	71,  // 47: invoicemgmt.v1.RefundInvoiceRequest.refund_method:type_name -> invoicemgmt.v1.RefundMethod
	67,  // 48: invoicemgmt.v1.InvoiceDataForInvoiceFilter.invoice_types:type_name -> invoicemgmt.v1.InvoiceType
	64,  // 49: invoicemgmt.v1.InvoiceDataForInvoiceFilter.created_date_from:type_name -> google.protobuf.Timestamp
	64,  // 50: invoicemgmt.v1.InvoiceDataForInvoiceFilter.created_date_until:type_name -> google.protobuf.Timestamp
	66,  // 51: invoicemgmt.v1.InvoiceDataForInvoiceFilter.invoice_status:type_name -> invoicemgmt.v1.InvoiceStatus
	63,  // 52: invoicemgmt.v1.InvoiceDataForPaymentFilter.payment_methods:type_name -> invoicemgmt.v1.PaymentMethod
	64,  // 53: invoicemgmt.v1.InvoiceDataForPaymentFilter.due_date_from:type_name -> google.protobuf.Timestamp
	64,  // 54: invoicemgmt.v1.InvoiceDataForPaymentFilter.due_date_until:type_name -> google.protobuf.Timestamp
	64,  // 55: invoicemgmt.v1.InvoiceDataForPaymentFilter.expiry_date_from:type_name -> google.protobuf.Timestamp
	64,  // 56: invoicemgmt.v1.InvoiceDataForPaymentFilter.expiry_date_until:type_name -> google.protobuf.Timestamp
	72,  // 57: invoicemgmt.v1.InvoiceDataForPaymentFilter.payment_statuses:type_name -> invoicemgmt.v1.PaymentStatus
	65,  // 58: invoicemgmt.v1.RetrieveInvoiceDataRequest.paging:type_name -> common.v1.Paging
	45,  // 59: invoicemgmt.v1.RetrieveInvoiceDataRequest.invoice_filter:type_name -> invoicemgmt.v1.InvoiceDataForInvoiceFilter
	46,  // 60: invoicemgmt.v1.RetrieveInvoiceDataRequest.payment_filter:type_name -> invoicemgmt.v1.InvoiceDataForPaymentFilter
	60,  // 61: invoicemgmt.v1.InvoiceData.invoice_data_detail:type_name -> invoicemgmt.v1.InvoiceData.InvoiceDataDetail
	61,  // 62: invoicemgmt.v1.InvoiceData.invoice_data_payment_detail:type_name -> invoicemgmt.v1.InvoiceData.InvoiceDataPaymentDetail
	65,  // 63: invoicemgmt.v1.RetrieveInvoiceDataResponse.next_page:type_name -> common.v1.Paging
	65,  // 64: invoicemgmt.v1.RetrieveInvoiceDataResponse.previous_page:type_name -> common.v1.Paging
	48,  // 65: invoicemgmt.v1.RetrieveInvoiceDataResponse.invoice_data:type_name -> invoicemgmt.v1.InvoiceData
	45,  // 66: invoicemgmt.v1.RetrieveInvoiceStatusCountRequest.invoice_filter:type_name -> invoicemgmt.v1.InvoiceDataForInvoiceFilter
	46,  // 67: invoicemgmt.v1.RetrieveInvoiceStatusCountRequest.payment_filter:type_name -> invoicemgmt.v1.InvoiceDataForPaymentFilter
	62,  // 68: invoicemgmt.v1.RetrieveInvoiceStatusCountResponse.invoice_status_count:type_name -> invoicemgmt.v1.RetrieveInvoiceStatusCountResponse.InvoiceStatusCount
	7,   // 69: invoicemgmt.v1.GenerateInvoicesResponse.GenerateInvoiceResponseError.invoice_detail:type_name -> invoicemgmt.v1.GenerateInvoiceDetail
	64,  // 70: invoicemgmt.v1.BulkIssueInvoiceRequest.BulkIssueConvenieceStoreDates.due_date:type_name -> google.protobuf.Timestamp
	64,  // 71: invoicemgmt.v1.BulkIssueInvoiceRequest.BulkIssueConvenieceStoreDates.expiry_date:type_name -> google.protobuf.Timestamp
	64,  // 72: invoicemgmt.v1.BulkIssueInvoiceRequest.BulkIssueDirectDebitDates.due_date:type_name -> google.protobuf.Timestamp
	64,  // 73: invoicemgmt.v1.BulkIssueInvoiceRequest.BulkIssueDirectDebitDates.expiry_date:type_name -> google.protobuf.Timestamp
	64,  // 74: invoicemgmt.v1.CreatePaymentRequestRequest.ConvenieceStoreDates.due_date_from:type_name -> google.protobuf.Timestamp
	64,  // 75: invoicemgmt.v1.CreatePaymentRequestRequest.ConvenieceStoreDates.due_date_until:type_name -> google.protobuf.Timestamp
	64,  // 76: invoicemgmt.v1.CreatePaymentRequestRequest.DirectDebitDates.due_date:type_name -> google.protobuf.Timestamp
	64,  // 77: invoicemgmt.v1.BulkIssueInvoiceRequestV2.BulkIssueConvenienceStoreDates.due_date:type_name -> google.protobuf.Timestamp
	64,  // 78: invoicemgmt.v1.BulkIssueInvoiceRequestV2.BulkIssueConvenienceStoreDates.expiry_date:type_name -> google.protobuf.Timestamp
	64,  // 79: invoicemgmt.v1.BulkIssueInvoiceRequestV2.BulkIssueDirectDebitDates.due_date:type_name -> google.protobuf.Timestamp
	64,  // 80: invoicemgmt.v1.BulkIssueInvoiceRequestV2.BulkIssueDirectDebitDates.expiry_date:type_name -> google.protobuf.Timestamp
	66,  // 81: invoicemgmt.v1.InvoiceData.InvoiceDataDetail.invoice_status:type_name -> invoicemgmt.v1.InvoiceStatus
	67,  // 82: invoicemgmt.v1.InvoiceData.InvoiceDataDetail.invoice_type:type_name -> invoicemgmt.v1.InvoiceType
	64,  // 83: invoicemgmt.v1.InvoiceData.InvoiceDataDetail.created_at:type_name -> google.protobuf.Timestamp
	64,  // 84: invoicemgmt.v1.InvoiceData.InvoiceDataPaymentDetail.payment_date:type_name -> google.protobuf.Timestamp
	64,  // 85: invoicemgmt.v1.InvoiceData.InvoiceDataPaymentDetail.payment_due_date:type_name -> google.protobuf.Timestamp
	64,  // 86: invoicemgmt.v1.InvoiceData.InvoiceDataPaymentDetail.payment_expiry_date:type_name -> google.protobuf.Timestamp
	63,  // 87: invoicemgmt.v1.InvoiceData.InvoiceDataPaymentDetail.payment_method:type_name -> invoicemgmt.v1.PaymentMethod
	72,  // 88: invoicemgmt.v1.InvoiceData.InvoiceDataPaymentDetail.payment_status:type_name -> invoicemgmt.v1.PaymentStatus
	0,   // 89: invoicemgmt.v1.InvoiceService.IssueInvoice:input_type -> invoicemgmt.v1.IssueInvoiceRequest
	5,   // 90: invoicemgmt.v1.InvoiceService.GenerateInvoices:input_type -> invoicemgmt.v1.GenerateInvoicesRequest
	8,   // 91: invoicemgmt.v1.InvoiceService.RetrieveInvoiceInfo:input_type -> invoicemgmt.v1.RetrieveInvoiceInfoRequest
	2,   // 92: invoicemgmt.v1.InvoiceService.RetrieveInvoiceRecords:input_type -> invoicemgmt.v1.RetrieveInvoiceRecordsRequest
	11,  // 93: invoicemgmt.v1.InvoiceService.VoidInvoice:input_type -> invoicemgmt.v1.VoidInvoiceRequest
	13,  // 94: invoicemgmt.v1.InvoiceService.ApproveInvoicePayment:input_type -> invoicemgmt.v1.ApproveInvoicePaymentRequest
	15,  // 95: invoicemgmt.v1.InvoiceService.CancelInvoicePayment:input_type -> invoicemgmt.v1.CancelInvoicePaymentRequest
	17,  // 96: invoicemgmt.v1.InvoiceService.InvoiceScheduleChecker:input_type -> invoicemgmt.v1.InvoiceScheduleCheckerRequest
	19,  // 97: invoicemgmt.v1.InvoiceService.BulkIssueInvoice:input_type -> invoicemgmt.v1.BulkIssueInvoiceRequest
	21,  // 98: invoicemgmt.v1.InvoiceService.CreatePaymentRequest:input_type -> invoicemgmt.v1.CreatePaymentRequestRequest
	23,  // 99: invoicemgmt.v1.InvoiceService.DownloadPaymentFile:input_type -> invoicemgmt.v1.DownloadPaymentFileRequest
	26,  // 100: invoicemgmt.v1.InvoiceService.CreateBulkPaymentValidation:input_type -> invoicemgmt.v1.CreateBulkPaymentValidationRequest
	28,  // 101: invoicemgmt.v1.InvoiceService.DownloadBulkPaymentValidationsDetail:input_type -> invoicemgmt.v1.DownloadBulkPaymentValidationsDetailRequest
	32,  // 102: invoicemgmt.v1.InvoiceService.CreateInvoiceFromOrder:input_type -> invoicemgmt.v1.CreateInvoiceFromOrderRequest
	41,  // 103: invoicemgmt.v1.InvoiceService.UpsertInvoiceAdjustments:input_type -> invoicemgmt.v1.UpsertInvoiceAdjustmentsRequest
	34,  // 104: invoicemgmt.v1.InvoiceService.IssueInvoiceV2:input_type -> invoicemgmt.v1.IssueInvoiceRequestV2
	36,  // 105: invoicemgmt.v1.InvoiceService.VoidInvoiceV2:input_type -> invoicemgmt.v1.VoidInvoiceRequestV2
	38,  // 106: invoicemgmt.v1.InvoiceService.BulkIssueInvoiceV2:input_type -> invoicemgmt.v1.BulkIssueInvoiceRequestV2
	43,  // 107: invoicemgmt.v1.InvoiceService.RefundInvoice:input_type -> invoicemgmt.v1.RefundInvoiceRequest
	47,  // 108: invoicemgmt.v1.InvoiceService.RetrieveInvoiceData:input_type -> invoicemgmt.v1.RetrieveInvoiceDataRequest
	50,  // 109: invoicemgmt.v1.InvoiceService.RetrieveInvoiceStatusCount:input_type -> invoicemgmt.v1.RetrieveInvoiceStatusCountRequest
	1,   // 110: invoicemgmt.v1.InvoiceService.IssueInvoice:output_type -> invoicemgmt.v1.IssueInvoiceResponse
	6,   // 111: invoicemgmt.v1.InvoiceService.GenerateInvoices:output_type -> invoicemgmt.v1.GenerateInvoicesResponse
	9,   // 112: invoicemgmt.v1.InvoiceService.RetrieveInvoiceInfo:output_type -> invoicemgmt.v1.RetrieveInvoiceInfoResponse
	4,   // 113: invoicemgmt.v1.InvoiceService.RetrieveInvoiceRecords:output_type -> invoicemgmt.v1.RetrieveInvoiceRecordsResponse
	12,  // 114: invoicemgmt.v1.InvoiceService.VoidInvoice:output_type -> invoicemgmt.v1.VoidInvoiceResponse
	14,  // 115: invoicemgmt.v1.InvoiceService.ApproveInvoicePayment:output_type -> invoicemgmt.v1.ApproveInvoicePaymentResponse
	16,  // 116: invoicemgmt.v1.InvoiceService.CancelInvoicePayment:output_type -> invoicemgmt.v1.CancelInvoicePaymentResponse
	18,  // 117: invoicemgmt.v1.InvoiceService.InvoiceScheduleChecker:output_type -> invoicemgmt.v1.InvoiceScheduleCheckerResponse
	20,  // 118: invoicemgmt.v1.InvoiceService.BulkIssueInvoice:output_type -> invoicemgmt.v1.BulkIssueInvoiceResponse
	22,  // 119: invoicemgmt.v1.InvoiceService.CreatePaymentRequest:output_type -> invoicemgmt.v1.CreatePaymentRequestResponse
	24,  // 120: invoicemgmt.v1.InvoiceService.DownloadPaymentFile:output_type -> invoicemgmt.v1.DownloadPaymentFileResponse
	27,  // 121: invoicemgmt.v1.InvoiceService.CreateBulkPaymentValidation:output_type -> invoicemgmt.v1.CreateBulkPaymentValidationResponse
	29,  // 122: invoicemgmt.v1.InvoiceService.DownloadBulkPaymentValidationsDetail:output_type -> invoicemgmt.v1.DownloadBulkPaymentValidationsDetailResponse
	33,  // 123: invoicemgmt.v1.InvoiceService.CreateInvoiceFromOrder:output_type -> invoicemgmt.v1.CreateInvoiceFromOrderResponse
	42,  // 124: invoicemgmt.v1.InvoiceService.UpsertInvoiceAdjustments:output_type -> invoicemgmt.v1.UpsertInvoiceAdjustmentsResponse
	35,  // 125: invoicemgmt.v1.InvoiceService.IssueInvoiceV2:output_type -> invoicemgmt.v1.IssueInvoiceResponseV2
	37,  // 126: invoicemgmt.v1.InvoiceService.VoidInvoiceV2:output_type -> invoicemgmt.v1.VoidInvoiceResponseV2
	39,  // 127: invoicemgmt.v1.InvoiceService.BulkIssueInvoiceV2:output_type -> invoicemgmt.v1.BulkIssueInvoiceResponseV2
	44,  // 128: invoicemgmt.v1.InvoiceService.RefundInvoice:output_type -> invoicemgmt.v1.RefundInvoiceResponse
	49,  // 129: invoicemgmt.v1.InvoiceService.RetrieveInvoiceData:output_type -> invoicemgmt.v1.RetrieveInvoiceDataResponse
	51,  // 130: invoicemgmt.v1.InvoiceService.RetrieveInvoiceStatusCount:output_type -> invoicemgmt.v1.RetrieveInvoiceStatusCountResponse
	110, // [110:131] is the sub-list for method output_type
	89,  // [89:110] is the sub-list for method input_type
	89,  // [89:89] is the sub-list for extension type_name
	89,  // [89:89] is the sub-list for extension extendee
	0,   // [0:89] is the sub-list for field type_name
}

func init() { file_invoicemgmt_v1_invoice_proto_init() }
func file_invoicemgmt_v1_invoice_proto_init() {
	if File_invoicemgmt_v1_invoice_proto != nil {
		return
	}
	file_invoicemgmt_v1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_invoicemgmt_v1_invoice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateInvoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateInvoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateInvoiceDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceInfoBillItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoidInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoidInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveInvoicePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveInvoicePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelInvoicePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelInvoicePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceScheduleCheckerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceScheduleCheckerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkIssueInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkIssueInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadPaymentFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadPaymentFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportPaymentValidationDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkPaymentValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkPaymentValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadBulkPaymentValidationsDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadBulkPaymentValidationsDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInvoiceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvoiceFromOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvoiceFromOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueInvoiceRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueInvoiceResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoidInvoiceRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoidInvoiceResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkIssueInvoiceRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkIssueInvoiceResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceAdjustmentDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertInvoiceAdjustmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertInvoiceAdjustmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceDataForInvoiceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceDataForPaymentFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceStatusCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceStatusCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateInvoicesResponse_InvoicesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateInvoicesResponse_GenerateInvoiceResponseError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkIssueInvoiceRequest_BulkIssueConvenieceStoreDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkIssueInvoiceRequest_BulkIssueDirectDebitDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentRequestRequest_ConvenieceStoreDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentRequestRequest_DirectDebitDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkIssueInvoiceRequestV2_BulkIssueConvenienceStoreDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkIssueInvoiceRequestV2_BulkIssueDirectDebitDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceData_InvoiceDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceData_InvoiceDataPaymentDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoicemgmt_v1_invoice_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveInvoiceStatusCountResponse_InvoiceStatusCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_invoicemgmt_v1_invoice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   63,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_invoicemgmt_v1_invoice_proto_goTypes,
		DependencyIndexes: file_invoicemgmt_v1_invoice_proto_depIdxs,
		MessageInfos:      file_invoicemgmt_v1_invoice_proto_msgTypes,
	}.Build()
	File_invoicemgmt_v1_invoice_proto = out.File
	file_invoicemgmt_v1_invoice_proto_rawDesc = nil
	file_invoicemgmt_v1_invoice_proto_goTypes = nil
	file_invoicemgmt_v1_invoice_proto_depIdxs = nil
}
