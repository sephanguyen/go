// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: lessonmgmt/v1/allocation.proto

package lpb

import (
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/manabie-com/backend/pkg/manabuf/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LessonAllocationStatus int32

const (
	LessonAllocationStatus_ALL                LessonAllocationStatus = 0
	LessonAllocationStatus_NONE_ASSIGNED      LessonAllocationStatus = 1
	LessonAllocationStatus_PARTIALLY_ASSIGNED LessonAllocationStatus = 2
	LessonAllocationStatus_FULLY_ASSIGNED     LessonAllocationStatus = 3
	LessonAllocationStatus_OVER_ASSIGNED      LessonAllocationStatus = 4
)

// Enum value maps for LessonAllocationStatus.
var (
	LessonAllocationStatus_name = map[int32]string{
		0: "ALL",
		1: "NONE_ASSIGNED",
		2: "PARTIALLY_ASSIGNED",
		3: "FULLY_ASSIGNED",
		4: "OVER_ASSIGNED",
	}
	LessonAllocationStatus_value = map[string]int32{
		"ALL":                0,
		"NONE_ASSIGNED":      1,
		"PARTIALLY_ASSIGNED": 2,
		"FULLY_ASSIGNED":     3,
		"OVER_ASSIGNED":      4,
	}
)

func (x LessonAllocationStatus) Enum() *LessonAllocationStatus {
	p := new(LessonAllocationStatus)
	*p = x
	return p
}

func (x LessonAllocationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LessonAllocationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lessonmgmt_v1_allocation_proto_enumTypes[0].Descriptor()
}

func (LessonAllocationStatus) Type() protoreflect.EnumType {
	return &file_lessonmgmt_v1_allocation_proto_enumTypes[0]
}

func (x LessonAllocationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LessonAllocationStatus.Descriptor instead.
func (LessonAllocationStatus) EnumDescriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{0}
}

type CourseTeachingMethod int32

const (
	CourseTeachingMethod_COURSE_TEACHING_METHOD_NONE       CourseTeachingMethod = 0
	CourseTeachingMethod_COURSE_TEACHING_METHOD_INDIVIDUAL CourseTeachingMethod = 1
	CourseTeachingMethod_COURSE_TEACHING_METHOD_GROUP      CourseTeachingMethod = 2
)

// Enum value maps for CourseTeachingMethod.
var (
	CourseTeachingMethod_name = map[int32]string{
		0: "COURSE_TEACHING_METHOD_NONE",
		1: "COURSE_TEACHING_METHOD_INDIVIDUAL",
		2: "COURSE_TEACHING_METHOD_GROUP",
	}
	CourseTeachingMethod_value = map[string]int32{
		"COURSE_TEACHING_METHOD_NONE":       0,
		"COURSE_TEACHING_METHOD_INDIVIDUAL": 1,
		"COURSE_TEACHING_METHOD_GROUP":      2,
	}
)

func (x CourseTeachingMethod) Enum() *CourseTeachingMethod {
	p := new(CourseTeachingMethod)
	*p = x
	return p
}

func (x CourseTeachingMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CourseTeachingMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_lessonmgmt_v1_allocation_proto_enumTypes[1].Descriptor()
}

func (CourseTeachingMethod) Type() protoreflect.EnumType {
	return &file_lessonmgmt_v1_allocation_proto_enumTypes[1]
}

func (x CourseTeachingMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CourseTeachingMethod.Descriptor instead.
func (CourseTeachingMethod) EnumDescriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{1}
}

type GetLessonAllocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging      *v1.Paging                         `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Keyword     string                             `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Filter      *GetLessonAllocationRequest_Filter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	LocationIds []string                           `protobuf:"bytes,4,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	Timezone    string                             `protobuf:"bytes,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *GetLessonAllocationRequest) Reset() {
	*x = GetLessonAllocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonAllocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonAllocationRequest) ProtoMessage() {}

func (x *GetLessonAllocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonAllocationRequest.ProtoReflect.Descriptor instead.
func (*GetLessonAllocationRequest) Descriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{0}
}

func (x *GetLessonAllocationRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *GetLessonAllocationRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetLessonAllocationRequest) GetFilter() *GetLessonAllocationRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetLessonAllocationRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *GetLessonAllocationRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type GetLessonAllocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items                    []*GetLessonAllocationResponse_AllocationListInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPage                 *v1.Paging                                        `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage             *v1.Paging                                        `protobuf:"bytes,3,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	TotalItems               uint32                                            `protobuf:"varint,4,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	TotalOfNoneAssigned      uint32                                            `protobuf:"varint,5,opt,name=total_of_none_assigned,json=totalOfNoneAssigned,proto3" json:"total_of_none_assigned,omitempty"`
	TotalOfPartiallyAssigned uint32                                            `protobuf:"varint,6,opt,name=total_of_partially_assigned,json=totalOfPartiallyAssigned,proto3" json:"total_of_partially_assigned,omitempty"`
	TotalOfFullyAssigned     uint32                                            `protobuf:"varint,7,opt,name=total_of_fully_assigned,json=totalOfFullyAssigned,proto3" json:"total_of_fully_assigned,omitempty"`
	TotalOfOverAssigned      uint32                                            `protobuf:"varint,8,opt,name=total_of_over_assigned,json=totalOfOverAssigned,proto3" json:"total_of_over_assigned,omitempty"`
}

func (x *GetLessonAllocationResponse) Reset() {
	*x = GetLessonAllocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonAllocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonAllocationResponse) ProtoMessage() {}

func (x *GetLessonAllocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonAllocationResponse.ProtoReflect.Descriptor instead.
func (*GetLessonAllocationResponse) Descriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{1}
}

func (x *GetLessonAllocationResponse) GetItems() []*GetLessonAllocationResponse_AllocationListInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetLessonAllocationResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *GetLessonAllocationResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

func (x *GetLessonAllocationResponse) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *GetLessonAllocationResponse) GetTotalOfNoneAssigned() uint32 {
	if x != nil {
		return x.TotalOfNoneAssigned
	}
	return 0
}

func (x *GetLessonAllocationResponse) GetTotalOfPartiallyAssigned() uint32 {
	if x != nil {
		return x.TotalOfPartiallyAssigned
	}
	return 0
}

func (x *GetLessonAllocationResponse) GetTotalOfFullyAssigned() uint32 {
	if x != nil {
		return x.TotalOfFullyAssigned
	}
	return 0
}

func (x *GetLessonAllocationResponse) GetTotalOfOverAssigned() uint32 {
	if x != nil {
		return x.TotalOfOverAssigned
	}
	return 0
}

type GetLessonScheduleByStudentSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentSubscriptionId string     `protobuf:"bytes,1,opt,name=student_subscription_id,json=studentSubscriptionId,proto3" json:"student_subscription_id,omitempty"`
	Paging                *v1.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *GetLessonScheduleByStudentSubscriptionRequest) Reset() {
	*x = GetLessonScheduleByStudentSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonScheduleByStudentSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonScheduleByStudentSubscriptionRequest) ProtoMessage() {}

func (x *GetLessonScheduleByStudentSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonScheduleByStudentSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetLessonScheduleByStudentSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{2}
}

func (x *GetLessonScheduleByStudentSubscriptionRequest) GetStudentSubscriptionId() string {
	if x != nil {
		return x.StudentSubscriptionId
	}
	return ""
}

func (x *GetLessonScheduleByStudentSubscriptionRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type GetLessonScheduleByStudentSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items                  []*GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList     `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalItems             uint32                                                                 `protobuf:"varint,2,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	AllocatedLessonsCount  uint32                                                                 `protobuf:"varint,3,opt,name=allocated_lessons_count,json=allocatedLessonsCount,proto3" json:"allocated_lessons_count,omitempty"`
	NextPage               *v1.Paging                                                             `protobuf:"bytes,4,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	PreviousPage           *v1.Paging                                                             `protobuf:"bytes,5,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	TotalLesson            uint32                                                                 `protobuf:"varint,6,opt,name=total_lesson,json=totalLesson,proto3" json:"total_lesson,omitempty"`
	CourseLocationSchedule *GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule `protobuf:"bytes,7,opt,name=course_location_schedule,json=courseLocationSchedule,proto3" json:"course_location_schedule,omitempty"`
}

func (x *GetLessonScheduleByStudentSubscriptionResponse) Reset() {
	*x = GetLessonScheduleByStudentSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonScheduleByStudentSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonScheduleByStudentSubscriptionResponse) ProtoMessage() {}

func (x *GetLessonScheduleByStudentSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonScheduleByStudentSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*GetLessonScheduleByStudentSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{3}
}

func (x *GetLessonScheduleByStudentSubscriptionResponse) GetItems() []*GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetLessonScheduleByStudentSubscriptionResponse) GetTotalItems() uint32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *GetLessonScheduleByStudentSubscriptionResponse) GetAllocatedLessonsCount() uint32 {
	if x != nil {
		return x.AllocatedLessonsCount
	}
	return 0
}

func (x *GetLessonScheduleByStudentSubscriptionResponse) GetNextPage() *v1.Paging {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *GetLessonScheduleByStudentSubscriptionResponse) GetPreviousPage() *v1.Paging {
	if x != nil {
		return x.PreviousPage
	}
	return nil
}

func (x *GetLessonScheduleByStudentSubscriptionResponse) GetTotalLesson() uint32 {
	if x != nil {
		return x.TotalLesson
	}
	return 0
}

func (x *GetLessonScheduleByStudentSubscriptionResponse) GetCourseLocationSchedule() *GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule {
	if x != nil {
		return x.CourseLocationSchedule
	}
	return nil
}

type GetLessonAllocationRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseIds     []string `protobuf:"bytes,1,rep,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	CourseTypeIds []string `protobuf:"bytes,2,rep,name=course_type_ids,json=courseTypeIds,proto3" json:"course_type_ids,omitempty"`
	// Deprecated: Do not use.
	TeachingMethod     CourseTeachingMethod   `protobuf:"varint,3,opt,name=teaching_method,json=teachingMethod,proto3,enum=lessonmgmt.v1.CourseTeachingMethod" json:"teaching_method,omitempty"`
	StartTime          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LocationIds        []string               `protobuf:"bytes,6,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	IsReallocationOnly bool                   `protobuf:"varint,7,opt,name=is_reallocation_only,json=isReallocationOnly,proto3" json:"is_reallocation_only,omitempty"`
	// Deprecated: Do not use.
	IsClassUnassigned bool                   `protobuf:"varint,8,opt,name=is_class_unassigned,json=isClassUnassigned,proto3" json:"is_class_unassigned,omitempty"`
	AllocationStatus  LessonAllocationStatus `protobuf:"varint,9,opt,name=allocation_status,json=allocationStatus,proto3,enum=lessonmgmt.v1.LessonAllocationStatus" json:"allocation_status,omitempty"`
	TeachingMethods   []CourseTeachingMethod `protobuf:"varint,10,rep,packed,name=teaching_methods,json=teachingMethods,proto3,enum=lessonmgmt.v1.CourseTeachingMethod" json:"teaching_methods,omitempty"`
	ProductId         []string               `protobuf:"bytes,11,rep,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetLessonAllocationRequest_Filter) Reset() {
	*x = GetLessonAllocationRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonAllocationRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonAllocationRequest_Filter) ProtoMessage() {}

func (x *GetLessonAllocationRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonAllocationRequest_Filter.ProtoReflect.Descriptor instead.
func (*GetLessonAllocationRequest_Filter) Descriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GetLessonAllocationRequest_Filter) GetCourseIds() []string {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *GetLessonAllocationRequest_Filter) GetCourseTypeIds() []string {
	if x != nil {
		return x.CourseTypeIds
	}
	return nil
}

// Deprecated: Do not use.
func (x *GetLessonAllocationRequest_Filter) GetTeachingMethod() CourseTeachingMethod {
	if x != nil {
		return x.TeachingMethod
	}
	return CourseTeachingMethod_COURSE_TEACHING_METHOD_NONE
}

func (x *GetLessonAllocationRequest_Filter) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetLessonAllocationRequest_Filter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetLessonAllocationRequest_Filter) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

func (x *GetLessonAllocationRequest_Filter) GetIsReallocationOnly() bool {
	if x != nil {
		return x.IsReallocationOnly
	}
	return false
}

// Deprecated: Do not use.
func (x *GetLessonAllocationRequest_Filter) GetIsClassUnassigned() bool {
	if x != nil {
		return x.IsClassUnassigned
	}
	return false
}

func (x *GetLessonAllocationRequest_Filter) GetAllocationStatus() LessonAllocationStatus {
	if x != nil {
		return x.AllocationStatus
	}
	return LessonAllocationStatus_ALL
}

func (x *GetLessonAllocationRequest_Filter) GetTeachingMethods() []CourseTeachingMethod {
	if x != nil {
		return x.TeachingMethods
	}
	return nil
}

func (x *GetLessonAllocationRequest_Filter) GetProductId() []string {
	if x != nil {
		return x.ProductId
	}
	return nil
}

type GetLessonAllocationResponse_AllocationListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId        string                 `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CourseId         string                 `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	LocationId       string                 `protobuf:"bytes,3,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	StartTime        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	AllocationStatus LessonAllocationStatus `protobuf:"varint,6,opt,name=allocation_status,json=allocationStatus,proto3,enum=lessonmgmt.v1.LessonAllocationStatus" json:"allocation_status,omitempty"`
	PurchasedSlot    int32                  `protobuf:"varint,7,opt,name=purchased_slot,json=purchasedSlot,proto3" json:"purchased_slot,omitempty"`
	AssignedSlot     int32                  `protobuf:"varint,8,opt,name=assigned_slot,json=assignedSlot,proto3" json:"assigned_slot,omitempty"`
	// Deprecated: Do not use.
	CourseTypeId string `protobuf:"bytes,9,opt,name=course_type_id,json=courseTypeId,proto3" json:"course_type_id,omitempty"`
	// Deprecated: Do not use.
	TeachingMethod        CourseTeachingMethod `protobuf:"varint,10,opt,name=teaching_method,json=teachingMethod,proto3,enum=lessonmgmt.v1.CourseTeachingMethod" json:"teaching_method,omitempty"`
	IsWeeklySchedule      bool                 `protobuf:"varint,11,opt,name=is_weekly_schedule,json=isWeeklySchedule,proto3" json:"is_weekly_schedule,omitempty"`
	StudentSubscriptionId string               `protobuf:"bytes,12,opt,name=student_subscription_id,json=studentSubscriptionId,proto3" json:"student_subscription_id,omitempty"`
	// Deprecated: Do not use.
	ClassId             string              `protobuf:"bytes,13,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	PackageTypeSchedule PackageTypeSchedule `protobuf:"varint,14,opt,name=package_type_schedule,json=packageTypeSchedule,proto3,enum=lessonmgmt.v1.PackageTypeSchedule" json:"package_type_schedule,omitempty"`
}

func (x *GetLessonAllocationResponse_AllocationListInfo) Reset() {
	*x = GetLessonAllocationResponse_AllocationListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonAllocationResponse_AllocationListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonAllocationResponse_AllocationListInfo) ProtoMessage() {}

func (x *GetLessonAllocationResponse_AllocationListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonAllocationResponse_AllocationListInfo.ProtoReflect.Descriptor instead.
func (*GetLessonAllocationResponse_AllocationListInfo) Descriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetAllocationStatus() LessonAllocationStatus {
	if x != nil {
		return x.AllocationStatus
	}
	return LessonAllocationStatus_ALL
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetPurchasedSlot() int32 {
	if x != nil {
		return x.PurchasedSlot
	}
	return 0
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetAssignedSlot() int32 {
	if x != nil {
		return x.AssignedSlot
	}
	return 0
}

// Deprecated: Do not use.
func (x *GetLessonAllocationResponse_AllocationListInfo) GetCourseTypeId() string {
	if x != nil {
		return x.CourseTypeId
	}
	return ""
}

// Deprecated: Do not use.
func (x *GetLessonAllocationResponse_AllocationListInfo) GetTeachingMethod() CourseTeachingMethod {
	if x != nil {
		return x.TeachingMethod
	}
	return CourseTeachingMethod_COURSE_TEACHING_METHOD_NONE
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetIsWeeklySchedule() bool {
	if x != nil {
		return x.IsWeeklySchedule
	}
	return false
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetStudentSubscriptionId() string {
	if x != nil {
		return x.StudentSubscriptionId
	}
	return ""
}

// Deprecated: Do not use.
func (x *GetLessonAllocationResponse_AllocationListInfo) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *GetLessonAllocationResponse_AllocationListInfo) GetPackageTypeSchedule() PackageTypeSchedule {
	if x != nil {
		return x.PackageTypeSchedule
	}
	return PackageTypeSchedule_PACKAGE_TYPE_NONE
}

type GetLessonScheduleByStudentSubscriptionResponse_Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId         string                  `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	LocationId       string                  `protobuf:"bytes,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	StartTime        *timestamppb.Timestamp  `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamppb.Timestamp  `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	AttendanceStatus StudentAttendStatus     `protobuf:"varint,5,opt,name=attendance_status,json=attendanceStatus,proto3,enum=lessonmgmt.v1.StudentAttendStatus" json:"attendance_status,omitempty"`
	ReportId         string                  `protobuf:"bytes,6,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	LessonStatus     LessonStatus            `protobuf:"varint,7,opt,name=lesson_status,json=lessonStatus,proto3,enum=lessonmgmt.v1.LessonStatus" json:"lesson_status,omitempty"`
	TeachingMethod   v1.LessonTeachingMethod `protobuf:"varint,8,opt,name=teaching_method,json=teachingMethod,proto3,enum=common.v1.LessonTeachingMethod" json:"teaching_method,omitempty"`
	IsLocked         bool                    `protobuf:"varint,9,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) Reset() {
	*x = GetLessonScheduleByStudentSubscriptionResponse_Lesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonScheduleByStudentSubscriptionResponse_Lesson) ProtoMessage() {}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonScheduleByStudentSubscriptionResponse_Lesson.ProtoReflect.Descriptor instead.
func (*GetLessonScheduleByStudentSubscriptionResponse_Lesson) Descriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) GetAttendanceStatus() StudentAttendStatus {
	if x != nil {
		return x.AttendanceStatus
	}
	return StudentAttendStatus_STUDENT_ATTEND_STATUS_EMPTY
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) GetLessonStatus() LessonStatus {
	if x != nil {
		return x.LessonStatus
	}
	return LessonStatus_LESSON_SCHEDULING_STATUS_PUBLISHED
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) GetTeachingMethod() v1.LessonTeachingMethod {
	if x != nil {
		return x.TeachingMethod
	}
	return v1.LessonTeachingMethod_LESSON_TEACHING_METHOD_INDIVIDUAL
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_Lesson) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

type GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcademicWeekId string                                                   `protobuf:"bytes,1,opt,name=academic_week_id,json=academicWeekId,proto3" json:"academic_week_id,omitempty"`
	WeekOrder      uint32                                                   `protobuf:"varint,2,opt,name=week_order,json=weekOrder,proto3" json:"week_order,omitempty"`
	WeekName       string                                                   `protobuf:"bytes,3,opt,name=week_name,json=weekName,proto3" json:"week_name,omitempty"`
	StartTime      *timestamppb.Timestamp                                   `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        *timestamppb.Timestamp                                   `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Frequency      uint32                                                   `protobuf:"varint,6,opt,name=frequency,proto3" json:"frequency,omitempty"`
	LocationId     string                                                   `protobuf:"bytes,7,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Lessons        []*GetLessonScheduleByStudentSubscriptionResponse_Lesson `protobuf:"bytes,8,rep,name=lessons,proto3" json:"lessons,omitempty"`
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) Reset() {
	*x = GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) ProtoMessage() {}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) ProtoReflect() protoreflect.Message {
	mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList.ProtoReflect.Descriptor instead.
func (*GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) Descriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) GetAcademicWeekId() string {
	if x != nil {
		return x.AcademicWeekId
	}
	return ""
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) GetWeekOrder() uint32 {
	if x != nil {
		return x.WeekOrder
	}
	return 0
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) GetWeekName() string {
	if x != nil {
		return x.WeekName
	}
	return ""
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) GetFrequency() uint32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList) GetLessons() []*GetLessonScheduleByStudentSubscriptionResponse_Lesson {
	if x != nil {
		return x.Lessons
	}
	return nil
}

type GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseLocationScheduleId string              `protobuf:"bytes,1,opt,name=course_location_schedule_id,json=courseLocationScheduleId,proto3" json:"course_location_schedule_id,omitempty"`
	PackageTypeSchedule      PackageTypeSchedule `protobuf:"varint,2,opt,name=package_type_schedule,json=packageTypeSchedule,proto3,enum=lessonmgmt.v1.PackageTypeSchedule" json:"package_type_schedule,omitempty"`
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule) Reset() {
	*x = GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule) ProtoMessage() {}

func (x *GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_lessonmgmt_v1_allocation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule.ProtoReflect.Descriptor instead.
func (*GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule) Descriptor() ([]byte, []int) {
	return file_lessonmgmt_v1_allocation_proto_rawDescGZIP(), []int{3, 2}
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule) GetCourseLocationScheduleId() string {
	if x != nil {
		return x.CourseLocationScheduleId
	}
	return ""
}

func (x *GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule) GetPackageTypeSchedule() PackageTypeSchedule {
	if x != nil {
		return x.PackageTypeSchedule
	}
	return PackageTypeSchedule_PACKAGE_TYPE_NONE
}

var File_lessonmgmt_v1_allocation_proto protoreflect.FileDescriptor

var file_lessonmgmt_v1_allocation_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x1a,
	0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x06, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x48, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x1a, 0xdf, 0x04, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x12, 0x50, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69,
	0x73, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x32, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x6e,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x11, 0x69, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x6e, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x10, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0xba, 0x09, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a,
	0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6f, 0x66, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x66, 0x4e,
	0x6f, 0x6e, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x1b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c,
	0x79, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x66, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x6c, 0x79, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x66, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x5f, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4f, 0x66, 0x46, 0x75, 0x6c, 0x6c, 0x79, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x66, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x66, 0x4f, 0x76, 0x65, 0x72, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x1a, 0xdc, 0x05, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x11,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x28, 0x0a, 0x0e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x77,
	0x65, 0x65, 0x6b, 0x6c, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x56, 0x0a,
	0x15, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x9b, 0x0c, 0x0a, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x65, 0x65, 0x6b,
	0x6c, 0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x09,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x8e, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x16, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0xcf, 0x03, 0x0a, 0x06, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x12, 0x40, 0x0a, 0x0d, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0e, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x1a, 0x89, 0x03, 0x0a, 0x10, 0x57,
	0x65, 0x65, 0x6b, 0x6c, 0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x5f, 0x77, 0x65, 0x65, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x61, 0x64, 0x65,
	0x6d, 0x69, 0x63, 0x57, 0x65, 0x65, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x65,
	0x6b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x77,
	0x65, 0x65, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x65, 0x65, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x65, 0x65,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x1a, 0xaf, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x56, 0x0a, 0x15, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2a, 0x73, 0x0a, 0x16, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e,
	0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x41, 0x53, 0x53, 0x49,
	0x47, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x55, 0x4c, 0x4c, 0x59, 0x5f,
	0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x56,
	0x45, 0x52, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x80, 0x01,
	0x0a, 0x14, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x55, 0x52, 0x53, 0x45,
	0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f, 0x55, 0x52, 0x53,
	0x45, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f,
	0x44, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x56, 0x49, 0x44, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x20,
	0x0a, 0x1c, 0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x43, 0x48, 0x49, 0x4e,
	0x47, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x02,
	0x32, 0xb5, 0x02, 0x0a, 0x1d, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0xa5, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x2e, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x69, 0x65, 0x2d, 0x63,
	0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x62, 0x75, 0x66, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x6d, 0x67, 0x6d,
	0x74, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lessonmgmt_v1_allocation_proto_rawDescOnce sync.Once
	file_lessonmgmt_v1_allocation_proto_rawDescData = file_lessonmgmt_v1_allocation_proto_rawDesc
)

func file_lessonmgmt_v1_allocation_proto_rawDescGZIP() []byte {
	file_lessonmgmt_v1_allocation_proto_rawDescOnce.Do(func() {
		file_lessonmgmt_v1_allocation_proto_rawDescData = protoimpl.X.CompressGZIP(file_lessonmgmt_v1_allocation_proto_rawDescData)
	})
	return file_lessonmgmt_v1_allocation_proto_rawDescData
}

var file_lessonmgmt_v1_allocation_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_lessonmgmt_v1_allocation_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_lessonmgmt_v1_allocation_proto_goTypes = []interface{}{
	(LessonAllocationStatus)(0),                                                   // 0: lessonmgmt.v1.LessonAllocationStatus
	(CourseTeachingMethod)(0),                                                     // 1: lessonmgmt.v1.CourseTeachingMethod
	(*GetLessonAllocationRequest)(nil),                                            // 2: lessonmgmt.v1.GetLessonAllocationRequest
	(*GetLessonAllocationResponse)(nil),                                           // 3: lessonmgmt.v1.GetLessonAllocationResponse
	(*GetLessonScheduleByStudentSubscriptionRequest)(nil),                         // 4: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionRequest
	(*GetLessonScheduleByStudentSubscriptionResponse)(nil),                        // 5: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse
	(*GetLessonAllocationRequest_Filter)(nil),                                     // 6: lessonmgmt.v1.GetLessonAllocationRequest.Filter
	(*GetLessonAllocationResponse_AllocationListInfo)(nil),                        // 7: lessonmgmt.v1.GetLessonAllocationResponse.AllocationListInfo
	(*GetLessonScheduleByStudentSubscriptionResponse_Lesson)(nil),                 // 8: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.Lesson
	(*GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList)(nil),       // 9: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.WeeklyLessonList
	(*GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule)(nil), // 10: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.CourseLocationSchedule
	(*v1.Paging)(nil),             // 11: common.v1.Paging
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(PackageTypeSchedule)(0),      // 13: lessonmgmt.v1.PackageTypeSchedule
	(StudentAttendStatus)(0),      // 14: lessonmgmt.v1.StudentAttendStatus
	(LessonStatus)(0),             // 15: lessonmgmt.v1.LessonStatus
	(v1.LessonTeachingMethod)(0),  // 16: common.v1.LessonTeachingMethod
}
var file_lessonmgmt_v1_allocation_proto_depIdxs = []int32{
	11, // 0: lessonmgmt.v1.GetLessonAllocationRequest.paging:type_name -> common.v1.Paging
	6,  // 1: lessonmgmt.v1.GetLessonAllocationRequest.filter:type_name -> lessonmgmt.v1.GetLessonAllocationRequest.Filter
	7,  // 2: lessonmgmt.v1.GetLessonAllocationResponse.items:type_name -> lessonmgmt.v1.GetLessonAllocationResponse.AllocationListInfo
	11, // 3: lessonmgmt.v1.GetLessonAllocationResponse.next_page:type_name -> common.v1.Paging
	11, // 4: lessonmgmt.v1.GetLessonAllocationResponse.previous_page:type_name -> common.v1.Paging
	11, // 5: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionRequest.paging:type_name -> common.v1.Paging
	9,  // 6: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.items:type_name -> lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.WeeklyLessonList
	11, // 7: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.next_page:type_name -> common.v1.Paging
	11, // 8: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.previous_page:type_name -> common.v1.Paging
	10, // 9: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.course_location_schedule:type_name -> lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.CourseLocationSchedule
	1,  // 10: lessonmgmt.v1.GetLessonAllocationRequest.Filter.teaching_method:type_name -> lessonmgmt.v1.CourseTeachingMethod
	12, // 11: lessonmgmt.v1.GetLessonAllocationRequest.Filter.start_time:type_name -> google.protobuf.Timestamp
	12, // 12: lessonmgmt.v1.GetLessonAllocationRequest.Filter.end_time:type_name -> google.protobuf.Timestamp
	0,  // 13: lessonmgmt.v1.GetLessonAllocationRequest.Filter.allocation_status:type_name -> lessonmgmt.v1.LessonAllocationStatus
	1,  // 14: lessonmgmt.v1.GetLessonAllocationRequest.Filter.teaching_methods:type_name -> lessonmgmt.v1.CourseTeachingMethod
	12, // 15: lessonmgmt.v1.GetLessonAllocationResponse.AllocationListInfo.start_time:type_name -> google.protobuf.Timestamp
	12, // 16: lessonmgmt.v1.GetLessonAllocationResponse.AllocationListInfo.end_time:type_name -> google.protobuf.Timestamp
	0,  // 17: lessonmgmt.v1.GetLessonAllocationResponse.AllocationListInfo.allocation_status:type_name -> lessonmgmt.v1.LessonAllocationStatus
	1,  // 18: lessonmgmt.v1.GetLessonAllocationResponse.AllocationListInfo.teaching_method:type_name -> lessonmgmt.v1.CourseTeachingMethod
	13, // 19: lessonmgmt.v1.GetLessonAllocationResponse.AllocationListInfo.package_type_schedule:type_name -> lessonmgmt.v1.PackageTypeSchedule
	12, // 20: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.Lesson.start_time:type_name -> google.protobuf.Timestamp
	12, // 21: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.Lesson.end_time:type_name -> google.protobuf.Timestamp
	14, // 22: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.Lesson.attendance_status:type_name -> lessonmgmt.v1.StudentAttendStatus
	15, // 23: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.Lesson.lesson_status:type_name -> lessonmgmt.v1.LessonStatus
	16, // 24: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.Lesson.teaching_method:type_name -> common.v1.LessonTeachingMethod
	12, // 25: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.WeeklyLessonList.start_time:type_name -> google.protobuf.Timestamp
	12, // 26: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.WeeklyLessonList.end_time:type_name -> google.protobuf.Timestamp
	8,  // 27: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.WeeklyLessonList.lessons:type_name -> lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.Lesson
	13, // 28: lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse.CourseLocationSchedule.package_type_schedule:type_name -> lessonmgmt.v1.PackageTypeSchedule
	2,  // 29: lessonmgmt.v1.LessonAllocationReaderService.GetLessonAllocation:input_type -> lessonmgmt.v1.GetLessonAllocationRequest
	4,  // 30: lessonmgmt.v1.LessonAllocationReaderService.GetLessonScheduleByStudentSubscription:input_type -> lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionRequest
	3,  // 31: lessonmgmt.v1.LessonAllocationReaderService.GetLessonAllocation:output_type -> lessonmgmt.v1.GetLessonAllocationResponse
	5,  // 32: lessonmgmt.v1.LessonAllocationReaderService.GetLessonScheduleByStudentSubscription:output_type -> lessonmgmt.v1.GetLessonScheduleByStudentSubscriptionResponse
	31, // [31:33] is the sub-list for method output_type
	29, // [29:31] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_lessonmgmt_v1_allocation_proto_init() }
func file_lessonmgmt_v1_allocation_proto_init() {
	if File_lessonmgmt_v1_allocation_proto != nil {
		return
	}
	file_lessonmgmt_v1_enums_proto_init()
	file_lessonmgmt_v1_lessons_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lessonmgmt_v1_allocation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonAllocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessonmgmt_v1_allocation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonAllocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessonmgmt_v1_allocation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonScheduleByStudentSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessonmgmt_v1_allocation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonScheduleByStudentSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessonmgmt_v1_allocation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonAllocationRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessonmgmt_v1_allocation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonAllocationResponse_AllocationListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessonmgmt_v1_allocation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonScheduleByStudentSubscriptionResponse_Lesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessonmgmt_v1_allocation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonScheduleByStudentSubscriptionResponse_WeeklyLessonList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessonmgmt_v1_allocation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonScheduleByStudentSubscriptionResponse_CourseLocationSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lessonmgmt_v1_allocation_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lessonmgmt_v1_allocation_proto_goTypes,
		DependencyIndexes: file_lessonmgmt_v1_allocation_proto_depIdxs,
		EnumInfos:         file_lessonmgmt_v1_allocation_proto_enumTypes,
		MessageInfos:      file_lessonmgmt_v1_allocation_proto_msgTypes,
	}.Build()
	File_lessonmgmt_v1_allocation_proto = out.File
	file_lessonmgmt_v1_allocation_proto_rawDesc = nil
	file_lessonmgmt_v1_allocation_proto_goTypes = nil
	file_lessonmgmt_v1_allocation_proto_depIdxs = nil
}
