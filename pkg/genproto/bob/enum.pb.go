// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: enum.proto

package pb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Country int32

const (
	COUNTRY_NONE   Country = 0
	COUNTRY_MASTER Country = 1
	COUNTRY_VN     Country = 2
	COUNTRY_ID     Country = 3
	COUNTRY_SG     Country = 4
	COUNTRY_JP     Country = 5
)

var Country_name = map[int32]string{
	0: "COUNTRY_NONE",
	1: "COUNTRY_MASTER",
	2: "COUNTRY_VN",
	3: "COUNTRY_ID",
	4: "COUNTRY_SG",
	5: "COUNTRY_JP",
}

var Country_value = map[string]int32{
	"COUNTRY_NONE":   0,
	"COUNTRY_MASTER": 1,
	"COUNTRY_VN":     2,
	"COUNTRY_ID":     3,
	"COUNTRY_SG":     4,
	"COUNTRY_JP":     5,
}

func (Country) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{0}
}

type Subject int32

const (
	SUBJECT_NONE           Subject = 0
	SUBJECT_MATHS          Subject = 1
	SUBJECT_BIOLOGY        Subject = 2
	SUBJECT_PHYSICS        Subject = 3
	SUBJECT_CHEMISTRY      Subject = 4
	SUBJECT_GEOGRAPHY      Subject = 5
	SUBJECT_ENGLISH        Subject = 6
	SUBJECT_ENGLISH_2      Subject = 7
	SUBJECT_JAPANESE       Subject = 8
	SUBJECT_SCIENCE        Subject = 9
	SUBJECT_SOCIAL_STUDIES Subject = 10
	SUBJECT_LITERATURE     Subject = 11
)

var Subject_name = map[int32]string{
	0:  "SUBJECT_NONE",
	1:  "SUBJECT_MATHS",
	2:  "SUBJECT_BIOLOGY",
	3:  "SUBJECT_PHYSICS",
	4:  "SUBJECT_CHEMISTRY",
	5:  "SUBJECT_GEOGRAPHY",
	6:  "SUBJECT_ENGLISH",
	7:  "SUBJECT_ENGLISH_2",
	8:  "SUBJECT_JAPANESE",
	9:  "SUBJECT_SCIENCE",
	10: "SUBJECT_SOCIAL_STUDIES",
	11: "SUBJECT_LITERATURE",
}

var Subject_value = map[string]int32{
	"SUBJECT_NONE":           0,
	"SUBJECT_MATHS":          1,
	"SUBJECT_BIOLOGY":        2,
	"SUBJECT_PHYSICS":        3,
	"SUBJECT_CHEMISTRY":      4,
	"SUBJECT_GEOGRAPHY":      5,
	"SUBJECT_ENGLISH":        6,
	"SUBJECT_ENGLISH_2":      7,
	"SUBJECT_JAPANESE":       8,
	"SUBJECT_SCIENCE":        9,
	"SUBJECT_SOCIAL_STUDIES": 10,
	"SUBJECT_LITERATURE":     11,
}

func (Subject) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{1}
}

type TopicType int32

const (
	TOPIC_TYPE_NONE        TopicType = 0
	TOPIC_TYPE_LEARNING    TopicType = 1
	TOPIC_TYPE_PRACTICAL   TopicType = 2
	TOPIC_TYPE_EXAM        TopicType = 3
	TOPIC_TYPE_ASSIGNMENT  TopicType = 4
	TOPIC_TYPE_LIVE_LESSON TopicType = 5
)

var TopicType_name = map[int32]string{
	0: "TOPIC_TYPE_NONE",
	1: "TOPIC_TYPE_LEARNING",
	2: "TOPIC_TYPE_PRACTICAL",
	3: "TOPIC_TYPE_EXAM",
	4: "TOPIC_TYPE_ASSIGNMENT",
	5: "TOPIC_TYPE_LIVE_LESSON",
}

var TopicType_value = map[string]int32{
	"TOPIC_TYPE_NONE":        0,
	"TOPIC_TYPE_LEARNING":    1,
	"TOPIC_TYPE_PRACTICAL":   2,
	"TOPIC_TYPE_EXAM":        3,
	"TOPIC_TYPE_ASSIGNMENT":  4,
	"TOPIC_TYPE_LIVE_LESSON": 5,
}

func (TopicType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{2}
}

type UserNotificationStatus int32

const (
	USER_NOTIFICATION_STATUS_NONE   UserNotificationStatus = 0
	USER_NOTIFICATION_STATUS_NEW    UserNotificationStatus = 1
	USER_NOTIFICATION_STATUS_SEEN   UserNotificationStatus = 2
	USER_NOTIFICATION_STATUS_READ   UserNotificationStatus = 3
	USER_NOTIFICATION_STATUS_FAILED UserNotificationStatus = 4
)

var UserNotificationStatus_name = map[int32]string{
	0: "USER_NOTIFICATION_STATUS_NONE",
	1: "USER_NOTIFICATION_STATUS_NEW",
	2: "USER_NOTIFICATION_STATUS_SEEN",
	3: "USER_NOTIFICATION_STATUS_READ",
	4: "USER_NOTIFICATION_STATUS_FAILED",
}

var UserNotificationStatus_value = map[string]int32{
	"USER_NOTIFICATION_STATUS_NONE":   0,
	"USER_NOTIFICATION_STATUS_NEW":    1,
	"USER_NOTIFICATION_STATUS_SEEN":   2,
	"USER_NOTIFICATION_STATUS_READ":   3,
	"USER_NOTIFICATION_STATUS_FAILED": 4,
}

func (UserNotificationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{3}
}

type NotificationType int32

const (
	NOTIFICATION_TYPE_NONE       NotificationType = 0
	NOTIFICATION_TYPE_TEXT       NotificationType = 1
	NOTIFICATION_TYPE_PROMO_CODE NotificationType = 2
	NOTIFICATION_TYPE_ASSIGNMENT NotificationType = 3
)

var NotificationType_name = map[int32]string{
	0: "NOTIFICATION_TYPE_NONE",
	1: "NOTIFICATION_TYPE_TEXT",
	2: "NOTIFICATION_TYPE_PROMO_CODE",
	3: "NOTIFICATION_TYPE_ASSIGNMENT",
}

var NotificationType_value = map[string]int32{
	"NOTIFICATION_TYPE_NONE":       0,
	"NOTIFICATION_TYPE_TEXT":       1,
	"NOTIFICATION_TYPE_PROMO_CODE": 2,
	"NOTIFICATION_TYPE_ASSIGNMENT": 3,
}

func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{4}
}

type UploadType int32

const (
	UPLOAD_TYPE_AVATAR     UploadType = 0
	UPLOAD_TYPE_CHAT       UploadType = 1
	UPLOAD_TYPE_ASSIGNMENT UploadType = 2
)

var UploadType_name = map[int32]string{
	0: "UPLOAD_TYPE_AVATAR",
	1: "UPLOAD_TYPE_CHAT",
	2: "UPLOAD_TYPE_ASSIGNMENT",
}

var UploadType_value = map[string]int32{
	"UPLOAD_TYPE_AVATAR":     0,
	"UPLOAD_TYPE_CHAT":       1,
	"UPLOAD_TYPE_ASSIGNMENT": 2,
}

func (UploadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{5}
}

type PaymentStatus int32

const (
	PAYMENT_STATUS_ON_TRIAL      PaymentStatus = 0
	PAYMENT_STATUS_EXPIRED_TRIAL PaymentStatus = 1
	PAYMENT_STATUS_PAID          PaymentStatus = 2
	PAYMENT_STATUS_LATE_PAYMENT  PaymentStatus = 3
)

var PaymentStatus_name = map[int32]string{
	0: "PAYMENT_STATUS_ON_TRIAL",
	1: "PAYMENT_STATUS_EXPIRED_TRIAL",
	2: "PAYMENT_STATUS_PAID",
	3: "PAYMENT_STATUS_LATE_PAYMENT",
}

var PaymentStatus_value = map[string]int32{
	"PAYMENT_STATUS_ON_TRIAL":      0,
	"PAYMENT_STATUS_EXPIRED_TRIAL": 1,
	"PAYMENT_STATUS_PAID":          2,
	"PAYMENT_STATUS_LATE_PAYMENT":  3,
}

func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{6}
}

type AskDuration int32

const (
	THIS_DAY   AskDuration = 0
	THIS_WEEK  AskDuration = 1
	THIS_MONTH AskDuration = 2
	THIS_YEAR  AskDuration = 3
)

var AskDuration_name = map[int32]string{
	0: "THIS_DAY",
	1: "THIS_WEEK",
	2: "THIS_MONTH",
	3: "THIS_YEAR",
}

var AskDuration_value = map[string]int32{
	"THIS_DAY":   0,
	"THIS_WEEK":  1,
	"THIS_MONTH": 2,
	"THIS_YEAR":  3,
}

func (AskDuration) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{7}
}

type QuestionStatus int32

const (
	QUESTION_STATUS_WAITING_FOR_ASSIGN QuestionStatus = 0
	QUESTION_STATUS_ASSIGNED           QuestionStatus = 1
	QUESTION_STATUS_MARKED_AS_RESOLVED QuestionStatus = 2
	QUESTION_STATUS_MARKED_AS_INVALID  QuestionStatus = 3
	QUESTION_STATUS_INVALID            QuestionStatus = 4
	QUESTION_STATUS_SOLVED             QuestionStatus = 5
	QUESTION_STATUS_EXPIRED_SOLVED     QuestionStatus = 6
	QUESTION_STATUS_RATED              QuestionStatus = 7
	QUESTION_STATUS_ARCHIVED           QuestionStatus = 8
)

var QuestionStatus_name = map[int32]string{
	0: "QUESTION_STATUS_WAITING_FOR_ASSIGN",
	1: "QUESTION_STATUS_ASSIGNED",
	2: "QUESTION_STATUS_MARKED_AS_RESOLVED",
	3: "QUESTION_STATUS_MARKED_AS_INVALID",
	4: "QUESTION_STATUS_INVALID",
	5: "QUESTION_STATUS_SOLVED",
	6: "QUESTION_STATUS_EXPIRED_SOLVED",
	7: "QUESTION_STATUS_RATED",
	8: "QUESTION_STATUS_ARCHIVED",
}

var QuestionStatus_value = map[string]int32{
	"QUESTION_STATUS_WAITING_FOR_ASSIGN": 0,
	"QUESTION_STATUS_ASSIGNED":           1,
	"QUESTION_STATUS_MARKED_AS_RESOLVED": 2,
	"QUESTION_STATUS_MARKED_AS_INVALID":  3,
	"QUESTION_STATUS_INVALID":            4,
	"QUESTION_STATUS_SOLVED":             5,
	"QUESTION_STATUS_EXPIRED_SOLVED":     6,
	"QUESTION_STATUS_RATED":              7,
	"QUESTION_STATUS_ARCHIVED":           8,
}

func (QuestionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{8}
}

type TutorStatus int32

const (
	TUTOR_STATUS_NONE    TutorStatus = 0
	TUTOR_STATUS_ONLINE  TutorStatus = 1
	TUTOR_STATUS_OFFLINE TutorStatus = 2
)

var TutorStatus_name = map[int32]string{
	0: "TUTOR_STATUS_NONE",
	1: "TUTOR_STATUS_ONLINE",
	2: "TUTOR_STATUS_OFFLINE",
}

var TutorStatus_value = map[string]int32{
	"TUTOR_STATUS_NONE":    0,
	"TUTOR_STATUS_ONLINE":  1,
	"TUTOR_STATUS_OFFLINE": 2,
}

func (TutorStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{9}
}

type TopicStatus int32

const (
	TOPIC_STATUS_NONE      TopicStatus = 0
	TOPIC_STATUS_DRAFT     TopicStatus = 1
	TOPIC_STATUS_PUBLISHED TopicStatus = 2
)

var TopicStatus_name = map[int32]string{
	0: "TOPIC_STATUS_NONE",
	1: "TOPIC_STATUS_DRAFT",
	2: "TOPIC_STATUS_PUBLISHED",
}

var TopicStatus_value = map[string]int32{
	"TOPIC_STATUS_NONE":      0,
	"TOPIC_STATUS_DRAFT":     1,
	"TOPIC_STATUS_PUBLISHED": 2,
}

func (TopicStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{10}
}

type OrderStatus int32

const (
	ORDER_STATUS_NONE                OrderStatus = 0
	ORDER_STATUS_WAITING_FOR_PAYMENT OrderStatus = 1
	ORDER_STATUS_SUCCESSFULLY        OrderStatus = 2
	ORDER_STATUS_FAILED              OrderStatus = 3
	ORDER_STATUS_CANCELED            OrderStatus = 4
	ORDER_STATUS_ENDED               OrderStatus = 5 // Deprecated: Do not use.
	ORDER_STATUS_PROCESSING_PAYMENT  OrderStatus = 6
	ORDER_STATUS_DELETED             OrderStatus = 7
	ORDER_STATUS_DISABLED            OrderStatus = 8
)

var OrderStatus_name = map[int32]string{
	0: "ORDER_STATUS_NONE",
	1: "ORDER_STATUS_WAITING_FOR_PAYMENT",
	2: "ORDER_STATUS_SUCCESSFULLY",
	3: "ORDER_STATUS_FAILED",
	4: "ORDER_STATUS_CANCELED",
	5: "ORDER_STATUS_ENDED",
	6: "ORDER_STATUS_PROCESSING_PAYMENT",
	7: "ORDER_STATUS_DELETED",
	8: "ORDER_STATUS_DISABLED",
}

var OrderStatus_value = map[string]int32{
	"ORDER_STATUS_NONE":                0,
	"ORDER_STATUS_WAITING_FOR_PAYMENT": 1,
	"ORDER_STATUS_SUCCESSFULLY":        2,
	"ORDER_STATUS_FAILED":              3,
	"ORDER_STATUS_CANCELED":            4,
	"ORDER_STATUS_ENDED":               5,
	"ORDER_STATUS_PROCESSING_PAYMENT":  6,
	"ORDER_STATUS_DELETED":             7,
	"ORDER_STATUS_DISABLED":            8,
}

func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{11}
}

type OrderTransitionAction int32

const (
	ORDER_TRANSITION_NONE            OrderTransitionAction = 0
	ORDER_TRANSITION_PROCESS_PAYMENT OrderTransitionAction = 1
	ORDER_TRANSITION_COMPLETE        OrderTransitionAction = 2
	ORDER_TRANSITION_FAIL            OrderTransitionAction = 3
	ORDER_TRANSITION_CANCEL          OrderTransitionAction = 4
	ORDER_TRANSITION_CLOSE           OrderTransitionAction = 5 // Deprecated: Do not use.
	ORDER_TRANSITION_DELETE          OrderTransitionAction = 6
	ORDER_TRANSITION_COMPLETE_MANUAL OrderTransitionAction = 7
)

var OrderTransitionAction_name = map[int32]string{
	0: "ORDER_TRANSITION_NONE",
	1: "ORDER_TRANSITION_PROCESS_PAYMENT",
	2: "ORDER_TRANSITION_COMPLETE",
	3: "ORDER_TRANSITION_FAIL",
	4: "ORDER_TRANSITION_CANCEL",
	5: "ORDER_TRANSITION_CLOSE",
	6: "ORDER_TRANSITION_DELETE",
	7: "ORDER_TRANSITION_COMPLETE_MANUAL",
}

var OrderTransitionAction_value = map[string]int32{
	"ORDER_TRANSITION_NONE":            0,
	"ORDER_TRANSITION_PROCESS_PAYMENT": 1,
	"ORDER_TRANSITION_COMPLETE":        2,
	"ORDER_TRANSITION_FAIL":            3,
	"ORDER_TRANSITION_CANCEL":          4,
	"ORDER_TRANSITION_CLOSE":           5,
	"ORDER_TRANSITION_DELETE":          6,
	"ORDER_TRANSITION_COMPLETE_MANUAL": 7,
}

func (OrderTransitionAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{12}
}

type QuestionTransition int32

const (
	QUESTION_TRANSITION_ASSIGN             QuestionTransition = 0
	QUESTION_TRANSITION_MARKED_AS_RESOLVED QuestionTransition = 1
	QUESTION_TRANSITION_MARKED_AS_INVALID  QuestionTransition = 2
	QUESTION_TRANSITION_AGREE_INVALID      QuestionTransition = 3
	QUESTION_TRANSITION_DISAGREE_INVALID   QuestionTransition = 4
	QUESTION_TRANSITION_AGREE_RESOLVED     QuestionTransition = 5
	QUESTION_TRANSITION_DISAGREE_RESOLVED  QuestionTransition = 6
	QUESTION_TRANSITION_TIME_OUT_SOLVED    QuestionTransition = 7
	QUESTION_TRANSITION_RATE               QuestionTransition = 8
	QUESTION_TRANSITION_ARCHIVED           QuestionTransition = 9
)

var QuestionTransition_name = map[int32]string{
	0: "QUESTION_TRANSITION_ASSIGN",
	1: "QUESTION_TRANSITION_MARKED_AS_RESOLVED",
	2: "QUESTION_TRANSITION_MARKED_AS_INVALID",
	3: "QUESTION_TRANSITION_AGREE_INVALID",
	4: "QUESTION_TRANSITION_DISAGREE_INVALID",
	5: "QUESTION_TRANSITION_AGREE_RESOLVED",
	6: "QUESTION_TRANSITION_DISAGREE_RESOLVED",
	7: "QUESTION_TRANSITION_TIME_OUT_SOLVED",
	8: "QUESTION_TRANSITION_RATE",
	9: "QUESTION_TRANSITION_ARCHIVED",
}

var QuestionTransition_value = map[string]int32{
	"QUESTION_TRANSITION_ASSIGN":             0,
	"QUESTION_TRANSITION_MARKED_AS_RESOLVED": 1,
	"QUESTION_TRANSITION_MARKED_AS_INVALID":  2,
	"QUESTION_TRANSITION_AGREE_INVALID":      3,
	"QUESTION_TRANSITION_DISAGREE_INVALID":   4,
	"QUESTION_TRANSITION_AGREE_RESOLVED":     5,
	"QUESTION_TRANSITION_DISAGREE_RESOLVED":  6,
	"QUESTION_TRANSITION_TIME_OUT_SOLVED":    7,
	"QUESTION_TRANSITION_RATE":               8,
	"QUESTION_TRANSITION_ARCHIVED":           9,
}

func (QuestionTransition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{13}
}

type CoachAutoEvent int32

const (
	COACH_AUTO_EVENT_FINISH_FIRST_LO    CoachAutoEvent = 0
	COACH_AUTO_EVENT_FINISH_FIRST_TOPIC CoachAutoEvent = 1
)

var CoachAutoEvent_name = map[int32]string{
	0: "COACH_AUTO_EVENT_FINISH_FIRST_LO",
	1: "COACH_AUTO_EVENT_FINISH_FIRST_TOPIC",
}

var CoachAutoEvent_value = map[string]int32{
	"COACH_AUTO_EVENT_FINISH_FIRST_LO":    0,
	"COACH_AUTO_EVENT_FINISH_FIRST_TOPIC": 1,
}

func (CoachAutoEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{14}
}

type StudentLearningEvent int32

const (
	STUDENT_FINISH_FIRST_THREE_LO_EVENT StudentLearningEvent = 0
)

var StudentLearningEvent_name = map[int32]string{
	0: "STUDENT_FINISH_FIRST_THREE_LO_EVENT",
}

var StudentLearningEvent_value = map[string]int32{
	"STUDENT_FINISH_FIRST_THREE_LO_EVENT": 0,
}

func (StudentLearningEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{15}
}

type PaymentGateway int32

const (
	GATEWAY_NONE    PaymentGateway = 0
	GATEWAY_ASIAPAY PaymentGateway = 1
	GATEWAY_ONEPAY  PaymentGateway = 2
	GATEWAY_MOMO    PaymentGateway = 3
	GATEWAY_ZALO    PaymentGateway = 4
	GATEWAY_GRAB    PaymentGateway = 5
	GATEWAY_GHN     PaymentGateway = 6
	GATEWAY_IOS     PaymentGateway = 7
)

var PaymentGateway_name = map[int32]string{
	0: "GATEWAY_NONE",
	1: "GATEWAY_ASIAPAY",
	2: "GATEWAY_ONEPAY",
	3: "GATEWAY_MOMO",
	4: "GATEWAY_ZALO",
	5: "GATEWAY_GRAB",
	6: "GATEWAY_GHN",
	7: "GATEWAY_IOS",
}

var PaymentGateway_value = map[string]int32{
	"GATEWAY_NONE":    0,
	"GATEWAY_ASIAPAY": 1,
	"GATEWAY_ONEPAY":  2,
	"GATEWAY_MOMO":    3,
	"GATEWAY_ZALO":    4,
	"GATEWAY_GRAB":    5,
	"GATEWAY_GHN":     6,
	"GATEWAY_IOS":     7,
}

func (PaymentGateway) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{16}
}

type CodOrderTransitionAction int32

const (
	COD_ORDER_TRANSITION_NONE            CodOrderTransitionAction = 0
	COD_ORDER_TRANSITION_COMPLETE        CodOrderTransitionAction = 1
	COD_ORDER_TRANSITION_CANCEL          CodOrderTransitionAction = 2
	COD_ORDER_TRANSITION_COMPLETE_MANUAL CodOrderTransitionAction = 3
)

var CodOrderTransitionAction_name = map[int32]string{
	0: "COD_ORDER_TRANSITION_NONE",
	1: "COD_ORDER_TRANSITION_COMPLETE",
	2: "COD_ORDER_TRANSITION_CANCEL",
	3: "COD_ORDER_TRANSITION_COMPLETE_MANUAL",
}

var CodOrderTransitionAction_value = map[string]int32{
	"COD_ORDER_TRANSITION_NONE":            0,
	"COD_ORDER_TRANSITION_COMPLETE":        1,
	"COD_ORDER_TRANSITION_CANCEL":          2,
	"COD_ORDER_TRANSITION_COMPLETE_MANUAL": 3,
}

func (CodOrderTransitionAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{17}
}

type CodOrderStatus int32

const (
	COD_ORDER_STATUS_NONE         CodOrderStatus = 0
	COD_ORDER_STATUS_PENDING      CodOrderStatus = 1
	COD_ORDER_STATUS_CANCELED     CodOrderStatus = 2
	COD_ORDER_STATUS_SUCCESSFULLY CodOrderStatus = 3
)

var CodOrderStatus_name = map[int32]string{
	0: "COD_ORDER_STATUS_NONE",
	1: "COD_ORDER_STATUS_PENDING",
	2: "COD_ORDER_STATUS_CANCELED",
	3: "COD_ORDER_STATUS_SUCCESSFULLY",
}

var CodOrderStatus_value = map[string]int32{
	"COD_ORDER_STATUS_NONE":         0,
	"COD_ORDER_STATUS_PENDING":      1,
	"COD_ORDER_STATUS_CANCELED":     2,
	"COD_ORDER_STATUS_SUCCESSFULLY": 3,
}

func (CodOrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{18}
}

type SubscriptionStatus int32

const (
	SUBSCRIPTION_STATUS_NONE     SubscriptionStatus = 0
	SUBSCRIPTION_STATUS_ACTIVE   SubscriptionStatus = 1
	SUBSCRIPTION_STATUS_DISABLED SubscriptionStatus = 2
)

var SubscriptionStatus_name = map[int32]string{
	0: "SUBSCRIPTION_STATUS_NONE",
	1: "SUBSCRIPTION_STATUS_ACTIVE",
	2: "SUBSCRIPTION_STATUS_DISABLED",
}

var SubscriptionStatus_value = map[string]int32{
	"SUBSCRIPTION_STATUS_NONE":     0,
	"SUBSCRIPTION_STATUS_ACTIVE":   1,
	"SUBSCRIPTION_STATUS_DISABLED": 2,
}

func (SubscriptionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{19}
}

type PlanPrivilege int32

const (
	CAN_ACCESS_LEARNING_TOPICS PlanPrivilege = 0
	CAN_ACCESS_PRACTICE_TOPICS PlanPrivilege = 1
	CAN_ACCESS_MOCK_EXAMS      PlanPrivilege = 2
	CAN_ACCESS_ALL_LOS         PlanPrivilege = 3
	CAN_ACCESS_SOME_LOS        PlanPrivilege = 4
	CAN_WATCH_VIDEOS           PlanPrivilege = 5
	CAN_READ_STUDY_GUIDES      PlanPrivilege = 6
	CAN_SKIP_VIDEOS            PlanPrivilege = 7
	CAN_CHAT_WITH_TEACHER      PlanPrivilege = 8
)

var PlanPrivilege_name = map[int32]string{
	0: "CAN_ACCESS_LEARNING_TOPICS",
	1: "CAN_ACCESS_PRACTICE_TOPICS",
	2: "CAN_ACCESS_MOCK_EXAMS",
	3: "CAN_ACCESS_ALL_LOS",
	4: "CAN_ACCESS_SOME_LOS",
	5: "CAN_WATCH_VIDEOS",
	6: "CAN_READ_STUDY_GUIDES",
	7: "CAN_SKIP_VIDEOS",
	8: "CAN_CHAT_WITH_TEACHER",
}

var PlanPrivilege_value = map[string]int32{
	"CAN_ACCESS_LEARNING_TOPICS": 0,
	"CAN_ACCESS_PRACTICE_TOPICS": 1,
	"CAN_ACCESS_MOCK_EXAMS":      2,
	"CAN_ACCESS_ALL_LOS":         3,
	"CAN_ACCESS_SOME_LOS":        4,
	"CAN_WATCH_VIDEOS":           5,
	"CAN_READ_STUDY_GUIDES":      6,
	"CAN_SKIP_VIDEOS":            7,
	"CAN_CHAT_WITH_TEACHER":      8,
}

func (PlanPrivilege) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{20}
}

type PaymentMethod int32

const (
	PAYMENT_METHOD_NONE              PaymentMethod = 0
	PAYMENT_METHOD_ATM               PaymentMethod = 1
	PAYMENT_METHOD_CREDIT_DEBIT_CARD PaymentMethod = 2
	PAYMENT_METHOD_COD               PaymentMethod = 3
	PAYMENT_METHOD_BANK_TRANSFER     PaymentMethod = 4
	PAYMENT_METHOD_IAP               PaymentMethod = 5
)

var PaymentMethod_name = map[int32]string{
	0: "PAYMENT_METHOD_NONE",
	1: "PAYMENT_METHOD_ATM",
	2: "PAYMENT_METHOD_CREDIT_DEBIT_CARD",
	3: "PAYMENT_METHOD_COD",
	4: "PAYMENT_METHOD_BANK_TRANSFER",
	5: "PAYMENT_METHOD_IAP",
}

var PaymentMethod_value = map[string]int32{
	"PAYMENT_METHOD_NONE":              0,
	"PAYMENT_METHOD_ATM":               1,
	"PAYMENT_METHOD_CREDIT_DEBIT_CARD": 2,
	"PAYMENT_METHOD_COD":               3,
	"PAYMENT_METHOD_BANK_TRANSFER":     4,
	"PAYMENT_METHOD_IAP":               5,
}

func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{21}
}

type UserGroup int32

const (
	USER_GROUP_NONE          UserGroup = 0
	USER_GROUP_STUDENT       UserGroup = 1
	USER_GROUP_COACH         UserGroup = 2
	USER_GROUP_TUTOR         UserGroup = 3 // Deprecated: Do not use.
	USER_GROUP_STAFF         UserGroup = 4 // Deprecated: Do not use.
	USER_GROUP_ADMIN         UserGroup = 5
	USER_GROUP_TEACHER       UserGroup = 6
	USER_GROUP_PARENT        UserGroup = 7
	USER_GROUP_CONTENT_ADMIN UserGroup = 8  // Deprecated: Do not use.
	USER_GROUP_CONTENT_STAFF UserGroup = 9  // Deprecated: Do not use.
	USER_GROUP_SALES_ADMIN   UserGroup = 10 // Deprecated: Do not use.
	USER_GROUP_SALES_STAFF   UserGroup = 11 // Deprecated: Do not use.
	USER_GROUP_CS_ADMIN      UserGroup = 12 // Deprecated: Do not use.
	USER_GROUP_CS_STAFF      UserGroup = 13 // Deprecated: Do not use.
	USER_GROUP_SCHOOL_ADMIN  UserGroup = 14
	USER_GROUP_SCHOOL_STAFF  UserGroup = 15 // Deprecated: Do not use.
)

var UserGroup_name = map[int32]string{
	0:  "USER_GROUP_NONE",
	1:  "USER_GROUP_STUDENT",
	2:  "USER_GROUP_COACH",
	3:  "USER_GROUP_TUTOR",
	4:  "USER_GROUP_STAFF",
	5:  "USER_GROUP_ADMIN",
	6:  "USER_GROUP_TEACHER",
	7:  "USER_GROUP_PARENT",
	8:  "USER_GROUP_CONTENT_ADMIN",
	9:  "USER_GROUP_CONTENT_STAFF",
	10: "USER_GROUP_SALES_ADMIN",
	11: "USER_GROUP_SALES_STAFF",
	12: "USER_GROUP_CS_ADMIN",
	13: "USER_GROUP_CS_STAFF",
	14: "USER_GROUP_SCHOOL_ADMIN",
	15: "USER_GROUP_SCHOOL_STAFF",
}

var UserGroup_value = map[string]int32{
	"USER_GROUP_NONE":          0,
	"USER_GROUP_STUDENT":       1,
	"USER_GROUP_COACH":         2,
	"USER_GROUP_TUTOR":         3,
	"USER_GROUP_STAFF":         4,
	"USER_GROUP_ADMIN":         5,
	"USER_GROUP_TEACHER":       6,
	"USER_GROUP_PARENT":        7,
	"USER_GROUP_CONTENT_ADMIN": 8,
	"USER_GROUP_CONTENT_STAFF": 9,
	"USER_GROUP_SALES_ADMIN":   10,
	"USER_GROUP_SALES_STAFF":   11,
	"USER_GROUP_CS_ADMIN":      12,
	"USER_GROUP_CS_STAFF":      13,
	"USER_GROUP_SCHOOL_ADMIN":  14,
	"USER_GROUP_SCHOOL_STAFF":  15,
}

func (UserGroup) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{22}
}

type AssignmentStatus int32

const (
	ASSIGNMENT_STATUS_NONE     AssignmentStatus = 0
	ASSIGNMENT_STATUS_STARTED  AssignmentStatus = 1
	ASSIGNMENT_STATUS_UPCOMING AssignmentStatus = 2
)

var AssignmentStatus_name = map[int32]string{
	0: "ASSIGNMENT_STATUS_NONE",
	1: "ASSIGNMENT_STATUS_STARTED",
	2: "ASSIGNMENT_STATUS_UPCOMING",
}

var AssignmentStatus_value = map[string]int32{
	"ASSIGNMENT_STATUS_NONE":     0,
	"ASSIGNMENT_STATUS_STARTED":  1,
	"ASSIGNMENT_STATUS_UPCOMING": 2,
}

func (AssignmentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{23}
}

type AchievementCrown int32

const (
	ACHIEVEMENT_CROWN_NONE   AchievementCrown = 0
	ACHIEVEMENT_CROWN_BRONZE AchievementCrown = 1
	ACHIEVEMENT_CROWN_SILVER AchievementCrown = 2
	ACHIEVEMENT_CROWN_GOLD   AchievementCrown = 3
)

var AchievementCrown_name = map[int32]string{
	0: "ACHIEVEMENT_CROWN_NONE",
	1: "ACHIEVEMENT_CROWN_BRONZE",
	2: "ACHIEVEMENT_CROWN_SILVER",
	3: "ACHIEVEMENT_CROWN_GOLD",
}

var AchievementCrown_value = map[string]int32{
	"ACHIEVEMENT_CROWN_NONE":   0,
	"ACHIEVEMENT_CROWN_BRONZE": 1,
	"ACHIEVEMENT_CROWN_SILVER": 2,
	"ACHIEVEMENT_CROWN_GOLD":   3,
}

func (AchievementCrown) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{24}
}

type CourseType int32

const (
	COURSE_TYPE_NONE    CourseType = 0
	COURSE_TYPE_CONTENT CourseType = 1
	COURSE_TYPE_LIVE    CourseType = 2
)

var CourseType_name = map[int32]string{
	0: "COURSE_TYPE_NONE",
	1: "COURSE_TYPE_CONTENT",
	2: "COURSE_TYPE_LIVE",
}

var CourseType_value = map[string]int32{
	"COURSE_TYPE_NONE":    0,
	"COURSE_TYPE_CONTENT": 1,
	"COURSE_TYPE_LIVE":    2,
}

func (CourseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{25}
}

type CourseStatus int32

const (
	COURSE_STATUS_NONE      CourseStatus = 0
	COURSE_STATUS_ACTIVE    CourseStatus = 1
	COURSE_STATUS_COMPLETED CourseStatus = 2
	COURSE_STATUS_ON_GOING  CourseStatus = 3
)

var CourseStatus_name = map[int32]string{
	0: "COURSE_STATUS_NONE",
	1: "COURSE_STATUS_ACTIVE",
	2: "COURSE_STATUS_COMPLETED",
	3: "COURSE_STATUS_ON_GOING",
}

var CourseStatus_value = map[string]int32{
	"COURSE_STATUS_NONE":      0,
	"COURSE_STATUS_ACTIVE":    1,
	"COURSE_STATUS_COMPLETED": 2,
	"COURSE_STATUS_ON_GOING":  3,
}

func (CourseStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{26}
}

type LessonStatus int32

const (
	LESSON_STATUS_NONE        LessonStatus = 0
	LESSON_STATUS_COMPLETED   LessonStatus = 1
	LESSON_STATUS_IN_PROGRESS LessonStatus = 2
	LESSON_STATUS_NOT_STARTED LessonStatus = 3
)

var LessonStatus_name = map[int32]string{
	0: "LESSON_STATUS_NONE",
	1: "LESSON_STATUS_COMPLETED",
	2: "LESSON_STATUS_IN_PROGRESS",
	3: "LESSON_STATUS_NOT_STARTED",
}

var LessonStatus_value = map[string]int32{
	"LESSON_STATUS_NONE":        0,
	"LESSON_STATUS_COMPLETED":   1,
	"LESSON_STATUS_IN_PROGRESS": 2,
	"LESSON_STATUS_NOT_STARTED": 3,
}

func (LessonStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{27}
}

type NotificationEvent int32

const (
	NOTIFICATION_EVENT_NONE                      NotificationEvent = 0
	NOTIFICATION_EVENT_X_LO_COMPLETED            NotificationEvent = 1
	NOTIFICATION_EVENT_TEACHER_GIVE_ASSIGNMENT   NotificationEvent = 2
	NOTIFICATION_EVENT_TEACHER_RETURN_ASSIGNMENT NotificationEvent = 3
	NOTIFICATION_EVENT_STUDENT_SUBMIT_ASSIGNMENT NotificationEvent = 4
	NOTIFICATION_EVENT_ASSIGNMENT_UPDATED        NotificationEvent = 5
)

var NotificationEvent_name = map[int32]string{
	0: "NOTIFICATION_EVENT_NONE",
	1: "NOTIFICATION_EVENT_X_LO_COMPLETED",
	2: "NOTIFICATION_EVENT_TEACHER_GIVE_ASSIGNMENT",
	3: "NOTIFICATION_EVENT_TEACHER_RETURN_ASSIGNMENT",
	4: "NOTIFICATION_EVENT_STUDENT_SUBMIT_ASSIGNMENT",
	5: "NOTIFICATION_EVENT_ASSIGNMENT_UPDATED",
}

var NotificationEvent_value = map[string]int32{
	"NOTIFICATION_EVENT_NONE":                      0,
	"NOTIFICATION_EVENT_X_LO_COMPLETED":            1,
	"NOTIFICATION_EVENT_TEACHER_GIVE_ASSIGNMENT":   2,
	"NOTIFICATION_EVENT_TEACHER_RETURN_ASSIGNMENT": 3,
	"NOTIFICATION_EVENT_STUDENT_SUBMIT_ASSIGNMENT": 4,
	"NOTIFICATION_EVENT_ASSIGNMENT_UPDATED":        5,
}

func (NotificationEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{28}
}

type PublishStudentVideoStatus int32

const (
	PUBLISH_STUDENT_VIDEO_STATUS_NONE PublishStudentVideoStatus = 0
	PUBLISH_STUDENT_VIDEO_STATUS_ON   PublishStudentVideoStatus = 1
	PUBLISH_STUDENT_VIDEO_STATUS_OFF  PublishStudentVideoStatus = 2
)

var PublishStudentVideoStatus_name = map[int32]string{
	0: "PUBLISH_STUDENT_VIDEO_STATUS_NONE",
	1: "PUBLISH_STUDENT_VIDEO_STATUS_ON",
	2: "PUBLISH_STUDENT_VIDEO_STATUS_OFF",
}

var PublishStudentVideoStatus_value = map[string]int32{
	"PUBLISH_STUDENT_VIDEO_STATUS_NONE": 0,
	"PUBLISH_STUDENT_VIDEO_STATUS_ON":   1,
	"PUBLISH_STUDENT_VIDEO_STATUS_OFF":  2,
}

func (PublishStudentVideoStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{29}
}

type UnmuteStudentAudioStatus int32

const (
	UNMUTE_STUDENT_AUDIO_STATUS_NONE UnmuteStudentAudioStatus = 0
	UNMUTE_STUDENT_AUDIO_STATUS_ON   UnmuteStudentAudioStatus = 1
	UNMUTE_STUDENT_AUDIO_STATUS_OFF  UnmuteStudentAudioStatus = 2
)

var UnmuteStudentAudioStatus_name = map[int32]string{
	0: "UNMUTE_STUDENT_AUDIO_STATUS_NONE",
	1: "UNMUTE_STUDENT_AUDIO_STATUS_ON",
	2: "UNMUTE_STUDENT_AUDIO_STATUS_OFF",
}

var UnmuteStudentAudioStatus_value = map[string]int32{
	"UNMUTE_STUDENT_AUDIO_STATUS_NONE": 0,
	"UNMUTE_STUDENT_AUDIO_STATUS_ON":   1,
	"UNMUTE_STUDENT_AUDIO_STATUS_OFF":  2,
}

func (UnmuteStudentAudioStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{30}
}

type LiveLessonView int32

const (
	LIVE_LESSON_VIEW_NONE    LiveLessonView = 0
	LIVE_LESSON_VIEW_GALLERY LiveLessonView = 1
	LIVE_LESSON_VIEW_SPEAKER LiveLessonView = 2
)

var LiveLessonView_name = map[int32]string{
	0: "LIVE_LESSON_VIEW_NONE",
	1: "LIVE_LESSON_VIEW_GALLERY",
	2: "LIVE_LESSON_VIEW_SPEAKER",
}

var LiveLessonView_value = map[string]int32{
	"LIVE_LESSON_VIEW_NONE":    0,
	"LIVE_LESSON_VIEW_GALLERY": 1,
	"LIVE_LESSON_VIEW_SPEAKER": 2,
}

func (LiveLessonView) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{31}
}

type MediaType int32

const (
	MEDIA_TYPE_NONE  MediaType = 0
	MEDIA_TYPE_VIDEO MediaType = 1
	MEDIA_TYPE_IMAGE MediaType = 2
	MEDIA_TYPE_PDF   MediaType = 3
	MEDIA_TYPE_AUDIO MediaType = 4
	MEDIA_TYPE_ZIP   MediaType = 5
)

var MediaType_name = map[int32]string{
	0: "MEDIA_TYPE_NONE",
	1: "MEDIA_TYPE_VIDEO",
	2: "MEDIA_TYPE_IMAGE",
	3: "MEDIA_TYPE_PDF",
	4: "MEDIA_TYPE_AUDIO",
	5: "MEDIA_TYPE_ZIP",
}

var MediaType_value = map[string]int32{
	"MEDIA_TYPE_NONE":  0,
	"MEDIA_TYPE_VIDEO": 1,
	"MEDIA_TYPE_IMAGE": 2,
	"MEDIA_TYPE_PDF":   3,
	"MEDIA_TYPE_AUDIO": 4,
	"MEDIA_TYPE_ZIP":   5,
}

func (MediaType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{32}
}

type LearningObjectiveType int32

const (
	LEARNING_OBJECTIVE_TYPE_NONE             LearningObjectiveType = 0
	LEARNING_OBJECTIVE_TYPE_LEARNING         LearningObjectiveType = 1
	LEARNING_OBJECTIVE_TYPE_FLASH_CARD       LearningObjectiveType = 2
	LEARNING_OBJECTIVE_TYPE_OFFLINE_LEARNING LearningObjectiveType = 3
)

var LearningObjectiveType_name = map[int32]string{
	0: "LEARNING_OBJECTIVE_TYPE_NONE",
	1: "LEARNING_OBJECTIVE_TYPE_LEARNING",
	2: "LEARNING_OBJECTIVE_TYPE_FLASH_CARD",
	3: "LEARNING_OBJECTIVE_TYPE_OFFLINE_LEARNING",
}

var LearningObjectiveType_value = map[string]int32{
	"LEARNING_OBJECTIVE_TYPE_NONE":             0,
	"LEARNING_OBJECTIVE_TYPE_LEARNING":         1,
	"LEARNING_OBJECTIVE_TYPE_FLASH_CARD":       2,
	"LEARNING_OBJECTIVE_TYPE_OFFLINE_LEARNING": 3,
}

func (LearningObjectiveType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{33}
}

func init() {
	proto.RegisterEnum("manabie.bob.Country", Country_name, Country_value)
	golang_proto.RegisterEnum("manabie.bob.Country", Country_name, Country_value)
	proto.RegisterEnum("manabie.bob.Subject", Subject_name, Subject_value)
	golang_proto.RegisterEnum("manabie.bob.Subject", Subject_name, Subject_value)
	proto.RegisterEnum("manabie.bob.TopicType", TopicType_name, TopicType_value)
	golang_proto.RegisterEnum("manabie.bob.TopicType", TopicType_name, TopicType_value)
	proto.RegisterEnum("manabie.bob.UserNotificationStatus", UserNotificationStatus_name, UserNotificationStatus_value)
	golang_proto.RegisterEnum("manabie.bob.UserNotificationStatus", UserNotificationStatus_name, UserNotificationStatus_value)
	proto.RegisterEnum("manabie.bob.NotificationType", NotificationType_name, NotificationType_value)
	golang_proto.RegisterEnum("manabie.bob.NotificationType", NotificationType_name, NotificationType_value)
	proto.RegisterEnum("manabie.bob.UploadType", UploadType_name, UploadType_value)
	golang_proto.RegisterEnum("manabie.bob.UploadType", UploadType_name, UploadType_value)
	proto.RegisterEnum("manabie.bob.PaymentStatus", PaymentStatus_name, PaymentStatus_value)
	golang_proto.RegisterEnum("manabie.bob.PaymentStatus", PaymentStatus_name, PaymentStatus_value)
	proto.RegisterEnum("manabie.bob.AskDuration", AskDuration_name, AskDuration_value)
	golang_proto.RegisterEnum("manabie.bob.AskDuration", AskDuration_name, AskDuration_value)
	proto.RegisterEnum("manabie.bob.QuestionStatus", QuestionStatus_name, QuestionStatus_value)
	golang_proto.RegisterEnum("manabie.bob.QuestionStatus", QuestionStatus_name, QuestionStatus_value)
	proto.RegisterEnum("manabie.bob.TutorStatus", TutorStatus_name, TutorStatus_value)
	golang_proto.RegisterEnum("manabie.bob.TutorStatus", TutorStatus_name, TutorStatus_value)
	proto.RegisterEnum("manabie.bob.TopicStatus", TopicStatus_name, TopicStatus_value)
	golang_proto.RegisterEnum("manabie.bob.TopicStatus", TopicStatus_name, TopicStatus_value)
	proto.RegisterEnum("manabie.bob.OrderStatus", OrderStatus_name, OrderStatus_value)
	golang_proto.RegisterEnum("manabie.bob.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("manabie.bob.OrderTransitionAction", OrderTransitionAction_name, OrderTransitionAction_value)
	golang_proto.RegisterEnum("manabie.bob.OrderTransitionAction", OrderTransitionAction_name, OrderTransitionAction_value)
	proto.RegisterEnum("manabie.bob.QuestionTransition", QuestionTransition_name, QuestionTransition_value)
	golang_proto.RegisterEnum("manabie.bob.QuestionTransition", QuestionTransition_name, QuestionTransition_value)
	proto.RegisterEnum("manabie.bob.CoachAutoEvent", CoachAutoEvent_name, CoachAutoEvent_value)
	golang_proto.RegisterEnum("manabie.bob.CoachAutoEvent", CoachAutoEvent_name, CoachAutoEvent_value)
	proto.RegisterEnum("manabie.bob.StudentLearningEvent", StudentLearningEvent_name, StudentLearningEvent_value)
	golang_proto.RegisterEnum("manabie.bob.StudentLearningEvent", StudentLearningEvent_name, StudentLearningEvent_value)
	proto.RegisterEnum("manabie.bob.PaymentGateway", PaymentGateway_name, PaymentGateway_value)
	golang_proto.RegisterEnum("manabie.bob.PaymentGateway", PaymentGateway_name, PaymentGateway_value)
	proto.RegisterEnum("manabie.bob.CodOrderTransitionAction", CodOrderTransitionAction_name, CodOrderTransitionAction_value)
	golang_proto.RegisterEnum("manabie.bob.CodOrderTransitionAction", CodOrderTransitionAction_name, CodOrderTransitionAction_value)
	proto.RegisterEnum("manabie.bob.CodOrderStatus", CodOrderStatus_name, CodOrderStatus_value)
	golang_proto.RegisterEnum("manabie.bob.CodOrderStatus", CodOrderStatus_name, CodOrderStatus_value)
	proto.RegisterEnum("manabie.bob.SubscriptionStatus", SubscriptionStatus_name, SubscriptionStatus_value)
	golang_proto.RegisterEnum("manabie.bob.SubscriptionStatus", SubscriptionStatus_name, SubscriptionStatus_value)
	proto.RegisterEnum("manabie.bob.PlanPrivilege", PlanPrivilege_name, PlanPrivilege_value)
	golang_proto.RegisterEnum("manabie.bob.PlanPrivilege", PlanPrivilege_name, PlanPrivilege_value)
	proto.RegisterEnum("manabie.bob.PaymentMethod", PaymentMethod_name, PaymentMethod_value)
	golang_proto.RegisterEnum("manabie.bob.PaymentMethod", PaymentMethod_name, PaymentMethod_value)
	proto.RegisterEnum("manabie.bob.UserGroup", UserGroup_name, UserGroup_value)
	golang_proto.RegisterEnum("manabie.bob.UserGroup", UserGroup_name, UserGroup_value)
	proto.RegisterEnum("manabie.bob.AssignmentStatus", AssignmentStatus_name, AssignmentStatus_value)
	golang_proto.RegisterEnum("manabie.bob.AssignmentStatus", AssignmentStatus_name, AssignmentStatus_value)
	proto.RegisterEnum("manabie.bob.AchievementCrown", AchievementCrown_name, AchievementCrown_value)
	golang_proto.RegisterEnum("manabie.bob.AchievementCrown", AchievementCrown_name, AchievementCrown_value)
	proto.RegisterEnum("manabie.bob.CourseType", CourseType_name, CourseType_value)
	golang_proto.RegisterEnum("manabie.bob.CourseType", CourseType_name, CourseType_value)
	proto.RegisterEnum("manabie.bob.CourseStatus", CourseStatus_name, CourseStatus_value)
	golang_proto.RegisterEnum("manabie.bob.CourseStatus", CourseStatus_name, CourseStatus_value)
	proto.RegisterEnum("manabie.bob.LessonStatus", LessonStatus_name, LessonStatus_value)
	golang_proto.RegisterEnum("manabie.bob.LessonStatus", LessonStatus_name, LessonStatus_value)
	proto.RegisterEnum("manabie.bob.NotificationEvent", NotificationEvent_name, NotificationEvent_value)
	golang_proto.RegisterEnum("manabie.bob.NotificationEvent", NotificationEvent_name, NotificationEvent_value)
	proto.RegisterEnum("manabie.bob.PublishStudentVideoStatus", PublishStudentVideoStatus_name, PublishStudentVideoStatus_value)
	golang_proto.RegisterEnum("manabie.bob.PublishStudentVideoStatus", PublishStudentVideoStatus_name, PublishStudentVideoStatus_value)
	proto.RegisterEnum("manabie.bob.UnmuteStudentAudioStatus", UnmuteStudentAudioStatus_name, UnmuteStudentAudioStatus_value)
	golang_proto.RegisterEnum("manabie.bob.UnmuteStudentAudioStatus", UnmuteStudentAudioStatus_name, UnmuteStudentAudioStatus_value)
	proto.RegisterEnum("manabie.bob.LiveLessonView", LiveLessonView_name, LiveLessonView_value)
	golang_proto.RegisterEnum("manabie.bob.LiveLessonView", LiveLessonView_name, LiveLessonView_value)
	proto.RegisterEnum("manabie.bob.MediaType", MediaType_name, MediaType_value)
	golang_proto.RegisterEnum("manabie.bob.MediaType", MediaType_name, MediaType_value)
	proto.RegisterEnum("manabie.bob.LearningObjectiveType", LearningObjectiveType_name, LearningObjectiveType_value)
	golang_proto.RegisterEnum("manabie.bob.LearningObjectiveType", LearningObjectiveType_name, LearningObjectiveType_value)
}

func init() { proto.RegisterFile("enum.proto", fileDescriptor_13a9f1b5947140c8) }
func init() { golang_proto.RegisterFile("enum.proto", fileDescriptor_13a9f1b5947140c8) }

var fileDescriptor_13a9f1b5947140c8 = []byte{
	// 2368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x58, 0xcd, 0x6f, 0xdc, 0xb8,
	0xf9, 0xb6, 0x34, 0xfe, 0x7c, 0x9d, 0x38, 0x8c, 0x92, 0xd8, 0x8e, 0x93, 0x4c, 0xbe, 0xf7, 0x43,
	0xd8, 0x4d, 0x7e, 0xd8, 0xdf, 0xb1, 0x87, 0x82, 0x96, 0x38, 0x33, 0xdc, 0x48, 0xa2, 0x56, 0xa4,
	0xc6, 0x71, 0x2e, 0xc2, 0x8c, 0xad, 0x75, 0xa6, 0x9b, 0xcc, 0x18, 0xe3, 0x99, 0x2c, 0x72, 0x6b,
	0x2f, 0x45, 0x3f, 0xd0, 0xa2, 0x1f, 0x40, 0xd1, 0x5b, 0x0f, 0x3d, 0xb4, 0xff, 0x40, 0x81, 0x02,
	0xbd, 0x14, 0xe8, 0x65, 0x8f, 0x7b, 0xdc, 0x63, 0xe3, 0x5c, 0x7a, 0xdc, 0x3f, 0xa0, 0x87, 0x82,
	0x94, 0x34, 0xa6, 0x34, 0xb2, 0x6f, 0xd2, 0xfb, 0x3c, 0x7c, 0xf9, 0xf2, 0x25, 0xf9, 0xf0, 0x25,
	0x01, 0xd2, 0xe1, 0xf4, 0xf5, 0x93, 0xe3, 0xf1, 0x68, 0x32, 0xb2, 0xd6, 0x5f, 0xf7, 0x86, 0xbd,
	0xfe, 0x20, 0x7d, 0xd2, 0x1f, 0xf5, 0x77, 0x3e, 0x3d, 0x1a, 0x4c, 0x5e, 0x4e, 0xfb, 0x4f, 0x0e,
	0x46, 0xaf, 0x9f, 0x1e, 0x8d, 0x8e, 0x46, 0x4f, 0x15, 0xa7, 0x3f, 0xfd, 0x52, 0xfd, 0xa9, 0x1f,
	0xf5, 0x95, 0xb5, 0xb5, 0x47, 0xb0, 0xe2, 0x8c, 0xa6, 0xc3, 0xc9, 0xf8, 0xad, 0x85, 0xe0, 0x92,
	0xc3, 0xe2, 0x40, 0x44, 0xfb, 0x49, 0xc0, 0x02, 0x82, 0x16, 0x2c, 0x0b, 0x36, 0x0a, 0x8b, 0x8f,
	0xb9, 0x20, 0x11, 0x32, 0xac, 0x0d, 0x80, 0xc2, 0xd6, 0x0d, 0x90, 0xa9, 0xff, 0x53, 0x17, 0x35,
	0xf4, 0x7f, 0xde, 0x46, 0x8b, 0xfa, 0xff, 0xe7, 0x21, 0x5a, 0xb2, 0x7f, 0x6b, 0xc2, 0x0a, 0x9f,
	0xf6, 0x7f, 0x94, 0x1e, 0x4c, 0x64, 0x8f, 0x3c, 0xde, 0xfd, 0x9c, 0x38, 0xa2, 0xe8, 0xf1, 0x2a,
	0x5c, 0x2e, 0x2c, 0x3e, 0x16, 0x1d, 0x8e, 0x0c, 0xeb, 0x1a, 0x5c, 0x29, 0x4c, 0xbb, 0x94, 0x79,
	0xac, 0xbd, 0x8f, 0x4c, 0xdd, 0x18, 0x76, 0xf6, 0x39, 0x75, 0x38, 0x6a, 0x58, 0x37, 0xe0, 0x6a,
	0x61, 0x74, 0x3a, 0xc4, 0xa7, 0x5c, 0x44, 0xfb, 0x68, 0x51, 0x37, 0xb7, 0x09, 0x6b, 0x47, 0x38,
	0xec, 0xec, 0xa3, 0x25, 0xdd, 0x05, 0x09, 0xda, 0x1e, 0xe5, 0x1d, 0xb4, 0xac, 0x73, 0x73, 0x63,
	0xf2, 0x19, 0x5a, 0xb1, 0xae, 0x03, 0x2a, 0xcc, 0x9f, 0xe3, 0x10, 0x07, 0x84, 0x13, 0xb4, 0xaa,
	0x7b, 0xe0, 0x0e, 0x25, 0x81, 0x43, 0xd0, 0x9a, 0xb5, 0x03, 0x9b, 0x33, 0x23, 0x73, 0x28, 0xf6,
	0x12, 0x2e, 0x62, 0x97, 0x12, 0x8e, 0xc0, 0xda, 0x04, 0xab, 0xc0, 0x3c, 0x2a, 0x48, 0x84, 0x45,
	0x1c, 0x11, 0xb4, 0x6e, 0xff, 0xc9, 0x80, 0x35, 0x31, 0x3a, 0x1e, 0x1c, 0x88, 0xb7, 0xc7, 0xa9,
	0x74, 0x2b, 0x58, 0x48, 0x9d, 0x44, 0xec, 0x87, 0xa4, 0x48, 0xcc, 0x16, 0x5c, 0xd3, 0x8c, 0x1e,
	0xc1, 0x51, 0x40, 0x83, 0x36, 0x32, 0xac, 0x6d, 0xb8, 0xae, 0x01, 0x61, 0x84, 0x1d, 0x41, 0x1d,
	0xec, 0x65, 0x39, 0xd2, 0x10, 0xf2, 0x1c, 0xfb, 0xa8, 0x61, 0xdd, 0x84, 0x1b, 0x9a, 0x11, 0x73,
	0x4e, 0xdb, 0x81, 0x4f, 0x02, 0x81, 0x16, 0x65, 0xe4, 0x7a, 0x17, 0xb4, 0x2b, 0xfb, 0xe1, 0x9c,
	0x05, 0x68, 0xc9, 0xfe, 0xc6, 0x80, 0xcd, 0xf8, 0x24, 0x1d, 0x07, 0xa3, 0xc9, 0xe0, 0xcb, 0xc1,
	0x41, 0x6f, 0x32, 0x18, 0x0d, 0xf9, 0xa4, 0x37, 0x99, 0x9e, 0x58, 0xf7, 0xe1, 0x4e, 0xcc, 0x49,
	0x94, 0x04, 0x4c, 0xd0, 0x16, 0x75, 0xb0, 0xa0, 0x2c, 0x48, 0xb8, 0xc0, 0x22, 0xe6, 0x45, 0xf0,
	0xf7, 0xe0, 0xf6, 0xf9, 0x14, 0xb2, 0x87, 0x8c, 0x0b, 0x9d, 0x70, 0x42, 0xe4, 0x42, 0xbb, 0x88,
	0x12, 0x11, 0x2c, 0xd7, 0xde, 0x43, 0xb8, 0x7b, 0x2e, 0xa5, 0x85, 0xa9, 0x47, 0x5c, 0xb4, 0x68,
	0xff, 0xda, 0x00, 0xa4, 0x0f, 0x43, 0xe5, 0x7c, 0x07, 0x36, 0x4b, 0x8d, 0xf4, 0xd4, 0xd7, 0x62,
	0x82, 0x3c, 0x17, 0xc8, 0x90, 0x23, 0x9b, 0xc7, 0xc2, 0x88, 0xf9, 0x2c, 0x71, 0x98, 0x4b, 0x90,
	0x59, 0xcf, 0xd0, 0xf2, 0xde, 0xb0, 0xbb, 0x00, 0xf1, 0xf1, 0xab, 0x51, 0xef, 0x50, 0x45, 0xb2,
	0x09, 0x56, 0x1c, 0x7a, 0x0c, 0xbb, 0x39, 0xb3, 0x8b, 0x05, 0x8e, 0xd0, 0x82, 0x5c, 0x82, 0xba,
	0xdd, 0xe9, 0x60, 0xd9, 0xff, 0x0e, 0x6c, 0x96, 0xd8, 0x67, 0x7e, 0x4d, 0xfb, 0x67, 0x06, 0x5c,
	0x0e, 0x7b, 0x6f, 0x5f, 0xa7, 0xc3, 0x49, 0x3e, 0x55, 0xb7, 0x60, 0x2b, 0xc4, 0xfb, 0x12, 0x2e,
	0xb2, 0x22, 0x03, 0x8a, 0x28, 0xf6, 0xb2, 0x49, 0xaa, 0x80, 0xe4, 0x79, 0x48, 0x23, 0xe2, 0xe6,
	0x0c, 0x43, 0xae, 0xc1, 0x0a, 0x23, 0xc4, 0xd4, 0x45, 0xa6, 0x75, 0x17, 0x6e, 0x55, 0x00, 0x0f,
	0x0b, 0x92, 0xe4, 0x36, 0xd4, 0xb0, 0x29, 0xac, 0xe3, 0x93, 0xaf, 0xdc, 0xe9, 0x58, 0x65, 0xdc,
	0xba, 0x04, 0xab, 0xa2, 0x43, 0x79, 0xe2, 0xe2, 0x7d, 0xb4, 0x60, 0x5d, 0x86, 0x35, 0xf5, 0xb7,
	0x47, 0xc8, 0xb3, 0x4c, 0x60, 0xd4, 0xaf, 0xcf, 0x02, 0xd1, 0x41, 0xe6, 0x0c, 0xde, 0x27, 0x38,
	0x42, 0x0d, 0xfb, 0x1f, 0x26, 0x6c, 0x7c, 0x31, 0x4d, 0x4f, 0xb4, 0x15, 0xf8, 0x01, 0x3c, 0xf8,
	0x22, 0x26, 0x5c, 0x9f, 0xed, 0x3d, 0x4c, 0x05, 0x0d, 0xda, 0x49, 0x8b, 0x45, 0x79, 0x52, 0xd0,
	0x82, 0x75, 0x1b, 0xb6, 0xab, 0xbc, 0x0c, 0x23, 0x2e, 0x32, 0xea, 0xbc, 0xf8, 0x38, 0x7a, 0x46,
	0xdc, 0x04, 0xcb, 0x05, 0xc6, 0x99, 0xd7, 0x25, 0x72, 0xb0, 0x8f, 0xe1, 0xfe, 0xf9, 0x3c, 0x1a,
	0x74, 0xb1, 0xa7, 0x74, 0xf0, 0x16, 0x6c, 0x55, 0x69, 0x05, 0xa8, 0xb6, 0x5a, 0x15, 0xcc, 0xfd,
	0x2f, 0x59, 0x0f, 0xa0, 0x59, 0xc5, 0x8a, 0x89, 0xc8, 0x39, 0xcb, 0x72, 0x17, 0x57, 0x39, 0x11,
	0x16, 0xc4, 0x45, 0x2b, 0xb5, 0x83, 0x8c, 0x9c, 0x0e, 0x95, 0x0d, 0x57, 0xed, 0x3d, 0x58, 0x17,
	0xd3, 0xc9, 0x68, 0x9c, 0x67, 0xee, 0x06, 0x5c, 0x15, 0xb1, 0x60, 0x51, 0x65, 0xbf, 0x4a, 0xb1,
	0xd1, 0xcd, 0x2c, 0xf0, 0x68, 0x40, 0x72, 0xb1, 0x29, 0x01, 0xad, 0x96, 0x42, 0x4c, 0xfb, 0x39,
	0xac, 0x2b, 0x05, 0xd3, 0x1c, 0x2b, 0x2d, 0x29, 0x3b, 0xde, 0x04, 0xab, 0x64, 0x76, 0x23, 0xdc,
	0xca, 0x97, 0x71, 0xc9, 0x1e, 0xc6, 0xbb, 0x52, 0x7b, 0x65, 0xbe, 0xed, 0xdf, 0x9b, 0xb0, 0xce,
	0xc6, 0x87, 0xa9, 0x16, 0x33, 0x8b, 0x5c, 0x52, 0x8d, 0xf9, 0x11, 0xdc, 0x2b, 0x99, 0xf5, 0x15,
	0x50, 0x2c, 0x44, 0xc3, 0xba, 0x03, 0x37, 0x4b, 0x2c, 0x1e, 0x3b, 0x0e, 0xe1, 0xbc, 0x15, 0x7b,
	0x9e, 0x3c, 0x56, 0xb6, 0xe0, 0x5a, 0x09, 0xce, 0x45, 0x43, 0xc9, 0x66, 0x09, 0x70, 0x70, 0xe0,
	0x10, 0xa5, 0x27, 0xd6, 0x0e, 0x58, 0x25, 0x88, 0x04, 0xae, 0x9c, 0xc7, 0x1d, 0x73, 0xd5, 0x90,
	0x82, 0x54, 0xc2, 0xc2, 0x88, 0xc9, 0xee, 0x64, 0x5c, 0x45, 0x4c, 0xcb, 0x32, 0xa9, 0x25, 0x92,
	0x4b, 0x3c, 0x92, 0xcd, 0x65, 0xb5, 0x57, 0x97, 0x72, 0xbc, 0xeb, 0xa9, 0x89, 0xfc, 0x9d, 0x09,
	0x37, 0x54, 0x56, 0xc4, 0xb8, 0x37, 0x3c, 0x19, 0xc8, 0xdd, 0x80, 0x0f, 0xd4, 0xe6, 0x9a, 0x35,
	0x12, 0x11, 0x0e, 0x38, 0x55, 0x0b, 0xa1, 0x9a, 0x23, 0x0d, 0xca, 0x43, 0xaa, 0xcb, 0x91, 0xc6,
	0x72, 0x98, 0x1f, 0xca, 0xa8, 0x90, 0x59, 0xeb, 0x5f, 0xe6, 0x29, 0x5b, 0xf3, 0xf3, 0x2d, 0x55,
	0xa6, 0xd0, 0xa2, 0xd5, 0x84, 0xcd, 0x79, 0xd0, 0x63, 0x9c, 0xe4, 0xb9, 0xaa, 0x6b, 0x9c, 0xa5,
	0x02, 0x2d, 0xd7, 0x46, 0x5e, 0xc4, 0x94, 0xf8, 0x38, 0x88, 0xb1, 0x87, 0x56, 0xec, 0x3f, 0x36,
	0xc0, 0x2a, 0xb4, 0xe1, 0x2c, 0x2f, 0x56, 0x13, 0x76, 0x66, 0x5b, 0x42, 0x6b, 0x3f, 0xd3, 0x05,
	0x1b, 0x3e, 0xa8, 0xc3, 0x6b, 0x76, 0xbf, 0x61, 0x7d, 0x0c, 0x8f, 0x2f, 0xe6, 0x16, 0x9b, 0xbc,
	0x2c, 0x14, 0x7a, 0xb7, 0xed, 0x88, 0x10, 0x4d, 0x28, 0x3e, 0x82, 0x47, 0x75, 0x34, 0x39, 0xd7,
	0x25, 0xe6, 0x62, 0x49, 0xa1, 0xe6, 0x1c, 0xce, 0x62, 0x5c, 0x3a, 0x2f, 0xc6, 0x99, 0xc7, 0x19,
	0x75, 0xd9, 0xfa, 0x10, 0x1e, 0xd6, 0x51, 0x05, 0xf5, 0x49, 0xc2, 0x62, 0x51, 0x28, 0x4e, 0x59,
	0x56, 0x34, 0xa2, 0x54, 0x1d, 0xb4, 0x2a, 0xcf, 0x8e, 0xda, 0xc8, 0x0a, 0xe1, 0x59, 0xb3, 0x13,
	0xd8, 0x70, 0x46, 0xbd, 0x83, 0x97, 0x78, 0x3a, 0x19, 0x91, 0x37, 0xe9, 0x70, 0x22, 0xa7, 0xd4,
	0x61, 0xd8, 0xe9, 0x24, 0x38, 0x16, 0x2c, 0x21, 0x5d, 0x79, 0x7a, 0xb4, 0x68, 0x20, 0x4b, 0xae,
	0x16, 0x8d, 0xb8, 0x48, 0x3c, 0x86, 0x16, 0x64, 0x80, 0x17, 0xb3, 0x94, 0x6e, 0x20, 0xc3, 0xfe,
	0x21, 0x5c, 0xe7, 0x93, 0xe9, 0x61, 0x3a, 0x9c, 0x78, 0x69, 0x6f, 0x3c, 0x1c, 0x0c, 0x8f, 0xb2,
	0x6e, 0x3e, 0x84, 0x87, 0xb2, 0x00, 0x9b, 0x6f, 0xd7, 0x91, 0xa9, 0xf0, 0x72, 0x9f, 0x68, 0xc1,
	0xfe, 0xb3, 0x01, 0x1b, 0xf9, 0x71, 0xd9, 0xee, 0x4d, 0xd2, 0xaf, 0x7b, 0xaa, 0x22, 0x6e, 0x63,
	0x41, 0xf6, 0xf0, 0xac, 0x22, 0xbe, 0x06, 0x57, 0x0a, 0x0b, 0xe6, 0x14, 0x87, 0x78, 0x1f, 0x19,
	0xb2, 0x4c, 0x2e, 0x8c, 0x2c, 0x20, 0xd2, 0x66, 0xea, 0x4d, 0x7d, 0xe6, 0x33, 0xd4, 0xd0, 0x2d,
	0x2f, 0xb0, 0xc7, 0xd0, 0xa2, 0x6e, 0x69, 0x47, 0x78, 0x17, 0x2d, 0x59, 0x57, 0x60, 0x7d, 0x66,
	0xe9, 0x04, 0x68, 0x59, 0x37, 0x50, 0xc6, 0xd1, 0x8a, 0xfd, 0x17, 0x03, 0xb6, 0x9d, 0xd1, 0x61,
	0xfd, 0xd6, 0xbf, 0x03, 0x37, 0x1d, 0xe6, 0x26, 0xe7, 0x6d, 0xff, 0xfb, 0x70, 0xa7, 0x16, 0x9e,
	0x6d, 0x6e, 0x43, 0x9e, 0xe4, 0xf5, 0x94, 0x6c, 0x17, 0x9b, 0x72, 0xb5, 0x5e, 0xe8, 0xa3, 0xd8,
	0x8c, 0x0d, 0xfb, 0x97, 0x86, 0x9c, 0xf2, 0x43, 0x5d, 0xba, 0x6f, 0xc2, 0x8d, 0xb3, 0xc6, 0x65,
	0xf9, 0xbe, 0x0d, 0xdb, 0x73, 0x50, 0x48, 0x02, 0x37, 0x2b, 0x72, 0x4b, 0x03, 0xab, 0x4a, 0xb0,
	0x59, 0x1e, 0x58, 0x9d, 0xb2, 0x37, 0xec, 0x09, 0x58, 0x7c, 0xda, 0x3f, 0x39, 0x18, 0x0f, 0x8e,
	0xb5, 0xca, 0xe1, 0x36, 0x6c, 0xf3, 0x78, 0x97, 0x3b, 0x11, 0x0d, 0x6b, 0xca, 0xd6, 0x26, 0xec,
	0xd4, 0xa1, 0xb2, 0xc2, 0xee, 0x92, 0xac, 0xf8, 0xab, 0xc3, 0x67, 0x2a, 0x6d, 0xda, 0xff, 0x95,
	0x25, 0xd8, 0xab, 0xde, 0x30, 0x1c, 0x0f, 0xde, 0x0c, 0x5e, 0xa5, 0x47, 0xa9, 0xf4, 0xe9, 0xe0,
	0x20, 0xc1, 0x2a, 0xb8, 0x59, 0x1d, 0x9f, 0xad, 0x62, 0x9e, 0xf5, 0xa9, 0xe1, 0x79, 0x39, 0x4f,
	0x0a, 0xdc, 0x50, 0x29, 0x3c, 0xc3, 0x7d, 0xe6, 0x3c, 0x53, 0x95, 0x3d, 0x47, 0xa6, 0x3c, 0x5c,
	0x35, 0x08, 0x7b, 0x5e, 0xe2, 0x31, 0x79, 0x2d, 0xda, 0x82, 0x6b, 0x9a, 0x9d, 0x33, 0x9f, 0x28,
	0x60, 0x51, 0x96, 0x94, 0x12, 0xd8, 0xc3, 0xc2, 0xe9, 0x24, 0x5d, 0xea, 0x12, 0xc6, 0xd1, 0x52,
	0xd1, 0x83, 0x2c, 0xa9, 0xd5, 0xd5, 0x65, 0x3f, 0x69, 0xc7, 0xd4, 0x25, 0x1c, 0x2d, 0xcb, 0xd5,
	0x2f, 0x21, 0xfe, 0x8c, 0x86, 0x05, 0x7f, 0xa5, 0xe0, 0xcb, 0x82, 0x34, 0xd9, 0xa3, 0xa2, 0x93,
	0x08, 0x82, 0x9d, 0x0e, 0x89, 0xd0, 0xaa, 0xfd, 0xf7, 0xb3, 0x0a, 0xd4, 0x4f, 0x27, 0x2f, 0x47,
	0x87, 0x7a, 0x09, 0xe9, 0x13, 0xd1, 0x61, 0xae, 0x56, 0x19, 0x54, 0x00, 0x2c, 0x7c, 0x64, 0x48,
	0x95, 0xa8, 0xd8, 0x9d, 0x88, 0xb8, 0x54, 0x24, 0x2e, 0xd9, 0xa5, 0x22, 0x71, 0x70, 0xe4, 0x66,
	0x43, 0xaf, 0xb2, 0x98, 0xd4, 0x56, 0xad, 0xa6, 0xcd, 0xed, 0xbb, 0x38, 0x78, 0x96, 0xad, 0xdb,
	0x16, 0x89, 0xd0, 0x62, 0x4d, 0x4b, 0x8a, 0xe5, 0x35, 0xf5, 0x5f, 0x0d, 0x58, 0x93, 0x17, 0x9e,
	0xf6, 0x78, 0x34, 0x3d, 0x96, 0x03, 0x57, 0x17, 0x8b, 0x76, 0xc4, 0xe2, 0x50, 0x0b, 0x59, 0x33,
	0xe6, 0x22, 0x83, 0x0c, 0x55, 0xa9, 0x9f, 0xd9, 0x95, 0x7a, 0x21, 0xd3, 0xda, 0x2e, 0x59, 0x55,
	0x15, 0x85, 0x1a, 0xea, 0xe0, 0x2b, 0x23, 0x5c, 0xe0, 0x56, 0x0b, 0x2d, 0x2a, 0xa4, 0xec, 0x09,
	0xbb, 0x3e, 0x0d, 0xd0, 0x52, 0xa5, 0xdf, 0x22, 0xdb, 0xea, 0xee, 0xaa, 0xd9, 0x43, 0x1c, 0xc9,
	0x70, 0x56, 0xac, 0x7b, 0xb0, 0x5d, 0x0a, 0x27, 0x10, 0x72, 0xb0, 0x99, 0xb3, 0x55, 0xd5, 0x4d,
	0x3d, 0x23, 0x0b, 0x64, 0x4d, 0x31, 0x9a, 0xb0, 0xa9, 0x87, 0x88, 0x3d, 0xc2, 0x73, 0x0f, 0x70,
	0x2e, 0x9e, 0xb5, 0x5f, 0xcf, 0xcf, 0xf6, 0x6b, 0x7a, 0x0f, 0x45, 0xe3, 0x4b, 0xf5, 0x60, 0xd6,
	0xf2, 0x72, 0x51, 0x15, 0xe8, 0x9e, 0x9d, 0x0e, 0x63, 0x5e, 0xde, 0x7a, 0xc3, 0xba, 0x5b, 0x07,
	0x66, 0xad, 0xaf, 0xc8, 0xd6, 0xf6, 0x6b, 0x40, 0xf8, 0xe4, 0x64, 0x70, 0x34, 0xd4, 0x2e, 0x41,
	0x3b, 0xb0, 0x79, 0x76, 0x4d, 0xaa, 0xec, 0xf8, 0x3b, 0x70, 0x73, 0x1e, 0xe3, 0x02, 0x47, 0x42,
	0x1d, 0xfe, 0x4d, 0xd8, 0x99, 0x87, 0xe3, 0xd0, 0x61, 0xbe, 0x94, 0x29, 0xd3, 0xfe, 0xa9, 0x01,
	0x08, 0x1f, 0xbc, 0x1c, 0xa4, 0x6f, 0x52, 0xd9, 0xa1, 0x33, 0x1e, 0x7d, 0x3d, 0x54, 0xfd, 0x39,
	0x1d, 0x4a, 0xba, 0x44, 0xb5, 0x72, 0x22, 0xb6, 0x17, 0x68, 0xaa, 0x37, 0x8f, 0xed, 0x46, 0x2c,
	0x78, 0x21, 0xf5, 0xa5, 0x16, 0xe5, 0xd4, 0xeb, 0x92, 0x08, 0x99, 0xf5, 0x7e, 0xdb, 0xcc, 0x73,
	0x51, 0xc3, 0xfe, 0x02, 0xc0, 0x19, 0x4d, 0xc7, 0x27, 0xa9, 0xba, 0x52, 0xca, 0x7d, 0xce, 0xe2,
	0x88, 0x93, 0xea, 0x8b, 0x82, 0x6e, 0xcd, 0xa7, 0x3d, 0x5b, 0xbf, 0x3a, 0xe0, 0x49, 0xb1, 0x33,
	0xed, 0xb7, 0x70, 0x29, 0x73, 0x99, 0xa7, 0x51, 0xaa, 0x4d, 0xc6, 0x2a, 0xa7, 0x70, 0x1b, 0xae,
	0x97, 0xed, 0x33, 0xb9, 0xbc, 0x05, 0x5b, 0x65, 0xa4, 0x38, 0x33, 0xdc, 0x6c, 0x34, 0x65, 0x90,
	0xc9, 0xc1, 0xc8, 0xb4, 0x36, 0xec, 0x9f, 0x18, 0x70, 0xc9, 0x4b, 0x4f, 0x4e, 0x66, 0xb2, 0xbd,
	0x09, 0x56, 0xf6, 0x32, 0x51, 0xe9, 0xfb, 0x16, 0x6c, 0x95, 0xed, 0x67, 0x3d, 0xa8, 0x33, 0xa4,
	0x0c, 0x52, 0x55, 0xfc, 0xb6, 0x23, 0xc2, 0xa5, 0x7a, 0xce, 0xc1, 0x01, 0x13, 0xb3, 0xa9, 0x6f,
	0xd8, 0x7f, 0x30, 0xe1, 0xaa, 0xfe, 0x6a, 0x90, 0x15, 0x17, 0xb7, 0x60, 0xab, 0x74, 0xb9, 0xcf,
	0xea, 0x93, 0x3c, 0x9a, 0xc7, 0x70, 0xbf, 0x06, 0x7c, 0x2e, 0x6b, 0x0e, 0x3d, 0xae, 0x27, 0x60,
	0xd7, 0xd0, 0xf2, 0x6d, 0x9d, 0xb4, 0x69, 0xb7, 0x7c, 0xad, 0xb7, 0xfe, 0x0f, 0x3e, 0xb9, 0x80,
	0x1f, 0x11, 0x11, 0x47, 0x41, 0xe9, 0x81, 0xe1, 0x9c, 0x16, 0x45, 0x55, 0xc4, 0xe3, 0x5d, 0x9f,
	0x8a, 0xf2, 0x53, 0xd0, 0xc7, 0xf0, 0xb8, 0xa6, 0x85, 0xb6, 0xf6, 0xe3, 0xd0, 0x55, 0xf7, 0xcd,
	0x25, 0xfb, 0x57, 0x06, 0xdc, 0x0c, 0xa7, 0xfd, 0x57, 0x83, 0x93, 0x97, 0x79, 0xfd, 0xd5, 0x1d,
	0x1c, 0xa6, 0xa3, 0x7c, 0xa6, 0x1e, 0xc3, 0xfd, 0xfc, 0x2e, 0x37, 0xeb, 0x4f, 0x1d, 0x1c, 0x95,
	0x89, 0x7b, 0x08, 0x77, 0x2f, 0xa4, 0xb1, 0x20, 0x3f, 0x0a, 0x2e, 0x24, 0xb5, 0x5a, 0xc8, 0xb4,
	0x7f, 0x6e, 0xc0, 0x76, 0x3c, 0x7c, 0x3d, 0x9d, 0xa4, 0x79, 0x38, 0x78, 0x7a, 0x38, 0x28, 0xc2,
	0x79, 0x04, 0xf7, 0xe2, 0xc0, 0x8f, 0x05, 0x99, 0x79, 0xc0, 0xb1, 0x4b, 0xab, 0xd1, 0x3c, 0x80,
	0xe6, 0x45, 0x2c, 0x15, 0xcc, 0x43, 0xb8, 0x7b, 0x21, 0x47, 0xc5, 0x72, 0x04, 0x1b, 0xde, 0xe0,
	0x4d, 0x9a, 0xad, 0xdd, 0xee, 0x20, 0xfd, 0x5a, 0x1e, 0x96, 0xda, 0xc3, 0x5a, 0xd2, 0xa5, 0x64,
	0x4f, 0xd3, 0x82, 0x39, 0xa8, 0x8d, 0x3d, 0x8f, 0x44, 0xfb, 0x99, 0x16, 0xcc, 0xa1, 0x3c, 0x24,
	0xf8, 0x99, 0xd4, 0x02, 0xfb, 0x17, 0x06, 0xac, 0xf9, 0xe9, 0xe1, 0xa0, 0x57, 0x3c, 0x20, 0xfa,
	0xc4, 0xa5, 0xb8, 0xb4, 0xdd, 0xaf, 0x03, 0xd2, 0x8c, 0x2a, 0x71, 0xd9, 0x5e, 0xd7, 0xac, 0xd4,
	0xc7, 0x6d, 0x79, 0xc5, 0xb3, 0x60, 0x43, 0xb3, 0x86, 0x6e, 0x0b, 0x35, 0x2a, 0x4c, 0x35, 0x58,
	0xb4, 0x58, 0x61, 0xbe, 0xa0, 0xf2, 0xe8, 0xfc, 0x9b, 0x01, 0x37, 0x8a, 0x1a, 0x9c, 0xa9, 0x87,
	0xde, 0xc1, 0x9b, 0x4c, 0x88, 0xee, 0xc1, 0xed, 0x59, 0xc5, 0xc3, 0xd4, 0x3b, 0xa8, 0x1c, 0x92,
	0x1e, 0xe5, 0x23, 0xb8, 0x77, 0x1e, 0x43, 0x7b, 0xf3, 0xfc, 0x00, 0x1e, 0x9c, 0xc7, 0x6a, 0x79,
	0x98, 0x77, 0x8a, 0xb2, 0xe0, 0x13, 0xf8, 0xe8, 0x3c, 0x5e, 0xfe, 0x72, 0x71, 0xe6, 0xb5, 0xb1,
	0xfb, 0xea, 0xdb, 0x77, 0xcd, 0x85, 0xef, 0xde, 0x35, 0x17, 0xbe, 0x7f, 0xd7, 0x34, 0x7e, 0x7c,
	0xda, 0x34, 0xfe, 0x7a, 0xda, 0x34, 0xbe, 0x39, 0x6d, 0x1a, 0xdf, 0x9e, 0x36, 0x8d, 0x7f, 0x9f,
	0x36, 0x8d, 0xff, 0x9c, 0x36, 0x17, 0xbe, 0x3f, 0x6d, 0x1a, 0xbf, 0x79, 0xdf, 0x5c, 0xf8, 0xe7,
	0xfb, 0xa6, 0xf1, 0xed, 0xfb, 0xe6, 0xc2, 0x77, 0xef, 0x9b, 0x0b, 0x2f, 0x3e, 0xd3, 0xde, 0xdc,
	0xf3, 0xb7, 0xf8, 0x4f, 0xe5, 0x77, 0xbf, 0x77, 0xf0, 0x55, 0x3a, 0x3c, 0x7c, 0x7a, 0xfc, 0xd5,
	0xd1, 0xd3, 0xa3, 0x74, 0x98, 0x3d, 0xbe, 0xf7, 0x47, 0xfd, 0x1f, 0x1c, 0xf7, 0xfb, 0xcb, 0xea,
	0xef, 0xff, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x56, 0x66, 0xbe, 0xc9, 0x17, 0x00, 0x00,
}

func (x Country) String() string {
	s, ok := Country_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x Subject) String() string {
	s, ok := Subject_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TopicType) String() string {
	s, ok := TopicType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x UserNotificationStatus) String() string {
	s, ok := UserNotificationStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x NotificationType) String() string {
	s, ok := NotificationType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x UploadType) String() string {
	s, ok := UploadType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PaymentStatus) String() string {
	s, ok := PaymentStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x AskDuration) String() string {
	s, ok := AskDuration_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x QuestionStatus) String() string {
	s, ok := QuestionStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TutorStatus) String() string {
	s, ok := TutorStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TopicStatus) String() string {
	s, ok := TopicStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x OrderStatus) String() string {
	s, ok := OrderStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x OrderTransitionAction) String() string {
	s, ok := OrderTransitionAction_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x QuestionTransition) String() string {
	s, ok := QuestionTransition_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CoachAutoEvent) String() string {
	s, ok := CoachAutoEvent_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x StudentLearningEvent) String() string {
	s, ok := StudentLearningEvent_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PaymentGateway) String() string {
	s, ok := PaymentGateway_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CodOrderTransitionAction) String() string {
	s, ok := CodOrderTransitionAction_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CodOrderStatus) String() string {
	s, ok := CodOrderStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x SubscriptionStatus) String() string {
	s, ok := SubscriptionStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PlanPrivilege) String() string {
	s, ok := PlanPrivilege_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PaymentMethod) String() string {
	s, ok := PaymentMethod_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x UserGroup) String() string {
	s, ok := UserGroup_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x AssignmentStatus) String() string {
	s, ok := AssignmentStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x AchievementCrown) String() string {
	s, ok := AchievementCrown_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CourseType) String() string {
	s, ok := CourseType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CourseStatus) String() string {
	s, ok := CourseStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x LessonStatus) String() string {
	s, ok := LessonStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x NotificationEvent) String() string {
	s, ok := NotificationEvent_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PublishStudentVideoStatus) String() string {
	s, ok := PublishStudentVideoStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x UnmuteStudentAudioStatus) String() string {
	s, ok := UnmuteStudentAudioStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x LiveLessonView) String() string {
	s, ok := LiveLessonView_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x MediaType) String() string {
	s, ok := MediaType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x LearningObjectiveType) String() string {
	s, ok := LearningObjectiveType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
