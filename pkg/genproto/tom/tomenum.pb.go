// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tomenum.proto

package pb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	// content in message is normal text
	MESSAGE_TYPE_TEXT MessageType = 0
	// content in message must be image_url
	MESSAGE_TYPE_IMAGE MessageType = 1
	// content in message must be video_url
	MESSAGE_TYPE_VIDEO MessageType = 2
	// content in message must be:
	//- CODES_MESSAGE_TYPE_COACH_CHANGE
	//- CODES_MESSAGE_TYPE_CREATED_SP
	//- CODES_MESSAGE_TYPE_EDITED_SP
	//- CODES_MESSAGE_TYPE_MARKED_AS_RESOLVED
	//- CODES_MESSAGE_TYPE_QUESTION_SOLVED
	//- CODES_MESSAGE_TYPE_QUESTION_DOUBT
	//- CODES_MESSAGE_TYPE_MARKED_AS_INVALID
	//- CODES_MESSAGE_TYPE_QUESTION_INVALID
	//- CODES_MESSAGE_TYPE_QUESTION_NOT_INVALID
	//- CODES_MESSAGE_TYPE_QUESTION_ARCHIVED
	//- CODES_MESSAGE_TYPE_QUESTION_EXPIRED
	//- CODES_MESSAGE_TYPE_RATED_ANSWER
	//- CODES_MESSAGE_TYPE_TUTOR_JOINED
	//- CODES_MESSAGE_TYPE_TUTOR_LEFT
	//- CODES_MESSAGE_TYPE_RATE_LOVE
	//- CODES_MESSAGE_TYPE_RATE_NEUTRAL
	//- CODES_MESSAGE_TYPE_RATE_SAD
	MESSAGE_TYPE_SYSTEM MessageType = 3
	// content in message must be CODES_MESSAGE_TYPE_BTN_CREATE_SP
	MESSAGE_TYPE_BUTTON MessageType = 4
	// content in message must be:
	//- CODES_MESSAGE_TYPE_EVT_FINISH_FIRST_LO
	//- CODES_MESSAGE_TYPE_EVT_FINISH_FIRST_TOPIC
	MESSAGE_TYPE_COACH_AUTO MessageType = 5
	MESSAGE_TYPE_FILE       MessageType = 6
)

var MessageType_name = map[int32]string{
	0: "MESSAGE_TYPE_TEXT",
	1: "MESSAGE_TYPE_IMAGE",
	2: "MESSAGE_TYPE_VIDEO",
	3: "MESSAGE_TYPE_SYSTEM",
	4: "MESSAGE_TYPE_BUTTON",
	5: "MESSAGE_TYPE_COACH_AUTO",
	6: "MESSAGE_TYPE_FILE",
}

var MessageType_value = map[string]int32{
	"MESSAGE_TYPE_TEXT":       0,
	"MESSAGE_TYPE_IMAGE":      1,
	"MESSAGE_TYPE_VIDEO":      2,
	"MESSAGE_TYPE_SYSTEM":     3,
	"MESSAGE_TYPE_BUTTON":     4,
	"MESSAGE_TYPE_COACH_AUTO": 5,
	"MESSAGE_TYPE_FILE":       6,
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b08139819cf704a, []int{0}
}

type MessageStatus int32

const (
	MESSAGE_STATUS_NEW  MessageStatus = 0
	MESSAGE_STATUS_READ MessageStatus = 1
)

var MessageStatus_name = map[int32]string{
	0: "MESSAGE_STATUS_NEW",
	1: "MESSAGE_STATUS_READ",
}

var MessageStatus_value = map[string]int32{
	"MESSAGE_STATUS_NEW":  0,
	"MESSAGE_STATUS_READ": 1,
}

func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b08139819cf704a, []int{1}
}

type CodesMessageType int32

const (
	CODES_MESSAGE_TYPE_COACH_CHANGE            CodesMessageType = 0 // Deprecated: Do not use.
	CODES_MESSAGE_TYPE_CREATED_SP              CodesMessageType = 1
	CODES_MESSAGE_TYPE_EDITED_SP               CodesMessageType = 2
	CODES_MESSAGE_TYPE_BTN_CREATE_SP           CodesMessageType = 3
	CODES_MESSAGE_TYPE_MARKED_AS_RESOLVED      CodesMessageType = 4
	CODES_MESSAGE_TYPE_QUESTION_SOLVED         CodesMessageType = 5
	CODES_MESSAGE_TYPE_QUESTION_DOUBT          CodesMessageType = 6
	CODES_MESSAGE_TYPE_QUESTION_EXPIRED_SOLVED CodesMessageType = 7
	CODES_MESSAGE_TYPE_MARKED_AS_INVALID       CodesMessageType = 8
	CODES_MESSAGE_TYPE_QUESTION_INVALID        CodesMessageType = 9
	CODES_MESSAGE_TYPE_QUESTION_NOT_INVALID    CodesMessageType = 10
	CODES_MESSAGE_TYPE_QUESTION_ARCHIVED       CodesMessageType = 11
	CODES_MESSAGE_TYPE_QUESTION_EXPIRED        CodesMessageType = 12
	CODES_MESSAGE_TYPE_RATED_ANSWER            CodesMessageType = 13
	CODES_MESSAGE_TYPE_TUTOR_JOINED            CodesMessageType = 14
	CODES_MESSAGE_TYPE_TUTOR_LEFT              CodesMessageType = 15
	// for rating
	CODES_MESSAGE_TYPE_RATE_LOVE    CodesMessageType = 16
	CODES_MESSAGE_TYPE_RATE_NEUTRAL CodesMessageType = 17
	CODES_MESSAGE_TYPE_RATE_SAD     CodesMessageType = 18
	// for coach auto
	CODES_MESSAGE_TYPE_EVT_FINISH_FIRST_LO    CodesMessageType = 19
	CODES_MESSAGE_TYPE_EVT_FINISH_FIRST_TOPIC CodesMessageType = 20
	// class room
	CODES_MESSAGE_TYPE_CREATED_CLASS CodesMessageType = 21
	CODES_MESSAGE_JOINED_CLASS       CodesMessageType = 22
	CODES_MESSAGE_LEFT_CLASS         CodesMessageType = 23
	CODES_MESSAGE_REMOVED_FROM_CLASS CodesMessageType = 24
	// lesson room
	CODES_MESSAGE_TYPE_JOINED_LESSON             CodesMessageType = 25
	CODES_MESSAGE_TYPE_LEFT_LESSON               CodesMessageType = 26
	CODES_MESSAGE_TYPE_RAISED_HAND               CodesMessageType = 27
	CODES_MESSAGE_TYPE_ALLOW_STUDENT_TO_SPEAK    CodesMessageType = 28
	CODES_MESSAGE_TYPE_PROHIBIT_STUDENT_TO_SPEAK CodesMessageType = 29
	CODES_MESSAGE_TYPE_ALLOW_STUDENT_TO_CHAT     CodesMessageType = 30
	CODES_MESSAGE_TYPE_PROHIBIT_STUDENT_TO_CHAT  CodesMessageType = 31
	CODES_MESSAGE_TYPE_PUT_HAND_DOWN             CodesMessageType = 32
	CODES_MESSAGE_TYPE_STUDENT_ACCEPT_TO_SPEAK   CodesMessageType = 33
	CODES_MESSAGE_TYPE_STUDENT_DECLINE_TO_SPEAK  CodesMessageType = 34
	CODES_MESSAGE_TYPE_END_LIVE_LESSON           CodesMessageType = 35
	// Student, Parent conversation
	CODES_MESSAGE_TYPE_CREATED_CONVERSATION       CodesMessageType = 42
	CODES_MESSAGE_TYPE_JOINED_CONVERSATION        CodesMessageType = 43
	CODES_MESSAGE_TYPE_SEEN_CONVERSATION          CodesMessageType = 44
	CODES_MESSAGE_TYPE_LEAVE_CONVERSATION         CodesMessageType = 45
	CODES_MESSAGE_TYPE_USER_ADDED_TO_CONVERSATION CodesMessageType = 46
)

var CodesMessageType_name = map[int32]string{
	0:  "CODES_MESSAGE_TYPE_COACH_CHANGE",
	1:  "CODES_MESSAGE_TYPE_CREATED_SP",
	2:  "CODES_MESSAGE_TYPE_EDITED_SP",
	3:  "CODES_MESSAGE_TYPE_BTN_CREATE_SP",
	4:  "CODES_MESSAGE_TYPE_MARKED_AS_RESOLVED",
	5:  "CODES_MESSAGE_TYPE_QUESTION_SOLVED",
	6:  "CODES_MESSAGE_TYPE_QUESTION_DOUBT",
	7:  "CODES_MESSAGE_TYPE_QUESTION_EXPIRED_SOLVED",
	8:  "CODES_MESSAGE_TYPE_MARKED_AS_INVALID",
	9:  "CODES_MESSAGE_TYPE_QUESTION_INVALID",
	10: "CODES_MESSAGE_TYPE_QUESTION_NOT_INVALID",
	11: "CODES_MESSAGE_TYPE_QUESTION_ARCHIVED",
	12: "CODES_MESSAGE_TYPE_QUESTION_EXPIRED",
	13: "CODES_MESSAGE_TYPE_RATED_ANSWER",
	14: "CODES_MESSAGE_TYPE_TUTOR_JOINED",
	15: "CODES_MESSAGE_TYPE_TUTOR_LEFT",
	16: "CODES_MESSAGE_TYPE_RATE_LOVE",
	17: "CODES_MESSAGE_TYPE_RATE_NEUTRAL",
	18: "CODES_MESSAGE_TYPE_RATE_SAD",
	19: "CODES_MESSAGE_TYPE_EVT_FINISH_FIRST_LO",
	20: "CODES_MESSAGE_TYPE_EVT_FINISH_FIRST_TOPIC",
	21: "CODES_MESSAGE_TYPE_CREATED_CLASS",
	22: "CODES_MESSAGE_JOINED_CLASS",
	23: "CODES_MESSAGE_LEFT_CLASS",
	24: "CODES_MESSAGE_REMOVED_FROM_CLASS",
	25: "CODES_MESSAGE_TYPE_JOINED_LESSON",
	26: "CODES_MESSAGE_TYPE_LEFT_LESSON",
	27: "CODES_MESSAGE_TYPE_RAISED_HAND",
	28: "CODES_MESSAGE_TYPE_ALLOW_STUDENT_TO_SPEAK",
	29: "CODES_MESSAGE_TYPE_PROHIBIT_STUDENT_TO_SPEAK",
	30: "CODES_MESSAGE_TYPE_ALLOW_STUDENT_TO_CHAT",
	31: "CODES_MESSAGE_TYPE_PROHIBIT_STUDENT_TO_CHAT",
	32: "CODES_MESSAGE_TYPE_PUT_HAND_DOWN",
	33: "CODES_MESSAGE_TYPE_STUDENT_ACCEPT_TO_SPEAK",
	34: "CODES_MESSAGE_TYPE_STUDENT_DECLINE_TO_SPEAK",
	35: "CODES_MESSAGE_TYPE_END_LIVE_LESSON",
	42: "CODES_MESSAGE_TYPE_CREATED_CONVERSATION",
	43: "CODES_MESSAGE_TYPE_JOINED_CONVERSATION",
	44: "CODES_MESSAGE_TYPE_SEEN_CONVERSATION",
	45: "CODES_MESSAGE_TYPE_LEAVE_CONVERSATION",
	46: "CODES_MESSAGE_TYPE_USER_ADDED_TO_CONVERSATION",
}

var CodesMessageType_value = map[string]int32{
	"CODES_MESSAGE_TYPE_COACH_CHANGE":               0,
	"CODES_MESSAGE_TYPE_CREATED_SP":                 1,
	"CODES_MESSAGE_TYPE_EDITED_SP":                  2,
	"CODES_MESSAGE_TYPE_BTN_CREATE_SP":              3,
	"CODES_MESSAGE_TYPE_MARKED_AS_RESOLVED":         4,
	"CODES_MESSAGE_TYPE_QUESTION_SOLVED":            5,
	"CODES_MESSAGE_TYPE_QUESTION_DOUBT":             6,
	"CODES_MESSAGE_TYPE_QUESTION_EXPIRED_SOLVED":    7,
	"CODES_MESSAGE_TYPE_MARKED_AS_INVALID":          8,
	"CODES_MESSAGE_TYPE_QUESTION_INVALID":           9,
	"CODES_MESSAGE_TYPE_QUESTION_NOT_INVALID":       10,
	"CODES_MESSAGE_TYPE_QUESTION_ARCHIVED":          11,
	"CODES_MESSAGE_TYPE_QUESTION_EXPIRED":           12,
	"CODES_MESSAGE_TYPE_RATED_ANSWER":               13,
	"CODES_MESSAGE_TYPE_TUTOR_JOINED":               14,
	"CODES_MESSAGE_TYPE_TUTOR_LEFT":                 15,
	"CODES_MESSAGE_TYPE_RATE_LOVE":                  16,
	"CODES_MESSAGE_TYPE_RATE_NEUTRAL":               17,
	"CODES_MESSAGE_TYPE_RATE_SAD":                   18,
	"CODES_MESSAGE_TYPE_EVT_FINISH_FIRST_LO":        19,
	"CODES_MESSAGE_TYPE_EVT_FINISH_FIRST_TOPIC":     20,
	"CODES_MESSAGE_TYPE_CREATED_CLASS":              21,
	"CODES_MESSAGE_JOINED_CLASS":                    22,
	"CODES_MESSAGE_LEFT_CLASS":                      23,
	"CODES_MESSAGE_REMOVED_FROM_CLASS":              24,
	"CODES_MESSAGE_TYPE_JOINED_LESSON":              25,
	"CODES_MESSAGE_TYPE_LEFT_LESSON":                26,
	"CODES_MESSAGE_TYPE_RAISED_HAND":                27,
	"CODES_MESSAGE_TYPE_ALLOW_STUDENT_TO_SPEAK":     28,
	"CODES_MESSAGE_TYPE_PROHIBIT_STUDENT_TO_SPEAK":  29,
	"CODES_MESSAGE_TYPE_ALLOW_STUDENT_TO_CHAT":      30,
	"CODES_MESSAGE_TYPE_PROHIBIT_STUDENT_TO_CHAT":   31,
	"CODES_MESSAGE_TYPE_PUT_HAND_DOWN":              32,
	"CODES_MESSAGE_TYPE_STUDENT_ACCEPT_TO_SPEAK":    33,
	"CODES_MESSAGE_TYPE_STUDENT_DECLINE_TO_SPEAK":   34,
	"CODES_MESSAGE_TYPE_END_LIVE_LESSON":            35,
	"CODES_MESSAGE_TYPE_CREATED_CONVERSATION":       42,
	"CODES_MESSAGE_TYPE_JOINED_CONVERSATION":        43,
	"CODES_MESSAGE_TYPE_SEEN_CONVERSATION":          44,
	"CODES_MESSAGE_TYPE_LEAVE_CONVERSATION":         45,
	"CODES_MESSAGE_TYPE_USER_ADDED_TO_CONVERSATION": 46,
}

func (CodesMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b08139819cf704a, []int{2}
}

type ConversationStatus int32

const (
	CONVERSATION_STATUS_NONE  ConversationStatus = 0
	CONVERSATION_STATUS_CLOSE ConversationStatus = 1
)

var ConversationStatus_name = map[int32]string{
	0: "CONVERSATION_STATUS_NONE",
	1: "CONVERSATION_STATUS_CLOSE",
}

var ConversationStatus_value = map[string]int32{
	"CONVERSATION_STATUS_NONE":  0,
	"CONVERSATION_STATUS_CLOSE": 1,
}

func (ConversationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b08139819cf704a, []int{3}
}

type ConversationType int32

const (
	CONVERSATION_CLASS    ConversationType = 0
	CONVERSATION_QUESTION ConversationType = 1
	CONVERSATION_COACH    ConversationType = 2 // Deprecated: Do not use.
	CONVERSATION_LESSON   ConversationType = 3
	CONVERSATION_STUDENT  ConversationType = 4
	CONVERSATION_PARENT   ConversationType = 5
)

var ConversationType_name = map[int32]string{
	0: "CONVERSATION_CLASS",
	1: "CONVERSATION_QUESTION",
	2: "CONVERSATION_COACH",
	3: "CONVERSATION_LESSON",
	4: "CONVERSATION_STUDENT",
	5: "CONVERSATION_PARENT",
}

var ConversationType_value = map[string]int32{
	"CONVERSATION_CLASS":    0,
	"CONVERSATION_QUESTION": 1,
	"CONVERSATION_COACH":    2,
	"CONVERSATION_LESSON":   3,
	"CONVERSATION_STUDENT":  4,
	"CONVERSATION_PARENT":   5,
}

func (ConversationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b08139819cf704a, []int{4}
}

type ConversationEventType int32

const (
	CONVERSATION_EVENT_TYPE_NONE                    ConversationEventType = 0
	CONVERSATION_EVENT_TYPE_STUDENT_HAND_EVENT      ConversationEventType = 1
	CONVERSATION_EVENT_TYPE_ALLOW_PROHIBIT_TO_SPEAK ConversationEventType = 2
	CONVERSATION_EVENT_TYPE_TEACHER_CREATE_POOL     ConversationEventType = 3
	CONVERSATION_EVENT_TYPE_STUDENT_ANSWER_POOL     ConversationEventType = 4
	CONVERSATION_EVENT_TYPE_ACCEPT_DECLINE_TO_SPEAK ConversationEventType = 5
)

var ConversationEventType_name = map[int32]string{
	0: "CONVERSATION_EVENT_TYPE_NONE",
	1: "CONVERSATION_EVENT_TYPE_STUDENT_HAND_EVENT",
	2: "CONVERSATION_EVENT_TYPE_ALLOW_PROHIBIT_TO_SPEAK",
	3: "CONVERSATION_EVENT_TYPE_TEACHER_CREATE_POOL",
	4: "CONVERSATION_EVENT_TYPE_STUDENT_ANSWER_POOL",
	5: "CONVERSATION_EVENT_TYPE_ACCEPT_DECLINE_TO_SPEAK",
}

var ConversationEventType_value = map[string]int32{
	"CONVERSATION_EVENT_TYPE_NONE":                    0,
	"CONVERSATION_EVENT_TYPE_STUDENT_HAND_EVENT":      1,
	"CONVERSATION_EVENT_TYPE_ALLOW_PROHIBIT_TO_SPEAK": 2,
	"CONVERSATION_EVENT_TYPE_TEACHER_CREATE_POOL":     3,
	"CONVERSATION_EVENT_TYPE_STUDENT_ANSWER_POOL":     4,
	"CONVERSATION_EVENT_TYPE_ACCEPT_DECLINE_TO_SPEAK": 5,
}

func (ConversationEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b08139819cf704a, []int{5}
}

type ConversationEventStatus int32

const (
	CONVERSATION_EVENT_STATUS_NONE                      ConversationEventStatus = 0
	CONVERSATION_EVENT_STATUS_STUDENT_RAISE_HAND        ConversationEventStatus = 1
	CONVERSATION_EVENT_STATUS_STUDENT_PUT_HAND_DOWN     ConversationEventStatus = 2
	CONVERSATION_EVENT_STATUS_POOL_OPEN                 ConversationEventStatus = 3
	CONVERSATION_EVENT_STATUS_POOL_CLOSE                ConversationEventStatus = 4
	CONVERSATION_EVENT_STATUS_STUDENT_ALLOW_TO_SPEAK    ConversationEventStatus = 5
	CONVERSATION_EVENT_STATUS_STUDENT_PROHIBIT_TO_SPEAK ConversationEventStatus = 6
	CONVERSATION_EVENT_STATUS_STUDENT_ACCEPT_TO_SPEAK   ConversationEventStatus = 7
	CONVERSATION_EVENT_STATUS_STUDENT_DECLINE_TO_SPEAK  ConversationEventStatus = 8
)

var ConversationEventStatus_name = map[int32]string{
	0: "CONVERSATION_EVENT_STATUS_NONE",
	1: "CONVERSATION_EVENT_STATUS_STUDENT_RAISE_HAND",
	2: "CONVERSATION_EVENT_STATUS_STUDENT_PUT_HAND_DOWN",
	3: "CONVERSATION_EVENT_STATUS_POOL_OPEN",
	4: "CONVERSATION_EVENT_STATUS_POOL_CLOSE",
	5: "CONVERSATION_EVENT_STATUS_STUDENT_ALLOW_TO_SPEAK",
	6: "CONVERSATION_EVENT_STATUS_STUDENT_PROHIBIT_TO_SPEAK",
	7: "CONVERSATION_EVENT_STATUS_STUDENT_ACCEPT_TO_SPEAK",
	8: "CONVERSATION_EVENT_STATUS_STUDENT_DECLINE_TO_SPEAK",
}

var ConversationEventStatus_value = map[string]int32{
	"CONVERSATION_EVENT_STATUS_NONE":                      0,
	"CONVERSATION_EVENT_STATUS_STUDENT_RAISE_HAND":        1,
	"CONVERSATION_EVENT_STATUS_STUDENT_PUT_HAND_DOWN":     2,
	"CONVERSATION_EVENT_STATUS_POOL_OPEN":                 3,
	"CONVERSATION_EVENT_STATUS_POOL_CLOSE":                4,
	"CONVERSATION_EVENT_STATUS_STUDENT_ALLOW_TO_SPEAK":    5,
	"CONVERSATION_EVENT_STATUS_STUDENT_PROHIBIT_TO_SPEAK": 6,
	"CONVERSATION_EVENT_STATUS_STUDENT_ACCEPT_TO_SPEAK":   7,
	"CONVERSATION_EVENT_STATUS_STUDENT_DECLINE_TO_SPEAK":  8,
}

func (ConversationEventStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b08139819cf704a, []int{6}
}

func init() {
	proto.RegisterEnum("manabie.tom.MessageType", MessageType_name, MessageType_value)
	golang_proto.RegisterEnum("manabie.tom.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("manabie.tom.MessageStatus", MessageStatus_name, MessageStatus_value)
	golang_proto.RegisterEnum("manabie.tom.MessageStatus", MessageStatus_name, MessageStatus_value)
	proto.RegisterEnum("manabie.tom.CodesMessageType", CodesMessageType_name, CodesMessageType_value)
	golang_proto.RegisterEnum("manabie.tom.CodesMessageType", CodesMessageType_name, CodesMessageType_value)
	proto.RegisterEnum("manabie.tom.ConversationStatus", ConversationStatus_name, ConversationStatus_value)
	golang_proto.RegisterEnum("manabie.tom.ConversationStatus", ConversationStatus_name, ConversationStatus_value)
	proto.RegisterEnum("manabie.tom.ConversationType", ConversationType_name, ConversationType_value)
	golang_proto.RegisterEnum("manabie.tom.ConversationType", ConversationType_name, ConversationType_value)
	proto.RegisterEnum("manabie.tom.ConversationEventType", ConversationEventType_name, ConversationEventType_value)
	golang_proto.RegisterEnum("manabie.tom.ConversationEventType", ConversationEventType_name, ConversationEventType_value)
	proto.RegisterEnum("manabie.tom.ConversationEventStatus", ConversationEventStatus_name, ConversationEventStatus_value)
	golang_proto.RegisterEnum("manabie.tom.ConversationEventStatus", ConversationEventStatus_name, ConversationEventStatus_value)
}

func init() { proto.RegisterFile("tomenum.proto", fileDescriptor_1b08139819cf704a) }
func init() { golang_proto.RegisterFile("tomenum.proto", fileDescriptor_1b08139819cf704a) }

var fileDescriptor_1b08139819cf704a = []byte{
	// 1132 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x97, 0xbb, 0x73, 0xdb, 0xc6,
	0x13, 0xc7, 0x09, 0xea, 0x61, 0xff, 0xce, 0x3f, 0x25, 0xe7, 0x93, 0xf5, 0x96, 0xa0, 0x97, 0x6d,
	0xd9, 0xd4, 0x83, 0xb6, 0x95, 0x47, 0x91, 0x26, 0x27, 0x60, 0x25, 0x22, 0x06, 0x71, 0x30, 0xee,
	0x48, 0xd9, 0x69, 0x6e, 0x48, 0x9b, 0x61, 0x34, 0x0e, 0x09, 0x8d, 0x45, 0x79, 0x26, 0x5d, 0xfe,
	0x84, 0xf4, 0xf9, 0x07, 0xd2, 0xa4, 0x4c, 0x93, 0x2a, 0x65, 0x4a, 0x35, 0x99, 0x71, 0x19, 0x51,
	0x4d, 0x4a, 0xff, 0x09, 0x19, 0x1c, 0x40, 0x8a, 0x10, 0x00, 0x4a, 0x1d, 0x79, 0xf7, 0xd9, 0xdb,
	0xbd, 0xbd, 0xef, 0xee, 0x0e, 0xd0, 0x44, 0xc7, 0x6f, 0x35, 0xda, 0xa7, 0xad, 0x9d, 0xe3, 0x77,
	0x7e, 0xc7, 0x27, 0x77, 0x5a, 0xb5, 0x76, 0xad, 0x7e, 0xd4, 0xd8, 0xe9, 0xf8, 0xad, 0xf9, 0xed,
	0xe6, 0x51, 0xe7, 0xfb, 0xd3, 0xfa, 0xce, 0x6b, 0xbf, 0x55, 0x6c, 0xfa, 0x4d, 0xbf, 0xa8, 0x98,
	0xfa, 0xe9, 0x77, 0xea, 0x9f, 0xfa, 0xa3, 0x7e, 0x85, 0xb6, 0x85, 0x3f, 0x34, 0x74, 0xa7, 0xdc,
	0x38, 0x39, 0xa9, 0x35, 0x1b, 0xe2, 0xc7, 0xe3, 0x06, 0x99, 0x42, 0x77, 0xcb, 0xc0, 0x39, 0x3d,
	0x00, 0x29, 0x5e, 0xb9, 0x20, 0x05, 0xbc, 0x14, 0x38, 0x47, 0xa6, 0x11, 0x89, 0x2d, 0x5b, 0x65,
	0x7a, 0x00, 0x58, 0x4b, 0xac, 0x57, 0x2d, 0x13, 0x18, 0xce, 0x93, 0x19, 0x34, 0x19, 0x5b, 0xe7,
	0xaf, 0xb8, 0x80, 0x32, 0x1e, 0x49, 0x6c, 0xec, 0x55, 0x84, 0x60, 0x0e, 0x1e, 0x25, 0x0b, 0x68,
	0x26, 0xb6, 0x61, 0x30, 0x6a, 0x94, 0x24, 0xad, 0x08, 0x86, 0xc7, 0x12, 0x51, 0xed, 0x5b, 0x36,
	0xe0, 0xf1, 0xc2, 0xd7, 0x68, 0x22, 0x8a, 0x9d, 0x77, 0x6a, 0x9d, 0xd3, 0x93, 0xc1, 0x70, 0xb8,
	0xa0, 0xa2, 0xc2, 0xa5, 0x03, 0x87, 0x38, 0x37, 0xe8, 0x35, 0x5a, 0xf7, 0x80, 0x9a, 0x58, 0x2b,
	0xfc, 0x32, 0x81, 0xb0, 0xe1, 0xbf, 0x69, 0x9c, 0x0c, 0xe6, 0x60, 0x03, 0x2d, 0x1b, 0xcc, 0x04,
	0x2e, 0x53, 0x02, 0x32, 0x4a, 0xd4, 0x39, 0x00, 0x9c, 0x9b, 0xcf, 0xdf, 0xd6, 0xc8, 0x2a, 0x5a,
	0x4a, 0x03, 0x3d, 0xa0, 0x02, 0x4c, 0xc9, 0x5d, 0xac, 0x91, 0x15, 0xb4, 0x98, 0x82, 0x80, 0x69,
	0x45, 0x44, 0x9e, 0xdc, 0x47, 0x2b, 0x29, 0xc4, 0x9e, 0x70, 0xa2, 0x83, 0x02, 0x6a, 0x84, 0x3c,
	0x46, 0x0f, 0x52, 0xa8, 0x32, 0xf5, 0x9e, 0x83, 0x29, 0x69, 0x70, 0x1f, 0xce, 0xec, 0x2a, 0x98,
	0x78, 0x94, 0x3c, 0x44, 0x6b, 0x29, 0xe8, 0x8b, 0x0a, 0x70, 0x61, 0x31, 0x47, 0x46, 0xdc, 0x18,
	0x79, 0x80, 0x56, 0x87, 0x71, 0x26, 0xab, 0xec, 0x09, 0x3c, 0x4e, 0x76, 0x50, 0x61, 0x18, 0x06,
	0x2f, 0x5d, 0xcb, 0x0b, 0xee, 0x12, 0x1e, 0x7b, 0x8b, 0x3c, 0x42, 0xf7, 0x87, 0x46, 0x6a, 0x39,
	0x55, 0x6a, 0x5b, 0x26, 0xbe, 0x4d, 0x36, 0xd0, 0xfa, 0xb0, 0x93, 0x7b, 0xe0, 0xff, 0xc8, 0x26,
	0xda, 0x18, 0x06, 0x3a, 0x4c, 0xf4, 0x61, 0x94, 0xe1, 0xbf, 0x0f, 0x53, 0xcf, 0x28, 0x59, 0x41,
	0xa4, 0x77, 0xae, 0xf3, 0x1f, 0xdd, 0x0c, 0xff, 0x9f, 0xac, 0xa7, 0x0a, 0xc2, 0x53, 0xaf, 0x4c,
	0x1d, 0x7e, 0x08, 0x1e, 0x9e, 0xc8, 0x80, 0x44, 0x45, 0x30, 0x4f, 0x7e, 0xc3, 0x2c, 0x07, 0x4c,
	0xfc, 0x49, 0x86, 0x62, 0x42, 0xc8, 0x86, 0x7d, 0x81, 0x3f, 0xcd, 0x50, 0x4c, 0xe0, 0x4c, 0xda,
	0xac, 0x0a, 0x18, 0x0f, 0x09, 0x47, 0x3a, 0x50, 0x11, 0x1e, 0xb5, 0xf1, 0x5d, 0xb2, 0x8c, 0x16,
	0xb2, 0x20, 0x4e, 0x4d, 0x4c, 0x48, 0x01, 0x3d, 0x4c, 0x53, 0x66, 0x55, 0xc8, 0x7d, 0xcb, 0xb1,
	0x78, 0x49, 0xee, 0x5b, 0x1e, 0x17, 0xd2, 0x66, 0x78, 0x92, 0x6c, 0xa3, 0xc7, 0x37, 0x61, 0x05,
	0x73, 0x2d, 0x03, 0xdf, 0xcb, 0x90, 0x74, 0xaf, 0x2e, 0x0c, 0x9b, 0x72, 0x8e, 0xa7, 0x88, 0x8e,
	0xe6, 0xe3, 0x54, 0x98, 0xa5, 0x68, 0x7f, 0x9a, 0x2c, 0xa2, 0xd9, 0xf8, 0x7e, 0x90, 0xa0, 0x68,
	0x77, 0x26, 0xe9, 0xc3, 0x83, 0x32, 0xab, 0x82, 0x29, 0xf7, 0x3d, 0x56, 0x8e, 0xa8, 0xd9, 0x8c,
	0x48, 0x22, 0x47, 0x36, 0x70, 0xce, 0x1c, 0x3c, 0x47, 0xd6, 0x90, 0x9e, 0x42, 0x29, 0x77, 0x11,
	0x33, 0x9f, 0xc1, 0x78, 0xd4, 0xe2, 0x60, 0xca, 0x12, 0x75, 0x4c, 0xbc, 0x90, 0x91, 0x26, 0x6a,
	0xdb, 0xec, 0x50, 0x72, 0x51, 0x31, 0xc1, 0x09, 0x72, 0x24, 0xb9, 0x0b, 0xf4, 0x39, 0x5e, 0x24,
	0x4f, 0xd0, 0x56, 0x0a, 0xee, 0x7a, 0xac, 0x64, 0xed, 0x59, 0x22, 0x69, 0xb1, 0x44, 0xb6, 0xd0,
	0xa3, 0x9b, 0x38, 0x30, 0x4a, 0x54, 0x60, 0x9d, 0x14, 0xd1, 0xe6, 0x0d, 0xcf, 0x57, 0x06, 0xcb,
	0x19, 0xd9, 0x72, 0x2b, 0x42, 0x5d, 0x50, 0x9a, 0xec, 0xd0, 0xc1, 0x2b, 0x19, 0x0d, 0xa1, 0x77,
	0x1a, 0x35, 0x0c, 0x70, 0x07, 0x82, 0x5e, 0xcd, 0x08, 0xa3, 0xc7, 0x9b, 0x60, 0xd8, 0x96, 0x03,
	0x97, 0x06, 0x6b, 0x19, 0x0d, 0x0c, 0x1c, 0x53, 0xda, 0x56, 0x15, 0x7a, 0x4f, 0xb2, 0x9e, 0xd1,
	0x16, 0xfa, 0x32, 0x63, 0x4e, 0x15, 0x3c, 0x4e, 0x83, 0x5a, 0xc6, 0x85, 0x0c, 0xb9, 0xf7, 0x24,
	0x37, 0xc8, 0x6e, 0x66, 0xb4, 0x10, 0x0e, 0xe0, 0xc4, 0xc9, 0xad, 0x8c, 0xb6, 0x6c, 0x03, 0xad,
	0x42, 0x1c, 0xdd, 0x26, 0x4f, 0xd1, 0x76, 0x0a, 0x5a, 0xe1, 0xe0, 0x49, 0x6a, 0x9a, 0x60, 0xaa,
	0x77, 0x18, 0x34, 0xd9, 0x29, 0xbc, 0x40, 0xc4, 0xf0, 0xdb, 0xef, 0x1b, 0xef, 0x4e, 0x6a, 0x9d,
	0x23, 0xbf, 0x1d, 0x0d, 0x39, 0x55, 0x17, 0x97, 0x5c, 0x7f, 0xd2, 0x31, 0x07, 0x70, 0x8e, 0x2c,
	0xa1, 0xb9, 0xb4, 0x5d, 0xc3, 0x66, 0x1c, 0xb0, 0x56, 0xf8, 0x4d, 0x0b, 0x06, 0xde, 0xe5, 0x99,
	0x6a, 0xe0, 0x4d, 0x23, 0x12, 0xb3, 0x09, 0xab, 0x27, 0x47, 0xe6, 0xd0, 0x54, 0x6c, 0xbd, 0xd7,
	0x1a, 0xb1, 0x46, 0xe6, 0xaf, 0x9a, 0x04, 0xd3, 0x11, 0xe7, 0xd5, 0x58, 0x9c, 0x41, 0x93, 0xb1,
	0xbd, 0xe8, 0xc1, 0x46, 0xc8, 0x2c, 0xba, 0x77, 0x25, 0x36, 0xa5, 0x01, 0x3c, 0x9a, 0x30, 0x71,
	0xa9, 0x17, 0x6c, 0x8c, 0x15, 0x7e, 0xcf, 0xa3, 0xa9, 0xc1, 0x78, 0xe1, 0x7d, 0xa3, 0xdd, 0x51,
	0x41, 0xab, 0x3e, 0x39, 0x60, 0x02, 0x55, 0x25, 0xe6, 0x20, 0xa9, 0x51, 0x2a, 0x94, 0x50, 0xd3,
	0x89, 0x9e, 0xfa, 0x94, 0xae, 0xd5, 0x3a, 0xd6, 0xc8, 0x2e, 0x2a, 0x66, 0xf1, 0x61, 0x89, 0xf5,
	0x4b, 0xa7, 0x2f, 0xd6, 0x7c, 0xa8, 0xee, 0x74, 0x23, 0x01, 0xd4, 0x28, 0x81, 0xd7, 0x9b, 0xe3,
	0x2e, 0x63, 0x36, 0x1e, 0x19, 0x66, 0xd0, 0xaf, 0x21, 0x35, 0x53, 0x42, 0x83, 0xd1, 0xa1, 0x61,
	0x85, 0xc5, 0x96, 0xa8, 0xa1, 0xb1, 0xc2, 0xdf, 0x23, 0x68, 0x26, 0x91, 0xb7, 0x48, 0x40, 0xaa,
	0x95, 0x25, 0x0e, 0x8c, 0xcb, 0x48, 0xf5, 0xa6, 0x2c, 0xa6, 0x17, 0xa7, 0xea, 0x7e, 0x61, 0xf3,
	0xcb, 0xca, 0xde, 0x15, 0x8b, 0x78, 0x2f, 0xc9, 0x87, 0x23, 0x38, 0xcb, 0x28, 0xb8, 0xbf, 0x64,
	0x2e, 0x04, 0xd2, 0x51, 0x25, 0x39, 0x14, 0x0c, 0x15, 0x3e, 0x4a, 0x3e, 0x43, 0x4f, 0xae, 0x8f,
	0x23, 0x7c, 0xcf, 0xcb, 0x7c, 0x91, 0x2f, 0xd1, 0xee, 0x0d, 0xa2, 0x4f, 0xbc, 0xff, 0x38, 0xf9,
	0x1c, 0x3d, 0xbd, 0x81, 0xbb, 0x2b, 0x4d, 0xf1, 0x16, 0xf9, 0x02, 0x3d, 0xbb, 0xde, 0x2c, 0xf1,
	0xae, 0xb7, 0xf7, 0x7e, 0x38, 0x3b, 0xd7, 0x73, 0x1f, 0xce, 0xf5, 0xdc, 0xc7, 0x73, 0x5d, 0xfb,
	0xa9, 0xab, 0x6b, 0xbf, 0x76, 0x75, 0xed, 0xaf, 0xae, 0xae, 0x9d, 0x75, 0x75, 0xed, 0x9f, 0xae,
	0xae, 0xfd, 0xdb, 0xd5, 0x73, 0x1f, 0xbb, 0xba, 0xf6, 0xf3, 0x85, 0x9e, 0xfb, 0xf3, 0x42, 0xd7,
	0xce, 0x2e, 0xf4, 0xdc, 0x87, 0x0b, 0x3d, 0xf7, 0xed, 0xb3, 0x81, 0x0f, 0x83, 0xe8, 0x83, 0x61,
	0x3b, 0xf8, 0x5d, 0xaf, 0xbd, 0x7e, 0xdb, 0x68, 0xbf, 0x29, 0x1e, 0xbf, 0x6d, 0x16, 0x9b, 0x8d,
	0x76, 0xf8, 0x85, 0xd0, 0xf1, 0x5b, 0x5f, 0x1d, 0xd7, 0xeb, 0xe3, 0xea, 0xdf, 0xee, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x11, 0x94, 0xee, 0x4c, 0x71, 0x0c, 0x00, 0x00,
}

func (x MessageType) String() string {
	s, ok := MessageType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x MessageStatus) String() string {
	s, ok := MessageStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CodesMessageType) String() string {
	s, ok := CodesMessageType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ConversationStatus) String() string {
	s, ok := ConversationStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ConversationType) String() string {
	s, ok := ConversationType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ConversationEventType) String() string {
	s, ok := ConversationEventType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ConversationEventStatus) String() string {
	s, ok := ConversationEventStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
