// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tominternal.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GetStudentQuestionShouldExpiredSolvedRequest struct {
	Duration string `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (m *GetStudentQuestionShouldExpiredSolvedRequest) Reset() {
	*m = GetStudentQuestionShouldExpiredSolvedRequest{}
}
func (*GetStudentQuestionShouldExpiredSolvedRequest) ProtoMessage() {}
func (*GetStudentQuestionShouldExpiredSolvedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b4307e8749664f9, []int{0}
}
func (m *GetStudentQuestionShouldExpiredSolvedRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetStudentQuestionShouldExpiredSolvedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetStudentQuestionShouldExpiredSolvedRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetStudentQuestionShouldExpiredSolvedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStudentQuestionShouldExpiredSolvedRequest.Merge(m, src)
}
func (m *GetStudentQuestionShouldExpiredSolvedRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetStudentQuestionShouldExpiredSolvedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStudentQuestionShouldExpiredSolvedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStudentQuestionShouldExpiredSolvedRequest proto.InternalMessageInfo

func (m *GetStudentQuestionShouldExpiredSolvedRequest) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

type GetStudentQuestionShouldExpiredSolvedResponse struct {
	StudentQuestionIds []string `protobuf:"bytes,1,rep,name=student_question_ids,json=studentQuestionIds,proto3" json:"student_question_ids,omitempty"`
}

func (m *GetStudentQuestionShouldExpiredSolvedResponse) Reset() {
	*m = GetStudentQuestionShouldExpiredSolvedResponse{}
}
func (*GetStudentQuestionShouldExpiredSolvedResponse) ProtoMessage() {}
func (*GetStudentQuestionShouldExpiredSolvedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b4307e8749664f9, []int{1}
}
func (m *GetStudentQuestionShouldExpiredSolvedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetStudentQuestionShouldExpiredSolvedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetStudentQuestionShouldExpiredSolvedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetStudentQuestionShouldExpiredSolvedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStudentQuestionShouldExpiredSolvedResponse.Merge(m, src)
}
func (m *GetStudentQuestionShouldExpiredSolvedResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetStudentQuestionShouldExpiredSolvedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStudentQuestionShouldExpiredSolvedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStudentQuestionShouldExpiredSolvedResponse proto.InternalMessageInfo

func (m *GetStudentQuestionShouldExpiredSolvedResponse) GetStudentQuestionIds() []string {
	if m != nil {
		return m.StudentQuestionIds
	}
	return nil
}

func init() {
	proto.RegisterType((*GetStudentQuestionShouldExpiredSolvedRequest)(nil), "manabie.tom.GetStudentQuestionShouldExpiredSolvedRequest")
	golang_proto.RegisterType((*GetStudentQuestionShouldExpiredSolvedRequest)(nil), "manabie.tom.GetStudentQuestionShouldExpiredSolvedRequest")
	proto.RegisterType((*GetStudentQuestionShouldExpiredSolvedResponse)(nil), "manabie.tom.GetStudentQuestionShouldExpiredSolvedResponse")
	golang_proto.RegisterType((*GetStudentQuestionShouldExpiredSolvedResponse)(nil), "manabie.tom.GetStudentQuestionShouldExpiredSolvedResponse")
}

func init() { proto.RegisterFile("tominternal.proto", fileDescriptor_4b4307e8749664f9) }
func init() { golang_proto.RegisterFile("tominternal.proto", fileDescriptor_4b4307e8749664f9) }

var fileDescriptor_4b4307e8749664f9 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x31, 0x4f, 0xc2, 0x40,
	0x14, 0xc7, 0xfb, 0x24, 0x31, 0x70, 0x4e, 0x36, 0x0e, 0x84, 0xe1, 0x85, 0x90, 0x98, 0x30, 0x48,
	0x6b, 0x70, 0x52, 0x37, 0x13, 0x63, 0x70, 0x13, 0x36, 0x17, 0xd2, 0x72, 0x67, 0x69, 0x68, 0xef,
	0x95, 0xde, 0xd5, 0x38, 0x3a, 0x3a, 0xfa, 0x1d, 0x5c, 0x1c, 0xfd, 0x08, 0x8e, 0x8e, 0x8c, 0x8c,
	0x72, 0x5d, 0x1c, 0xf9, 0x08, 0x86, 0x96, 0x18, 0xdc, 0xd0, 0xed, 0xfd, 0x72, 0xbf, 0xf7, 0xee,
	0xfe, 0xf7, 0xd8, 0xbe, 0xa6, 0x38, 0x94, 0x5a, 0xa4, 0xd2, 0x8b, 0x9c, 0x24, 0x25, 0x4d, 0xf6,
	0x5e, 0xec, 0x49, 0xcf, 0x0f, 0x85, 0xa3, 0x29, 0x6e, 0x74, 0x82, 0x50, 0x8f, 0x33, 0xdf, 0x19,
	0x51, 0xec, 0x06, 0x14, 0x90, 0x5b, 0x38, 0x7e, 0x76, 0x57, 0x50, 0x01, 0x45, 0x55, 0xf6, 0xb6,
	0xae, 0xd9, 0xd1, 0x95, 0xd0, 0x03, 0x9d, 0x71, 0x21, 0xf5, 0x4d, 0x26, 0x94, 0x0e, 0x49, 0x0e,
	0xc6, 0x94, 0x45, 0xfc, 0xf2, 0x21, 0x09, 0x53, 0xc1, 0x07, 0x14, 0xdd, 0x0b, 0xde, 0x17, 0xd3,
	0xd5, 0xa1, 0xdd, 0x60, 0x55, 0x9e, 0xa5, 0xde, 0xca, 0xaa, 0x43, 0x13, 0xda, 0xb5, 0xfe, 0x0f,
	0xb7, 0x3c, 0xd6, 0xd9, 0x72, 0x96, 0x4a, 0x48, 0x2a, 0x61, 0x1f, 0xb3, 0x03, 0x55, 0xda, 0xc3,
	0xe9, 0x5a, 0x1f, 0x86, 0x5c, 0xd5, 0xa1, 0x59, 0x69, 0xd7, 0xfa, 0xb6, 0xfa, 0x3d, 0xa9, 0xc7,
	0x55, 0xf7, 0x0d, 0x58, 0xb5, 0xb7, 0x4e, 0x6f, 0xbf, 0x00, 0x3b, 0xdc, 0xea, 0x42, 0xfb, 0xd4,
	0xd9, 0xf8, 0x22, 0xe7, 0x2f, 0x81, 0x1b, 0x67, 0xff, 0x69, 0x2d, 0xf3, 0xb5, 0x2a, 0x4f, 0x3b,
	0x70, 0x11, 0xcd, 0x16, 0x68, 0xcd, 0x17, 0x68, 0x2d, 0x17, 0x08, 0x8f, 0x06, 0xe1, 0xd5, 0x20,
	0x7c, 0x18, 0x84, 0x99, 0x41, 0xf8, 0x34, 0x08, 0x5f, 0x06, 0xad, 0xa5, 0x41, 0x78, 0xce, 0xd1,
	0x7a, 0xcf, 0x11, 0x66, 0x39, 0x5a, 0xf3, 0x1c, 0xad, 0xdb, 0xee, 0xc6, 0x2a, 0xd7, 0x8f, 0xe8,
	0xac, 0x6a, 0xdf, 0x1b, 0x4d, 0x84, 0xe4, 0x6e, 0x32, 0x09, 0xdc, 0x40, 0xc8, 0x72, 0xa7, 0x9a,
	0xe2, 0xf3, 0xc4, 0xf7, 0x77, 0x0b, 0x3a, 0xf9, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x82, 0xa0, 0x8f,
	0x93, 0x27, 0x02, 0x00, 0x00,
}

func (this *GetStudentQuestionShouldExpiredSolvedRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetStudentQuestionShouldExpiredSolvedRequest)
	if !ok {
		that2, ok := that.(GetStudentQuestionShouldExpiredSolvedRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Duration != that1.Duration {
		return false
	}
	return true
}
func (this *GetStudentQuestionShouldExpiredSolvedResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetStudentQuestionShouldExpiredSolvedResponse)
	if !ok {
		that2, ok := that.(GetStudentQuestionShouldExpiredSolvedResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.StudentQuestionIds) != len(that1.StudentQuestionIds) {
		return false
	}
	for i := range this.StudentQuestionIds {
		if this.StudentQuestionIds[i] != that1.StudentQuestionIds[i] {
			return false
		}
	}
	return true
}
func (this *GetStudentQuestionShouldExpiredSolvedRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&pb.GetStudentQuestionShouldExpiredSolvedRequest{")
	s = append(s, "Duration: "+fmt.Sprintf("%#v", this.Duration)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetStudentQuestionShouldExpiredSolvedResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&pb.GetStudentQuestionShouldExpiredSolvedResponse{")
	s = append(s, "StudentQuestionIds: "+fmt.Sprintf("%#v", this.StudentQuestionIds)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringTominternal(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InternalClient is the client API for Internal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InternalClient interface {
	GetStudentQuestionShouldExpiredSolved(ctx context.Context, in *GetStudentQuestionShouldExpiredSolvedRequest, opts ...grpc.CallOption) (*GetStudentQuestionShouldExpiredSolvedResponse, error)
}

type internalClient struct {
	cc *grpc.ClientConn
}

func NewInternalClient(cc *grpc.ClientConn) InternalClient {
	return &internalClient{cc}
}

// Deprecated: Do not use.
func (c *internalClient) GetStudentQuestionShouldExpiredSolved(ctx context.Context, in *GetStudentQuestionShouldExpiredSolvedRequest, opts ...grpc.CallOption) (*GetStudentQuestionShouldExpiredSolvedResponse, error) {
	out := new(GetStudentQuestionShouldExpiredSolvedResponse)
	err := c.cc.Invoke(ctx, "/manabie.tom.Internal/GetStudentQuestionShouldExpiredSolved", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternalServer is the server API for Internal service.
type InternalServer interface {
	GetStudentQuestionShouldExpiredSolved(context.Context, *GetStudentQuestionShouldExpiredSolvedRequest) (*GetStudentQuestionShouldExpiredSolvedResponse, error)
}

// UnimplementedInternalServer can be embedded to have forward compatible implementations.
type UnimplementedInternalServer struct {
}

func (*UnimplementedInternalServer) GetStudentQuestionShouldExpiredSolved(ctx context.Context, req *GetStudentQuestionShouldExpiredSolvedRequest) (*GetStudentQuestionShouldExpiredSolvedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudentQuestionShouldExpiredSolved not implemented")
}

func RegisterInternalServer(s *grpc.Server, srv InternalServer) {
	s.RegisterService(&_Internal_serviceDesc, srv)
}

func _Internal_GetStudentQuestionShouldExpiredSolved_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentQuestionShouldExpiredSolvedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalServer).GetStudentQuestionShouldExpiredSolved(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/manabie.tom.Internal/GetStudentQuestionShouldExpiredSolved",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalServer).GetStudentQuestionShouldExpiredSolved(ctx, req.(*GetStudentQuestionShouldExpiredSolvedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Internal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "manabie.tom.Internal",
	HandlerType: (*InternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStudentQuestionShouldExpiredSolved",
			Handler:    _Internal_GetStudentQuestionShouldExpiredSolved_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tominternal.proto",
}

func (m *GetStudentQuestionShouldExpiredSolvedRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetStudentQuestionShouldExpiredSolvedRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetStudentQuestionShouldExpiredSolvedRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Duration) > 0 {
		i -= len(m.Duration)
		copy(dAtA[i:], m.Duration)
		i = encodeVarintTominternal(dAtA, i, uint64(len(m.Duration)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetStudentQuestionShouldExpiredSolvedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetStudentQuestionShouldExpiredSolvedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetStudentQuestionShouldExpiredSolvedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StudentQuestionIds) > 0 {
		for iNdEx := len(m.StudentQuestionIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.StudentQuestionIds[iNdEx])
			copy(dAtA[i:], m.StudentQuestionIds[iNdEx])
			i = encodeVarintTominternal(dAtA, i, uint64(len(m.StudentQuestionIds[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintTominternal(dAtA []byte, offset int, v uint64) int {
	offset -= sovTominternal(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetStudentQuestionShouldExpiredSolvedRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Duration)
	if l > 0 {
		n += 1 + l + sovTominternal(uint64(l))
	}
	return n
}

func (m *GetStudentQuestionShouldExpiredSolvedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.StudentQuestionIds) > 0 {
		for _, s := range m.StudentQuestionIds {
			l = len(s)
			n += 1 + l + sovTominternal(uint64(l))
		}
	}
	return n
}

func sovTominternal(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTominternal(x uint64) (n int) {
	return sovTominternal(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GetStudentQuestionShouldExpiredSolvedRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetStudentQuestionShouldExpiredSolvedRequest{`,
		`Duration:` + fmt.Sprintf("%v", this.Duration) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetStudentQuestionShouldExpiredSolvedResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetStudentQuestionShouldExpiredSolvedResponse{`,
		`StudentQuestionIds:` + fmt.Sprintf("%v", this.StudentQuestionIds) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTominternal(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *GetStudentQuestionShouldExpiredSolvedRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTominternal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetStudentQuestionShouldExpiredSolvedRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetStudentQuestionShouldExpiredSolvedRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTominternal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTominternal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTominternal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Duration = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTominternal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTominternal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetStudentQuestionShouldExpiredSolvedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTominternal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetStudentQuestionShouldExpiredSolvedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetStudentQuestionShouldExpiredSolvedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StudentQuestionIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTominternal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTominternal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTominternal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StudentQuestionIds = append(m.StudentQuestionIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTominternal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTominternal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTominternal(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTominternal
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTominternal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTominternal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTominternal
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTominternal
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTominternal
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTominternal        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTominternal          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTominternal = fmt.Errorf("proto: unexpected end of group")
)
