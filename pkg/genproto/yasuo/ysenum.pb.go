// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ysenum.proto

package pb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UserNotificationStatus int32

const (
	USER_NOTIFICATION_STATUS_NONE   UserNotificationStatus = 0
	USER_NOTIFICATION_STATUS_NEW    UserNotificationStatus = 1
	USER_NOTIFICATION_STATUS_SEEN   UserNotificationStatus = 2
	USER_NOTIFICATION_STATUS_READ   UserNotificationStatus = 3
	USER_NOTIFICATION_STATUS_FAILED UserNotificationStatus = 4
)

var UserNotificationStatus_name = map[int32]string{
	0: "USER_NOTIFICATION_STATUS_NONE",
	1: "USER_NOTIFICATION_STATUS_NEW",
	2: "USER_NOTIFICATION_STATUS_SEEN",
	3: "USER_NOTIFICATION_STATUS_READ",
	4: "USER_NOTIFICATION_STATUS_FAILED",
}

var UserNotificationStatus_value = map[string]int32{
	"USER_NOTIFICATION_STATUS_NONE":   0,
	"USER_NOTIFICATION_STATUS_NEW":    1,
	"USER_NOTIFICATION_STATUS_SEEN":   2,
	"USER_NOTIFICATION_STATUS_READ":   3,
	"USER_NOTIFICATION_STATUS_FAILED": 4,
}

func (UserNotificationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{0}
}

type NotificationType int32

const (
	NOTIFICATION_TYPE_NONE       NotificationType = 0
	NOTIFICATION_TYPE_TEXT       NotificationType = 1
	NOTIFICATION_TYPE_PROMO_CODE NotificationType = 2
)

var NotificationType_name = map[int32]string{
	0: "NOTIFICATION_TYPE_NONE",
	1: "NOTIFICATION_TYPE_TEXT",
	2: "NOTIFICATION_TYPE_PROMO_CODE",
}

var NotificationType_value = map[string]int32{
	"NOTIFICATION_TYPE_NONE":       0,
	"NOTIFICATION_TYPE_TEXT":       1,
	"NOTIFICATION_TYPE_PROMO_CODE": 2,
}

func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{1}
}

type UploadType int32

const (
	UPLOAD_TYPE_AVATAR UploadType = 0
	UPLOAD_TYPE_CHAT   UploadType = 1
)

var UploadType_name = map[int32]string{
	0: "UPLOAD_TYPE_AVATAR",
	1: "UPLOAD_TYPE_CHAT",
}

var UploadType_value = map[string]int32{
	"UPLOAD_TYPE_AVATAR": 0,
	"UPLOAD_TYPE_CHAT":   1,
}

func (UploadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{2}
}

type PaymentStatus int32

const (
	PAYMENT_STATUS_ON_TRIAL      PaymentStatus = 0
	PAYMENT_STATUS_EXPIRED_TRIAL PaymentStatus = 1
	PAYMENT_STATUS_PAID          PaymentStatus = 2
	PAYMENT_STATUS_LATE_PAYMENT  PaymentStatus = 3
)

var PaymentStatus_name = map[int32]string{
	0: "PAYMENT_STATUS_ON_TRIAL",
	1: "PAYMENT_STATUS_EXPIRED_TRIAL",
	2: "PAYMENT_STATUS_PAID",
	3: "PAYMENT_STATUS_LATE_PAYMENT",
}

var PaymentStatus_value = map[string]int32{
	"PAYMENT_STATUS_ON_TRIAL":      0,
	"PAYMENT_STATUS_EXPIRED_TRIAL": 1,
	"PAYMENT_STATUS_PAID":          2,
	"PAYMENT_STATUS_LATE_PAYMENT":  3,
}

func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{3}
}

type NotificationTargetStatus int32

const (
	NOTIFICATION_TARGET_STATUS_NONE    NotificationTargetStatus = 0
	NOTIFICATION_TARGET_STATUS_ACTIVE  NotificationTargetStatus = 1
	NOTIFICATION_TARGET_STATUS_DISABLE NotificationTargetStatus = 2
)

var NotificationTargetStatus_name = map[int32]string{
	0: "NOTIFICATION_TARGET_STATUS_NONE",
	1: "NOTIFICATION_TARGET_STATUS_ACTIVE",
	2: "NOTIFICATION_TARGET_STATUS_DISABLE",
}

var NotificationTargetStatus_value = map[string]int32{
	"NOTIFICATION_TARGET_STATUS_NONE":    0,
	"NOTIFICATION_TARGET_STATUS_ACTIVE":  1,
	"NOTIFICATION_TARGET_STATUS_DISABLE": 2,
}

func (NotificationTargetStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{4}
}

type AskDuration int32

const (
	THIS_DAY   AskDuration = 0
	THIS_WEEK  AskDuration = 1
	THIS_MONTH AskDuration = 2
	THIS_YEAR  AskDuration = 3
)

var AskDuration_name = map[int32]string{
	0: "THIS_DAY",
	1: "THIS_WEEK",
	2: "THIS_MONTH",
	3: "THIS_YEAR",
}

var AskDuration_value = map[string]int32{
	"THIS_DAY":   0,
	"THIS_WEEK":  1,
	"THIS_MONTH": 2,
	"THIS_YEAR":  3,
}

func (AskDuration) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{5}
}

type QuestionStatus int32

const (
	QUESTION_STATUS_WAITING_FOR_ASSIGN QuestionStatus = 0
	QUESTION_STATUS_ASSIGNED           QuestionStatus = 1
	QUESTION_STATUS_MARKED_AS_RESOLVED QuestionStatus = 2
	QUESTION_STATUS_MARKED_AS_INVALID  QuestionStatus = 3
	QUESTION_STATUS_INVALID            QuestionStatus = 4
	QUESTION_STATUS_SOLVED             QuestionStatus = 5
	QUESTION_STATUS_EXPIRED_SOLVED     QuestionStatus = 6
	QUESTION_STATUS_RATED              QuestionStatus = 7
	QUESTION_STATUS_ARCHIVED           QuestionStatus = 8
)

var QuestionStatus_name = map[int32]string{
	0: "QUESTION_STATUS_WAITING_FOR_ASSIGN",
	1: "QUESTION_STATUS_ASSIGNED",
	2: "QUESTION_STATUS_MARKED_AS_RESOLVED",
	3: "QUESTION_STATUS_MARKED_AS_INVALID",
	4: "QUESTION_STATUS_INVALID",
	5: "QUESTION_STATUS_SOLVED",
	6: "QUESTION_STATUS_EXPIRED_SOLVED",
	7: "QUESTION_STATUS_RATED",
	8: "QUESTION_STATUS_ARCHIVED",
}

var QuestionStatus_value = map[string]int32{
	"QUESTION_STATUS_WAITING_FOR_ASSIGN": 0,
	"QUESTION_STATUS_ASSIGNED":           1,
	"QUESTION_STATUS_MARKED_AS_RESOLVED": 2,
	"QUESTION_STATUS_MARKED_AS_INVALID":  3,
	"QUESTION_STATUS_INVALID":            4,
	"QUESTION_STATUS_SOLVED":             5,
	"QUESTION_STATUS_EXPIRED_SOLVED":     6,
	"QUESTION_STATUS_RATED":              7,
	"QUESTION_STATUS_ARCHIVED":           8,
}

func (QuestionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{6}
}

type TutorStatus int32

const (
	TUTOR_STATUS_NONE    TutorStatus = 0
	TUTOR_STATUS_ONLINE  TutorStatus = 1
	TUTOR_STATUS_OFFLINE TutorStatus = 2
)

var TutorStatus_name = map[int32]string{
	0: "TUTOR_STATUS_NONE",
	1: "TUTOR_STATUS_ONLINE",
	2: "TUTOR_STATUS_OFFLINE",
}

var TutorStatus_value = map[string]int32{
	"TUTOR_STATUS_NONE":    0,
	"TUTOR_STATUS_ONLINE":  1,
	"TUTOR_STATUS_OFFLINE": 2,
}

func (TutorStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{7}
}

type TopicStatus int32

const (
	TOPIC_STATUS_NONE      TopicStatus = 0
	TOPIC_STATUS_DRAFT     TopicStatus = 1
	TOPIC_STATUS_PUBLISHED TopicStatus = 2
)

var TopicStatus_name = map[int32]string{
	0: "TOPIC_STATUS_NONE",
	1: "TOPIC_STATUS_DRAFT",
	2: "TOPIC_STATUS_PUBLISHED",
}

var TopicStatus_value = map[string]int32{
	"TOPIC_STATUS_NONE":      0,
	"TOPIC_STATUS_DRAFT":     1,
	"TOPIC_STATUS_PUBLISHED": 2,
}

func (TopicStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{8}
}

type OrderStatus int32

const (
	ORDER_STATUS_NONE                OrderStatus = 0
	ORDER_STATUS_WAITING_FOR_PAYMENT OrderStatus = 1
	ORDER_STATUS_SUCCESSFULLY        OrderStatus = 2
	ORDER_STATUS_FAILED              OrderStatus = 3
	ORDER_STATUS_CANCELED            OrderStatus = 4
	ORDER_STATUS_ENDED               OrderStatus = 5 // Deprecated: Do not use.
	ORDER_STATUS_PROCESSING_PAYMENT  OrderStatus = 6
	ORDER_STATUS_DELETED             OrderStatus = 7
	ORDER_STATUS_DISABLED            OrderStatus = 8
)

var OrderStatus_name = map[int32]string{
	0: "ORDER_STATUS_NONE",
	1: "ORDER_STATUS_WAITING_FOR_PAYMENT",
	2: "ORDER_STATUS_SUCCESSFULLY",
	3: "ORDER_STATUS_FAILED",
	4: "ORDER_STATUS_CANCELED",
	5: "ORDER_STATUS_ENDED",
	6: "ORDER_STATUS_PROCESSING_PAYMENT",
	7: "ORDER_STATUS_DELETED",
	8: "ORDER_STATUS_DISABLED",
}

var OrderStatus_value = map[string]int32{
	"ORDER_STATUS_NONE":                0,
	"ORDER_STATUS_WAITING_FOR_PAYMENT": 1,
	"ORDER_STATUS_SUCCESSFULLY":        2,
	"ORDER_STATUS_FAILED":              3,
	"ORDER_STATUS_CANCELED":            4,
	"ORDER_STATUS_ENDED":               5,
	"ORDER_STATUS_PROCESSING_PAYMENT":  6,
	"ORDER_STATUS_DELETED":             7,
	"ORDER_STATUS_DISABLED":            8,
}

func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{9}
}

type OrderTransitionAction int32

const (
	ORDER_TRANSITION_NONE            OrderTransitionAction = 0
	ORDER_TRANSITION_PROCESS_PAYMENT OrderTransitionAction = 1
	ORDER_TRANSITION_COMPLETE        OrderTransitionAction = 2
	ORDER_TRANSITION_FAIL            OrderTransitionAction = 3
	ORDER_TRANSITION_CANCEL          OrderTransitionAction = 4
	ORDER_TRANSITION_CLOSE           OrderTransitionAction = 5
)

var OrderTransitionAction_name = map[int32]string{
	0: "ORDER_TRANSITION_NONE",
	1: "ORDER_TRANSITION_PROCESS_PAYMENT",
	2: "ORDER_TRANSITION_COMPLETE",
	3: "ORDER_TRANSITION_FAIL",
	4: "ORDER_TRANSITION_CANCEL",
	5: "ORDER_TRANSITION_CLOSE",
}

var OrderTransitionAction_value = map[string]int32{
	"ORDER_TRANSITION_NONE":            0,
	"ORDER_TRANSITION_PROCESS_PAYMENT": 1,
	"ORDER_TRANSITION_COMPLETE":        2,
	"ORDER_TRANSITION_FAIL":            3,
	"ORDER_TRANSITION_CANCEL":          4,
	"ORDER_TRANSITION_CLOSE":           5,
}

func (OrderTransitionAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{10}
}

type QuestionTransition int32

const (
	QUESTION_TRANSITION_ASSIGN             QuestionTransition = 0
	QUESTION_TRANSITION_MARKED_AS_RESOLVED QuestionTransition = 1
	QUESTION_TRANSITION_MARKED_AS_INVALID  QuestionTransition = 2
	QUESTION_TRANSITION_AGREE_INVALID      QuestionTransition = 3
	QUESTION_TRANSITION_DISAGREE_INVALID   QuestionTransition = 4
	QUESTION_TRANSITION_AGREE_RESOLVED     QuestionTransition = 5
	QUESTION_TRANSITION_DISAGREE_RESOLVED  QuestionTransition = 6
	QUESTION_TRANSITION_TIME_OUT_SOLVED    QuestionTransition = 7
	QUESTION_TRANSITION_RATE               QuestionTransition = 8
	QUESTION_TRANSITION_ARCHIVED           QuestionTransition = 9
)

var QuestionTransition_name = map[int32]string{
	0: "QUESTION_TRANSITION_ASSIGN",
	1: "QUESTION_TRANSITION_MARKED_AS_RESOLVED",
	2: "QUESTION_TRANSITION_MARKED_AS_INVALID",
	3: "QUESTION_TRANSITION_AGREE_INVALID",
	4: "QUESTION_TRANSITION_DISAGREE_INVALID",
	5: "QUESTION_TRANSITION_AGREE_RESOLVED",
	6: "QUESTION_TRANSITION_DISAGREE_RESOLVED",
	7: "QUESTION_TRANSITION_TIME_OUT_SOLVED",
	8: "QUESTION_TRANSITION_RATE",
	9: "QUESTION_TRANSITION_ARCHIVED",
}

var QuestionTransition_value = map[string]int32{
	"QUESTION_TRANSITION_ASSIGN":             0,
	"QUESTION_TRANSITION_MARKED_AS_RESOLVED": 1,
	"QUESTION_TRANSITION_MARKED_AS_INVALID":  2,
	"QUESTION_TRANSITION_AGREE_INVALID":      3,
	"QUESTION_TRANSITION_DISAGREE_INVALID":   4,
	"QUESTION_TRANSITION_AGREE_RESOLVED":     5,
	"QUESTION_TRANSITION_DISAGREE_RESOLVED":  6,
	"QUESTION_TRANSITION_TIME_OUT_SOLVED":    7,
	"QUESTION_TRANSITION_RATE":               8,
	"QUESTION_TRANSITION_ARCHIVED":           9,
}

func (QuestionTransition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{11}
}

type CoachAutoEvent int32

const (
	COACH_AUTO_EVENT_FINISH_FIRST_LO    CoachAutoEvent = 0
	COACH_AUTO_EVENT_FINISH_FIRST_TOPIC CoachAutoEvent = 1
)

var CoachAutoEvent_name = map[int32]string{
	0: "COACH_AUTO_EVENT_FINISH_FIRST_LO",
	1: "COACH_AUTO_EVENT_FINISH_FIRST_TOPIC",
}

var CoachAutoEvent_value = map[string]int32{
	"COACH_AUTO_EVENT_FINISH_FIRST_LO":    0,
	"COACH_AUTO_EVENT_FINISH_FIRST_TOPIC": 1,
}

func (CoachAutoEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{12}
}

type PaymentGateway int32

const (
	GATEWAY_NONE    PaymentGateway = 0
	GATEWAY_ASIAPAY PaymentGateway = 1
	GATEWAY_ONEPAY  PaymentGateway = 2
	GATEWAY_MOMO    PaymentGateway = 3
	GATEWAY_ZALO    PaymentGateway = 4
	GATEWAY_GRAB    PaymentGateway = 5
	GATEWAY_GHN     PaymentGateway = 6
)

var PaymentGateway_name = map[int32]string{
	0: "GATEWAY_NONE",
	1: "GATEWAY_ASIAPAY",
	2: "GATEWAY_ONEPAY",
	3: "GATEWAY_MOMO",
	4: "GATEWAY_ZALO",
	5: "GATEWAY_GRAB",
	6: "GATEWAY_GHN",
}

var PaymentGateway_value = map[string]int32{
	"GATEWAY_NONE":    0,
	"GATEWAY_ASIAPAY": 1,
	"GATEWAY_ONEPAY":  2,
	"GATEWAY_MOMO":    3,
	"GATEWAY_ZALO":    4,
	"GATEWAY_GRAB":    5,
	"GATEWAY_GHN":     6,
}

func (PaymentGateway) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{13}
}

type CodOrderTransitionAction int32

const (
	COD_ORDER_TRANSITION_NONE     CodOrderTransitionAction = 0
	COD_ORDER_TRANSITION_COMPLETE CodOrderTransitionAction = 1
	COD_ORDER_TRANSITION_CANCEL   CodOrderTransitionAction = 2
)

var CodOrderTransitionAction_name = map[int32]string{
	0: "COD_ORDER_TRANSITION_NONE",
	1: "COD_ORDER_TRANSITION_COMPLETE",
	2: "COD_ORDER_TRANSITION_CANCEL",
}

var CodOrderTransitionAction_value = map[string]int32{
	"COD_ORDER_TRANSITION_NONE":     0,
	"COD_ORDER_TRANSITION_COMPLETE": 1,
	"COD_ORDER_TRANSITION_CANCEL":   2,
}

func (CodOrderTransitionAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{14}
}

type CodOrderStatus int32

const (
	COD_ORDER_STATUS_NONE         CodOrderStatus = 0
	COD_ORDER_STATUS_PENDING      CodOrderStatus = 1
	COD_ORDER_STATUS_CANCELED     CodOrderStatus = 2
	COD_ORDER_STATUS_SUCCESSFULLY CodOrderStatus = 3
)

var CodOrderStatus_name = map[int32]string{
	0: "COD_ORDER_STATUS_NONE",
	1: "COD_ORDER_STATUS_PENDING",
	2: "COD_ORDER_STATUS_CANCELED",
	3: "COD_ORDER_STATUS_SUCCESSFULLY",
}

var CodOrderStatus_value = map[string]int32{
	"COD_ORDER_STATUS_NONE":         0,
	"COD_ORDER_STATUS_PENDING":      1,
	"COD_ORDER_STATUS_CANCELED":     2,
	"COD_ORDER_STATUS_SUCCESSFULLY": 3,
}

func (CodOrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{15}
}

type SubscriptionStatus int32

const (
	SUBSCRIPTION_STATUS_NONE     SubscriptionStatus = 0
	SUBSCRIPTION_STATUS_ACTIVE   SubscriptionStatus = 1
	SUBSCRIPTION_STATUS_DISABLED SubscriptionStatus = 2
)

var SubscriptionStatus_name = map[int32]string{
	0: "SUBSCRIPTION_STATUS_NONE",
	1: "SUBSCRIPTION_STATUS_ACTIVE",
	2: "SUBSCRIPTION_STATUS_DISABLED",
}

var SubscriptionStatus_value = map[string]int32{
	"SUBSCRIPTION_STATUS_NONE":     0,
	"SUBSCRIPTION_STATUS_ACTIVE":   1,
	"SUBSCRIPTION_STATUS_DISABLED": 2,
}

func (SubscriptionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{16}
}

type PlanPrivilege int32

const (
	CAN_ACCESS_LEARNING_TOPICS PlanPrivilege = 0
	CAN_ACCESS_PRACTICE_TOPICS PlanPrivilege = 1
	CAN_ACCESS_MOCK_EXAMS      PlanPrivilege = 2
	CAN_ACCESS_ALL_LOS         PlanPrivilege = 3
	CAN_ACCESS_SOME_LOS        PlanPrivilege = 4
	CAN_WATCH_VIDEOS           PlanPrivilege = 5
	CAN_READ_STUDY_GUIDES      PlanPrivilege = 6
	CAN_SKIP_VIDEOS            PlanPrivilege = 7
	CAN_CHAT_WITH_TEACHER      PlanPrivilege = 8
)

var PlanPrivilege_name = map[int32]string{
	0: "CAN_ACCESS_LEARNING_TOPICS",
	1: "CAN_ACCESS_PRACTICE_TOPICS",
	2: "CAN_ACCESS_MOCK_EXAMS",
	3: "CAN_ACCESS_ALL_LOS",
	4: "CAN_ACCESS_SOME_LOS",
	5: "CAN_WATCH_VIDEOS",
	6: "CAN_READ_STUDY_GUIDES",
	7: "CAN_SKIP_VIDEOS",
	8: "CAN_CHAT_WITH_TEACHER",
}

var PlanPrivilege_value = map[string]int32{
	"CAN_ACCESS_LEARNING_TOPICS": 0,
	"CAN_ACCESS_PRACTICE_TOPICS": 1,
	"CAN_ACCESS_MOCK_EXAMS":      2,
	"CAN_ACCESS_ALL_LOS":         3,
	"CAN_ACCESS_SOME_LOS":        4,
	"CAN_WATCH_VIDEOS":           5,
	"CAN_READ_STUDY_GUIDES":      6,
	"CAN_SKIP_VIDEOS":            7,
	"CAN_CHAT_WITH_TEACHER":      8,
}

func (PlanPrivilege) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{17}
}

type PaymentMethod int32

const (
	PAYMENT_METHOD_NONE              PaymentMethod = 0
	PAYMENT_METHOD_ATM               PaymentMethod = 1
	PAYMENT_METHOD_CREDIT_DEBIT_CARD PaymentMethod = 2
	PAYMENT_METHOD_COD               PaymentMethod = 3
	PAYMENT_METHOD_BANK_TRANSFER     PaymentMethod = 4
)

var PaymentMethod_name = map[int32]string{
	0: "PAYMENT_METHOD_NONE",
	1: "PAYMENT_METHOD_ATM",
	2: "PAYMENT_METHOD_CREDIT_DEBIT_CARD",
	3: "PAYMENT_METHOD_COD",
	4: "PAYMENT_METHOD_BANK_TRANSFER",
}

var PaymentMethod_value = map[string]int32{
	"PAYMENT_METHOD_NONE":              0,
	"PAYMENT_METHOD_ATM":               1,
	"PAYMENT_METHOD_CREDIT_DEBIT_CARD": 2,
	"PAYMENT_METHOD_COD":               3,
	"PAYMENT_METHOD_BANK_TRANSFER":     4,
}

func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{18}
}

type UserGroup int32

const (
	USER_GROUP_NONE          UserGroup = 0
	USER_GROUP_STUDENT       UserGroup = 1
	USER_GROUP_COACH         UserGroup = 2
	USER_GROUP_TUTOR         UserGroup = 3
	USER_GROUP_STAFF         UserGroup = 4
	USER_GROUP_ADMIN         UserGroup = 5
	USER_GROUP_TEACHER       UserGroup = 6
	USER_GROUP_PARENT        UserGroup = 7
	USER_GROUP_CONTENT_ADMIN UserGroup = 8
	USER_GROUP_CONTENT_STAFF UserGroup = 9
	USER_GROUP_SALES_ADMIN   UserGroup = 10
	USER_GROUP_SALES_STAFF   UserGroup = 11
	USER_GROUP_CS_ADMIN      UserGroup = 12
	USER_GROUP_CS_STAFF      UserGroup = 13
	USER_GROUP_SCHOOL_ADMIN  UserGroup = 14
	USER_GROUP_SCHOOL_STAFF  UserGroup = 15
)

var UserGroup_name = map[int32]string{
	0:  "USER_GROUP_NONE",
	1:  "USER_GROUP_STUDENT",
	2:  "USER_GROUP_COACH",
	3:  "USER_GROUP_TUTOR",
	4:  "USER_GROUP_STAFF",
	5:  "USER_GROUP_ADMIN",
	6:  "USER_GROUP_TEACHER",
	7:  "USER_GROUP_PARENT",
	8:  "USER_GROUP_CONTENT_ADMIN",
	9:  "USER_GROUP_CONTENT_STAFF",
	10: "USER_GROUP_SALES_ADMIN",
	11: "USER_GROUP_SALES_STAFF",
	12: "USER_GROUP_CS_ADMIN",
	13: "USER_GROUP_CS_STAFF",
	14: "USER_GROUP_SCHOOL_ADMIN",
	15: "USER_GROUP_SCHOOL_STAFF",
}

var UserGroup_value = map[string]int32{
	"USER_GROUP_NONE":          0,
	"USER_GROUP_STUDENT":       1,
	"USER_GROUP_COACH":         2,
	"USER_GROUP_TUTOR":         3,
	"USER_GROUP_STAFF":         4,
	"USER_GROUP_ADMIN":         5,
	"USER_GROUP_TEACHER":       6,
	"USER_GROUP_PARENT":        7,
	"USER_GROUP_CONTENT_ADMIN": 8,
	"USER_GROUP_CONTENT_STAFF": 9,
	"USER_GROUP_SALES_ADMIN":   10,
	"USER_GROUP_SALES_STAFF":   11,
	"USER_GROUP_CS_ADMIN":      12,
	"USER_GROUP_CS_STAFF":      13,
	"USER_GROUP_SCHOOL_ADMIN":  14,
	"USER_GROUP_SCHOOL_STAFF":  15,
}

func (UserGroup) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{19}
}

type SortOrderType int32

const (
	SORT_ORDER_TYPE_DESC SortOrderType = 0
	SORT_ORDER_TYPE_ASC  SortOrderType = 1
)

var SortOrderType_name = map[int32]string{
	0: "SORT_ORDER_TYPE_DESC",
	1: "SORT_ORDER_TYPE_ASC",
}

var SortOrderType_value = map[string]int32{
	"SORT_ORDER_TYPE_DESC": 0,
	"SORT_ORDER_TYPE_ASC":  1,
}

func (SortOrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db3397a847d7e775, []int{20}
}

func init() {
	proto.RegisterEnum("manabie.yasuo.UserNotificationStatus", UserNotificationStatus_name, UserNotificationStatus_value)
	golang_proto.RegisterEnum("manabie.yasuo.UserNotificationStatus", UserNotificationStatus_name, UserNotificationStatus_value)
	proto.RegisterEnum("manabie.yasuo.NotificationType", NotificationType_name, NotificationType_value)
	golang_proto.RegisterEnum("manabie.yasuo.NotificationType", NotificationType_name, NotificationType_value)
	proto.RegisterEnum("manabie.yasuo.UploadType", UploadType_name, UploadType_value)
	golang_proto.RegisterEnum("manabie.yasuo.UploadType", UploadType_name, UploadType_value)
	proto.RegisterEnum("manabie.yasuo.PaymentStatus", PaymentStatus_name, PaymentStatus_value)
	golang_proto.RegisterEnum("manabie.yasuo.PaymentStatus", PaymentStatus_name, PaymentStatus_value)
	proto.RegisterEnum("manabie.yasuo.NotificationTargetStatus", NotificationTargetStatus_name, NotificationTargetStatus_value)
	golang_proto.RegisterEnum("manabie.yasuo.NotificationTargetStatus", NotificationTargetStatus_name, NotificationTargetStatus_value)
	proto.RegisterEnum("manabie.yasuo.AskDuration", AskDuration_name, AskDuration_value)
	golang_proto.RegisterEnum("manabie.yasuo.AskDuration", AskDuration_name, AskDuration_value)
	proto.RegisterEnum("manabie.yasuo.QuestionStatus", QuestionStatus_name, QuestionStatus_value)
	golang_proto.RegisterEnum("manabie.yasuo.QuestionStatus", QuestionStatus_name, QuestionStatus_value)
	proto.RegisterEnum("manabie.yasuo.TutorStatus", TutorStatus_name, TutorStatus_value)
	golang_proto.RegisterEnum("manabie.yasuo.TutorStatus", TutorStatus_name, TutorStatus_value)
	proto.RegisterEnum("manabie.yasuo.TopicStatus", TopicStatus_name, TopicStatus_value)
	golang_proto.RegisterEnum("manabie.yasuo.TopicStatus", TopicStatus_name, TopicStatus_value)
	proto.RegisterEnum("manabie.yasuo.OrderStatus", OrderStatus_name, OrderStatus_value)
	golang_proto.RegisterEnum("manabie.yasuo.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("manabie.yasuo.OrderTransitionAction", OrderTransitionAction_name, OrderTransitionAction_value)
	golang_proto.RegisterEnum("manabie.yasuo.OrderTransitionAction", OrderTransitionAction_name, OrderTransitionAction_value)
	proto.RegisterEnum("manabie.yasuo.QuestionTransition", QuestionTransition_name, QuestionTransition_value)
	golang_proto.RegisterEnum("manabie.yasuo.QuestionTransition", QuestionTransition_name, QuestionTransition_value)
	proto.RegisterEnum("manabie.yasuo.CoachAutoEvent", CoachAutoEvent_name, CoachAutoEvent_value)
	golang_proto.RegisterEnum("manabie.yasuo.CoachAutoEvent", CoachAutoEvent_name, CoachAutoEvent_value)
	proto.RegisterEnum("manabie.yasuo.PaymentGateway", PaymentGateway_name, PaymentGateway_value)
	golang_proto.RegisterEnum("manabie.yasuo.PaymentGateway", PaymentGateway_name, PaymentGateway_value)
	proto.RegisterEnum("manabie.yasuo.CodOrderTransitionAction", CodOrderTransitionAction_name, CodOrderTransitionAction_value)
	golang_proto.RegisterEnum("manabie.yasuo.CodOrderTransitionAction", CodOrderTransitionAction_name, CodOrderTransitionAction_value)
	proto.RegisterEnum("manabie.yasuo.CodOrderStatus", CodOrderStatus_name, CodOrderStatus_value)
	golang_proto.RegisterEnum("manabie.yasuo.CodOrderStatus", CodOrderStatus_name, CodOrderStatus_value)
	proto.RegisterEnum("manabie.yasuo.SubscriptionStatus", SubscriptionStatus_name, SubscriptionStatus_value)
	golang_proto.RegisterEnum("manabie.yasuo.SubscriptionStatus", SubscriptionStatus_name, SubscriptionStatus_value)
	proto.RegisterEnum("manabie.yasuo.PlanPrivilege", PlanPrivilege_name, PlanPrivilege_value)
	golang_proto.RegisterEnum("manabie.yasuo.PlanPrivilege", PlanPrivilege_name, PlanPrivilege_value)
	proto.RegisterEnum("manabie.yasuo.PaymentMethod", PaymentMethod_name, PaymentMethod_value)
	golang_proto.RegisterEnum("manabie.yasuo.PaymentMethod", PaymentMethod_name, PaymentMethod_value)
	proto.RegisterEnum("manabie.yasuo.UserGroup", UserGroup_name, UserGroup_value)
	golang_proto.RegisterEnum("manabie.yasuo.UserGroup", UserGroup_name, UserGroup_value)
	proto.RegisterEnum("manabie.yasuo.SortOrderType", SortOrderType_name, SortOrderType_value)
	golang_proto.RegisterEnum("manabie.yasuo.SortOrderType", SortOrderType_name, SortOrderType_value)
}

func init() { proto.RegisterFile("ysenum.proto", fileDescriptor_db3397a847d7e775) }
func init() { golang_proto.RegisterFile("ysenum.proto", fileDescriptor_db3397a847d7e775) }

var fileDescriptor_db3397a847d7e775 = []byte{
	// 1580 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x57, 0xbd, 0x6f, 0xdc, 0xc8,
	0x15, 0x5f, 0x72, 0x25, 0x9d, 0xf4, 0xf4, 0xe1, 0x09, 0x6d, 0x7d, 0x5a, 0xa2, 0x2d, 0xfb, 0xec,
	0x24, 0x04, 0xce, 0x2a, 0x92, 0x2a, 0xa9, 0x66, 0xc9, 0xd9, 0xdd, 0x81, 0xb8, 0x1c, 0x1e, 0x67,
	0x28, 0x69, 0xaf, 0x21, 0x56, 0xd2, 0x9e, 0xbc, 0xb0, 0xb4, 0x5c, 0xec, 0xc7, 0x05, 0x2a, 0x02,
	0xa4, 0x0c, 0x10, 0x20, 0x08, 0x92, 0x26, 0x5d, 0x52, 0xe6, 0x7f, 0x48, 0x93, 0xf2, 0x80, 0x34,
	0x2e, 0x5d, 0xc6, 0x52, 0x93, 0xd2, 0x7f, 0x40, 0x8a, 0x60, 0xc8, 0xe5, 0x6a, 0x48, 0x51, 0xea,
	0xc8, 0xf7, 0xfb, 0xbd, 0x99, 0x37, 0x6f, 0xde, 0xd7, 0xc0, 0xca, 0xf5, 0xa8, 0xdb, 0x9f, 0x5c,
	0xbd, 0x1b, 0x0c, 0xe3, 0x71, 0x6c, 0xac, 0x5e, 0x75, 0xfa, 0x9d, 0xd3, 0x5e, 0xf7, 0xdd, 0x75,
	0x67, 0x34, 0x89, 0x77, 0xbe, 0xb9, 0xe8, 0x8d, 0xdf, 0x4f, 0x4e, 0xdf, 0x9d, 0xc5, 0x57, 0x07,
	0x17, 0xf1, 0x45, 0x7c, 0x90, 0xb0, 0x4e, 0x27, 0xdf, 0x27, 0x7f, 0xc9, 0x4f, 0xf2, 0x95, 0x6a,
	0x5b, 0x3f, 0x6a, 0xb0, 0x11, 0x8e, 0xba, 0x43, 0x2f, 0x1e, 0xf7, 0xbe, 0xef, 0x9d, 0x75, 0xc6,
	0xbd, 0xb8, 0xcf, 0xc7, 0x9d, 0xf1, 0x64, 0x64, 0xec, 0xc3, 0x5e, 0xc8, 0x49, 0x10, 0x79, 0x4c,
	0xd0, 0x3a, 0xb5, 0xb1, 0xa0, 0xcc, 0x8b, 0xb8, 0xc0, 0x22, 0xe4, 0x91, 0xc7, 0x3c, 0x82, 0x2a,
	0xc6, 0x4b, 0xd8, 0x7d, 0x98, 0x42, 0x8e, 0x91, 0xf6, 0xe8, 0x22, 0x9c, 0x10, 0x0f, 0xe9, 0x8f,
	0x52, 0x02, 0x82, 0x1d, 0x54, 0x35, 0x5e, 0xc3, 0x8b, 0x07, 0x29, 0x75, 0x4c, 0x5d, 0xe2, 0xa0,
	0x39, 0xeb, 0x12, 0x90, 0x7a, 0x0a, 0x71, 0x3d, 0xe8, 0x1a, 0x3b, 0xb0, 0x91, 0xd3, 0x11, 0x6d,
	0x9f, 0x64, 0xc6, 0x97, 0x62, 0x82, 0x9c, 0x08, 0xa4, 0xc9, 0x83, 0xdd, 0xc7, 0xfc, 0x80, 0xb5,
	0x58, 0x64, 0x33, 0x87, 0x20, 0xdd, 0xfa, 0x15, 0x40, 0x38, 0xb8, 0x8c, 0x3b, 0xe7, 0xc9, 0x3e,
	0x1b, 0x60, 0x84, 0xbe, 0xcb, 0xb0, 0x93, 0x32, 0xf1, 0x11, 0x16, 0x38, 0x40, 0x15, 0xe3, 0x19,
	0x20, 0x55, 0x6e, 0x37, 0xb1, 0x40, 0x9a, 0xf5, 0x7b, 0x0d, 0x56, 0xfd, 0xce, 0xf5, 0x55, 0xb7,
	0x3f, 0x9e, 0xfa, 0xfa, 0x39, 0x6c, 0xfa, 0xb8, 0xdd, 0x22, 0x9e, 0xc8, 0x8e, 0x25, 0x37, 0x0d,
	0x28, 0x76, 0x53, 0x2f, 0x17, 0x40, 0x72, 0xe2, 0xd3, 0x80, 0x38, 0x53, 0x86, 0x66, 0x6c, 0xc2,
	0xd3, 0x02, 0xc3, 0xc7, 0xd4, 0x41, 0xba, 0xf1, 0x02, 0x9e, 0x17, 0x00, 0x17, 0x0b, 0x12, 0x4d,
	0x65, 0xa8, 0x6a, 0xfd, 0x51, 0x83, 0xad, 0x9c, 0xd7, 0x3a, 0xc3, 0x8b, 0x6e, 0x66, 0xd5, 0x6b,
	0x78, 0x91, 0xf7, 0x02, 0x0e, 0x1a, 0x44, 0x14, 0x62, 0xe0, 0x0d, 0xec, 0x3f, 0x42, 0xc2, 0xb6,
	0xa0, 0x47, 0x04, 0x69, 0xc6, 0x5b, 0x78, 0xf5, 0x08, 0xcd, 0xa1, 0x1c, 0xd7, 0x5c, 0xe9, 0x57,
	0x0a, 0xcb, 0x78, 0xf4, 0xc1, 0x99, 0x0c, 0x13, 0x73, 0x8c, 0x15, 0x58, 0x14, 0x4d, 0xca, 0x23,
	0x07, 0xb7, 0x51, 0xc5, 0x58, 0x85, 0xa5, 0xe4, 0xef, 0x98, 0x90, 0x43, 0xa4, 0x19, 0x6b, 0x00,
	0xc9, 0x6f, 0x8b, 0x79, 0xa2, 0x89, 0xf4, 0x19, 0xdc, 0x26, 0x38, 0x40, 0x55, 0xeb, 0x9f, 0x3a,
	0xac, 0x7d, 0x3b, 0xe9, 0x8e, 0x94, 0x98, 0x7e, 0x0b, 0xaf, 0xbe, 0x0d, 0x09, 0x57, 0xe3, 0xe7,
	0x18, 0x53, 0x41, 0xbd, 0x46, 0x54, 0x67, 0x41, 0x84, 0x39, 0xa7, 0x0d, 0x0f, 0x55, 0x8c, 0x5d,
	0xd8, 0x2a, 0xf2, 0x52, 0x8c, 0x38, 0xe9, 0x59, 0x8a, 0x68, 0x0b, 0x07, 0x87, 0xc4, 0x89, 0xb0,
	0x0c, 0x59, 0xce, 0xdc, 0x23, 0x22, 0xbd, 0xff, 0x06, 0xf6, 0x1f, 0xe6, 0x51, 0xef, 0x08, 0xbb,
	0x54, 0x46, 0xf7, 0x73, 0xd8, 0x2c, 0xd2, 0x32, 0x70, 0x4e, 0x46, 0x69, 0x11, 0x9c, 0xae, 0x3f,
	0x6f, 0xbc, 0x02, 0xb3, 0x88, 0x65, 0x91, 0x31, 0xe5, 0x2c, 0x18, 0xdb, 0xb0, 0x5e, 0xe4, 0x04,
	0x58, 0x10, 0x07, 0x7d, 0x55, 0x7a, 0xc8, 0xc0, 0x6e, 0x52, 0xa9, 0xb8, 0x68, 0x1d, 0xc3, 0xb2,
	0x98, 0x8c, 0xe3, 0xe1, 0xd4, 0x73, 0xeb, 0xf0, 0x13, 0x11, 0x0a, 0x16, 0x14, 0x6e, 0x7f, 0x13,
	0x9e, 0xe6, 0xc4, 0xcc, 0x73, 0xa9, 0x27, 0xef, 0x7b, 0x0b, 0x9e, 0xe5, 0x81, 0x7a, 0x3d, 0x41,
	0x74, 0xeb, 0x04, 0x96, 0x45, 0x3c, 0xe8, 0x9d, 0x29, 0x0b, 0x33, 0x9f, 0xda, 0x85, 0x85, 0x37,
	0xc0, 0xc8, 0x89, 0x9d, 0x00, 0xd7, 0x65, 0x66, 0xee, 0xc0, 0x46, 0x4e, 0xee, 0x87, 0x35, 0x97,
	0xf2, 0xa6, 0xf4, 0xb7, 0xf5, 0x17, 0x1d, 0x96, 0xd9, 0xf0, 0xbc, 0xab, 0xd8, 0xcc, 0x02, 0x87,
	0x14, 0x6d, 0xfe, 0x1a, 0x5e, 0xe6, 0xc4, 0x6a, 0x04, 0x64, 0x99, 0xa1, 0x19, 0x7b, 0xb0, 0x9d,
	0x63, 0xf1, 0xd0, 0xb6, 0x09, 0xe7, 0xf5, 0xd0, 0x75, 0xdb, 0x48, 0x97, 0x07, 0xcf, 0xc1, 0xd3,
	0x32, 0x54, 0x95, 0x0e, 0xcf, 0x01, 0x36, 0xf6, 0x6c, 0x92, 0x54, 0x28, 0x63, 0x07, 0x8c, 0x1c,
	0x44, 0x3c, 0x47, 0xde, 0xe3, 0x8e, 0xbe, 0xa8, 0xc9, 0x5c, 0xcb, 0x61, 0x7e, 0xc0, 0xe4, 0x76,
	0xd2, 0xae, 0xcc, 0xa6, 0x05, 0xe9, 0xd4, 0x1c, 0xc9, 0x21, 0x2e, 0x49, 0xef, 0xb2, 0xb8, 0xeb,
	0x34, 0xa1, 0xe4, 0x45, 0xfe, 0x5b, 0x83, 0xf5, 0xc4, 0x2b, 0x62, 0xd8, 0xe9, 0x8f, 0x7a, 0x32,
	0x1b, 0xf0, 0x59, 0x92, 0x5c, 0x33, 0x25, 0x11, 0x60, 0x8f, 0xd3, 0x24, 0x10, 0x8a, 0x3e, 0x52,
	0xa0, 0xa9, 0x49, 0x65, 0x3e, 0x52, 0x58, 0x36, 0x6b, 0xf9, 0xd2, 0x2a, 0xa4, 0x97, 0xae, 0x2f,
	0xfd, 0x94, 0xc6, 0xfc, 0x7d, 0xcd, 0xc4, 0x53, 0x69, 0xcc, 0xdf, 0x07, 0x5d, 0xc6, 0x09, 0x9a,
	0xb7, 0xfe, 0x5a, 0x05, 0x23, 0x4b, 0xea, 0xbb, 0x03, 0x19, 0x26, 0xec, 0xcc, 0x62, 0x59, 0xd1,
	0x9a, 0x25, 0xb4, 0x05, 0x6f, 0xcb, 0xf0, 0x92, 0xb4, 0xd5, 0x8c, 0x9f, 0xc3, 0x9b, 0xc7, 0xb9,
	0x59, 0x76, 0xe6, 0x33, 0x5c, 0xdd, 0xb6, 0x11, 0x10, 0xa2, 0x64, 0xf8, 0xcf, 0xe0, 0xeb, 0x32,
	0x9a, 0xbc, 0xa4, 0x1c, 0x73, 0x2e, 0x57, 0x5a, 0xee, 0x2d, 0x38, 0xb3, 0x71, 0xfe, 0x21, 0x1b,
	0x67, 0x2b, 0xce, 0xa8, 0x0b, 0xc6, 0x4f, 0xe1, 0x75, 0x19, 0x55, 0xd0, 0x16, 0x89, 0x58, 0x28,
	0xb2, 0x52, 0x91, 0xaf, 0x07, 0x0a, 0x51, 0x96, 0x0b, 0xb4, 0x28, 0xbb, 0x50, 0xa9, 0x65, 0x59,
	0xc5, 0x58, 0xb2, 0x22, 0x58, 0xb3, 0xe3, 0xce, 0xd9, 0x7b, 0x3c, 0x19, 0xc7, 0xe4, 0x87, 0x6e,
	0x7f, 0x2c, 0xa3, 0xc8, 0x66, 0xd8, 0x6e, 0x46, 0x38, 0x14, 0x2c, 0x22, 0x47, 0xb2, 0x0f, 0xd5,
	0xa9, 0x47, 0x79, 0x33, 0xaa, 0xd3, 0x80, 0x8b, 0xc8, 0x65, 0xa8, 0x22, 0x0d, 0x7c, 0x9c, 0x95,
	0x24, 0x3c, 0xd2, 0xac, 0x3f, 0x6b, 0xb0, 0x36, 0xed, 0x9b, 0x8d, 0xce, 0xb8, 0xfb, 0x9b, 0xce,
	0xb5, 0x81, 0x60, 0xa5, 0x81, 0x05, 0x39, 0xc6, 0xed, 0x2c, 0x72, 0x9f, 0xc2, 0x93, 0x4c, 0x82,
	0x39, 0xc5, 0x3e, 0x6e, 0x23, 0xcd, 0x30, 0x60, 0x2d, 0x13, 0x32, 0x8f, 0x48, 0x99, 0xae, 0xaa,
	0xb6, 0x58, 0x8b, 0xa1, 0xaa, 0x2a, 0xf9, 0x0e, 0xbb, 0x0c, 0xcd, 0xa9, 0x92, 0x46, 0x80, 0x6b,
	0x68, 0xde, 0x78, 0x02, 0xcb, 0x33, 0x49, 0xd3, 0x43, 0x0b, 0xd6, 0x6f, 0x61, 0xcb, 0x8e, 0xcf,
	0xcb, 0x13, 0x6c, 0x0f, 0xb6, 0x6d, 0xe6, 0x44, 0x0f, 0x25, 0xd9, 0x3e, 0xec, 0x95, 0xc2, 0xb3,
	0x14, 0xd2, 0x64, 0x03, 0x2f, 0xa7, 0xa4, 0xb9, 0xa2, 0x5b, 0x7f, 0xd0, 0xa4, 0xd7, 0xcf, 0xd5,
	0xb2, 0xb7, 0x0d, 0xeb, 0x77, 0x3a, 0xf9, 0xd2, 0xb7, 0x0b, 0x5b, 0xf7, 0x20, 0x9f, 0x78, 0x0e,
	0xf5, 0x1a, 0x69, 0x3a, 0xdf, 0x43, 0x67, 0xe5, 0x4b, 0xcf, 0x9b, 0x5b, 0x56, 0x15, 0xab, 0xd6,
	0x18, 0x0c, 0x3e, 0x39, 0x1d, 0x9d, 0x0d, 0x7b, 0x03, 0xa5, 0xeb, 0xee, 0xc2, 0x16, 0x0f, 0x6b,
	0xdc, 0x0e, 0xa8, 0x5f, 0x32, 0x44, 0x9a, 0xb0, 0x53, 0x86, 0xce, 0x26, 0x87, 0x97, 0xb0, 0x5b,
	0x86, 0xcf, 0x2a, 0x9c, 0x6e, 0xfd, 0x4f, 0xce, 0x53, 0x97, 0x9d, 0xbe, 0x3f, 0xec, 0xfd, 0xd0,
	0xbb, 0xec, 0x5e, 0x74, 0xe5, 0x9a, 0x36, 0xf6, 0x22, 0x9c, 0x18, 0x17, 0xb9, 0x04, 0x07, 0x9e,
	0xac, 0xa4, 0x49, 0x20, 0xf1, 0x74, 0x4f, 0x05, 0xf7, 0x03, 0xb9, 0x99, 0x4d, 0x32, 0x5c, 0x4b,
	0x5c, 0x78, 0x87, 0xb7, 0x98, 0x7d, 0x18, 0x91, 0x13, 0xdc, 0xe2, 0x48, 0x97, 0x8d, 0x49, 0x81,
	0xb0, 0xeb, 0x46, 0x2e, 0xe3, 0xa8, 0x2a, 0x1b, 0x82, 0x22, 0xe7, 0xac, 0x45, 0x12, 0x60, 0x4e,
	0xce, 0x80, 0x12, 0x38, 0xc6, 0xc2, 0x6e, 0x46, 0x47, 0xd4, 0x21, 0x8c, 0xa3, 0xf9, 0x6c, 0x07,
	0x39, 0xe0, 0x46, 0x5c, 0x84, 0x4e, 0x3b, 0x6a, 0x84, 0xd4, 0x21, 0x1c, 0x2d, 0xc8, 0x08, 0x96,
	0x10, 0x3f, 0xa4, 0x7e, 0xc6, 0xff, 0x2a, 0xe3, 0xcb, 0x09, 0x32, 0x3a, 0xa6, 0xa2, 0x19, 0x09,
	0x82, 0xed, 0x26, 0x09, 0xd0, 0xa2, 0xf5, 0xf7, 0xbb, 0x71, 0xb2, 0xd5, 0x1d, 0xbf, 0x8f, 0xcf,
	0xd5, 0x79, 0xb0, 0x45, 0x44, 0x93, 0x39, 0x4a, 0x57, 0x2d, 0x00, 0x58, 0xb4, 0x90, 0x26, 0x13,
	0xb5, 0x20, 0xb7, 0x03, 0xe2, 0x50, 0x11, 0x39, 0xa4, 0x46, 0x45, 0x64, 0xe3, 0xc0, 0x49, 0x8f,
	0x5e, 0x64, 0x31, 0x59, 0xde, 0x94, 0x01, 0x75, 0x2a, 0xaf, 0x61, 0xef, 0x30, 0x0d, 0xd7, 0x3a,
	0x09, 0xd0, 0x9c, 0xf5, 0xb7, 0x2a, 0x2c, 0xc9, 0x67, 0x46, 0x63, 0x18, 0x4f, 0x06, 0xf2, 0x80,
	0xc9, 0x38, 0xdf, 0x08, 0x58, 0xe8, 0x2b, 0xa6, 0x29, 0x42, 0xe9, 0x92, 0xb4, 0xc7, 0xc8, 0x11,
	0xfa, 0x4e, 0x9e, 0x14, 0x0a, 0xa4, 0x17, 0xa4, 0xc9, 0xa4, 0x81, 0xaa, 0x05, 0x29, 0x17, 0xb8,
	0x5e, 0x4f, 0x2f, 0x40, 0x91, 0x62, 0xa7, 0x45, 0x3d, 0x34, 0x5f, 0xd8, 0x2f, 0xf3, 0xe6, 0x82,
	0x1c, 0x1a, 0x14, 0xb9, 0x8f, 0x03, 0x69, 0x46, 0x52, 0x1c, 0x73, 0x66, 0x78, 0x42, 0x1e, 0x37,
	0x5d, 0x6c, 0xf1, 0x01, 0x34, 0x35, 0x60, 0x49, 0xf6, 0x33, 0xd5, 0x2c, 0xec, 0x12, 0x3e, 0xd5,
	0x84, 0x52, 0x2c, 0xd5, 0x5b, 0x96, 0xd7, 0xa8, 0xae, 0x9a, 0x29, 0xad, 0xdc, 0x07, 0x52, 0x8d,
	0x55, 0xd9, 0x56, 0xd5, 0xd5, 0xec, 0x26, 0x63, 0xee, 0x54, 0x6b, 0xad, 0x1c, 0x4c, 0x35, 0x9f,
	0x58, 0x35, 0x58, 0xe5, 0xf1, 0x70, 0x9c, 0xd6, 0x31, 0xf9, 0xa4, 0xd9, 0x82, 0x67, 0x9c, 0x05,
	0x22, 0x2b, 0x3d, 0xf2, 0xf9, 0xe2, 0x10, 0x6e, 0xa7, 0x33, 0x5f, 0x11, 0xc1, 0xdc, 0x46, 0x5a,
	0xad, 0xff, 0xf1, 0xb3, 0x59, 0xf9, 0xf4, 0xd9, 0xac, 0x7c, 0xf9, 0x6c, 0x6a, 0xbf, 0xbb, 0x31,
	0xb5, 0x7f, 0xdc, 0x98, 0xda, 0x8f, 0x37, 0xa6, 0xf6, 0xf1, 0xc6, 0xd4, 0xfe, 0x73, 0x63, 0x6a,
	0xff, 0xbd, 0x31, 0x2b, 0x5f, 0x6e, 0x4c, 0xed, 0x4f, 0xb7, 0x66, 0xe5, 0x5f, 0xb7, 0xa6, 0xf6,
	0xf1, 0xd6, 0xac, 0x7c, 0xba, 0x35, 0x2b, 0xdf, 0xfd, 0x52, 0x79, 0xb5, 0x4e, 0xdf, 0xb3, 0xdf,
	0xc8, 0xef, 0xd3, 0xce, 0xd9, 0x87, 0x6e, 0xff, 0xfc, 0x60, 0xf0, 0xe1, 0xe2, 0xe0, 0xa2, 0xdb,
	0x4f, 0x9f, 0xaf, 0xc9, 0x43, 0xf7, 0xd7, 0x83, 0xd3, 0xd3, 0x85, 0xe4, 0xff, 0x17, 0xff, 0x0f,
	0x00, 0x00, 0xff, 0xff, 0x41, 0x06, 0xbf, 0x24, 0x11, 0x0f, 0x00, 0x00,
}

func (x UserNotificationStatus) String() string {
	s, ok := UserNotificationStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x NotificationType) String() string {
	s, ok := NotificationType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x UploadType) String() string {
	s, ok := UploadType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PaymentStatus) String() string {
	s, ok := PaymentStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x NotificationTargetStatus) String() string {
	s, ok := NotificationTargetStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x AskDuration) String() string {
	s, ok := AskDuration_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x QuestionStatus) String() string {
	s, ok := QuestionStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TutorStatus) String() string {
	s, ok := TutorStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TopicStatus) String() string {
	s, ok := TopicStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x OrderStatus) String() string {
	s, ok := OrderStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x OrderTransitionAction) String() string {
	s, ok := OrderTransitionAction_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x QuestionTransition) String() string {
	s, ok := QuestionTransition_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CoachAutoEvent) String() string {
	s, ok := CoachAutoEvent_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PaymentGateway) String() string {
	s, ok := PaymentGateway_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CodOrderTransitionAction) String() string {
	s, ok := CodOrderTransitionAction_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CodOrderStatus) String() string {
	s, ok := CodOrderStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x SubscriptionStatus) String() string {
	s, ok := SubscriptionStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PlanPrivilege) String() string {
	s, ok := PlanPrivilege_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PaymentMethod) String() string {
	s, ok := PaymentMethod_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x UserGroup) String() string {
	s, ok := UserGroup_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x SortOrderType) String() string {
	s, ok := SortOrderType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
