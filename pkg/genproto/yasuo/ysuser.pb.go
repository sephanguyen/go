// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ysuser.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	bob "github.com/manabie-com/backend/pkg/genproto/bob"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UserProfile struct {
	Id          string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Country     bob.Country               `protobuf:"varint,3,opt,name=country,proto3,enum=manabie.bob.Country" json:"country,omitempty"`
	PhoneNumber string                    `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email       string                    `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Avatar      string                    `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	DeviceToken string                    `protobuf:"bytes,7,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	UserGroup   string                    `protobuf:"bytes,8,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	CreatedAt   *types.Timestamp          `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *types.Timestamp          `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	SchoolIds   []int64                   `protobuf:"varint,11,rep,packed,name=school_ids,json=schoolIds,proto3" json:"school_ids,omitempty"`
	Schools     []*UserProfile_SchoolInfo `protobuf:"bytes,12,rep,name=schools,proto3" json:"schools,omitempty"`
	UserGroupV2 []*UserProfile_UserGroup  `protobuf:"bytes,13,rep,name=user_group_v2,json=userGroupV2,proto3" json:"user_group_v2,omitempty"`
}

func (m *UserProfile) Reset()      { *m = UserProfile{} }
func (*UserProfile) ProtoMessage() {}
func (*UserProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{0}
}
func (m *UserProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserProfile.Merge(m, src)
}
func (m *UserProfile) XXX_Size() int {
	return m.Size()
}
func (m *UserProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_UserProfile.DiscardUnknown(m)
}

var xxx_messageInfo_UserProfile proto.InternalMessageInfo

func (m *UserProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserProfile) GetCountry() bob.Country {
	if m != nil {
		return m.Country
	}
	return bob.COUNTRY_NONE
}

func (m *UserProfile) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *UserProfile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserProfile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *UserProfile) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

func (m *UserProfile) GetUserGroup() string {
	if m != nil {
		return m.UserGroup
	}
	return ""
}

func (m *UserProfile) GetCreatedAt() *types.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *UserProfile) GetUpdatedAt() *types.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *UserProfile) GetSchoolIds() []int64 {
	if m != nil {
		return m.SchoolIds
	}
	return nil
}

func (m *UserProfile) GetSchools() []*UserProfile_SchoolInfo {
	if m != nil {
		return m.Schools
	}
	return nil
}

func (m *UserProfile) GetUserGroupV2() []*UserProfile_UserGroup {
	if m != nil {
		return m.UserGroupV2
	}
	return nil
}

type UserProfile_SchoolInfo struct {
	SchoolId   int64  `protobuf:"varint,1,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	SchoolName string `protobuf:"bytes,2,opt,name=school_name,json=schoolName,proto3" json:"school_name,omitempty"`
}

func (m *UserProfile_SchoolInfo) Reset()      { *m = UserProfile_SchoolInfo{} }
func (*UserProfile_SchoolInfo) ProtoMessage() {}
func (*UserProfile_SchoolInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{0, 0}
}
func (m *UserProfile_SchoolInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserProfile_SchoolInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserProfile_SchoolInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserProfile_SchoolInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserProfile_SchoolInfo.Merge(m, src)
}
func (m *UserProfile_SchoolInfo) XXX_Size() int {
	return m.Size()
}
func (m *UserProfile_SchoolInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserProfile_SchoolInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserProfile_SchoolInfo proto.InternalMessageInfo

func (m *UserProfile_SchoolInfo) GetSchoolId() int64 {
	if m != nil {
		return m.SchoolId
	}
	return 0
}

func (m *UserProfile_SchoolInfo) GetSchoolName() string {
	if m != nil {
		return m.SchoolName
	}
	return ""
}

type UserProfile_Role struct {
	Role      string           `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	CreatedAt *types.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (m *UserProfile_Role) Reset()      { *m = UserProfile_Role{} }
func (*UserProfile_Role) ProtoMessage() {}
func (*UserProfile_Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{0, 1}
}
func (m *UserProfile_Role) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserProfile_Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserProfile_Role.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserProfile_Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserProfile_Role.Merge(m, src)
}
func (m *UserProfile_Role) XXX_Size() int {
	return m.Size()
}
func (m *UserProfile_Role) XXX_DiscardUnknown() {
	xxx_messageInfo_UserProfile_Role.DiscardUnknown(m)
}

var xxx_messageInfo_UserProfile_Role proto.InternalMessageInfo

func (m *UserProfile_Role) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *UserProfile_Role) GetCreatedAt() *types.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type UserProfile_UserGroup struct {
	UserGroup string              `protobuf:"bytes,1,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Roles     []*UserProfile_Role `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (m *UserProfile_UserGroup) Reset()      { *m = UserProfile_UserGroup{} }
func (*UserProfile_UserGroup) ProtoMessage() {}
func (*UserProfile_UserGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{0, 2}
}
func (m *UserProfile_UserGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserProfile_UserGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserProfile_UserGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserProfile_UserGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserProfile_UserGroup.Merge(m, src)
}
func (m *UserProfile_UserGroup) XXX_Size() int {
	return m.Size()
}
func (m *UserProfile_UserGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_UserProfile_UserGroup.DiscardUnknown(m)
}

var xxx_messageInfo_UserProfile_UserGroup proto.InternalMessageInfo

func (m *UserProfile_UserGroup) GetUserGroup() string {
	if m != nil {
		return m.UserGroup
	}
	return ""
}

func (m *UserProfile_UserGroup) GetRoles() []*UserProfile_Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type GetBasicProfileRequest struct {
}

func (m *GetBasicProfileRequest) Reset()      { *m = GetBasicProfileRequest{} }
func (*GetBasicProfileRequest) ProtoMessage() {}
func (*GetBasicProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{1}
}
func (m *GetBasicProfileRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBasicProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBasicProfileRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBasicProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBasicProfileRequest.Merge(m, src)
}
func (m *GetBasicProfileRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetBasicProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBasicProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBasicProfileRequest proto.InternalMessageInfo

type GetBasicProfileResponse struct {
	User *UserProfile `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *GetBasicProfileResponse) Reset()      { *m = GetBasicProfileResponse{} }
func (*GetBasicProfileResponse) ProtoMessage() {}
func (*GetBasicProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{2}
}
func (m *GetBasicProfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBasicProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBasicProfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBasicProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBasicProfileResponse.Merge(m, src)
}
func (m *GetBasicProfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetBasicProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBasicProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBasicProfileResponse proto.InternalMessageInfo

func (m *GetBasicProfileResponse) GetUser() *UserProfile {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateUserProfileRequest struct {
	Name        string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PhoneNumber string      `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Country     bob.Country `protobuf:"varint,3,opt,name=country,proto3,enum=manabie.bob.Country" json:"country,omitempty"`
	Email       string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	UserGroup   UserGroup   `protobuf:"varint,5,opt,name=user_group,json=userGroup,proto3,enum=manabie.yasuo.UserGroup" json:"user_group,omitempty"`
}

func (m *UpdateUserProfileRequest) Reset()      { *m = UpdateUserProfileRequest{} }
func (*UpdateUserProfileRequest) ProtoMessage() {}
func (*UpdateUserProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{3}
}
func (m *UpdateUserProfileRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateUserProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateUserProfileRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateUserProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserProfileRequest.Merge(m, src)
}
func (m *UpdateUserProfileRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateUserProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserProfileRequest proto.InternalMessageInfo

func (m *UpdateUserProfileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateUserProfileRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *UpdateUserProfileRequest) GetCountry() bob.Country {
	if m != nil {
		return m.Country
	}
	return bob.COUNTRY_NONE
}

func (m *UpdateUserProfileRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateUserProfileRequest) GetUserGroup() UserGroup {
	if m != nil {
		return m.UserGroup
	}
	return USER_GROUP_NONE
}

type UpdateUserProfileResponse struct {
	User *UserProfile `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *UpdateUserProfileResponse) Reset()      { *m = UpdateUserProfileResponse{} }
func (*UpdateUserProfileResponse) ProtoMessage() {}
func (*UpdateUserProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{4}
}
func (m *UpdateUserProfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateUserProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateUserProfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateUserProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserProfileResponse.Merge(m, src)
}
func (m *UpdateUserProfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateUserProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserProfileResponse proto.InternalMessageInfo

func (m *UpdateUserProfileResponse) GetUser() *UserProfile {
	if m != nil {
		return m.User
	}
	return nil
}

type CreateUserProfile struct {
	Name        string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Country     bob.Country `protobuf:"varint,2,opt,name=country,proto3,enum=manabie.bob.Country" json:"country,omitempty"`
	PhoneNumber string      `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email       string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Avatar      string      `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	GivenName   string      `protobuf:"bytes,6,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	Grade       int32       `protobuf:"varint,7,opt,name=grade,proto3" json:"grade,omitempty"`
}

func (m *CreateUserProfile) Reset()      { *m = CreateUserProfile{} }
func (*CreateUserProfile) ProtoMessage() {}
func (*CreateUserProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{5}
}
func (m *CreateUserProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateUserProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateUserProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateUserProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserProfile.Merge(m, src)
}
func (m *CreateUserProfile) XXX_Size() int {
	return m.Size()
}
func (m *CreateUserProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserProfile.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserProfile proto.InternalMessageInfo

func (m *CreateUserProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateUserProfile) GetCountry() bob.Country {
	if m != nil {
		return m.Country
	}
	return bob.COUNTRY_NONE
}

func (m *CreateUserProfile) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *CreateUserProfile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateUserProfile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *CreateUserProfile) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *CreateUserProfile) GetGrade() int32 {
	if m != nil {
		return m.Grade
	}
	return 0
}

type CreateUserRequest struct {
	Users     []*CreateUserProfile `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	UserGroup UserGroup            `protobuf:"varint,2,opt,name=user_group,json=userGroup,proto3,enum=manabie.yasuo.UserGroup" json:"user_group,omitempty"`
	SchoolId  int64                `protobuf:"varint,3,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
}

func (m *CreateUserRequest) Reset()      { *m = CreateUserRequest{} }
func (*CreateUserRequest) ProtoMessage() {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{6}
}
func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetUsers() []*CreateUserProfile {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *CreateUserRequest) GetUserGroup() UserGroup {
	if m != nil {
		return m.UserGroup
	}
	return USER_GROUP_NONE
}

func (m *CreateUserRequest) GetSchoolId() int64 {
	if m != nil {
		return m.SchoolId
	}
	return 0
}

type CreateUserResponse struct {
	Users []*UserProfile `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (m *CreateUserResponse) Reset()      { *m = CreateUserResponse{} }
func (*CreateUserResponse) ProtoMessage() {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_643549a37d2d33fb, []int{7}
}
func (m *CreateUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserResponse.Merge(m, src)
}
func (m *CreateUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserResponse proto.InternalMessageInfo

func (m *CreateUserResponse) GetUsers() []*UserProfile {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*UserProfile)(nil), "manabie.yasuo.UserProfile")
	golang_proto.RegisterType((*UserProfile)(nil), "manabie.yasuo.UserProfile")
	proto.RegisterType((*UserProfile_SchoolInfo)(nil), "manabie.yasuo.UserProfile.SchoolInfo")
	golang_proto.RegisterType((*UserProfile_SchoolInfo)(nil), "manabie.yasuo.UserProfile.SchoolInfo")
	proto.RegisterType((*UserProfile_Role)(nil), "manabie.yasuo.UserProfile.Role")
	golang_proto.RegisterType((*UserProfile_Role)(nil), "manabie.yasuo.UserProfile.Role")
	proto.RegisterType((*UserProfile_UserGroup)(nil), "manabie.yasuo.UserProfile.UserGroup")
	golang_proto.RegisterType((*UserProfile_UserGroup)(nil), "manabie.yasuo.UserProfile.UserGroup")
	proto.RegisterType((*GetBasicProfileRequest)(nil), "manabie.yasuo.GetBasicProfileRequest")
	golang_proto.RegisterType((*GetBasicProfileRequest)(nil), "manabie.yasuo.GetBasicProfileRequest")
	proto.RegisterType((*GetBasicProfileResponse)(nil), "manabie.yasuo.GetBasicProfileResponse")
	golang_proto.RegisterType((*GetBasicProfileResponse)(nil), "manabie.yasuo.GetBasicProfileResponse")
	proto.RegisterType((*UpdateUserProfileRequest)(nil), "manabie.yasuo.UpdateUserProfileRequest")
	golang_proto.RegisterType((*UpdateUserProfileRequest)(nil), "manabie.yasuo.UpdateUserProfileRequest")
	proto.RegisterType((*UpdateUserProfileResponse)(nil), "manabie.yasuo.UpdateUserProfileResponse")
	golang_proto.RegisterType((*UpdateUserProfileResponse)(nil), "manabie.yasuo.UpdateUserProfileResponse")
	proto.RegisterType((*CreateUserProfile)(nil), "manabie.yasuo.CreateUserProfile")
	golang_proto.RegisterType((*CreateUserProfile)(nil), "manabie.yasuo.CreateUserProfile")
	proto.RegisterType((*CreateUserRequest)(nil), "manabie.yasuo.CreateUserRequest")
	golang_proto.RegisterType((*CreateUserRequest)(nil), "manabie.yasuo.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "manabie.yasuo.CreateUserResponse")
	golang_proto.RegisterType((*CreateUserResponse)(nil), "manabie.yasuo.CreateUserResponse")
}

func init() { proto.RegisterFile("ysuser.proto", fileDescriptor_643549a37d2d33fb) }
func init() { golang_proto.RegisterFile("ysuser.proto", fileDescriptor_643549a37d2d33fb) }

var fileDescriptor_643549a37d2d33fb = []byte{
	// 855 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcd, 0x8f, 0xdb, 0x44,
	0x14, 0xcf, 0x38, 0xc9, 0x6e, 0xfd, 0xb2, 0xbb, 0xa8, 0xa3, 0xaa, 0x0c, 0x46, 0xf5, 0xa6, 0x11,
	0x1f, 0xb9, 0xd4, 0x41, 0xe1, 0x4b, 0x88, 0x03, 0x6a, 0x2b, 0x51, 0x0a, 0x52, 0x05, 0x6e, 0x97,
	0x03, 0x97, 0x30, 0x8e, 0x67, 0xbd, 0xd6, 0xc6, 0x1e, 0xe3, 0xb1, 0x57, 0xca, 0x8d, 0x3f, 0x81,
	0x33, 0x37, 0x6e, 0x88, 0xbf, 0x82, 0x23, 0xc7, 0x1c, 0x7b, 0x41, 0x62, 0x93, 0x0b, 0xc7, 0xfe,
	0x09, 0x68, 0x66, 0xec, 0xc4, 0x71, 0xb2, 0x59, 0xba, 0x37, 0xbf, 0x8f, 0x79, 0x1f, 0xbf, 0xf7,
	0x7e, 0x2f, 0x81, 0x83, 0xa9, 0xc8, 0x05, 0x4b, 0x9d, 0x24, 0xe5, 0x19, 0xc7, 0x87, 0x11, 0x8d,
	0xa9, 0x17, 0x32, 0x67, 0x4a, 0x45, 0xce, 0xad, 0x83, 0xa9, 0x60, 0x71, 0x1e, 0x69, 0xa3, 0x75,
	0xe4, 0x71, 0x6f, 0x50, 0x91, 0x8f, 0x03, 0xce, 0x83, 0x09, 0x1b, 0x28, 0xc9, 0xcb, 0x4f, 0x07,
	0x59, 0x18, 0x31, 0x91, 0xd1, 0x28, 0x29, 0x1c, 0x1e, 0x04, 0x61, 0x76, 0x96, 0x7b, 0xce, 0x98,
	0x47, 0x83, 0x80, 0x07, 0x7c, 0xe5, 0x29, 0x25, 0x25, 0xa8, 0x2f, 0xed, 0xde, 0xfb, 0x75, 0x0f,
	0x3a, 0x27, 0x82, 0xa5, 0xdf, 0xa6, 0xfc, 0x34, 0x9c, 0x30, 0x7c, 0x04, 0x46, 0xe8, 0x13, 0xd4,
	0x45, 0x7d, 0xd3, 0x35, 0x42, 0x1f, 0x63, 0x68, 0xc5, 0x34, 0x62, 0xc4, 0x50, 0x1a, 0xf5, 0x8d,
	0x1d, 0xd8, 0x1f, 0xf3, 0x3c, 0xce, 0xd2, 0x29, 0x69, 0x76, 0x51, 0xff, 0x68, 0x78, 0xc7, 0x29,
	0x5b, 0xf0, 0xb8, 0xe7, 0x3c, 0xd6, 0x36, 0xb7, 0x74, 0xc2, 0xf7, 0xe1, 0x20, 0x39, 0xe3, 0x31,
	0x1b, 0xc5, 0x79, 0xe4, 0xb1, 0x94, 0xb4, 0x54, 0xac, 0x8e, 0xd2, 0x3d, 0x53, 0x2a, 0x7c, 0x07,
	0xda, 0x2c, 0xa2, 0xe1, 0x84, 0xb4, 0x95, 0x4d, 0x0b, 0xf8, 0x2e, 0xec, 0xd1, 0x0b, 0x9a, 0xd1,
	0x94, 0xec, 0x29, 0x75, 0x21, 0xc9, 0x80, 0x3e, 0xbb, 0x08, 0xc7, 0x6c, 0x94, 0xf1, 0x73, 0x16,
	0x93, 0x7d, 0x1d, 0x50, 0xeb, 0x5e, 0x48, 0x15, 0xbe, 0x07, 0x20, 0x21, 0x1e, 0x05, 0x29, 0xcf,
	0x13, 0x72, 0x4b, 0x39, 0x98, 0x52, 0xf3, 0x44, 0x2a, 0xf0, 0x67, 0x00, 0xe3, 0x94, 0xd1, 0x8c,
	0xf9, 0x23, 0x9a, 0x11, 0xb3, 0x8b, 0xfa, 0x9d, 0xa1, 0xe5, 0x68, 0x6c, 0x9d, 0x12, 0x31, 0xe7,
	0x45, 0x89, 0xad, 0x6b, 0x16, 0xde, 0x0f, 0x33, 0xf9, 0x34, 0x4f, 0xfc, 0xf2, 0x29, 0x5c, 0xff,
	0xb4, 0xf0, 0x7e, 0x98, 0xc9, 0xa2, 0xc4, 0xf8, 0x8c, 0xf3, 0xc9, 0x28, 0xf4, 0x05, 0xe9, 0x74,
	0x9b, 0xfd, 0xa6, 0x6b, 0x6a, 0xcd, 0x53, 0x5f, 0xe0, 0x2f, 0x60, 0x5f, 0x0b, 0x82, 0x1c, 0x74,
	0x9b, 0xfd, 0xce, 0xf0, 0x5d, 0x67, 0x6d, 0x35, 0x9c, 0xca, 0xa0, 0x9c, 0xe7, 0xfa, 0x59, 0x7c,
	0xca, 0xdd, 0xf2, 0x15, 0xfe, 0x0a, 0x0e, 0x57, 0x4d, 0x8f, 0x2e, 0x86, 0xe4, 0x50, 0x85, 0x79,
	0x67, 0x47, 0x98, 0x93, 0x12, 0x12, 0xb7, 0xb3, 0x44, 0xe7, 0xfb, 0xa1, 0xf5, 0x35, 0xc0, 0x2a,
	0x01, 0x7e, 0x1b, 0xcc, 0x65, 0xdd, 0x6a, 0x37, 0x9a, 0xee, 0xad, 0xb2, 0x6c, 0x7c, 0x0c, 0x9d,
	0xc2, 0x58, 0x59, 0x94, 0xa2, 0xcf, 0x67, 0x34, 0x62, 0xd6, 0x09, 0xb4, 0x5c, 0x3e, 0x61, 0x72,
	0x95, 0x52, 0x3e, 0x61, 0xc5, 0x72, 0xa9, 0xef, 0xda, 0x1c, 0x8c, 0xd7, 0x98, 0x83, 0x45, 0xc1,
	0x5c, 0x16, 0x5f, 0x1b, 0x37, 0xaa, 0x8f, 0xfb, 0x63, 0x68, 0xcb, 0x74, 0x82, 0x18, 0x0a, 0x90,
	0xe3, 0x1d, 0x80, 0xc8, 0x52, 0x5d, 0xed, 0xdd, 0x23, 0x70, 0xf7, 0x09, 0xcb, 0x1e, 0x51, 0x11,
	0x8e, 0x0b, 0xb3, 0xcb, 0x7e, 0xca, 0x99, 0xc8, 0x7a, 0x4f, 0xe1, 0xcd, 0x0d, 0x8b, 0x48, 0x78,
	0x2c, 0x24, 0x3b, 0x5a, 0x32, 0xb1, 0x2a, 0x42, 0x36, 0x73, 0x65, 0x2a, 0x57, 0xf9, 0xf5, 0x66,
	0x08, 0xc8, 0x89, 0x5a, 0x91, 0xaa, 0x4d, 0xe7, 0x59, 0xd2, 0x0f, 0x55, 0xe8, 0x57, 0xa7, 0x93,
	0xb1, 0x49, 0xa7, 0xd7, 0x65, 0xe8, 0x92, 0x7e, 0xad, 0x2a, 0xfd, 0x3e, 0x5d, 0x03, 0xb5, 0xad,
	0x02, 0x91, 0x2d, 0xfd, 0xe8, 0xfd, 0x59, 0xc1, 0xdd, 0xfb, 0x06, 0xde, 0xda, 0xd2, 0xd1, 0x0d,
	0xf1, 0xf9, 0x1b, 0xc1, 0xed, 0xc7, 0x6a, 0xea, 0xd5, 0x3b, 0xb5, 0x0d, 0x98, 0x4a, 0xd7, 0xc6,
	0x4d, 0xee, 0x52, 0x73, 0xc7, 0x5d, 0x6a, 0x6d, 0xbf, 0x4b, 0xed, 0xb5, 0xbb, 0x74, 0x0f, 0x20,
	0x08, 0x2f, 0x58, 0xac, 0x99, 0xa0, 0x6f, 0x96, 0xa9, 0x34, 0x92, 0x08, 0x32, 0x58, 0x90, 0x52,
	0x9f, 0xa9, 0x7b, 0xd5, 0x76, 0xb5, 0xd0, 0xfb, 0x6d, 0xad, 0xbf, 0x72, 0xf0, 0x9f, 0x40, 0x5b,
	0x76, 0x2f, 0x08, 0x52, 0x1b, 0xdb, 0xad, 0xc1, 0xb4, 0x01, 0x88, 0xab, 0xdd, 0x6b, 0x33, 0x33,
	0xfe, 0xf7, 0xcc, 0xd6, 0x39, 0xde, 0x5c, 0xe7, 0x78, 0xef, 0x4b, 0xc0, 0xd5, 0x12, 0x8b, 0x49,
	0x7e, 0xb0, 0x5e, 0xe3, 0xae, 0x51, 0x6a, 0xc7, 0xe1, 0x1f, 0x86, 0xfe, 0xb5, 0x79, 0xce, 0x52,
	0x79, 0xaa, 0xf1, 0x8f, 0xf0, 0x46, 0x8d, 0x46, 0xb8, 0x7e, 0xf3, 0xb6, 0x13, 0xd0, 0x7a, 0xef,
	0x3a, 0xb7, 0xa2, 0xc6, 0x53, 0xb8, 0xbd, 0xb1, 0x8a, 0xf8, 0xfd, 0x7a, 0xa5, 0x57, 0xd0, 0xcf,
	0xea, 0x5f, 0xef, 0x58, 0xe4, 0xf9, 0x0e, 0x60, 0x85, 0x10, 0xbe, 0x7a, 0x5c, 0x65, 0xe4, 0xfb,
	0x3b, 0x3c, 0x74, 0xc8, 0x47, 0xf1, 0xec, 0xd2, 0x6e, 0xbc, 0xbc, 0xb4, 0x1b, 0xaf, 0x2e, 0x6d,
	0xf4, 0xf3, 0xdc, 0x46, 0xbf, 0xcf, 0x6d, 0xf4, 0xd7, 0xdc, 0x46, 0xb3, 0xb9, 0x8d, 0xfe, 0x99,
	0xdb, 0xe8, 0xdf, 0xb9, 0xdd, 0x78, 0x35, 0xb7, 0xd1, 0x2f, 0x0b, 0xbb, 0xf1, 0xe7, 0xc2, 0x46,
	0xb3, 0x85, 0xdd, 0x78, 0xb9, 0xb0, 0x1b, 0x3f, 0x7c, 0x54, 0xf9, 0x0f, 0x50, 0xa4, 0x79, 0x20,
	0xbf, 0x3d, 0x3a, 0x3e, 0x67, 0xb1, 0x3f, 0x48, 0xce, 0x83, 0x41, 0xc0, 0x62, 0xfd, 0x67, 0x40,
	0xe5, 0xff, 0x3c, 0xf1, 0xbc, 0x3d, 0x25, 0x7f, 0xf8, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03,
	0x98, 0x44, 0x85, 0x9e, 0x08, 0x00, 0x00,
}

func (this *UserProfile) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UserProfile)
	if !ok {
		that2, ok := that.(UserProfile)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Country != that1.Country {
		return false
	}
	if this.PhoneNumber != that1.PhoneNumber {
		return false
	}
	if this.Email != that1.Email {
		return false
	}
	if this.Avatar != that1.Avatar {
		return false
	}
	if this.DeviceToken != that1.DeviceToken {
		return false
	}
	if this.UserGroup != that1.UserGroup {
		return false
	}
	if !this.CreatedAt.Equal(that1.CreatedAt) {
		return false
	}
	if !this.UpdatedAt.Equal(that1.UpdatedAt) {
		return false
	}
	if len(this.SchoolIds) != len(that1.SchoolIds) {
		return false
	}
	for i := range this.SchoolIds {
		if this.SchoolIds[i] != that1.SchoolIds[i] {
			return false
		}
	}
	if len(this.Schools) != len(that1.Schools) {
		return false
	}
	for i := range this.Schools {
		if !this.Schools[i].Equal(that1.Schools[i]) {
			return false
		}
	}
	if len(this.UserGroupV2) != len(that1.UserGroupV2) {
		return false
	}
	for i := range this.UserGroupV2 {
		if !this.UserGroupV2[i].Equal(that1.UserGroupV2[i]) {
			return false
		}
	}
	return true
}
func (this *UserProfile_SchoolInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UserProfile_SchoolInfo)
	if !ok {
		that2, ok := that.(UserProfile_SchoolInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SchoolId != that1.SchoolId {
		return false
	}
	if this.SchoolName != that1.SchoolName {
		return false
	}
	return true
}
func (this *UserProfile_Role) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UserProfile_Role)
	if !ok {
		that2, ok := that.(UserProfile_Role)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Role != that1.Role {
		return false
	}
	if !this.CreatedAt.Equal(that1.CreatedAt) {
		return false
	}
	return true
}
func (this *UserProfile_UserGroup) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UserProfile_UserGroup)
	if !ok {
		that2, ok := that.(UserProfile_UserGroup)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.UserGroup != that1.UserGroup {
		return false
	}
	if len(this.Roles) != len(that1.Roles) {
		return false
	}
	for i := range this.Roles {
		if !this.Roles[i].Equal(that1.Roles[i]) {
			return false
		}
	}
	return true
}
func (this *GetBasicProfileRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetBasicProfileRequest)
	if !ok {
		that2, ok := that.(GetBasicProfileRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GetBasicProfileResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetBasicProfileResponse)
	if !ok {
		that2, ok := that.(GetBasicProfileResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.User.Equal(that1.User) {
		return false
	}
	return true
}
func (this *UpdateUserProfileRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateUserProfileRequest)
	if !ok {
		that2, ok := that.(UpdateUserProfileRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.PhoneNumber != that1.PhoneNumber {
		return false
	}
	if this.Country != that1.Country {
		return false
	}
	if this.Email != that1.Email {
		return false
	}
	if this.UserGroup != that1.UserGroup {
		return false
	}
	return true
}
func (this *UpdateUserProfileResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateUserProfileResponse)
	if !ok {
		that2, ok := that.(UpdateUserProfileResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.User.Equal(that1.User) {
		return false
	}
	return true
}
func (this *CreateUserProfile) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateUserProfile)
	if !ok {
		that2, ok := that.(CreateUserProfile)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Country != that1.Country {
		return false
	}
	if this.PhoneNumber != that1.PhoneNumber {
		return false
	}
	if this.Email != that1.Email {
		return false
	}
	if this.Avatar != that1.Avatar {
		return false
	}
	if this.GivenName != that1.GivenName {
		return false
	}
	if this.Grade != that1.Grade {
		return false
	}
	return true
}
func (this *CreateUserRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateUserRequest)
	if !ok {
		that2, ok := that.(CreateUserRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Users) != len(that1.Users) {
		return false
	}
	for i := range this.Users {
		if !this.Users[i].Equal(that1.Users[i]) {
			return false
		}
	}
	if this.UserGroup != that1.UserGroup {
		return false
	}
	if this.SchoolId != that1.SchoolId {
		return false
	}
	return true
}
func (this *CreateUserResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateUserResponse)
	if !ok {
		that2, ok := that.(CreateUserResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Users) != len(that1.Users) {
		return false
	}
	for i := range this.Users {
		if !this.Users[i].Equal(that1.Users[i]) {
			return false
		}
	}
	return true
}
func (this *UserProfile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&pb.UserProfile{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "Country: "+fmt.Sprintf("%#v", this.Country)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "Avatar: "+fmt.Sprintf("%#v", this.Avatar)+",\n")
	s = append(s, "DeviceToken: "+fmt.Sprintf("%#v", this.DeviceToken)+",\n")
	s = append(s, "UserGroup: "+fmt.Sprintf("%#v", this.UserGroup)+",\n")
	if this.CreatedAt != nil {
		s = append(s, "CreatedAt: "+fmt.Sprintf("%#v", this.CreatedAt)+",\n")
	}
	if this.UpdatedAt != nil {
		s = append(s, "UpdatedAt: "+fmt.Sprintf("%#v", this.UpdatedAt)+",\n")
	}
	s = append(s, "SchoolIds: "+fmt.Sprintf("%#v", this.SchoolIds)+",\n")
	if this.Schools != nil {
		s = append(s, "Schools: "+fmt.Sprintf("%#v", this.Schools)+",\n")
	}
	if this.UserGroupV2 != nil {
		s = append(s, "UserGroupV2: "+fmt.Sprintf("%#v", this.UserGroupV2)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UserProfile_SchoolInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&pb.UserProfile_SchoolInfo{")
	s = append(s, "SchoolId: "+fmt.Sprintf("%#v", this.SchoolId)+",\n")
	s = append(s, "SchoolName: "+fmt.Sprintf("%#v", this.SchoolName)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UserProfile_Role) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&pb.UserProfile_Role{")
	s = append(s, "Role: "+fmt.Sprintf("%#v", this.Role)+",\n")
	if this.CreatedAt != nil {
		s = append(s, "CreatedAt: "+fmt.Sprintf("%#v", this.CreatedAt)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UserProfile_UserGroup) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&pb.UserProfile_UserGroup{")
	s = append(s, "UserGroup: "+fmt.Sprintf("%#v", this.UserGroup)+",\n")
	if this.Roles != nil {
		s = append(s, "Roles: "+fmt.Sprintf("%#v", this.Roles)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetBasicProfileRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&pb.GetBasicProfileRequest{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetBasicProfileResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&pb.GetBasicProfileResponse{")
	if this.User != nil {
		s = append(s, "User: "+fmt.Sprintf("%#v", this.User)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateUserProfileRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&pb.UpdateUserProfileRequest{")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "Country: "+fmt.Sprintf("%#v", this.Country)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "UserGroup: "+fmt.Sprintf("%#v", this.UserGroup)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateUserProfileResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&pb.UpdateUserProfileResponse{")
	if this.User != nil {
		s = append(s, "User: "+fmt.Sprintf("%#v", this.User)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateUserProfile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&pb.CreateUserProfile{")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "Country: "+fmt.Sprintf("%#v", this.Country)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "Avatar: "+fmt.Sprintf("%#v", this.Avatar)+",\n")
	s = append(s, "GivenName: "+fmt.Sprintf("%#v", this.GivenName)+",\n")
	s = append(s, "Grade: "+fmt.Sprintf("%#v", this.Grade)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateUserRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&pb.CreateUserRequest{")
	if this.Users != nil {
		s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	}
	s = append(s, "UserGroup: "+fmt.Sprintf("%#v", this.UserGroup)+",\n")
	s = append(s, "SchoolId: "+fmt.Sprintf("%#v", this.SchoolId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateUserResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&pb.CreateUserResponse{")
	if this.Users != nil {
		s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringYsuser(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetBasicProfile(ctx context.Context, in *GetBasicProfileRequest, opts ...grpc.CallOption) (*GetBasicProfileResponse, error)
	UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*UpdateUserProfileResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetBasicProfile(ctx context.Context, in *GetBasicProfileRequest, opts ...grpc.CallOption) (*GetBasicProfileResponse, error) {
	out := new(GetBasicProfileResponse)
	err := c.cc.Invoke(ctx, "/manabie.yasuo.UserService/GetBasicProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*UpdateUserProfileResponse, error) {
	out := new(UpdateUserProfileResponse)
	err := c.cc.Invoke(ctx, "/manabie.yasuo.UserService/UpdateUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/manabie.yasuo.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetBasicProfile(context.Context, *GetBasicProfileRequest) (*GetBasicProfileResponse, error)
	UpdateUserProfile(context.Context, *UpdateUserProfileRequest) (*UpdateUserProfileResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetBasicProfile(ctx context.Context, req *GetBasicProfileRequest) (*GetBasicProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBasicProfile not implemented")
}
func (*UnimplementedUserServiceServer) UpdateUserProfile(ctx context.Context, req *UpdateUserProfileRequest) (*UpdateUserProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserProfile not implemented")
}
func (*UnimplementedUserServiceServer) CreateUser(ctx context.Context, req *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetBasicProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBasicProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetBasicProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/manabie.yasuo.UserService/GetBasicProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetBasicProfile(ctx, req.(*GetBasicProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/manabie.yasuo.UserService/UpdateUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUserProfile(ctx, req.(*UpdateUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/manabie.yasuo.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "manabie.yasuo.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBasicProfile",
			Handler:    _UserService_GetBasicProfile_Handler,
		},
		{
			MethodName: "UpdateUserProfile",
			Handler:    _UserService_UpdateUserProfile_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ysuser.proto",
}

func (m *UserProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UserGroupV2) > 0 {
		for iNdEx := len(m.UserGroupV2) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UserGroupV2[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYsuser(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6a
		}
	}
	if len(m.Schools) > 0 {
		for iNdEx := len(m.Schools) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Schools[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYsuser(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x62
		}
	}
	if len(m.SchoolIds) > 0 {
		dAtA2 := make([]byte, len(m.SchoolIds)*10)
		var j1 int
		for _, num1 := range m.SchoolIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintYsuser(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x5a
	}
	if m.UpdatedAt != nil {
		{
			size, err := m.UpdatedAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYsuser(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.CreatedAt != nil {
		{
			size, err := m.CreatedAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYsuser(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.UserGroup) > 0 {
		i -= len(m.UserGroup)
		copy(dAtA[i:], m.UserGroup)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.UserGroup)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DeviceToken) > 0 {
		i -= len(m.DeviceToken)
		copy(dAtA[i:], m.DeviceToken)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.DeviceToken)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x22
	}
	if m.Country != 0 {
		i = encodeVarintYsuser(dAtA, i, uint64(m.Country))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserProfile_SchoolInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserProfile_SchoolInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserProfile_SchoolInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SchoolName) > 0 {
		i -= len(m.SchoolName)
		copy(dAtA[i:], m.SchoolName)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.SchoolName)))
		i--
		dAtA[i] = 0x12
	}
	if m.SchoolId != 0 {
		i = encodeVarintYsuser(dAtA, i, uint64(m.SchoolId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserProfile_Role) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserProfile_Role) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserProfile_Role) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreatedAt != nil {
		{
			size, err := m.CreatedAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYsuser(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserProfile_UserGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserProfile_UserGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserProfile_UserGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Roles) > 0 {
		for iNdEx := len(m.Roles) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Roles[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYsuser(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.UserGroup) > 0 {
		i -= len(m.UserGroup)
		copy(dAtA[i:], m.UserGroup)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.UserGroup)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetBasicProfileRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBasicProfileRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBasicProfileRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GetBasicProfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBasicProfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBasicProfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.User != nil {
		{
			size, err := m.User.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYsuser(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateUserProfileRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateUserProfileRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateUserProfileRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UserGroup != 0 {
		i = encodeVarintYsuser(dAtA, i, uint64(m.UserGroup))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x22
	}
	if m.Country != 0 {
		i = encodeVarintYsuser(dAtA, i, uint64(m.Country))
		i--
		dAtA[i] = 0x18
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateUserProfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateUserProfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateUserProfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.User != nil {
		{
			size, err := m.User.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYsuser(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateUserProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateUserProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateUserProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Grade != 0 {
		i = encodeVarintYsuser(dAtA, i, uint64(m.Grade))
		i--
		dAtA[i] = 0x38
	}
	if len(m.GivenName) > 0 {
		i -= len(m.GivenName)
		copy(dAtA[i:], m.GivenName)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.GivenName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Country != 0 {
		i = encodeVarintYsuser(dAtA, i, uint64(m.Country))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintYsuser(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateUserRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateUserRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateUserRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SchoolId != 0 {
		i = encodeVarintYsuser(dAtA, i, uint64(m.SchoolId))
		i--
		dAtA[i] = 0x18
	}
	if m.UserGroup != 0 {
		i = encodeVarintYsuser(dAtA, i, uint64(m.UserGroup))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYsuser(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CreateUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYsuser(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintYsuser(dAtA []byte, offset int, v uint64) int {
	offset -= sovYsuser(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UserProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	if m.Country != 0 {
		n += 1 + sovYsuser(uint64(m.Country))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	l = len(m.DeviceToken)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	l = len(m.UserGroup)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	if m.CreatedAt != nil {
		l = m.CreatedAt.Size()
		n += 1 + l + sovYsuser(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = m.UpdatedAt.Size()
		n += 1 + l + sovYsuser(uint64(l))
	}
	if len(m.SchoolIds) > 0 {
		l = 0
		for _, e := range m.SchoolIds {
			l += sovYsuser(uint64(e))
		}
		n += 1 + sovYsuser(uint64(l)) + l
	}
	if len(m.Schools) > 0 {
		for _, e := range m.Schools {
			l = e.Size()
			n += 1 + l + sovYsuser(uint64(l))
		}
	}
	if len(m.UserGroupV2) > 0 {
		for _, e := range m.UserGroupV2 {
			l = e.Size()
			n += 1 + l + sovYsuser(uint64(l))
		}
	}
	return n
}

func (m *UserProfile_SchoolInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SchoolId != 0 {
		n += 1 + sovYsuser(uint64(m.SchoolId))
	}
	l = len(m.SchoolName)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	return n
}

func (m *UserProfile_Role) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	if m.CreatedAt != nil {
		l = m.CreatedAt.Size()
		n += 1 + l + sovYsuser(uint64(l))
	}
	return n
}

func (m *UserProfile_UserGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserGroup)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	if len(m.Roles) > 0 {
		for _, e := range m.Roles {
			l = e.Size()
			n += 1 + l + sovYsuser(uint64(l))
		}
	}
	return n
}

func (m *GetBasicProfileRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GetBasicProfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.User != nil {
		l = m.User.Size()
		n += 1 + l + sovYsuser(uint64(l))
	}
	return n
}

func (m *UpdateUserProfileRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	if m.Country != 0 {
		n += 1 + sovYsuser(uint64(m.Country))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	if m.UserGroup != 0 {
		n += 1 + sovYsuser(uint64(m.UserGroup))
	}
	return n
}

func (m *UpdateUserProfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.User != nil {
		l = m.User.Size()
		n += 1 + l + sovYsuser(uint64(l))
	}
	return n
}

func (m *CreateUserProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	if m.Country != 0 {
		n += 1 + sovYsuser(uint64(m.Country))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	l = len(m.GivenName)
	if l > 0 {
		n += 1 + l + sovYsuser(uint64(l))
	}
	if m.Grade != 0 {
		n += 1 + sovYsuser(uint64(m.Grade))
	}
	return n
}

func (m *CreateUserRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovYsuser(uint64(l))
		}
	}
	if m.UserGroup != 0 {
		n += 1 + sovYsuser(uint64(m.UserGroup))
	}
	if m.SchoolId != 0 {
		n += 1 + sovYsuser(uint64(m.SchoolId))
	}
	return n
}

func (m *CreateUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovYsuser(uint64(l))
		}
	}
	return n
}

func sovYsuser(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozYsuser(x uint64) (n int) {
	return sovYsuser(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *UserProfile) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForSchools := "[]*UserProfile_SchoolInfo{"
	for _, f := range this.Schools {
		repeatedStringForSchools += strings.Replace(fmt.Sprintf("%v", f), "UserProfile_SchoolInfo", "UserProfile_SchoolInfo", 1) + ","
	}
	repeatedStringForSchools += "}"
	repeatedStringForUserGroupV2 := "[]*UserProfile_UserGroup{"
	for _, f := range this.UserGroupV2 {
		repeatedStringForUserGroupV2 += strings.Replace(fmt.Sprintf("%v", f), "UserProfile_UserGroup", "UserProfile_UserGroup", 1) + ","
	}
	repeatedStringForUserGroupV2 += "}"
	s := strings.Join([]string{`&UserProfile{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Country:` + fmt.Sprintf("%v", this.Country) + `,`,
		`PhoneNumber:` + fmt.Sprintf("%v", this.PhoneNumber) + `,`,
		`Email:` + fmt.Sprintf("%v", this.Email) + `,`,
		`Avatar:` + fmt.Sprintf("%v", this.Avatar) + `,`,
		`DeviceToken:` + fmt.Sprintf("%v", this.DeviceToken) + `,`,
		`UserGroup:` + fmt.Sprintf("%v", this.UserGroup) + `,`,
		`CreatedAt:` + strings.Replace(fmt.Sprintf("%v", this.CreatedAt), "Timestamp", "types.Timestamp", 1) + `,`,
		`UpdatedAt:` + strings.Replace(fmt.Sprintf("%v", this.UpdatedAt), "Timestamp", "types.Timestamp", 1) + `,`,
		`SchoolIds:` + fmt.Sprintf("%v", this.SchoolIds) + `,`,
		`Schools:` + repeatedStringForSchools + `,`,
		`UserGroupV2:` + repeatedStringForUserGroupV2 + `,`,
		`}`,
	}, "")
	return s
}
func (this *UserProfile_SchoolInfo) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UserProfile_SchoolInfo{`,
		`SchoolId:` + fmt.Sprintf("%v", this.SchoolId) + `,`,
		`SchoolName:` + fmt.Sprintf("%v", this.SchoolName) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UserProfile_Role) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UserProfile_Role{`,
		`Role:` + fmt.Sprintf("%v", this.Role) + `,`,
		`CreatedAt:` + strings.Replace(fmt.Sprintf("%v", this.CreatedAt), "Timestamp", "types.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UserProfile_UserGroup) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForRoles := "[]*UserProfile_Role{"
	for _, f := range this.Roles {
		repeatedStringForRoles += strings.Replace(fmt.Sprintf("%v", f), "UserProfile_Role", "UserProfile_Role", 1) + ","
	}
	repeatedStringForRoles += "}"
	s := strings.Join([]string{`&UserProfile_UserGroup{`,
		`UserGroup:` + fmt.Sprintf("%v", this.UserGroup) + `,`,
		`Roles:` + repeatedStringForRoles + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetBasicProfileRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetBasicProfileRequest{`,
		`}`,
	}, "")
	return s
}
func (this *GetBasicProfileResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetBasicProfileResponse{`,
		`User:` + strings.Replace(this.User.String(), "UserProfile", "UserProfile", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateUserProfileRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateUserProfileRequest{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`PhoneNumber:` + fmt.Sprintf("%v", this.PhoneNumber) + `,`,
		`Country:` + fmt.Sprintf("%v", this.Country) + `,`,
		`Email:` + fmt.Sprintf("%v", this.Email) + `,`,
		`UserGroup:` + fmt.Sprintf("%v", this.UserGroup) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateUserProfileResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateUserProfileResponse{`,
		`User:` + strings.Replace(this.User.String(), "UserProfile", "UserProfile", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateUserProfile) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateUserProfile{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Country:` + fmt.Sprintf("%v", this.Country) + `,`,
		`PhoneNumber:` + fmt.Sprintf("%v", this.PhoneNumber) + `,`,
		`Email:` + fmt.Sprintf("%v", this.Email) + `,`,
		`Avatar:` + fmt.Sprintf("%v", this.Avatar) + `,`,
		`GivenName:` + fmt.Sprintf("%v", this.GivenName) + `,`,
		`Grade:` + fmt.Sprintf("%v", this.Grade) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateUserRequest) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForUsers := "[]*CreateUserProfile{"
	for _, f := range this.Users {
		repeatedStringForUsers += strings.Replace(f.String(), "CreateUserProfile", "CreateUserProfile", 1) + ","
	}
	repeatedStringForUsers += "}"
	s := strings.Join([]string{`&CreateUserRequest{`,
		`Users:` + repeatedStringForUsers + `,`,
		`UserGroup:` + fmt.Sprintf("%v", this.UserGroup) + `,`,
		`SchoolId:` + fmt.Sprintf("%v", this.SchoolId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateUserResponse) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForUsers := "[]*UserProfile{"
	for _, f := range this.Users {
		repeatedStringForUsers += strings.Replace(f.String(), "UserProfile", "UserProfile", 1) + ","
	}
	repeatedStringForUsers += "}"
	s := strings.Join([]string{`&CreateUserResponse{`,
		`Users:` + repeatedStringForUsers + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringYsuser(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *UserProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			m.Country = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Country |= bob.Country(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserGroup = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = &types.Timestamp{}
			}
			if err := m.CreatedAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = &types.Timestamp{}
			}
			if err := m.UpdatedAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYsuser
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.SchoolIds = append(m.SchoolIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYsuser
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthYsuser
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthYsuser
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.SchoolIds) == 0 {
					m.SchoolIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowYsuser
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.SchoolIds = append(m.SchoolIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field SchoolIds", wireType)
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Schools", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Schools = append(m.Schools, &UserProfile_SchoolInfo{})
			if err := m.Schools[len(m.Schools)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserGroupV2", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserGroupV2 = append(m.UserGroupV2, &UserProfile_UserGroup{})
			if err := m.UserGroupV2[len(m.UserGroupV2)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserProfile_SchoolInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SchoolInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SchoolInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchoolId", wireType)
			}
			m.SchoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SchoolId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchoolName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SchoolName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserProfile_Role) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Role: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Role: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = &types.Timestamp{}
			}
			if err := m.CreatedAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserProfile_UserGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserGroup = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = append(m.Roles, &UserProfile_Role{})
			if err := m.Roles[len(m.Roles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBasicProfileRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBasicProfileRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBasicProfileRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBasicProfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBasicProfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBasicProfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.User == nil {
				m.User = &UserProfile{}
			}
			if err := m.User.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateUserProfileRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateUserProfileRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateUserProfileRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			m.Country = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Country |= bob.Country(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserGroup", wireType)
			}
			m.UserGroup = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserGroup |= UserGroup(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateUserProfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateUserProfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateUserProfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.User == nil {
				m.User = &UserProfile{}
			}
			if err := m.User.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateUserProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateUserProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateUserProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			m.Country = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Country |= bob.Country(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GivenName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GivenName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grade", wireType)
			}
			m.Grade = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Grade |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateUserRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateUserRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateUserRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &CreateUserProfile{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserGroup", wireType)
			}
			m.UserGroup = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserGroup |= UserGroup(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchoolId", wireType)
			}
			m.SchoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SchoolId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYsuser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYsuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &UserProfile{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYsuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthYsuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipYsuser(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowYsuser
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYsuser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthYsuser
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupYsuser
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthYsuser
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthYsuser        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowYsuser          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupYsuser = fmt.Errorf("proto: unexpected end of group")
)
