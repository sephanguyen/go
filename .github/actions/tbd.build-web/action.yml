name: "Build web"
description: "A composite action for build web (ME,FE)"
inputs:
  registry:
    description: 'Server address of the Container registry. Defaults to "asia.gcr.io".'
    default: 'asia.gcr.io'
  ar_registry:
    description: 'Server address of the Artifact registry. Defaults to "asia-docker.pkg.dev".'
    default: 'asia-docker.pkg.dev'
  workload_identity_provider:
    description: |
      The full identifier of the Workload Identity Provider.
      Defaults to the build-bot-provider created by Terraform in "learner" project.
      Reference: https://github.com/docker/login-action#workload-identity-federation-based-authentication-1
    default: 'projects/418860883682/locations/global/workloadIdentityPools/gh-action-pool/providers/build-bot-provider'
  service_account:
    description: |
      Email of the service account which will be used to push to registry.
      Defaults to "prod-build-bot@student-coach-e1e95.iam.gserviceaccount.com".
    default: 'prod-build-bot@student-coach-e1e95.iam.gserviceaccount.com'
  is_mfe:
    description: "Is MFE"
    required: false

runs:
  using: "composite"
  steps:
    - name: Authenticate to Google Cloud using Workload Identity Federation
      id: auth
      uses: google-github-actions/auth@v1
      with:
        token_format: access_token
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: '${{ inputs.registry }}'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Login to AR
      uses: docker/login-action@v2
      with:
        registry: '${{ inputs.ar_registry }}'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Checkout ${{ env.REPO }}
      uses: actions/checkout@v3
      with:
        repository: ${{github.repository_owner}}/${{ env.REPO }}
        token: ${{ env.GITHUB_TOKEN }}
        ref: ${{ env.RELEASE_TAG }}
        path: 'repo-${{ env.REPO }}'

    - name: Build Web Image
      if: ${{ !inputs.is_mfe }}
      working-directory: 'repo-${{ env.REPO }}'
      run: |
        set -eu
        EXIT_CODE=0
        docker manifest inspect ${IMAGE_TAG} > /dev/null || EXIT_CODE=$?
        if [ $EXIT_CODE -ne 0 ]; then
          ORGANIZATION=${ORGANIZATION} IMAGE_TAG=${IMAGE_TAG} make docker-build-web-nginx
          docker push ${IMAGE_TAG}
        fi
      shell: bash

    - name: Build MFE Root Image
      if: ${{ inputs.is_mfe }}
      working-directory: 'repo-${{ env.REPO }}'
      run: |
        set -eu
        EXIT_CODE=0
        docker manifest inspect ${IMAGE_TAG} > /dev/null || EXIT_CODE=$?
        if [ $EXIT_CODE -ne 0 ]; then
          ORGANIZATION=${ORGANIZATION} IMAGE_TAG=${IMAGE_TAG} make docker-build-mfe-root
          docker push ${IMAGE_TAG}
        fi
      shell: bash
