name: pull_request.syllabus_auto_open_pr

on:
  pull_request:
    types: [closed]
    branches:
      - develop

jobs:
  open_pr:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'squad-syllabus') && github.event.pull_request.merged }}
    runs-on: ["self-hosted", "100m-400mi", "spot", "persistent"]
    steps:
      - name: Open a PR in syllabus queue
        uses: actions/github-script@v6
        id: open_pr
        with:
          github-token: ${{ secrets.BUILD_GITHUB_TOKEN }}
          script: |
            const SYLLABUS_PR_QUEUE_LABEL = 'syllabus-pr-queue';
            const query = `query($owner:String!, $name:String!, $baseRefName: String!) {
              repository(owner:$owner, name:$name){
                pullRequests(first:100, baseRefName: $baseRefName, labels: ["${SYLLABUS_PR_QUEUE_LABEL}"], states: OPEN, orderBy: {field: CREATED_AT, direction: ASC}) {
                  nodes {
                    id,
                    isDraft,
                    number,
                  }
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo,
              baseRefName: context.payload.pull_request.base.ref,
            };
            const result = await github.graphql(query, variables);
            const pullRequest = result.repository.pullRequests.nodes.filter(node => node.isDraft).shift();
            if(!pullRequest) return;
            const mutation =`mutation MarkPullRequestReadyForReview {
              markPullRequestReadyForReview(input: {clientMutationId: "github-action", pullRequestId: "${{ needs.open_pr.outputs.pullRequestId }}"}) {
                __typename
              }
            }` ;
            await Promise.all([
              github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pullRequest.number,
                name: SYLLABUS_PR_QUEUE_LABEL,
              }),
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['syllabus-open-pr-from-queue'],
              }),
              github.graphql(mutation, { pullRequestId: pullRequest.id }),
            ]);
