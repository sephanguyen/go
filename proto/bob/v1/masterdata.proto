syntax = "proto3";

package bob.v1;
import "google/protobuf/timestamp.proto";
option go_package = "github.com/manabie-com/backend/pkg/manabuf/bob/v1;bpb";

message ImportLocationRequest {
  bytes payload = 1;
}

message ImportLocationResponse {
  message ImportLocationError {
    int32 row_number = 1;
    string error = 2;
  }
  repeated ImportLocationError errors = 1;
  int32 total_success = 2;
  int32 total_failed = 3;
}

message ImportLocationTypeRequest {
  bytes payload = 1;
}

message ImportLocationTypeResponse {
  message ImportLocationTypeError {
    int32 row_number = 1;
    string error = 2;
  }
  repeated ImportLocationTypeError errors = 1;
  int32 total_success = 2;
  int32 total_failed = 3;
}

service MasterDataImporterService {
  rpc ImportLocation(ImportLocationRequest)
      returns (ImportLocationResponse);
  rpc ImportLocationType(ImportLocationTypeRequest)
      returns (ImportLocationTypeResponse);
}

message RetrieveLocationTypesRequest{}
message RetrieveLocationTypesResponse {
  message LocationType {
    string location_type_id = 1;
    string name = 2;
    string display_name = 3;
    string parent_name = 4;
    string parent_location_type_id = 5;
  }
  repeated LocationType location_types = 1;
}

message RetrieveLocationsRequest{
  bool is_archived = 1;
}
message RetrieveLocationsResponse {
  message Location {
    string location_id = 1;
    string name = 2;
    string location_type = 3;
    string parent_location_id = 4;
    google.protobuf.Timestamp created_at = 5;
    string access_path = 6;
  }
  repeated Location locations = 1;
}

message RetrieveLowestLevelLocationsRequest{
  string name = 1;
  int32 limit = 2;
  int32 offset = 3;
  repeated string location_ids = 4;
}
message RetrieveLowestLevelLocationsResponse{
  message Location {
    string location_id = 1;
    string name = 2;
  }
  repeated Location locations = 1;
}

service MasterDataReaderService {
  rpc RetrieveLocations (RetrieveLocationsRequest) returns (RetrieveLocationsResponse);
  rpc RetrieveLocationTypes (RetrieveLocationTypesRequest) returns (RetrieveLocationTypesResponse);
  rpc RetrieveLowestLevelLocations (RetrieveLowestLevelLocationsRequest) returns (RetrieveLowestLevelLocationsResponse);
}