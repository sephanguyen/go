syntax = "proto3";

package bob.v1;

import "bob/v1/enums.proto";
import "common/v1/enums.proto";
import "common/v1/requests.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/manabie-com/backend/pkg/manabuf/bob/v1;bpb";

message CreateQuestionRequest {
  string quiz_id = 1;
  string content = 2;
  repeated string url_medias = 3;
  common.v1.Subject subject = 4;
  string title = 5;
}

message CreateQuestionResponse {}

message TransitionStudentQuestionRequest {
  message MarkedAsResolved {
    string student_question_id = 1;
  }
  message MarkedAsInvalid {
    string student_question_id = 1;
  }
  message AgreeInvalid {
    string student_question_id = 1;
    bool agree = 2;
  }
  message AgreeResolved {
    string student_question_id = 1;
    bool agree = 2;
  }
  message Rate {
    string student_question_id = 1;
    string rate = 2;  // using enum codes in tom
  }

  oneof message {
    MarkedAsResolved marked_as_resolved = 1;
    MarkedAsInvalid marked_as_invalid = 2;
    AgreeInvalid agree_invalid = 3;
    AgreeResolved agree_resolved = 4;
    Rate rate = 5;
  }
}

message TransitionStudentQuestionResponse {
  QuestionStatus student_question_status = 1;
}

message AllocateStudentQuestionRequest {
  string student_question_id = 1;
}

message AllocateStudentQuestionResponse {}

message UpdateTutorStatusRequest {
  TutorStatus status = 1;
}

message UpdateTutorStatusResponse {}

service TutorModifierService {
  rpc CreateQuestion(CreateQuestionRequest) returns (CreateQuestionResponse);
  rpc AllocateStudentQuestion(AllocateStudentQuestionRequest)
      returns (AllocateStudentQuestionResponse);
  rpc TransitionStudentQuestion(TransitionStudentQuestionRequest)
      returns (TransitionStudentQuestionResponse);

  rpc UpdateTutorStatus(UpdateTutorStatusRequest)
      returns (UpdateTutorStatusResponse);
}

message QuestionRemainRequest {}

message QuestionRemainResponse {
  int32 remain = 1;
  int32 total = 2;
  AskDuration duration = 3;
}

message GetStudentQuestionsRequest {
  repeated string student_question_ids = 1;
}

message StudentQuestion {
  string student_question_id = 1;
  string quiz_id = 2;
  string content = 3;
  repeated string url_medias = 4;
  QuestionStatus status = 5;
  string lo_name = 6;
  common.v1.Subject subject = 7;
  string rate = 8;
  string topic_name = 9;
  uint32 topic_display_order = 10;
  string study_guide = 11;
  string grade = 12;
  string title = 13;
}

message GetStudentQuestionsResponse {
  repeated StudentQuestion student_questions = 1;
}

message GetArchivedStudentQuestionsRequest {
  common.v1.Paging paging = 1;
}

message GetArchivedStudentQuestionsResponse {
  common.v1.Paging next_page = 1;
  repeated StudentQuestion items = 2;
}

message GetOpenStudentQuestionsRequest {
  common.v1.Paging paging = 1;
}

message GetOpenStudentQuestionsResponse {
  common.v1.Paging next_page = 1;
  repeated StudentQuestion items = 2;
}

message GetTutorProfileRequest {
  repeated string profile_ids = 1;
}

message TutorProfile {
  string id = 1;
  string name = 2;
  common.v1.Country country = 3;
  string phone_number = 4;
  string email = 5;
  string avatar = 6;
  string device_token = 7;
  string user_group = 8;
  repeated common.v1.Subject skill_set = 9;
  TutorStatus status = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
}

message GetTutorProfileResponse {
  repeated TutorProfile profiles = 1;
}

service TutorReaderService {
  rpc QuestionRemain(QuestionRemainRequest) returns (QuestionRemainResponse){option deprecated = true;};
  rpc GetStudentQuestions(GetStudentQuestionsRequest)
      returns (GetStudentQuestionsResponse){option deprecated = true;};
  rpc GetArchivedStudentQuestions(GetArchivedStudentQuestionsRequest)
      returns (GetArchivedStudentQuestionsResponse){option deprecated = true;};
  rpc GetOpenStudentQuestions(GetOpenStudentQuestionsRequest)
      returns (GetOpenStudentQuestionsResponse){option deprecated = true;};

  rpc GetTutorProfile(GetTutorProfileRequest) returns (GetTutorProfileResponse){option deprecated = true;};
}
